<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.admin.bm.bm16.mapper.BM16Mapper">

	<!-- 프로젝트관리- 프로젝트 리스트  조회조건 -->
	<sql id="selectProjectlListCondition">
		<if test="coCd !=null and !coCd.equals('')">
		   AND T.CO_CD = #{coCd}
		</if>
		<if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
<!-- 		   AND T.ORDRS_PLAN_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYYMMDD') AND TO_DATE( #{reqDtTo},'YYYYMMDD') +1 -->
		   AND T.YYYYMM BETWEEN SUBSTRING( #{reqDtFrom},1,6) AND SUBSTRING(#{reqDtTo},1,6)
		</if>
		<if test="searchValue != null and !searchValue.equals('') and searchType != null and !searchType.equals('')">
		   AND ${searchType} LIKE '%'||#{searchValue}||'%'
		</if>
		<if test="useYn !=null and !useYn.equals('')">
		   AND T.USE_YN = #{useYn}
		</if>			  			  
		<if test="prjctCd !=null and !prjctCd.equals('')">
		   AND T.PRJCT_CD = #{prjctCd}
		</if>			  			  
		<if test="prjctNm !=null and !prjctNm.equals('')">
		   AND BE.CODE_NM LIKE '%'||#{prjctNm}||'%'
		</if>			  			  
		<if test="odrCd !=null and !odrCd.equals('')">
		   AND T.ODR_CD = #{odrCd}
		</if>				  			  
		<if test="winbdCd !=null and !winbdCd.equals('')">
		   AND T.WINBD_CD = #{winbdCd}
		</if>				  			  
		<if test="mngId !=null and !mngId.equals('')">
		   AND T.MNG_ID = #{mngId}
		</if>				  			  
		<if test="mngIdNm !=null and !mngIdNm.equals('')">
		   AND B.NAME LIKE '%' || #{mngIdNm} || '%'
		</if>						
		<if test="issSts !=null and !issSts.equals('')">
		   AND BD.ISS_STS = #{issSts}
		</if>						
		<if test="dataSearch !=null and !dataSearch.equals('')">
		   AND T.DATA_SEARCH LIKE '%'||UPPER(#{dataSearch})||'%'
		</if>								
		<if test="issueTargetList == 'ISSUELIST'">
		   AND BD.ISS_CNTS IS NOT NULL
		</if>						
	</sql>	
	
	<select id="selectPrjctCount" parameterType="Map" resultType="int">
		SELECT
            count(*)
		  FROM TB_BM06M01 T
           						LEFT OUTER JOIN TB_BM02M01 A ON T.CLNT_CD = A.CLNT_CD
           						LEFT OUTER JOIN TB_CM06M01 B ON T.MNG_ID = B.ID
           						LEFT OUTER JOIN TB_BM06D03 BD ON (T.PRJCT_SEQ = BD.PRJCT_SEQ  AND  BD.ISS_NO  = 1)
					            LEFT OUTER JOIN TB_CM05M01 BC ON BD.ISS_STS = BC.CODE_ID   
					            LEFT OUTER JOIN TB_CM05M01 BE ON T.PRJCT_CD = BE.CODE_ID    
        WHERE 1=1
			<include refid="selectProjectlListCondition"></include>

	</select>

	<select id="selectPrjctList" parameterType="Map" resultType="CamelMap">
		SELECT
			*
		FROM(
			SELECT
				ROWNUM AS RNUM, A.*

			FROM
			(
				SELECT T.PRJCT_SEQ
							, T.CO_CD
							, FN_CM05M01_CD_TO_NM(T.CO_CD) CO_NM
							, T.YYYYMM
							, T.INPEXP_CD
							, FN_CM05M01_CD_TO_NM(T.INPEXP_CD) INPEXP_NM
							, T.NEW_PRDT_CD
							, FN_CM05M01_CD_TO_NM(T.NEW_PRDT_CD) NEW_PRDT_NM
							, T.PRJCT_CD
							, BE.CODE_NM PRJCT_CD_NM
							, T.PRJCT_NM
							, T.EQP_NM
							, T.CAR_NM
							, T.EQP_QTY
							, T.CLNT_CD
							, A.CLNT_NM
							, T.CLNT_MNG_NM
							, T.ODR_CD
							, FN_CM05M01_CD_TO_NM(T.ODR_CD) ODR_NM
							, T.ODR_RMK
							, T.EPCT_AMT
							, T.ORDRS_PLAN_AMT
							, T.WINBD_CD
							, T.WINBD_RMK
							, TO_CHAR(T.ORDRS_PLAN_DT, 'YYYY-MM-DD') AS ORDRS_PLAN_DT                                                                                                    
							, TO_CHAR(T.DSGN_DT, 'YYYY-MM-DD') AS DSGN_DT
							, TO_CHAR(T.PURCHS_DT, 'YYYY-MM-DD') AS PURCHS_DT
							, TO_CHAR(T.PRDCTN_DT, 'YYYY-MM-DD') AS PRDCTN_DT
							, TO_CHAR(T.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT
							, TO_CHAR(T.DLIVY_DT, 'YYYY-MM-DD') AS DLIVY_DT
							, T.ORDRS_AMT
							, TO_CHAR(T.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
							, TO_CHAR(T.DUDT_PLAN_DT, 'YYYY-MM-DD') AS DUDT_PLAN_DT
							, T.MNG_ID
							, B.NAME as MNG_NM
							, T.PRJCT_RMK
							, T.ORDRS_PCT
							, T.CREAT_ID
							, T.CREAT_PGM
							, T.CREAT_DTTM
							, T.UDT_ID
							, T.UDT_PGM
							, T.UDT_DTTM
							, T.MAKR_CD
							, T.USE_YN
							, T.ORDRS_PCT
							, BD.ISS_CNTS
							, BD.ISS_STS
							, BD.ISS_NO
							, FN_CM05M01_CD_TO_NM(BD.ISS_STS) ISS_STS_NM
							, BC.CODE_RPRC AS ISS_YN
							, TO_CHAR(BD.CREAT_DTTM, 'YYYY-MM-DD') AS ISS_CREAT_DT
							, BD.CREAT_ID  AS ISS_CREAT_ID
							, BF.NAME      AS  ISS_CREAT_ID_NM
														
				  FROM TB_BM06M01 T
					             LEFT OUTER JOIN TB_BM02M01 A ON T.CLNT_CD = A.CLNT_CD
					             LEFT OUTER JOIN TB_CM06M01 B ON T.MNG_ID = B.ID
					             LEFT OUTER JOIN TB_BM06D03 BD ON (T.PRJCT_SEQ = BD.PRJCT_SEQ  AND  BD.ISS_NO  = 1)
					             LEFT OUTER JOIN TB_CM05M01 BC ON BD.ISS_STS = BC.CODE_ID 
					             LEFT OUTER JOIN TB_CM05M01 BE ON T.PRJCT_CD = BE.CODE_ID  
					             LEFT OUTER JOIN TB_CM06M01 BF ON BD.CREAT_ID = BF.ID           						
		         WHERE 1=1
					<include refid="selectProjectlListCondition"></include>			  			  
		         ORDER BY T.CO_CD, T.YYYYMM, A.CLNT_NM, T.INPEXP_CD, T.PRJCT_SEQ
				) AS a
			) A
		WHERE  RNUM BETWEEN #{firstIndex} AND #{lastIndex}

	</select>
	
	<select id="selectPrjctIssueListCount" parameterType="Map" resultType="int">
		SELECT
            count(*)
		  FROM TB_BM06M01 T
           						LEFT OUTER JOIN TB_BM02M01 A ON T.CLNT_CD = A.CLNT_CD
           						LEFT OUTER JOIN TB_CM06M01 B ON T.MNG_ID = B.ID
           						LEFT OUTER JOIN TB_BM06D03 BD ON T.PRJCT_SEQ = BD.PRJCT_SEQ
					            LEFT OUTER JOIN TB_CM05M01 BC ON BD.ISS_STS = BC.CODE_ID   
					            LEFT OUTER JOIN TB_CM05M01 BE ON T.PRJCT_CD = BE.CODE_ID    
        WHERE 1=1
			<include refid="selectProjectlListCondition"></include>

	</select>

	<select id="selectPrjctIssueList" parameterType="Map" resultType="CamelMap">
		SELECT
			*
		FROM(
			SELECT
				ROWNUM AS RNUM, A.*

			FROM
			(
				SELECT T.PRJCT_SEQ
							, T.CO_CD
							, FN_CM05M01_CD_TO_NM(T.CO_CD) CO_NM
							, T.YYYYMM
							, T.INPEXP_CD
							, FN_CM05M01_CD_TO_NM(T.INPEXP_CD) INPEXP_NM
							, T.NEW_PRDT_CD
							, FN_CM05M01_CD_TO_NM(T.NEW_PRDT_CD) NEW_PRDT_NM
							, T.PRJCT_CD
							, BE.CODE_NM PRJCT_CD_NM
							, T.PRJCT_NM
							, T.EQP_NM
							, T.CAR_NM
							, T.EQP_QTY
							, T.CLNT_CD
							, A.CLNT_NM
							, T.CLNT_MNG_NM
							, T.ODR_CD
							, FN_CM05M01_CD_TO_NM(T.ODR_CD) ODR_NM
							, T.ODR_RMK
							, T.EPCT_AMT
							, T.ORDRS_PLAN_AMT
							, T.WINBD_CD
							, T.WINBD_RMK
							, TO_CHAR(T.ORDRS_PLAN_DT, 'YYYY-MM-DD') AS ORDRS_PLAN_DT                                                                                                    
							, TO_CHAR(T.DSGN_DT, 'YYYY-MM-DD') AS DSGN_DT
							, TO_CHAR(T.PURCHS_DT, 'YYYY-MM-DD') AS PURCHS_DT
							, TO_CHAR(T.PRDCTN_DT, 'YYYY-MM-DD') AS PRDCTN_DT
							, TO_CHAR(T.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT
							, TO_CHAR(T.DLIVY_DT, 'YYYY-MM-DD') AS DLIVY_DT
							, T.ORDRS_AMT
							, TO_CHAR(T.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
							, TO_CHAR(T.DUDT_PLAN_DT, 'YYYY-MM-DD') AS DUDT_PLAN_DT
							, T.MNG_ID
							, B.NAME as MNG_NM
							, T.PRJCT_RMK
							, T.ORDRS_PCT
							, T.CREAT_ID
							, T.CREAT_PGM
							, T.CREAT_DTTM
							, T.UDT_ID
							, T.UDT_PGM
							, T.UDT_DTTM
							, T.MAKR_CD
							, T.USE_YN
							, T.ORDRS_PCT
							, BD.ISS_CNTS
							, BD.ISS_STS
							, BD.ISS_NO
							, FN_CM05M01_CD_TO_NM(BD.ISS_STS) ISS_STS_NM
							, BC.CODE_RPRC AS ISS_YN
							, TO_CHAR(BD.CREAT_DTTM, 'YYYY-MM-DD') AS ISS_CREAT_DT
							, BD.CREAT_ID  AS ISS_CREAT_ID
							, BF.NAME      AS  ISS_CREAT_ID_NM
				  FROM TB_BM06M01 T
					             LEFT OUTER JOIN TB_BM02M01 A ON T.CLNT_CD = A.CLNT_CD
					             LEFT OUTER JOIN TB_CM06M01 B ON T.MNG_ID = B.ID
					             LEFT OUTER JOIN TB_BM06D03 BD ON T.PRJCT_SEQ = BD.PRJCT_SEQ
					             LEFT OUTER JOIN TB_CM05M01 BC ON BD.ISS_STS = BC.CODE_ID 
					             LEFT OUTER JOIN TB_CM05M01 BE ON T.PRJCT_CD = BE.CODE_ID  
					             LEFT OUTER JOIN TB_CM06M01 BF ON BD.CREAT_ID = BF.ID           						
		         WHERE 1=1
					<include refid="selectProjectlListCondition"></include>			  			  
		         ORDER BY T.CO_CD, T.YYYYMM, A.CLNT_NM, T.INPEXP_CD, T.PRJCT_SEQ
				) AS a
			) A
		WHERE  RNUM BETWEEN #{firstIndex} AND #{lastIndex}

	</select>
	
	
  <resultMap id="resultInfoMap" type="CamelMap">
    <collection select="selectPrdtList" property="PRDT_LIST" column="{prjctSeq=PRJCT_SEQ}" ofType="CamelMap"/>
<!--     <collection select="selectFileList" property="FILE_LIST" column="{fileTrgtKey=PRJCT_SEQ}" ofType="CamelMap"/> -->
  </resultMap>


  <select id="selectPrjctInfo" resultMap="resultInfoMap">
              SELECT PRJCT_SEQ
					 , T.CO_CD
                     , T.INPEXP_CD
                     , FN_CM05M01_CD_TO_NM(T.INPEXP_CD) INPEXP_NM
					 , T.NEW_PRDT_CD
                     , FN_CM05M01_CD_TO_NM(T.NEW_PRDT_CD) NEW_PRDT_NM
					 , T.CLNT_CD
					 , A.CLNT_NM
					 , T.CLNT_MNG_NM
					 , T.PRJCT_NM
					 , T.EQP_NM
					 , T.EQP_QTY
					 , T.ODR_CD
					 , T.ODR_RMK
					 , T.EPCT_AMT
					 , T.ORDRS_PLAN_AMT
					 , T.WINBD_RMK
					 , TO_CHAR(T.ORDRS_PLAN_DT, 'YYYY-MM-DD') AS ORDRS_PLAN_DT
					 , T.ORDRS_AMT
					 , T.WINBD_CD
					 , TO_CHAR(T.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
					 
					 , TO_CHAR(T.DSGN_DT, 'YYYY-MM-DD') AS DSGN_DT
                     , TO_CHAR(T.PURCHS_DT, 'YYYY-MM-DD') AS PURCHS_DT
                     , TO_CHAR(T.PRDCTN_DT, 'YYYY-MM-DD') AS PRDCTN_DT
                     , TO_CHAR(T.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT
                     , TO_CHAR(T.DLIVY_DT, 'YYYY-MM-DD') AS DLIVY_DT
                            					 
					 , TO_CHAR(T.DUDT_PLAN_DT, 'YYYY-MM-DD') AS DUDT_PLAN_DT
					 , T.MNG_ID
					 , B.NAME as MNG_NM
					 , FN_CM05M01_CD_TO_NM(T.CO_CD) CO_NM
					 , SUBSTR(T.YYYYMM,1,4) || '-' || SUBSTR(T.YYYYMM,5,2) AS YYYYMM
					 , T.PRJCT_CD
					 , FN_CM05M01_CD_TO_NM(T.PRJCT_CD) AS PRJCT_CD_NM
					 , T.PRJCT_RMK
					 , T.CREAT_ID
					 , T.CREAT_PGM
					 , TO_CHAR(T.CREAT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS CREAT_DTTM
					 , T.UDT_ID
					 , T.UDT_PGM
					 , TO_CHAR(T.UDT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS UDT_DTTM
           			 , ORDRS_PCT
        FROM TB_BM06M01 T 
             LEFT OUTER JOIN TB_BM02M01 A ON T.CLNT_CD = A.CLNT_CD
             LEFT OUTER JOIN TB_CM06M01 B ON T.MNG_ID = B.ID
       WHERE PRJCT_SEQ = #{prjctSeq}
  </select>

  <select id="selectItemList" resultType="CamelMap">
	SELECT nvl2(b.PRJCT_PRDT_CD,'Y','N') IS_CHK
        , PRJCT_SEQ
        , nvl(PRJCT_PRDT_CD,#{prjctPrdtCd}) PRJCT_PRDT_CD
        , PRJCT_ITEM_CD
        , nvl(PRJCT_PRDT_NEW_CD,#{prjctPrdtNewCd}) PRJCT_PRDT_NEW_CD
        , PRJCT_ITEM_RMK
        , CODE_ID
        , CODE_NM
        , CODE_ETC
      FROM 
      		(SELECT *
               FROM TB_CM05M01
              WHERE CODE_KIND = 'ITEMLIST'
                AND USE_YN    = 'Y'
             ) a LEFT OUTER join
	            (SELECT *
	               FROM TB_BM06D02
	              WHERE PRJCT_SEQ = #{prjctSeq}
	                AND PRJCT_PRDT_CD = #{prjctPrdtCd}
	                AND PRJCT_PRDT_NEW_CD = #{prjctPrdtNewCd}
	             ) b
         		ON a. CODE_ID = b.PRJCT_ITEM_CD
   ORDER BY IS_CHK DESC, CODE_NM
  </select>

  <select id="selectPrdtList" resultType="CamelMap">
	SELECT
			'계획' AS DATA_TYPE
			, M.PRJCT_SEQ
			, M.PRJCT_PRDT_CD
			, b.PRDT_NM
			, TO_NUMBER(M.PRJCT_PRDT_QTY) PRJCT_PRDT_QTY
			, 0 PRJCT_PRDT_PRC
			, M.PRJCT_INPEXP_CD
			, FN_CM05M01_CD_TO_NM(M.PRJCT_INPEXP_CD) PRJCT_INPEXP_NM
			, M.PRJCT_PRDT_NEW_CD
			, FN_CM05M01_CD_TO_NM(M.PRJCT_PRDT_NEW_CD) PRJCT_PRDT_NEW_NM
			, ''  AS IN_PRD_CON
			, ''  AS IN_PRD_CON_NM
			, ''  AS SALES_CD
			, ''  AS MC_TYPE
			, ''  AS MC_TYPE_NM
			, TO_CHAR(M.PRJCT_PRDT_ORDRS_DT, 'YYYY-MM-DD') AS PRJCT_PRDT_ORDRS_DT
			, TO_CHAR(M.PRJCT_PRDT_PLAN_DT, 'YYYY-MM-DD') AS PRJCT_PRDT_PLAN_DT
			, M.PRJCT_PRDT_RMK
			, '' ITEM_DIV
			, '' ITEM_DIV_NM
			, '' CO_CD
			, '' FILE_TRGT_KEY 
			, M.MCTYPE AS  PRJCT_PRDT_MCTYPE
			, FN_CM05M01_CD_TO_NM(M.MCTYPE) PRJCT_PRDT_MCTYPE_NM
			, PRJCT_PRDT_SEQ
		FROM TB_BM06D01 M LEFT OUTER JOIN TB_BM01M01 b
												ON M.PRJCT_PRDT_CD = b.PRDT_CD
		WHERE M.PRJCT_SEQ = #{prjctSeq}
	UNION ALL 
	SELECT 
			'실적' AS DATA_TYPE
			, '0' PRJCT_SEQ
			, C.PRDT_CD
			, B.PRDT_NM
			, sum(C.ORDRS_QTY) ORDRS_QTY
			, sum(C.ORDRS_PRC) ORDRS_PRC
			, a.INPEXP_CD
			, FN_CM05M01_CD_TO_NM(a.INPEXP_CD) INPEXP_CD_NM
			, C.ORDRS_DTL_DIV20
			, FN_CM05M01_CD_TO_NM(C.ORDRS_DTL_DIV20) ORDRS_DTL_DIV20_NM
			, ORDRS_DTL_DIV30
			, FN_CM05M01_CD_TO_NM(C.ORDRS_DTL_DIV30) ORDRS_DTL_DIV30_NM
			, C.SALES_CD
			, C.MCTYPE AS MC_TYPE
			, FN_CM05M01_CD_TO_NM(C.MCTYPE)  AS MC_TYPE_NM
			, TO_CHAR(min(a.ORDRS_DT), 'YYYY-MM-DD') AS ORDRS_DT
			, TO_CHAR(C.DUDT_INTEND_DT, 'YYYY-MM-DD') AS DUDT_INTEND_DT
			, max(C.DTL_RMK) DTL_RMK
			, min(C.ITEM_DIV)
			, FN_CM05M01_CD_TO_NM(min(C.ITEM_DIV))  AS ITEM_DIV_NM
			, min(M.CO_CD)
			, min(A.FILE_TRGT_KEY) 
			, C.MCTYPE AS  PRJCT_PRDT_MCTYPE
			, FN_CM05M01_CD_TO_NM(C.MCTYPE) PRJCT_PRDT_MCTYPE_NM
			, 0
		FROM TB_BM06M01 M
					LEFT OUTER JOIN TB_CR02M01 A  ON M.CO_CD    = A.CO_CD 
												AND M.CLNT_CD  = A.ORDRS_CLNT_CD 
												AND M.PRJCT_CD = A.CLNT_PJT 
												AND M.INPEXP_CD = A.INPEXP_CD 
					LEFT OUTER JOIN TB_CR02D02 C  ON M.CO_CD    = C.CO_CD 
												AND A.ORDRS_NO = C.ORDRS_NO
												AND C.ORDRS_DTL_DIV10 = 'ORDRSDTLDIV1010'
												AND C.ORDRS_DTL_DIV20 = M.NEW_PRDT_CD
					LEFT OUTER JOIN TB_BM01M01 B  ON C.PRDT_CD = B.PRDT_CD
		WHERE  M.PRJCT_SEQ = #{prjctSeq}
		AND C.PRDT_CD IS NOT NULL 
		AND A.ORDRS_DT  BETWEEN TO_DATE(M.YYYYMM||'01','YYYYMMDD') AND  LAST_DAY(TO_DATE(M.YYYYMM, 'YYYYMM'))
		GROUP BY M.PRJCT_SEQ, C.PRDT_CD, C.ORDRS_DTL_DIV20, C.ORDRS_DTL_DIV30, C.SALES_CD, C.MCTYPE, C.DUDT_INTEND_DT, A.INPEXP_CD, b.PRDT_NM
    ORDER BY DATA_TYPE, SALES_CD
  </select>

  <select id="selectConfirmCount" parameterType="Map" resultType="int">
    SELECT COUNT(PRJCT_SEQ) CNT
      FROM TB_BM06M01
     WHERE PRJCT_SEQ = #{prjctSeq}
  </select>
  
  <select id="selectFileList" resultType="CamelMap">
    SELECT *
      FROM TB_CM08M01
     WHERE FILE_TRGT_TYP = 'TB_BM06M01'
       AND FILE_TRGT_KEY = #{fileTrgtKey}
  </select>

<update id="updatePrjct" parameterType="Map">
    UPDATE TB_BM06M01
          SET
          CO_CD                                         = #{coCd}
        , YYYYMM                                        = #{yyyymm}
        , PRJCT_CD                                      = #{prjctCd}
        , PRJCT_NM                                      = #{prjctNm}
        , INPEXP_CD                                     = #{inpexpCd}
        , NEW_PRDT_CD                                   = #{newPrdtCd}
        , EQP_NM                                        = #{eqpNm}
        , EQP_QTY                                       = #{eqpQty}
		, CAR_NM=''
        , CLNT_CD                                       = #{clntCd}
        , CLNT_MNG_NM                                   = #{clntMngNm}
        , ODR_CD                                        = #{odrCd}
        , ODR_RMK                                       = #{odrRmk, jdbcType=VARCHAR}
        , EPCT_AMT                                      = #{epctAmt}
        , ORDRS_PLAN_AMT                                = #{ordrsPlanAmt}
        , WINBD_CD                                      = #{winbdCd}
        , WINBD_RMK                                     = #{winbdRmk}
        , ORDRS_PLAN_DT                                 = #{ordrsPlanDt}
        , ORDRS_AMT                                     = #{ordrsAmt}
        , ORDRS_DT                                      = #{ordrsDt}
        
        , DSGN_DT                                       = #{dsgnDt}
        , PURCHS_DT                                     = #{purchsDt}
        , PRDCTN_DT                                     = #{prdctnDt}
        , ACPTNC_DT                                     = #{acptncDt}
        , DLIVY_DT                                      = #{dlivyDt}
                
        , DUDT_PLAN_DT                                  = #{dudtPlanDt}
        , MNG_ID                                        = #{mngId}
        , PRJCT_RMK                                     = #{prjctRmk, jdbcType=VARCHAR}
		, USE_YN=''        
        , ORDRS_PCT                                     = #{ordrsPct}
		, MAKR_CD=''
        , UDT_ID                                        = #{userId}
        , UDT_PGM                                       = #{pgmId}
        , UDT_DTTM                                      = SYSDATE
		, DATA_SEARCH                                   = (			   		
															SELECT REPLACE(UPPER(C.CODE_NM||A.CLNT_NM||#{prjctNm}||#{eqpNm}), ' ', '')
															FROM TB_CM05m01 C 
															   LEFT OUTER JOIN TB_BM02M01 AS A ON A.CLNT_CD = #{clntCd}  --거래처마스터
															   WHERE C.CODE_ID  = #{prjctCd}
															)
		
    WHERE PRJCT_SEQ                                     = #{prjctSeq}


  </update>
  
  <select id="selectPrjctSeqNext" parameterType="Map" resultType="int">
		SELECT TO_CHAR(SYSDATE, 'YYYYMM')||LPAD(TB_BM06M01_SQ01.NEXTVAL,3,0) FROM DUAL
  </select>
  
<insert id="insertPrjct" parameterType="Map">
<!--     <selectKey keyProperty="prjctSeq" resultType="String" order="BEFORE"> -->
<!--       SELECT TO_CHAR(SYSDATE, 'YYYYMM')||LPAD(TB_BM06M01_SQ01.NEXTVAL,3,0) FROM DUAL -->
<!--     </selectKey> -->
    INSERT INTO TB_BM06M01
      (
           PRJCT_SEQ
		, CO_CD         
		, YYYYMM        
		, PRJCT_CD      
		, PRJCT_NM      
		, INPEXP_CD     
		, NEW_PRDT_CD   
		, EQP_NM        
		, EQP_QTY       
		, CAR_NM
		, CLNT_CD       
		, CLNT_MNG_NM   
		, ODR_CD        
		, ODR_RMK       
		, EPCT_AMT      
		, ORDRS_PLAN_AMT
		, WINBD_CD      
		, WINBD_RMK     
		, ORDRS_PLAN_DT 
		, ORDRS_AMT     
		, ORDRS_DT      
		
		, DSGN_DT
		, PURCHS_DT
		, PRDCTN_DT
		, ACPTNC_DT
		, DLIVY_DT
		
		, DUDT_PLAN_DT  
		, MNG_ID        
		, PRJCT_RMK     
		, USE_YN     
		, ORDRS_PCT     
		, MAKR_CD
		, UDT_ID
		, UDT_PGM
		, UDT_DTTM
		, DATA_SEARCH
      )
    VALUES
    (
		  #{prjctSeq}
		, #{coCd}
		, #{yyyymm}
		, #{prjctCd}
		, #{prjctNm}
		, #{inpexpCd}
		, #{newPrdtCd}
		, #{eqpNm}
		, #{eqpQty}
		, #{carNm, jdbcType=VARCHAR}
		, #{clntCd}
		, #{clntMngNm}
		, #{odrCd}
		, #{odrRmk, jdbcType=VARCHAR}
		, #{epctAmt}
		, #{ordrsPlanAmt}
		, #{winbdCd}
		, #{winbdRmk}
		, #{ordrsPlanDt}
		, #{ordrsAmt}
		, #{ordrsDt}
		
		, #{dsgnDt}
		, #{purchsDt}
		, #{prdctnDt}
		, #{acptncDt}
		, #{dlivyDt}
		
		, #{dudtPlanDt}
		, #{mngId}
		, #{prjctRmk, jdbcType=VARCHAR}
		, #{usrYn, jdbcType=VARCHAR}
		, #{ordrsPct}
		, #{makrCd, jdbcType=VARCHAR}
		, #{userId}
		, #{pgmId}
		, SYSDATE
		, (			   		
			SELECT REPLACE(UPPER(C.CODE_NM||A.CLNT_NM||#{prjctNm}||#{eqpNm}), ' ', '')
			FROM TB_CM05m01 C 
			   LEFT OUTER JOIN TB_BM02M01 AS A ON A.CLNT_CD = #{clntCd}  --거래처마스터
			   WHERE C.CODE_ID  = #{prjctCd}
			)
    )
  </insert>
  
  <insert id="insertPrjctPrdt" parameterType="Map">
    INSERT INTO TB_BM06D01
    (
           PRJCT_SEQ
         , PRJCT_PRDT_CD
         , PRJCT_PRDT_QTY
         , PRJCT_INPEXP_CD
         , PRJCT_PRDT_NEW_CD
         , PRJCT_PRDT_ORDRS_DT
         , PRJCT_PRDT_PLAN_DT
         , PRJCT_PRDT_RMK
         , MCTYPE
         , PRJCT_PRDT_SEQ
      )
    VALUES
    (
           #{prjctSeq}
         , #{prjctPrdtCd}
         , #{prjctPrdtQty}
         , #{prjctInpexpCd}
         , #{prjctPrdtNewCd}
         , #{prjctPrdtOrdrsDt}
         , #{prjctPrdtPlanDt}
         , #{prjctPrdtRmk, jdbcType=VARCHAR}      
         , #{prjctPrdtMctype}      
         , #{prjctPrdtSeq}      
    )
  </insert>
  
  <insert id="insertPrjctDtl" parameterType="Map">

    INSERT INTO TB_BM06D02
    (
           PRJCT_SEQ
         , PRJCT_PRDT_CD
         , PRJCT_ITEM_CD
         , PRJCT_PRDT_NEW_CD
         , PRJCT_ITEM_RMK
      )
    VALUES
    (
	        #{prjctSeq}
	      , #{prjctPrdtCd}
	      , #{prjctItemCd}
	      , #{prjctPrdtNewCd}
	      , #{prjctItemRmk, jdbcType=VARCHAR}
    )
  </insert>
  
  <update id="updatePrjctPrdt" parameterType="Map">
    UPDATE TB_BM06D01
       SET
           PRJCT_PRDT_QTY		= #{prjctPrdtQty}
         , PRJCT_INPEXP_CD		= #{prjctInpexpCd}
         , PRJCT_PRDT_ORDRS_DT	= #{prjctPrdtOrdrsDt}
         , PRJCT_PRDT_PLAN_DT	= #{prjctPrdtPlanDt}
         , PRJCT_PRDT_RMK		= #{prjctPrdtRmk, jdbcType=VARCHAR}
     WHERE PRJCT_SEQ           = #{prjctSeq}
           AND PRJCT_PRDT_CD   = #{prjctPrdtCd}
           AND PRJCT_PRDT_NEW_CD= #{prjctPrdtNewCd}
       	   AND MCTYPE = #{prjctPrdtMctype}
       	   AND PRJCT_PRDT_SEQ = #{prjctPrdtSeq}
  </update>

  <update id="updatePrjctDtl" parameterType="Map">
    UPDATE TB_BM06D02
       SET
           PRJCT_ITEM_RMK  = #{prjctItemRmk, jdbcType=VARCHAR}
     WHERE PRJCT_SEQ       = #{prjctSeq}
       AND PRJCT_PRDT_CD   = #{prjctPrdtCd}
       AND PRJCT_ITEM_CD   = #{prjctItemCd}
       AND PRJCT_PRDT_NEW_CD= #{prjctPrdtNewCd}
  </update>


  <delete id="deletePrjct" parameterType="Map">
    DELETE TB_BM06M01 WHERE PRJCT_SEQ = #{prjctSeq}
  </delete>
  
  <delete id="deletePrjctPrdtSeqAll" parameterType="Map">
    DELETE TB_BM06D01 WHERE PRJCT_SEQ = #{prjctSeq}
  </delete>
  
  <delete id="deletePrjctDtlSeqAll" parameterType="Map">
    DELETE TB_BM06D02 WHERE PRJCT_SEQ = #{prjctSeq}
  </delete>
  
  
  <delete id="deletePrjctPrdt" parameterType="Map">
    DELETE TB_BM06D01
     WHERE PRJCT_SEQ     = #{prjctSeq}
       AND PRJCT_PRDT_CD = #{prjctPrdtCd}
       AND PRJCT_PRDT_NEW_CD= #{prjctPrdtNewCd}
       AND MCTYPE = #{prjctPrdtMctype}
       AND PRJCT_PRDT_SEQ = #{prjctPrdtSeq}
  </delete>
  
  <delete id="deletePrjctDtlPrdtAll" parameterType="Map">
    DELETE TB_BM06D02
     WHERE PRJCT_SEQ     = #{prjctSeq}
       AND PRJCT_PRDT_CD = #{prjctPrdtCd}
       AND PRJCT_PRDT_NEW_CD= #{prjctPrdtNewCd}
  </delete>

  <delete id="deletePrjctDtl" parameterType="Map">
    DELETE TB_BM06D02
     WHERE PRJCT_SEQ     = #{prjctSeq}
       AND PRJCT_PRDT_CD = #{prjctPrdtCd}
       AND PRJCT_ITEM_CD = #{prjctItemCd}
       AND PRJCT_PRDT_NEW_CD= #{prjctPrdtNewCd}
  </delete>

  <select id="selectPrjctIssueInfo" parameterType="Map" resultType="CamelMap">
       SELECT 
					   T.PRJCT_SEQ
					 , T.ISS_NO
			         , TO_CHAR(T.ISS_DT, 'YYYY-MM-DD') AS ISS_DT
			         , TO_CHAR(T.ACT_DT, 'YYYY-MM-DD') AS ACT_DT					 
					 , T.ISS_CNTS
					 , T.CAUSE_CNTS
					 , T.ACT_CNTS
					 , T.ISS_STS
					 , A.CODE_NM AS ISS_STS_NM
					 , A.CODE_RPRC AS ISS_YN  
					 , T.ETC_FIELD1
					 , T.ETC_FIELD2
					 , T.ETC_FIELD3
					 , T.CREAT_ID
					 , (SELECT NAME FROM TB_CM06M01 B WHERE T.CREAT_ID = B.ID) AS CREAT_NM
					 , T.CREAT_PGM
					 , TO_CHAR(T.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM
					 , T.UDT_ID
					 , (SELECT NAME FROM TB_CM06M01 B WHERE T.UDT_ID = B.ID) AS UDT_NM
					 , T.UDT_PGM
					 , TO_CHAR(T.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM	
					 , T.FILE_TRGT_KEY
        FROM TB_BM06D03 T
        				LEFT OUTER JOIN  TB_CM05M01 A ON T.ISS_STS = A.CODE_ID
       WHERE PRJCT_SEQ = #{prjctSeq}
         AND ISS_NO    = #{issNo}
  </select>


  <insert id="insertPrjctIssue" parameterType="Map">
    INSERT INTO TB_BM06D03
    (
          PRJCT_SEQ
        , ISS_NO
        , ISS_DT
        , ACT_DT
        , ISS_CNTS
        , CAUSE_CNTS
        , ACT_CNTS
        , ISS_STS
        , ETC_FIELD1
        , ETC_FIELD2
        , ETC_FIELD3
        , CREAT_ID
        , CREAT_PGM
        , CREAT_DTTM
        , FILE_TRGT_KEY
      )
    VALUES
    (
          #{prjctSeq}
        , (SELECT NVL(max(ISS_NO),0)+1 FROM TB_BM06D03 WHERE PRJCT_SEQ = #{prjctSeq})
        , #{issDt}
        , #{actDt, jdbcType=VARCHAR}
        , #{issCnts}
        , #{causeCnts, jdbcType=VARCHAR}
        , #{actCnts, jdbcType=VARCHAR}
        , #{issSts}
        , #{etcField1, jdbcType=VARCHAR}
        , #{etcField2, jdbcType=VARCHAR}
        , #{etcField3, jdbcType=VARCHAR}
		, #{userId}
		, #{pgmId}
		, SYSDATE
		, #{prjctSeq}||'-'||(SELECT NVL(max(ISS_NO),0)+1 FROM TB_BM06D03 WHERE PRJCT_SEQ = #{prjctSeq})
    )
  </insert>
  
  <update id="updatePrjctIssue" parameterType="Map">
    UPDATE TB_BM06D03
       SET
	          ISS_DT            = #{issDt}
	        , ACT_DT            = #{actDt, jdbcType=VARCHAR}
	        , ISS_CNTS          = #{issCnts}
	        , CAUSE_CNTS        = #{causeCnts, jdbcType=VARCHAR}
	        , ACT_CNTS          = #{actCnts, jdbcType=VARCHAR}
	        , ISS_STS           = #{issSts}
	        , ETC_FIELD1        = #{etcField1, jdbcType=VARCHAR}
	        , ETC_FIELD2        = #{etcField2, jdbcType=VARCHAR}
	        , ETC_FIELD3        = #{etcField3, jdbcType=VARCHAR}
	        , UDT_ID            = #{userId}
	        , UDT_PGM           = #{pgmId}
	        , UDT_DTTM          = SYSDATE    
     WHERE PRJCT_SEQ			= #{prjctSeq}
           AND ISS_NO   		= #{issNo}
  </update>
  
  

  <update id="updatePrjctIssueComplete" parameterType="Map">
    UPDATE TB_BM06D03
       SET
	          ISS_DT            = #{issDt}
	        , ACT_DT            = #{actDt, jdbcType=VARCHAR}
	        , ISS_CNTS          = #{issCnts}
	        , CAUSE_CNTS        = #{causeCnts, jdbcType=VARCHAR}
	        , ACT_CNTS          = #{actCnts, jdbcType=VARCHAR}
	        , ISS_STS           = #{issSts}
	        , ETC_FIELD1        = #{etcField1, jdbcType=VARCHAR}
	        , ETC_FIELD2        = #{etcField2, jdbcType=VARCHAR}
	        , ETC_FIELD3        = #{etcField3, jdbcType=VARCHAR}
	        , UDT_ID            = #{userId}
	        , UDT_PGM           = #{pgmId}
	        , UDT_DTTM          = SYSDATE    
     WHERE PRJCT_SEQ			= #{prjctSeq}
           AND ISS_NO   		= #{issNo}
  </update>
  
  
	
	<select id="selectPrjctOrderBillChart" parameterType="Map" resultType="CamelMap">
	WITH COLLECT AS ( 
			SELECT   FN_CM05M01_CD_TO_NM(CODE_ID) CODE_NM
					 , A.YYYYMM
					 , ROUND(SUM(NVL(EPCT_AMT, 0)) / TO_NUMBER(#{searchUnit})) EPCT_AMT --예상물량
					 , ROUND(SUM(NVL(DECODE(INPEXP_CD, 'INPEXP02', ORDRS_PLAN_AMT), 0)) / TO_NUMBER(#{searchUnit})) INPEXP02 --해외수주목표
					 , ROUND(SUM(NVL(DECODE(INPEXP_CD, 'INPEXP01', ORDRS_PLAN_AMT), 0)) / TO_NUMBER(#{searchUnit})) INPEXP01 --국내수주목표
					 , ROUND(SUM(NVL(DECODE(INPEXP_CD, 'INPEXP03', ORDRS_PLAN_AMT), 0)) / TO_NUMBER(#{searchUnit})) INPEXP03 --신규수주목표
					 , ROUND(SUM(NVL(B.ORDRS_PLAN_AMT, 0)) / TO_NUMBER(#{searchUnit})) ORDRS_PLAN_AMT --전체수주목표
					 , ROUND(SUM(NVL(B.ORDRS_AMT, 0)) / TO_NUMBER(#{searchUnit})) ORDRS_AMT --전체수주완료
				FROM
						(SELECT CODE_ID, SORT_NO, YYYYMM
						  FROM (
									SELECT  #{searchYear} || '01' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '02' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '03' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '04' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '05' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '06' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '07' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '08' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '09' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '10' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '11' AS YYYYMM FROM DUAL 
									UNION ALL 
									SELECT  #{searchYear} || '12' AS YYYYMM FROM DUAL 
								) AS YM ,  
								(	SELECT CODE_ID, SORT_NO FROM TB_CM05M01 
									 WHERE CODE_KIND = 'CO' 
									   AND CODE_ID = #{coCd}
									 ORDER BY SORT_NO ) AS CO 
						) AS A
				 		,(	SELECT CO_CD, YYYYMM, INPEXP_CD, sum(EPCT_AMT) EPCT_AMT, sum(ORDRS_PLAN_AMT) ORDRS_PLAN_AMT, sum(ORDRS_AMT) ORDRS_AMT
							  FROM TB_BM06M01
							 WHERE CO_CD = #{coCd}
							   AND YYYYMM BETWEEN #{searchYear}||'01' AND #{searchYear}||'12'
							 GROUP BY CO_CD, YYYYMM, INPEXP_CD
						)  AS B
				 WHERE A.CODE_ID = B.CO_CD(+)
				   AND A.YYYYMM  = B.YYYYMM(+)
				GROUP BY  A.CODE_ID, A.YYYYMM
				ORDER BY A.YYYYMM
		) 
			SELECT  CODE_NM, 
					SUBSTR(YYYYMM, 0, 4) || '-' || SUBSTR(YYYYMM, 5, 2) YYYYMM, 
					EPCT_AMT, 
					INPEXP02, 
					INPEXP01, 
					INPEXP03, 
					ORDRS_PLAN_AMT, 
					ORDRS_AMT,
					SUM(ORDRS_PLAN_AMT+ORDRS_AMT) OVER (ORDER BY YYYYMM) AS MM_TOT
			FROM COLLECT AS A
		UNION ALL 
			SELECT 
				'TOT' CODE_NM,
				'합  계' AS YYYYMM, 
				sum(EPCT_AMT) EPCT_AMT, 
				sum(INPEXP02) INPEXP02, 
				sum(INPEXP01) INPEXP01, 
				sum(INPEXP03) INPEXP03, 
				sum(ORDRS_PLAN_AMT) ORDRS_PLAN_AMT, 
				sum(ORDRS_AMT) ORDRS_AMT,
				sum(ORDRS_PLAN_AMT+ORDRS_AMT) MM_TOT
			FROM COLLECT AS A
			GROUP BY CODE_NM
	</select>  

	<select id="selectPrjctPlanCount" resultType="int">
        /*대일정계획 selectPrjctPlanCount */
				WITH SJD AS --수주상세 
					     ( 
					      SELECT M.CO_CD                                                    AS CO_CD              --회사코드
					            , (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)           AS CO_NM              --회사명 
					            , M.ORDRS_NO                                                 AS ORDRS_NO           --수주번호
					            , X.SALES_CD                                                 AS SALES_CD           --SALES Code
					            , TO_CHAR(M.ORDRS_CLNT_CD)                                   AS CLNT_CD            --고객코드
					            , C.CLNT_NM                                                  AS CLNT_NM            --고객명
					            , M.CLNT_PJT                                                 AS CLNT_PJT           --고객사프로젝트 
					            , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)        AS CLNT_PJT_NM        --고객사프로젝트명
					            , X.EQP_NM                                                   AS EQP_NM             --설비명 
					            , X.ORDRS_QTY                                                AS ORDRS_QTY          --수주수량 
					            , X.ORDRS_DTL_DIV20                                          AS ORDRS_DTL_DIV20    --작업구분
					            , (SELECT FN_CM05M01_CD_TO_NM(X.ORDRS_DTL_DIV20) FROM DUAL) AS ORDRS_DTL_DIV20_NM --작업구분명
					            --, M.CTRT_DOC                                                 AS CTRT_DOC           --계약문서 
					            , FN_CM05M01_CD_TO_NM(M.CTRT_DOC)                          AS CTRT_DOC           --계약문서 
					            , TO_CHAR(X.DUDT_INTEND_DT, 'YYYY-MM-DD')                    AS DUDT_INTEND_DT     --납기예정일 
					            , TO_CHAR(M.ORDRS_DT, 'YYYY-MM-DD')                          AS ORDRS_DT           --수주확정일
				            	  , W.WBS_PLAN_CODE_ID   --계획 LVL1 Code
					              , (SELECT FN_CM05M01_CD_TO_NM(W.WBS_PLAN_CODE_ID) FROM DUAL) AS PLAN_CD_NM        --계획 LVL1 명
					              , TO_CHAR(W.WBS_PLANE_DT, 'YYYY-MM-DD') 					   AS PLANE_DT           --계획종료일
					         FROM TB_CR02M01  M --수주마스터
					              INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
					              LEFT OUTER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
						          LEFT OUTER JOIN TB_WB22M01 AS W ON X.CO_CD    = W.CO_CD 
											                     AND X.SALES_CD = W.SALES_CD
											                     AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
					        WHERE 1=1
					          AND M.CO_CD = #{coCd}
					          AND M.ORDRS_DT <![CDATA[>=]]> TO_DATE(#{strtDt}, 'YYYYMMDD')
					          AND M.ORDRS_DT <![CDATA[<=]]> TO_DATE(#{endDt}, 'YYYYMMDD')
							  AND X.SALES_CD IS NOT NULL
					        <if test="salesCd != null and !salesCd.equals('')">
					          AND X.SALES_CD LIKE '%' || #{salesCd} || '%'
					        </if>
					        <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
					          AND M.ORDRS_CLNT_CD = #{ordrsClntCd}
					        </if>
					        <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
					          AND C.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
					        </if>
					        <if test="clntPjt != null and !clntPjt.equals('')">
					         AND M.CLNT_PJT IN ( ${clntPjt} )
					        </if>
					        <if test='planCheck == "Y"'>
							  AND  EXISTS (SELECT * FROM TB_WB22M01 PL
										   WHERE X.SALES_CD = PL.SALES_CD 
										)
					        </if>
					        <if test='planCheck == "N"'>
							  AND  NOT EXISTS (SELECT * FROM TB_WB22M01 PL
										   WHERE X.SALES_CD = PL.SALES_CD 
										)
					        </if>
					        <if test='planPrjct == "B"'>
							  AND  1=2
					        </if>
					     )
					    , PJT AS 
					      (
					       SELECT CO_CD
					            , CO_NM
					       	    , SALES_CD
					       	    , CLNT_CD
					       	    , CLNT_NM
					       	    , CLNT_PJT
					       	    , CLNT_PJT_NM        --고객사프로젝트명
					       	    , EQP_NM             --설비명 
					       	    , ORDRS_QTY          --수주수량
					       	    , ORDRS_DTL_DIV20    --작업구분
					       	    , ORDRS_DTL_DIV20_NM --작업구분명
					       	    , CTRT_DOC           --계약문서 
					       	    , DUDT_INTEND_DT     --예상납기일자
					       	    , ORDRS_DT           --수주예정일자
					       	    , CASE WHEN COL_DT = 'DSGN_DT'   THEN '설계완료'
					                   WHEN COL_DT = 'PURCHS_DT' THEN '구매완료'
					                   WHEN COL_DT = 'PRDCTN_DT' THEN '기계조립완료'
					                   WHEN COL_DT = 'ACPTNC_DT' THEN '고객검수'
					                   WHEN COL_DT = 'DLIVY_DT'  THEN '출고'
					              END PLAN_CD_NM        --계획 LVL1 명
									 
					       	    , DT_VAL AS PLANE_DT
					         FROM (
					               SELECT T.CO_CD                                                AS CO_CD
					                    , FN_CM05M01_CD_TO_NM(T.CO_CD)                           AS CO_NM
					                    , ''                                                     AS SALES_CD
					                    , T.CLNT_CD                                              AS CLNT_CD
					                    , A.CLNT_NM                                              AS CLNT_NM
					                    , T.PRJCT_CD                                             AS CLNT_PJT
					                    , (SELECT FN_CM05M01_CD_TO_NM(T.PRJCT_CD) FROM DUAL)     AS CLNT_PJT_NM        --고객사프로젝트명
					                    , T.EQP_NM                                               AS EQP_NM             --설비명 
					                    , T.EQP_QTY                                              AS ORDRS_QTY          --수주수량
					                    , T.NEW_PRDT_CD                                          AS ORDRS_DTL_DIV20    --작업구분
					                    , (SELECT FN_CM05M01_CD_TO_NM(T.NEW_PRDT_CD) FROM DUAL)  AS ORDRS_DTL_DIV20_NM --작업구분명
					                    , FN_CM05M01_CD_TO_NM(T.ODR_CD)                          AS CTRT_DOC           --계약문서 
					                    , TO_CHAR(T.DUDT_PLAN_DT, 'YYYY-MM-DD')                  AS DUDT_INTEND_DT     --예상납기일자
					                    , TO_CHAR(NVL(T.ORDRS_PLAN_DT,LAST_DAY(TO_DATE(T.YYYYMM, 'YYYYMM'))), 'YYYY-MM-DD')                 AS ORDRS_DT           --수주예정일자
					                  --, TO_CHAR(T.ORDRS_DT, 'YYYY-MM-DD')                      AS ORDRS_DT           --수주일자
					                    , TO_CHAR(T.DSGN_DT, 'YYYY-MM-DD')                       AS DSGN_DT            --설계일자
					                    , TO_CHAR(T.PURCHS_DT, 'YYYY-MM-DD')                     AS PURCHS_DT          --구매일자
					                    , TO_CHAR(T.PRDCTN_DT, 'YYYY-MM-DD')                     AS PRDCTN_DT          --생산일자
					                    , TO_CHAR(T.ACPTNC_DT, 'YYYY-MM-DD')                     AS ACPTNC_DT          --검수일자
					                    , TO_CHAR(T.DLIVY_DT, 'YYYY-MM-DD')                      AS DLIVY_DT           --출고일자
					                 FROM TB_BM06M01 T --프로젝트마스터
					                      LEFT OUTER JOIN TB_BM02M01 A  ON T.CLNT_CD = A.CLNT_CD --거래처마스터
					                WHERE T.CO_CD = #{coCd}
					                  AND T.YYYYMM  BETWEEN  SUBSTRING(#{strtDt},1,6) AND SUBSTRING(#{endDt},1,6)
					                <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
					                 AND T.CLNT_CD = #{ordrsClntCd}
					                </if>
					                <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
							          AND A.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
							        </if>
					                <if test="clntPjt != null and !clntPjt.equals('')">
					                 AND T.PRJCT_CD IN ( ${clntPjt} )
					                </if> 	
					              )  
					              UNPIVOT INCLUDE NULLS  ( DT_VAL FOR COL_DT IN (DSGN_DT, PURCHS_DT, PRDCTN_DT, ACPTNC_DT, DLIVY_DT ) )
					      )
	SELECT COUNT(*)
	  FROM (SELECT *
						  FROM (
						        SELECT  S.CO_CD              --회사코드
						              , S.CO_NM              --회사명
									  , '1.일정계획'               AS GUBUN
						              , S.SALES_CD           --SALES Code
						              , S.CLNT_CD            --고객코드
						              , S.CLNT_NM            --고객명
						              , S.CLNT_PJT           --고객사프로젝트 
						              , S.CLNT_PJT_NM        --고객사프로젝트명
						              , S.EQP_NM             --설비명 
						              , S.ORDRS_QTY          --수주수량 
						              , S.ORDRS_DTL_DIV20    --작업구분
						              , S.ORDRS_DTL_DIV20_NM --작업구분명
						              , S.CTRT_DOC           --계약문서 
						              , S.DUDT_INTEND_DT     --납기예정일 
						              , S.ORDRS_DT           --수주확정일
						              , S.PLAN_CD_NM         --계획 LVL1 명
						              , S.PLANE_DT           --계획종료일
						          FROM SJD S
						         WHERE 1=1
					        <if test='planPrjct != "N"'>
						        UNION ALL --프로젝트 계획자료
						        SELECT  P.CO_CD              --회사코드
						              , P.CO_NM              --회사명
									  , '0.예상수주'               AS GUBUN
						              , P.SALES_CD           --SALES Code
						              , P.CLNT_CD            --고객코드
						              , P.CLNT_NM            --고객명
						              , P.CLNT_PJT           --고객사프로젝트 
						              , P.CLNT_PJT_NM        --고객사프로젝트명
						              , P.EQP_NM             --설비명 
						              , P.ORDRS_QTY          --수주수량 
						              , P.ORDRS_DTL_DIV20    --작업구분
						              , P.ORDRS_DTL_DIV20_NM --작업구분명
						              , P.CTRT_DOC           --계약문서 
						              , P.DUDT_INTEND_DT     --납기예정일 
						              , P.ORDRS_DT           --수주확정일
						              , P.PLAN_CD_NM         --계획 LVL1 명
						              , P.PLANE_DT           --계획종료일
						          FROM PJT P
						         WHERE 1=1
					        </if>
						        UNION ALL --일정 수행결과 등록현황
						         SELECT 
									    S.CO_CD              --회사코드
						              , S.CO_NM              --회사명
									  , '2.수행결과'               AS GUBUN
						              , S.SALES_CD           --SALES Code
						              , S.CLNT_CD            --고객코드
						              , S.CLNT_NM            --고객명
						              , S.CLNT_PJT           --고객사프로젝트 
						              , S.CLNT_PJT_NM        --고객사프로젝트명
						              , S.EQP_NM             --설비명 
						              , S.ORDRS_QTY          --수주수량 
						              , S.ORDRS_DTL_DIV20    --작업구분
						              , S.ORDRS_DTL_DIV20_NM --작업구분명
						              , S.CTRT_DOC           --계약문서 
						              , S.DUDT_INTEND_DT     --납기예정일 
						              , S.ORDRS_DT           --수주확정일
						              , S.PLAN_CD_NM							 AS PLAN_CD_NM   --계획 LVL1 명
						              , (TO_CHAR(Z.RSLTSE_DT, 'YYYY-MM-DD') || 
						              	DECODE(S.PLANE_DT, NULL,'', '(' || RC.RESULT_CNT / PC.PLAN_CNT * 100 || ')')) AS PLANE_DT
								    FROM SJD S
							        	LEFT OUTER JOIN (                  
									                        SELECT 
									                        	   WR.CO_CD
									                        	 , WR.SALES_CD
									                        	 , WR.WBS_PLAN_CODE_KIND
									                             , MIN(WR.WBS_RSLTSS_DT)   AS RSLTSS_DT     --TASK실적시작일
									                             , MAX(WR.WBS_RSLTSE_DT)   AS RSLTSE_DT     --TASK실적종료일 
									                             , SUM(WR.DAYCNT)          AS RSLT_DAYCNT   --TASK실적소요일
									                          FROM TB_WB23M01  WR--WBS실적 정보
									                         GROUP BY WR.CO_CD, WR.SALES_CD, WR.WBS_PLAN_CODE_KIND
									                      ) Z ON S.CO_CD  = Z.CO_CD
					        								 AND S.SALES_CD  = Z.SALES_CD 
					        								 AND S.WBS_PLAN_CODE_ID  = Z.WBS_PLAN_CODE_KIND
					        			LEFT OUTER JOIN
														  (
															  SELECT W1.CO_CD, W1.SALES_CD, W1.WBS_PLAN_CODE_KIND, count(W1.WBS_PLAN_CODE_ID) PLAN_CNT
														         FROM TB_WB22M01 W1
														        WHERE W1.WBS_PLAN_CODE_KIND != 'WBSCODE'         
														        GROUP BY W1.CO_CD, W1.SALES_CD, W1.WBS_PLAN_CODE_KIND
													        
													       ) PC    ON S.CO_CD    = PC.CO_CD
														          AND S.SALES_CD = PC.SALES_CD    
														          AND S.WBS_PLAN_CODE_ID = PC.WBS_PLAN_CODE_KIND
							          LEFT OUTER JOIN
													  (
														  SELECT W2.CO_CD, W2.SALES_CD, W2.WBS_PLAN_CODE_KIND, count(W2.WBS_PLAN_CODE_ID) RESULT_CNT
													         FROM TB_WB23M01 W2
													        GROUP BY W2.CO_CD, W2.SALES_CD, W2.WBS_PLAN_CODE_KIND
												        
												       ) RC    ON S.CO_CD    = RC.CO_CD
													          AND S.SALES_CD = RC.SALES_CD    
													          AND S.WBS_PLAN_CODE_ID = RC.WBS_PLAN_CODE_KIND
							       WHERE 1=1
						       ) 
					   PIVOT ( MAX(PLANE_DT) FOR PLAN_CD_NM IN (${wbscode}) --코드명 넣어주기 Ctrl에서 배열 생성함 $-->#으로 바꾸면 오류남 바꾸지 말것 
					         )
					 		 ORDER BY CLNT_NM, CLNT_PJT_NM, SUBSTR(ORDRS_DT,1,7), nvl(SALES_CD,' '), GUBUN  
	        )
	</select>

	<select id="selectPrjctPlanList" resultType="CamelMap">
	/* 대일정계획 selectPrjctPlanList */
	SELECT T.*
	  FROM (
			SELECT N.*,
			      ROWNUM AS RN
			  FROM (
					WITH SCD AS		--현재 일정 수립계획중이고 시작일과 완료검수일 사이에있는 자료만
						 (
						  SELECT   P.SALES_CD
						         , P.CO_CD
						         , P.SJ_NM
						         , NVL(MC.CLOSE_YN,'N') CLOSE_YN
						         , P.BEGIN_DT
						         , P.ACPTNC_DT
							FROM TB_WB21M01 P
										LEFT OUTER JOIN TB_WB25M01 MC ON MC.SALES_CD = P.SALES_CD
						   WHERE 1 = 1
						     AND BEGIN_DT  <![CDATA[<=]]> sysdate 	--시작일
							 AND ACPTNC_DT <![CDATA[>=]]> sysdate	--완료검수일
							 AND NVL(MC.CLOSE_YN,'N') != 'Y'
 							 AND VER_NO IN (SELECT MAX(TO_NUMBER(PT.VER_NO)) FROM TB_WB21M01 PT WHERE PT.SJ_NO = P.SJ_NO) --최종 버젼 자료만 적용
 							 AND EXISTS (SELECT 1 FROM TB_WB22M01 PL WHERE P.SALES_CD = PL.SALES_CD )	--계획 수립된 자료만 검색하기 위함
						 )
					, SJD AS --수주상세 
					     ( 
					      SELECT M.CO_CD                                                    AS CO_CD              --회사코드
					            , (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)           AS CO_NM              --회사명 
					            , M.ORDRS_NO                                                 AS ORDRS_NO           --수주번호
					            , X.SALES_CD                                                 AS SALES_CD           --SALES Code
					            , TO_CHAR(M.ORDRS_CLNT_CD)                                   AS CLNT_CD            --고객코드
					            , C.CLNT_NM                                                  AS CLNT_NM            --고객명
					            , M.CLNT_PJT                                                 AS CLNT_PJT           --고객사프로젝트 
					            , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)        AS CLNT_PJT_NM        --고객사프로젝트명
					            , X.EQP_NM                                                   AS EQP_NM             --설비명 
					            , X.ORDRS_QTY                                                AS ORDRS_QTY          --수주수량 
					            , X.ORDRS_DTL_DIV20                                          AS ORDRS_DTL_DIV20    --작업구분
					            , (SELECT FN_CM05M01_CD_TO_NM(X.ORDRS_DTL_DIV20) FROM DUAL) AS ORDRS_DTL_DIV20_NM --작업구분명
					            --, M.CTRT_DOC                                                 AS CTRT_DOC           --계약문서 
					            , FN_CM05M01_CD_TO_NM(M.CTRT_DOC)                          AS CTRT_DOC           --계약문서 
					            , TO_CHAR(X.DUDT_INTEND_DT, 'YYYY-MM-DD')                    AS DUDT_INTEND_DT     --납기예정일 
					            , TO_CHAR(M.ORDRS_DT, 'YYYY-MM-DD')                          AS ORDRS_DT           --수주확정일
				            	  , W.WBS_PLAN_CODE_ID   --계획 LVL1 Code
					              , (SELECT FN_CM05M01_CD_TO_NM(W.WBS_PLAN_CODE_ID) FROM DUAL) AS PLAN_CD_NM        --계획 LVL1 명
					              , TO_CHAR(W.WBS_PLANE_DT, 'YYYY-MM-DD') 					   AS PLANE_DT           --계획종료일
					              , W.VER_NO												  AS PLAN_VER_NO		--계획버전번호
					              , X.DTL_RMK												  AS DTL_RMK			--설비비고
					         FROM TB_CR02M01  M --수주마스터
					              INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
					              LEFT OUTER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
						          LEFT OUTER JOIN TB_WB22M01 AS W ON X.CO_CD    = W.CO_CD 
											                     AND X.SALES_CD = W.SALES_CD
											                     AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
					        WHERE 1=1
					          AND M.CO_CD = #{coCd}
					          AND M.ORDRS_DT <![CDATA[>=]]> TO_DATE(#{strtDt}, 'YYYYMMDD')
					          AND M.ORDRS_DT <![CDATA[<=]]> TO_DATE(#{endDt}, 'YYYYMMDD')
							  AND X.SALES_CD IS NOT NULL
					        <if test="salesCd != null and !salesCd.equals('')">
					          AND X.SALES_CD LIKE '%' || #{salesCd} || '%'
					        </if>
					        <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
					          AND M.ORDRS_CLNT_CD = #{ordrsClntCd}
					        </if>
					        <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
					          AND C.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
					        </if>
					        <if test="clntPjt != null and !clntPjt.equals('')">
					         AND M.CLNT_PJT IN ( ${clntPjt} )
					        </if>
					        <if test='planCheck == "Y"'>
							  AND  EXISTS (SELECT * FROM TB_WB22M01 PL		--계획수립자료
										   WHERE X.SALES_CD = PL.SALES_CD 
										)
					        </if>
					        <if test='planCheck == "N"'>
							  AND  NOT EXISTS (SELECT * FROM TB_WB22M01 PL --계획없는 자료
										   WHERE X.SALES_CD = PL.SALES_CD 
										)
					        </if>
					        <if test='planPrjct == "B"'>  
							  AND  1=2   --프로젝트 계획 자료만일경우에는 제외처용
					        </if>
					        <if test="targetDate != null and !targetDate.equals('')">
					          AND  EXISTS (SELECT 1 FROM SCD
										   WHERE X.SALES_CD = SCD.SALES_CD 
										)
					        </if>
					     )
					    , PJT AS 
					      (
					       SELECT CO_CD
					            , CO_NM
					       	    , SALES_CD
					       	    , CLNT_CD
					       	    , CLNT_NM
					       	    , CLNT_PJT
					       	    , CLNT_PJT_NM        --고객사프로젝트명
					       	    , EQP_NM             --설비명 
					       	    , ORDRS_QTY          --수주수량
					       	    , ORDRS_DTL_DIV20    --작업구분
					       	    , ORDRS_DTL_DIV20_NM --작업구분명
					       	    , CTRT_DOC           --계약문서 
					       	    , DUDT_INTEND_DT     --예상납기일자
					       	    , ORDRS_DT           --수주예정일자
					       	    , CASE WHEN COL_DT = 'DSGN_DT'   THEN '설계완료'
					                   WHEN COL_DT = 'PURCHS_DT' THEN '구매완료'
					                   WHEN COL_DT = 'PRDCTN_DT' THEN '기계조립완료'
					                   WHEN COL_DT = 'ACPTNC_DT' THEN '고객검수'
					                   WHEN COL_DT = 'DLIVY_DT'  THEN '출고'
					              END PLAN_CD_NM        --계획 LVL1 명
									 
					       	    , DT_VAL AS PLANE_DT
						        , PRJCT_SEQ			--프로젝트 SEQ
						        , PRJCT_RMK			--프로젝트 설비 비고
						        , PRDT_MCKEY
						        , NVL(PRJCT_PRDT_RMK,PRJCT_RMK) AS PRJCT_PRDT_RMK	--프로젝트 설비 비고
					         FROM (
					               SELECT T.CO_CD                                                AS CO_CD
					                    , FN_CM05M01_CD_TO_NM(T.CO_CD)                           AS CO_NM
					               		, ''  			 										 AS SALES_CD  --수주전이므로 공백으로 처리
					                    , T.CLNT_CD                                              AS CLNT_CD
					                    , A.CLNT_NM                                              AS CLNT_NM
					                    , T.PRJCT_CD                                             AS CLNT_PJT
					                    , (SELECT FN_CM05M01_CD_TO_NM(T.PRJCT_CD) FROM DUAL)     AS CLNT_PJT_NM        --고객사프로젝트명
					                    , DECODE(D.PRJCT_PRDT_CD, '' , T.EQP_NM, B.PRDT_NM)      AS EQP_NM             --제품내역이 있으면 제품내역으로 아니면 설비명 
					                    , DECODE(D.PRJCT_PRDT_CD, '' , T.EQP_QTY, D.PRJCT_PRDT_QTY)   AS ORDRS_QTY          --수주수량
					                    , DECODE(D.PRJCT_PRDT_CD, '' , T.NEW_PRDT_CD, D.PRJCT_PRDT_NEW_CD) AS ORDRS_DTL_DIV20    --작업구분
					                    , (SELECT FN_CM05M01_CD_TO_NM(DECODE(D.PRJCT_PRDT_CD, '' , T.NEW_PRDT_CD, D.PRJCT_PRDT_NEW_CD)) FROM DUAL)  AS ORDRS_DTL_DIV20_NM --작업구분명
					                    , FN_CM05M01_CD_TO_NM(T.ODR_CD)                          AS CTRT_DOC           --계약문서 
					                    , TO_CHAR(T.DUDT_PLAN_DT, 'YYYY-MM-DD')                  AS DUDT_INTEND_DT     --예상납기일자
					                    , TO_CHAR(NVL(T.ORDRS_PLAN_DT,LAST_DAY(TO_DATE(T.YYYYMM, 'YYYYMM'))), 'YYYY-MM-DD')                 AS ORDRS_DT           --수주예정일자
					                  --, TO_CHAR(T.ORDRS_DT, 'YYYY-MM-DD')                      AS ORDRS_DT           --수주일자
					                    , TO_CHAR(T.DSGN_DT, 'YYYY-MM-DD')                       AS DSGN_DT            --설계일자
					                    , TO_CHAR(T.PURCHS_DT, 'YYYY-MM-DD')                     AS PURCHS_DT          --구매일자
					                    , TO_CHAR(T.PRDCTN_DT, 'YYYY-MM-DD')                     AS PRDCTN_DT          --생산일자
					                    , TO_CHAR(T.ACPTNC_DT, 'YYYY-MM-DD')                     AS ACPTNC_DT          --검수일자
					                    , TO_CHAR(T.DLIVY_DT, 'YYYY-MM-DD')                      AS DLIVY_DT           --출고일자
					                    , T.PRJCT_SEQ
					                    , T.PRJCT_RMK			 													--프로젝트 비고
					                    , D.PRJCT_SEQ || D.PRJCT_PRDT_CD || D.MCTYPE || D.PRJCT_PRDT_SEQ AS PRDT_MCKEY
						        		, PRJCT_PRDT_RMK															--프로젝트 설비 비고
									 FROM TB_BM06M01 T --프로젝트마스터
									 	  full join TB_BM06D01 D ON T.PRJCT_SEQ = D.PRJCT_SEQ
									      LEFT OUTER JOIN TB_BM02M01 A  ON T.CLNT_CD = A.CLNT_CD --거래처마스터
									      LEFT OUTER JOIN TB_BM01M01 B  ON D.PRJCT_PRDT_CD = B.PRDT_CD --제품유형
									WHERE T.PRJCT_SEQ IS NOT NULL 
					                  AND T.CO_CD = #{coCd}
					                  AND T.YYYYMM  BETWEEN  SUBSTRING(#{strtDt},1,6) AND SUBSTRING(#{endDt},1,6)
					                <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
					                 AND T.CLNT_CD = #{ordrsClntCd}
					                </if>
					                <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
							          AND A.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
							        </if>
					                <if test="clntPjt != null and !clntPjt.equals('')">
					                 AND T.PRJCT_CD IN ( ${clntPjt} )
					                </if> 	
					              )  
					              UNPIVOT INCLUDE NULLS  ( DT_VAL FOR COL_DT IN (DSGN_DT, PURCHS_DT, PRDCTN_DT, ACPTNC_DT, DLIVY_DT ) )
					      )
					      --일정 계획 자료 현황
						SELECT *
						  FROM (
						        SELECT  S.CO_CD              --회사코드
						              , S.CO_NM              --회사명
									  , '1.일정계획'               AS GUBUN
						              , S.SALES_CD           --SALES Code
						              , S.CLNT_CD            --고객코드
						              , S.CLNT_NM            --고객명
						              , S.CLNT_PJT           --고객사프로젝트 
						              , S.CLNT_PJT_NM        --고객사프로젝트명
						              , S.EQP_NM             --설비명 
						              , S.ORDRS_QTY          --수주수량 
						              , S.ORDRS_DTL_DIV20    --작업구분
						              , S.ORDRS_DTL_DIV20_NM --작업구분명
						              , S.CTRT_DOC           --계약문서 
						              , S.DUDT_INTEND_DT     --납기예정일 
						              , S.ORDRS_DT           --수주확정일
						              , S.PLAN_CD_NM         --계획 LVL1 명
						              , S.PLANE_DT           --계획종료일
						              , S.PLANE_DT  AS PLANE_DT1      --계획종료일
						              , '' AS PLANE_PCT
						              , S.PLAN_VER_NO		--계획버전
						              , '' AS PRJCT_SEQ			--프로젝트 SEQ
						              , S.DTL_RMK  AS PRJCT_RMK	--수주 설비 비고
						              , '' AS PRDT_MCKEY		--설비추가구분자(MCTYPE+SEQ)
						          FROM SJD S
						         WHERE 1=1
					        <if test='planPrjct != "N" and targetDate != "Y"'>
						        UNION ALL --프로젝트 계획자료
						        SELECT  P.CO_CD              --회사코드
						              , P.CO_NM              --회사명
									  , '0.예상수주'               AS GUBUN
						              , P.SALES_CD           --SALES Code
						              , P.CLNT_CD            --고객코드
						              , P.CLNT_NM            --고객명
						              , P.CLNT_PJT           --고객사프로젝트 
						              , P.CLNT_PJT_NM        --고객사프로젝트명
						              , P.EQP_NM             --설비명 
						              , P.ORDRS_QTY          --수주수량 
						              , P.ORDRS_DTL_DIV20    --작업구분
						              , P.ORDRS_DTL_DIV20_NM --작업구분명
						              , P.CTRT_DOC           --계약문서 
						              , P.DUDT_INTEND_DT     --납기예정일 
						              , P.ORDRS_DT           --수주확정일
						              , P.PLAN_CD_NM         --계획 LVL1 명
						              , P.PLANE_DT           --계획종료일
						              , P.PLANE_DT  AS PLANE_DT1      --계획종료일
						              , '' AS PLANE_PCT
						              , ''
						              , P.PRJCT_SEQ			--프로젝트 SEQ
						              , P.PRJCT_PRDT_RMK	--프로젝트 설비 비고
						              , P.PRDT_MCKEY		--설비추가구분자(MCTYPE+SEQ)
						          FROM PJT P
						         WHERE 1=1
					        </if>
					        <if test='execCheck == "Y"'>
						        UNION ALL --일정 수행결과 등록현황
						         SELECT 
									    S.CO_CD              --회사코드
						              , S.CO_NM              --회사명
									  , '2.수행결과'               AS GUBUN
						              , S.SALES_CD           --SALES Code
						              , S.CLNT_CD            --고객코드
						              , S.CLNT_NM            --고객명
						              , S.CLNT_PJT           --고객사프로젝트 
						              , S.CLNT_PJT_NM        --고객사프로젝트명
						              , S.EQP_NM             --설비명 
						              , S.ORDRS_QTY          --수주수량 
						              , S.ORDRS_DTL_DIV20    --작업구분
						              , S.ORDRS_DTL_DIV20_NM --작업구분명
						              , S.CTRT_DOC           --계약문서 
						              , S.DUDT_INTEND_DT     --납기예정일 
						              , S.ORDRS_DT           --수주확정일
						              , S.PLAN_CD_NM							 AS PLAN_CD_NM   --계획 LVL1 명
						              , (TO_CHAR(Z.RSLTSE_DT, 'YYYY-MM-DD') || 
						              	DECODE(S.PLANE_DT, NULL,'', '(' || ROUND(RC.RESULT_PCT / PC.PLAN_CNT,0)  || ')')) AS PLANE_DT
						              , TO_CHAR(Z.RSLTSE_DT, 'YYYY-MM-DD')  	AS PLANE_DT1
						              , ROUND(RC.RESULT_PCT / PC.PLAN_CNT,0) AS PLANE_PCT
						              , S.PLAN_VER_NO		--계획버전
						              , '' AS PRJCT_SEQ			--프로젝트 SEQ
						              , S.DTL_RMK  AS PRJCT_RMK	--수주 설비 비고
						              , '' AS PRDT_MCKEY		--설비추가구분자(MCTYPE+SEQ)
								    FROM SJD S
							        	LEFT OUTER JOIN (                  
									                        SELECT 
									                        	   WR.CO_CD
									                        	 , WR.SALES_CD
									                        	 , WR.WBS_PLAN_CODE_KIND
									                             , MIN(WR.WBS_RSLTSS_DT)   AS RSLTSS_DT     --TASK실적시작일
									                             , MAX(WR.WBS_RSLTSE_DT)   AS RSLTSE_DT     --TASK실적종료일 
									                             , SUM(WR.DAYCNT)          AS RSLT_DAYCNT   --TASK실적소요일
									                          FROM TB_WB23M01  WR--WBS실적 정보
									                         GROUP BY WR.CO_CD, WR.SALES_CD, WR.WBS_PLAN_CODE_KIND
									                      ) Z ON S.CO_CD  = Z.CO_CD
					        								 AND S.SALES_CD  = Z.SALES_CD 
					        								 AND S.WBS_PLAN_CODE_ID  = Z.WBS_PLAN_CODE_KIND
					        			LEFT OUTER JOIN
														  (
															  SELECT W1.CO_CD, W1.SALES_CD, W1.WBS_PLAN_CODE_KIND, count(W1.WBS_PLAN_CODE_ID) PLAN_CNT
														         FROM TB_WB22M01 W1
														        WHERE W1.WBS_PLAN_CODE_KIND != 'WBSCODE'         
														        GROUP BY W1.CO_CD, W1.SALES_CD, W1.WBS_PLAN_CODE_KIND
													        
													       ) PC    ON S.CO_CD    = PC.CO_CD
														          AND S.SALES_CD = PC.SALES_CD    
														          AND S.WBS_PLAN_CODE_ID = PC.WBS_PLAN_CODE_KIND
							          LEFT OUTER JOIN
													  (
														  SELECT W2.CO_CD, W2.SALES_CD, W2.WBS_PLAN_CODE_KIND, count(W2.WBS_PLAN_CODE_ID) RESULT_CNT, SUM(W2.WBS_RSLTS_RATE) RESULT_PCT
													         FROM TB_WB23M01 W2
													        GROUP BY W2.CO_CD, W2.SALES_CD, W2.WBS_PLAN_CODE_KIND
												        
												       ) RC    ON S.CO_CD    = RC.CO_CD
													          AND S.SALES_CD = RC.SALES_CD    
													          AND S.WBS_PLAN_CODE_ID = RC.WBS_PLAN_CODE_KIND
							       WHERE 1=1
					        </if>
						       ) 
					   PIVOT ( MAX(PLANE_DT), MAX(PLANE_DT1) AS DT, MAX(PLANE_PCT) AS PCT FOR PLAN_CD_NM IN ('수주확정' AS WBSCODE01,'목표원가/PFU배포' AS WBSCODE02,'설계완료' AS WBSCODE03,'모델링완료' AS WBSCODE17,'구매완료' AS WBSCODE04,'기계조립완료' AS WBSCODE05,'전기완료' AS WBSCODE06,'자체시운전완료' AS WBSCODE07,'조건작업완료' AS WBSCODE08,'외부제작검수' AS WBSCODE16,'고객검수' AS WBSCODE09,'포장' AS WBSCODE10,'출고' AS WBSCODE11,'도착' AS WBSCODE12,'설치시운전(출발일)' AS WBSCODE13,'설치시운전(복귀일)' AS WBSCODE14) )--코드명 넣어주기 Ctrl에서 배열 생성함 $-->#으로 바꾸면 오류남 바꾸지 말것 

					 		 ORDER BY CLNT_NM, CLNT_PJT_NM, SUBSTR(ORDRS_DT,1,7), nvl(SALES_CD,' '), GUBUN  
			 ) N
	   )T
 	WHERE 1=1
      AND T.RN BETWEEN ${firstIndex} AND ${lastIndex}
	</select>

	
	<select id="selectTodoIssueInfo" parameterType="Map" resultType="CamelMap">
       SELECT 
                     T.PRJCT_SEQ
                     , T.ISS_NO
                     , TO_CHAR(T.ISS_DT, 'YYYY-MM-DD') AS ISS_DT
                     , TO_CHAR(T.ACT_DT, 'YYYY-MM-DD') AS ACT_DT                     
                     , T.ISS_CNTS
                     , T.CAUSE_CNTS
                     , T.ACT_CNTS
                     , T.ISS_STS
                     , A.CODE_NM AS ISS_STS_NM
                     , A.CODE_RPRC AS ISS_YN  
                     , T.ETC_FIELD1
                     , T.ETC_FIELD2
                     , T.ETC_FIELD3
                     , T.CREAT_ID
                     , (SELECT NAME FROM TB_CM06M01 B WHERE T.CREAT_ID = B.ID) AS CREAT_NM
                     , T.CREAT_PGM
                     , TO_CHAR(T.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM
                     , T.UDT_ID
                     , (SELECT NAME FROM TB_CM06M01 B WHERE T.UDT_ID = B.ID) AS UDT_NM
                     , T.UDT_PGM
                     , TO_CHAR(T.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM
                     --, X.CO_CD
					 , X.YYYYMM
					 , X.PRJCT_CD
					 , X.PRJCT_NM
					 , X.INPEXP_CD
					 , X.NEW_PRDT_CD
					 , X.EQP_NM
					 , X.EQP_QTY
					 , X.CAR_NM
					 , X.CLNT_CD
					 , C.CLNT_NM
					 , X.CLNT_MNG_NM
					 , X.ODR_CD
					 , X.ODR_RMK
					 , X.EPCT_AMT
					 , X.ORDRS_PLAN_AMT
					 , X.WINBD_CD
					 , X.WINBD_RMK
					 , TO_CHAR(X.ORDRS_PLAN_DT, 'YYYY-MM-DD') AS ORDRS_PLAN_DT
					 , X.ORDRS_AMT
					 , TO_CHAR(X.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
					 , TO_CHAR(X.DUDT_PLAN_DT, 'YYYY-MM-DD') AS DUDT_PLAN_DT
					 , X.MNG_ID
					 , X.PRJCT_RMK
					 , X.USE_YN
					 , X.ORDRS_PCT
					 , X.MAKR_CD       
        FROM TB_BM06D03 T
                        LEFT OUTER JOIN TB_BM06M01 X ON T.PRJCT_SEQ = X.PRJCT_SEQ
                        LEFT OUTER JOIN  TB_CM05M01 A ON T.ISS_STS = A.CODE_ID  
                        LEFT OUTER JOIN TB_BM02M01 C ON C.CLNT_CD = X.CLNT_CD                      
       WHERE T.PRJCT_SEQ = #{prjctSeq}
  </select>
   
   <select id="select_wbs_code" parameterType="Map" resultType="camelMap">
		SELECT CODE_ID
			 , CODE_NM
			 , CODE_KIND
			 , CODE_DESC
			 , CODE_RPRC
			 , CODE_ETC
			 , SORT_NO
			 , USE_YN
			 , CREAT_ID
			 , CREAT_DTTM
			 , CREAT_PGM
			 , UDT_ID
			 , UDT_DTTM
			 , UDT_PGM
			 , DZ_CODE 
		  FROM TB_CM05M01 
		 WHERE 1=1
		   AND USE_YN = 'Y'
		   AND CODE_KIND = #{wbsCode}
		 ORDER BY SORT_NO
    </select>

	<select id="select_prjct_code" parameterType="Map" resultType="camelMap">
		SELECT DISTINCT *
		  FROM
			     ( 
			      SELECT DISTINCT 
			             M.CLNT_PJT                                                 AS CODE           --고객사프로젝트 
			            , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)        AS NAME        --고객사프로젝트명
		
			         FROM TB_CR02M01  M --수주마스터
			              INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
			              LEFT OUTER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
				          LEFT OUTER JOIN TB_WB22M01 AS W ON X.CO_CD    = W.CO_CD 
									                     AND X.SALES_CD = W.SALES_CD
									                     AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
			        WHERE 1=1
			          AND M.CO_CD = #{coCd}
			          AND M.ORDRS_DT <![CDATA[>=]]> TO_DATE(#{strtDt}, 'YYYYMMDD')
			          AND M.ORDRS_DT <![CDATA[<=]]> TO_DATE(#{endDt}, 'YYYYMMDD')
					  AND X.SALES_CD IS NOT NULL
			        <if test="salesCd != null and !salesCd.equals('')">
			          AND X.SALES_CD LIKE '%' || #{salesCd} || '%'
			        </if>
			        <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
			          AND M.ORDRS_CLNT_CD = #{ordrsClntCd}
			        </if>
			        <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
			          AND C.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
			        </if>
			        <if test='planCheck == "Y"'>
					  AND  EXISTS (SELECT * FROM TB_WB22M01 PL
								   WHERE X.SALES_CD = PL.SALES_CD 
								)
			        </if>
			        <if test='planCheck == "N"'>
					  AND  NOT EXISTS (SELECT * FROM TB_WB22M01 PL
								   WHERE X.SALES_CD = PL.SALES_CD 
								)
			        </if>
					<if test='planPrjct == "Y"'>
					UNION ALL
		               SELECT DISTINCT 
		                     T.PRJCT_CD                                             AS CODE
		                    , (SELECT FN_CM05M01_CD_TO_NM(T.PRJCT_CD) FROM DUAL)    AS NAME        --고객사프로젝트명
		                 FROM TB_BM06M01 T --프로젝트마스터
		                      LEFT OUTER JOIN TB_BM02M01 A  ON T.CLNT_CD = A.CLNT_CD --거래처마스터
		                WHERE T.CO_CD = #{coCd}
		                  AND T.YYYYMM  BETWEEN  SUBSTRING(#{strtDt},1,6) AND SUBSTRING(#{endDt},1,6)
		                <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
		                 AND T.CLNT_CD = #{ordrsClntCd}
		                </if>
		                <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
				          AND A.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
				        </if>
			        </if>
					)
		ORDER BY NAME    
    </select>
</mapper>
