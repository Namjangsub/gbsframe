<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.admin.cm.cm05.mapper.CM05Mapper">

	<select id="selectCodeCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			TB_CM05M01
		WHERE
			CODE_KIND = #{codeKind}
			AND USE_YN = #{useYn}
			<if test="searchValue != null and !searchValue.equals('')">
				AND ${searchType} LIKE '%${searchValue}%'
			</if>
		ORDER BY SORT_NO ASC
	</select>

	<select id="selectCodeList" resultType="CamelMap">
		SELECT
			*
		FROM
		(
			SELECT
				ROWNUM AS RNUM, A.*,
			        (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_KIND) AS CODE_KIND_NM,
			        (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_RPRC) AS CODE_RPRC_NM,
			        decode( A.CODE_KIND, 'ESTCOPRT',(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = A.CODE_ETC),
			                                        (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_ETC))  AS CODE_ETC_NM,
			        decode( A.CODE_KIND, 'WH',      (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_DESC),
			                                        A.CODE_DESC ) AS CODE_DESC_NM
			FROM
			(
				SELECT
					CODE_ID,
			        CODE_NM,
			        CODE_KIND,
			        CODE_DESC,
			        CODE_RPRC,
			        CODE_ETC,
			        SORT_NO,
			        USE_YN,
			        CREAT_ID,
			        TO_CHAR(CREAT_DTTM, 'yyyy-MM-dd') AS CREAT_DTTM,
			        CREAT_PGM,
			        UDT_ID,
			        TO_CHAR(UDT_DTTM, 'yyyy-MM-dd') AS UDT_DTTM,
			        UDT_PGM,
			        DZ_CODE
				FROM
					TB_CM05M01
				WHERE
					CODE_KIND = #{codeKind}
					AND USE_YN = #{useYn}
					<if test="searchValue != null and !searchValue.equals('')">
						AND ${searchType} LIKE '%${searchValue}%'
					</if>
				ORDER BY SORT_NO ASC, CODE_NM
			) A
		)
		WHERE
			RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>

	<select id="selectPdskCodeCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			TB_CM05M01
		WHERE
			CODE_ID LIKE 'PDSK%'
			AND USE_YN = #{useYn}
			<if test="searchValue != null and !searchValue.equals('')">
				AND ${searchType} LIKE '%${searchValue}%'
			</if>
		ORDER BY SORT_NO ASC
	</select>

	<select id="selectPdskCodeList" resultType="CamelMap">
		SELECT
			*
		FROM
		(
			SELECT
				ROWNUM AS RNUM, A.*,
			        (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_KIND) AS CODE_KIND_NM,
			        (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_RPRC) AS CODE_RPRC_NM,
			        decode( A.CODE_KIND, 'ESTCOPRT',(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = A.CODE_ETC),
			                                        (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_ETC))  AS CODE_ETC_NM,
			        decode( A.CODE_KIND, 'WH',      (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_DESC),
			                                        A.CODE_DESC ) AS CODE_DESC_NM
			FROM
			(
				SELECT
					CODE_ID,
			        CODE_NM,
			        CODE_KIND,
			        CODE_DESC,
			        CODE_RPRC,
			        CODE_ETC,
			        SORT_NO,
			        USE_YN,
			        CREAT_ID,
			        TO_CHAR(CREAT_DTTM, 'yyyy-MM-dd') AS CREAT_DTTM,
			        CREAT_PGM,
			        UDT_ID,
			        TO_CHAR(UDT_DTTM, 'yyyy-MM-dd') AS UDT_DTTM,
			        UDT_PGM,
			        DZ_CODE
				FROM
					TB_CM05M01
				WHERE
					CODE_ID LIKE 'PDSK%'
					AND USE_YN = #{useYn}
					<if test="searchValue != null and !searchValue.equals('')">
						AND ${searchType} LIKE '%${searchValue}%'
					</if>
				ORDER BY SORT_NO ASC, CODE_NM
			) A
		)
		WHERE
			RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>

	<select id="selectChildCodeList" resultType="CamelMap">
		SELECT
			*
		FROM
			TB_CM05M01
		WHERE
			USE_YN = 'Y'
			<if test="codeKind != null and !codeKind.equals('')">
				AND CODE_KIND = #{codeKind}
			</if>
			<if test="dzCode != null and !dzCode.equals('')">
				AND DZ_CODE = #{dzCode}
			</if>
			<if test="codeRprc != null and !codeRprc.equals('')">
				AND CODE_RPRC = #{codeRprc}
			</if>
			<if test="codeDesc != null and !codeDesc.equals('')">
				AND CODE_DESC = #{codeDesc}
			</if>
			<if test="codeEtc != null and !codeEtc.equals('')">
				AND CODE_ETC = #{codeEtc}
			</if>
			<if test="codeId != null and !codeId.equals('')">
				AND CODE_ID LIKE '${codeId}%'
			</if>

		ORDER BY SORT_NO ASC, CODE_NM
	</select>

	<select id="selectComboCodeList" resultType="CamelMap">
	   SELECT CODE_ID
			, CODE_NM
			, CODE_KIND
		FROM TB_CM05M01
		WHERE USE_YN = 'Y'
			<if test="codeKindList != null and !codeKindList.equals('')">
				AND CODE_KIND IN (${codeKindList})
			</if>
		ORDER BY SORT_NO ASC, CODE_NM
	</select>

	<select id="selectPtchildCodeList_old" resultType="CamelMap">
	   SELECT *
	   FROM(
		SELECT
			ROWNUM AS RNUM, A.*
		FROM
		(
	        SELECT M.CODE_KIND AS CODE_KIND,
	               M.CODE_ID AS MID_CD,
			       M.CODE_NM AS MID_NM,
			       S.CODE_ID AS SUB_CD,
			       S.CODE_NM AS SUB_NM,
			       M.CNT AS SUB_CNT
			FROM TB_CM05M01 S,
			(SELECT M.CODE_ID,
				    M.CODE_NM,
				    M.CODE_KIND
				    ,(SELECT COUNT(*) FROM TB_CM05M01 S WHERE S.CODE_KIND =  M.CODE_ID) AS CNT
			 FROM TB_CM05M01 M
			 WHERE 1=1
			       AND M.USE_YN = 'Y'
			<if test="codeKind != null and !codeKind.equals('')">
				   AND M.CODE_KIND = #{codeKind}
			</if>
			)M
			WHERE 1=1 AND M.CODE_ID = S.CODE_KIND
			AND S.USE_YN = 'Y'
			ORDER BY M.CODE_ID
		 ) AS a
		) A
   </select>

   <select id="selectPtchildCodeList" resultType="CamelMap">
    SELECT ROWNUM AS RNUM, B.*
        FROM(
          SELECT
                     A.CODE_KIND
                     ,A.MID_CD
                     ,A.MID_NM
                     ,CASE WHEN A.SUB_CNT > 1 AND SUBSTR(A.SUB_CD,-1) > 1 THEN ' ' ELSE A.MID_NM END AS MID_NM2
                     ,A.SUB_CD
                     ,A.SUB_NM
                     ,A.SUB_CNT
	      FROM
	      ( SELECT M.CODE_KIND AS CODE_KIND,
	               M.CODE_ID AS MID_CD,
			       M.CODE_NM AS MID_NM,
			       S.CODE_ID AS SUB_CD,
			       S.CODE_NM AS SUB_NM,
			       M.CNT AS SUB_CNT
			FROM TB_CM05M01 S,
			(SELECT M.CODE_ID,
				    M.CODE_NM,
				    M.CODE_KIND
				    ,(SELECT COUNT(*) FROM TB_CM05M01 S WHERE S.CODE_KIND =  M.CODE_ID) AS CNT
			 FROM TB_CM05M01 M
			 WHERE 1=1
			       AND M.USE_YN = 'Y'
			<if test="codeKind != null and !codeKind.equals('')">
				   AND M.CODE_KIND = #{codeKind}
			</if>
			)M
			WHERE 1=1 AND M.CODE_ID = S.CODE_KIND
			AND S.USE_YN = 'Y'
			ORDER BY M.CODE_ID,S.CODE_ID )A
			)B
	 </select>

	<select id="selectCodeInfo" resultType="CamelMap">
		SELECT
			A.CODE_ID,
			A.CODE_NM,
			A.CODE_KIND,
			A.CODE_DESC,
			A.CODE_RPRC,
			A.CODE_ETC,
			A.SORT_NO,
			A.USE_YN,
			(SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_KIND) AS CODE_KIND_NM,
			(SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_RPRC) AS CODE_RPRC_NM,
			decode( A.CODE_KIND, 'ESTCOPRT',(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = A.CODE_ETC),
			                                (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_ETC))  AS CODE_ETC_NM,
			decode( A.CODE_KIND, 'WH',      (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_DESC),
			                                        A.CODE_DESC ) AS CODE_DESC_NM,
			A.DZ_CODE

		FROM
			TB_CM05M01 AS A
		WHERE
			A.CODE_ID = #{codeId}
	</select>

	<select id="selectCodeInfoList" parameterType="Map" resultType="CamelMap">
		SELECT
			A.CODE_ID,
			A.CODE_NM,
			A.CODE_KIND,
			A.CODE_DESC,
			A.CODE_ETC,
			A.SORT_NO,
			A.USE_YN,
			A.CREAT_ID,
			A.CREAT_DTTM,
			(SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_KIND) AS CODE_KIND_NM,
			(SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_RPRC) AS CODE_RPRC_NM,
			decode( A.CODE_KIND, 'ESTCOPRT',(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = A.CODE_ETC),
			                                (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_ETC))  AS CODE_ETC_NM,
			decode( A.CODE_KIND, 'WH',      (SELECT CODE_NM FROM TB_CM05M01 WHERE CODE_ID = A.CODE_DESC),
			                                        A.CODE_DESC ) AS CODE_DESC_NM,
			A.DZ_CODE
		FROM
			TB_CM05M01 AS A
		WHERE
			A.CODE_KIND = #{codeKind}
		ORDER BY A.SORT_NO ASC, A.CODE_NM
	</select>

	<insert id="insertCode" parameterType="Map">
		MERGE INTO TB_CM05M01 A
			USING DUAL
			ON (A.CODE_ID = #{codeId})
		WHEN MATCHED THEN
			UPDATE SET
				CODE_NM = #{codeNm},
				CODE_KIND = #{codeKind},
				CODE_DESC = #{codeDesc},
				CODE_RPRC = #{codeRprc},
				CODE_ETC  = #{codeEtc},
				SORT_NO = #{sortNo},
				USE_YN = #{useYn},
				UDT_ID = #{userId},
				UDT_PGM = 'admin',
				UDT_DTTM = SYSDATE,
				DZ_CODE = #{dzCode, jdbcType=VARCHAR}
		WHEN NOT MATCHED THEN
		INSERT
		(
			CODE_ID,
			CODE_NM,
			CODE_KIND,
			CODE_DESC,
			CODE_RPRC,
			CODE_ETC,
			SORT_NO,
			USE_YN,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			DZ_CODE
		)
		VALUES(
			#{codeId},
			#{codeNm},
			#{codeKind},
			#{codeDesc},
			#{codeRprc},
			#{codeEtc},
			#{sortNo},
			#{useYn},
			#{userId},
			'admin',
			SYSDATE,
			#{dzCode, jdbcType=VARCHAR}
		)
	</insert>

	<update id="deleteCode" parameterType="Map">
		UPDATE
			TB_CM05M01
		SET
			USE_YN = 'N',
			UDT_ID = #{userId},
			UDT_PGM = 'admin',
			UDT_DTTM = SYSDATE
		WHERE
			CODE_ID = #{codeId}
	</update>


	<select id="selectDocTreeList" resultType="CamelMap">
			SELECT  CODE_ID ID,
					CODE_NM TEXT,
					CODE_KIND PARENT,
					CODE_ID DEPT_ID,
					CODE_NM DEPT_NM,
			        CODE_KIND UP_DEPT_ID,
			        CODE_DESC DEPT_NM,
			        SORT_NO,
			        CODE_ETC,
			        USE_YN,
			        LPAD(' ', 3*(LEVEL-1)) || LEVEL lvl,
					REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as LPATH
			     , CONNECT_BY_ISLEAF AS IS_LEAF
			     , CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
			FROM TB_CM05M01
			<if test="useYn != null and !useYn.equals('')">
				WHERE USE_YN = #{useYn}
			</if>
			START WITH CODE_ID ='FILETREE'
			CONNECT BY PRIOR CODE_ID = CODE_KIND
			 ORDER SIBLINGS BY CODE_ID ASC
	</select>

	<select id="selectDocTreeListAuth"  parameterType="Map" resultType="CamelMap">
		SELECT  A.*
		  FROM ( SELECT  CODE_ID ID,
							CODE_NM TEXT,
							CODE_KIND PARENT,
							CODE_ID DEPT_ID,
							CODE_NM DEPT_NM,
					        CODE_KIND UP_DEPT_ID,
					        CODE_DESC DEPT_NM,
					        SORT_NO,
					        CODE_ETC,
					        USE_YN,
					        LPAD(' ', 3*(LEVEL-1)) || LEVEL lvl,
							REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as LPATH
					     , CONNECT_BY_ISLEAF AS IS_LEAF
					     , CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
					FROM TB_CM05M01
				<if test="useYn != null and !useYn.equals('')">
					WHERE USE_YN = #{useYn}
				</if>
					START WITH CODE_ID ='FILETREE'
					CONNECT BY PRIOR CODE_ID = CODE_KIND
					 ORDER SIBLINGS BY CODE_ID ASC) AS A
		       LEFT OUTER JOIN TB_CM15M01 AS B ON A.ID = B.COMON_CD
		                                      AND B.USER_ID = #{userId}
		   WHERE
		          IS_LEAF = 0 OR (IS_LEAF = 1 AND B.FILE_LIST='Y')
	</select>
	
	<select id="selectCheckboxList" resultType="CamelMap">
		WITH WCODE AS 
		     (  SELECT LEVEL - 1 AS LVL
					, T.CODE_KIND
					, T.CODE_DESC
					, T.CODE_ID
					, T.CODE_NM
					, T.SORT_NO
				FROM TB_CM05M01 T	
		 		WHERE USE_YN = 'Y'
		 		  AND LEVEL = 2
						START WITH T.CODE_KIND =  (SELECT MIN(CODE_ID) 
						                             FROM TB_CM05M01
													WHERE CODE_RPRC = #{userDept}   
													  AND CODE_KIND = 'COBGB')
						CONNECT BY PRIOR T.CODE_ID = T.CODE_KIND
				UNION ALL 
				SELECT 1 AS LVL
					, T.CODE_KIND
					, T.CODE_DESC
					, T.CODE_ID
					, T.CODE_NM
					, T.SORT_NO
				FROM TB_CM05M01 T
			   WHERE T.CODE_KIND = 'COBGB99') --기타코드는 모든 부서에 추가
		SELECT  
					  T.CODE_KIND
					, T.CODE_DESC
					, T.CODE_ID
					, T.CODE_NM
					, (select count(CODE_KIND) from WCODE a where T.CODE_KIND = a.CODE_KIND) as ROW_CNT
		  FROM WCODE T
		 ORDER BY T.CODE_KIND, T.SORT_NO, T.CODE_NM           
	</select>

</mapper>