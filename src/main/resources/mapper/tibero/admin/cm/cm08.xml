<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dksys.biz.admin.cm.cm08.mapper.CM08Mapper">
    <insert id="insertFile">
        <selectKey keyProperty="fileKey" resultType="String" order="BEFORE">
            SELECT TB_CM08M01_SQ01.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TB_CM08M01 (
            FILE_KEY,
            FILE_SIZE,
            FILE_TYPE,
            FILE_NAME,
            FILE_PATH,
            FILE_TRGT_TYP,
            FILE_TRGT_KEY,
            USE_YN,
            CREAT_ID,
            CREAT_PGM,
            CREAT_DTTM,
            CLNT_CD,
            PRDT_CD,
            ITEM_CD,
            SALES_CD,
            PRJCT_CD,
            CO_CD,
            COMON_CD
        ) VALUES(
			#{fileKey},
			#{fileSize},
			#{fileType},
			#{fileName},
			#{filePath},
			#{fileTrgtTyp},
			#{fileTrgtKey},
			'Y',
			#{userId},
			#{pgmId},
			SYSDATE,
            #{clntCd, jdbcType=VARCHAR},
            #{prdtCd, jdbcType=VARCHAR},
            #{itemCd, jdbcType=VARCHAR},
            #{salesCd, jdbcType=VARCHAR},
            #{prjctCd, jdbcType=VARCHAR},
            #{coCd, jdbcType=VARCHAR},
            #{comonCd, jdbcType=VARCHAR}
        )
    </insert>

    <select id="selectFileList" parameterType="Map" resultType="CamelMap">
        SELECT *
        FROM TB_CM08M01 T
	            INNER JOIN  TB_CM15M01 G ON T.COMON_CD = G.COMON_CD
       							   AND G.FILE_LIST = 'Y'         
        WHERE FILE_TRGT_TYP = #{fileTrgtTyp}
          AND FILE_TRGT_KEY = #{fileTrgtKey}
       	  AND G.USER_ID = #{userId}
    </select>

    <select id="selectFileListAll" parameterType="Map" resultType="CamelMap">
        SELECT *
        FROM TB_CM08M01 T
        WHERE FILE_TRGT_TYP = #{fileTrgtTyp}
          AND FILE_TRGT_KEY = #{fileTrgtKey}
    </select>

    <select id="selectFileInfo" parameterType="Map" resultType="CamelMap">
        SELECT *
        FROM TB_CM08M01
        WHERE FILE_KEY = #{fileKey}
    </select>

    <delete id="deleteFile" parameterType="Map">
        DELETE
        FROM TB_CM08M01
        WHERE FILE_KEY = #{fileKey}
    </delete>

    <select id="selectTreeFileCount" parameterType="Map" resultType="int">
        SELECT
        	COUNT(*)
		    FROM
		        TB_CM08M01 T left outer join TB_BM02M01 A ON T.CLNT_CD = A.CLNT_CD
					            LEFT OUTER JOIN (
											        SELECT  CODE_ID ID,
											                CODE_NM TEXT,
											                CODE_KIND PARENT,
											                CODE_DESC PARENT_NM,
											                SORT_NO,
											                USE_YN,
											                LPAD(' ', 3*(LEVEL-1)) || LEVEL lvl,
											                REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_NM, '\'), '^\s+\-\>\s+', '') as LPATH,
											                CONNECT_BY_ISLEAF AS IS_LEAF
											        FROM TB_CM05M01
											        START WITH CODE_ID ='FILETREE'
											        CONNECT BY PRIOR CODE_ID = CODE_KIND
											        ORDER SIBLINGS BY CODE_ID ASC) B1 ON T.COMON_CD = B1.ID
		            LEFT OUTER JOIN TB_CM06M01 D ON T.CREAT_ID = D.ID
		            LEFT OUTER JOIN TB_BM01M01 E ON T.PRDT_CD = E.PRDT_CD
		            LEFT OUTER JOIN TB_CM05M01 F ON T.ITEM_CD = F.CODE_ID
		            LEFT OUTER JOIN TB_CM15M01 G ON T.COMON_CD = G.COMON_CD
        								        AND G.USER_ID = #{userId}
		        WHERE 1=1
		        <if test="coCd != null and !coCd.equals('')">
		            AND T.CO_CD = #{coCd}
		        </if>
		        <if test="comonCd.equals('FITR90')">	        
		        	AND (T.COMON_CD IS NULL OR T.COMON_CD = '' OR B1.ID IS NULL) --저장위치 없는 파일
		        </if>
		        <if test="!comonCd.equals('FITR90')">	        
					AND G.FILE_LIST = 'Y'
		        	AND T.COMON_CD IN (
								SELECT  CODE_ID ID
								  FROM TB_CM05M01
									START WITH CODE_ID = #{comonCd}
									CONNECT BY PRIOR CODE_ID = CODE_KIND		            
		  						) 
		        </if>		  						
		        <if test="fileTrgtKey != null and !fileTrgtKey.equals('')">
		            AND T.FILE_TRGT_KEY= #{fileTrgtKey}  --파일타겟 키값이 있으면 반드시 파일타겟 타입이 있어야 함
		            AND T.FILE_TRGT_TYP= #{fileTrgtTyp}
		        </if>
		        <if test="creatId != null and !creatId.equals('')">
		            AND T.CREAT_ID= #{creatId}
		        </if>
		        <if test="creatNm != null and !creatNm.equals('')">
		            AND D.NAME LIKE '%' || #{creatNm} || '%'
		        </if>
		        <if test="reqDtFrom != null and !reqDtFrom.equals('') and reqDtTo != null and !reqDtTo.equals('')">
		            AND T.CREAT_DTTM BETWEEN to_date(REPLACE(#{reqDtFrom},'-','')) AND to_date(REPLACE(#{reqDtTo},'-',''))+1
		        </if>
		        <if test="searchValue != null and !searchValue.equals('') and searchName != null and !searchName.equals('')">
		            AND ${searchValue} LIKE '%' || #{searchName} || '%'
		        </if>
		        <if test="clntCd != null and !clntCd.equals('')">
		            AND T.CLNT_CD = #{clntCd}
		        </if>
		        <if test="clntNm != null and !clntNm.equals('')">
		            AND A.CLNT_NM LIKE '%' || #{clntNm} || '%'
		        </if>
		        <if test="prdtCd != null and !prdtCd.equals('')">
		            AND T.PRDT_CD = #{prdtCd}
		        </if>
		        <if test="prdtNm != null and !prdtNm.equals('')">
		            AND E.PRDT_NM LIKE '%' || #{prdtNm} || '%'
		        </if>
		        <if test="prjctCd != null and !prjctCd.equals('')">
		            AND T.PRJCT_CD LIKE #{prjctCd}
		        </if>
		        <if test="salesCd != null and !salesCd.equals('')">
		            AND T.SALES_CD LIKE '%' || #{salesCd} || '%'
		        </if>
		        <if test="fileType != null and !fileType.equals('')">
		            AND T.FILE_TRGT_TYP = #{fileType}
		        </if>
    </select>

    <select id="selectTreeFileList" parameterType="Map" resultType="CamelMap">
		SELECT *
		  FROM (     
	        SELECT
	        	ROWNUM AS RNUM, A.*
	        FROM
		        (
		        SELECT
		            T.CO_CD,
		            T.FILE_KEY,
		            T.FILE_SIZE,
		            T.FILE_TYPE,
		            T.FILE_NAME,
		            T.FILE_PATH,
		            T.FILE_TRGT_TYP,
		            F2.CODE_NM 											AS FILE_TRGT_TYP_NM,
		            T.FILE_TRGT_KEY,
		            T.USE_YN,
		            T.CREAT_ID,
		            D.NAME CREAT_NM,
		            T.CREAT_PGM,
		            TO_CHAR(T.CREAT_DTTM, 'YYYY-MM-DD HH24:MI:SS') 		AS CREAT_DTTM,
		            T.CLNT_CD,
		            A.CLNT_NM,
		            T.PRDT_CD,
		            E.PRDT_NM,
		            T.ITEM_CD,
		            F.CODE_NM 											AS ITEM_NM,
		            T.SALES_CD,
		            T.PRJCT_CD,
		            FN_CM05M01_CD_TO_NM(T.PRJCT_CD) 					AS PRJCT_NM,
		            T.COMON_CD,
		            B1.TEXT 											AS COMON_NM,
		            NVL(B1.LPATH, NVL2(T.COMON_CD, T.COMON_CD, 'null')) AS LPATH,
		            G.FILE_UP,
		            G.FILE_DOWN,
		            G.FILE_UPDATE,
		            G.FILE_DELETE,
		            T.ORDRS_NO
		    FROM
		        TB_CM08M01 T left outer join TB_BM02M01 A ON T.CLNT_CD = A.CLNT_CD
					            LEFT OUTER JOIN (
											        SELECT  CODE_ID ID,
											                CODE_NM TEXT,
											                CODE_KIND PARENT,
											                CODE_DESC PARENT_NM,
											                SORT_NO,
											                USE_YN,
											                LPAD(' ', 3*(LEVEL-1)) || LEVEL lvl,
											                REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_NM, '\'), '^\s+\-\>\s+', '') as LPATH,
											                CONNECT_BY_ISLEAF AS IS_LEAF
											        FROM TB_CM05M01
											        START WITH CODE_ID ='FILETREE'
											        CONNECT BY PRIOR CODE_ID = CODE_KIND
											        ORDER SIBLINGS BY CODE_ID ASC) B1 ON T.COMON_CD = B1.ID
		            LEFT OUTER JOIN TB_CM06M01 D ON T.CREAT_ID = D.ID
		            LEFT OUTER JOIN TB_BM01M01 E ON T.PRDT_CD = E.PRDT_CD
		            LEFT OUTER JOIN TB_CM05M01 F ON T.ITEM_CD = F.CODE_ID
		            LEFT OUTER JOIN TB_CM05M01 F2 ON F2.CODE_KIND = 'DRPDIV' AND  F2.CODE_RPRC = T.FILE_TRGT_TYP
		            LEFT OUTER JOIN TB_CM15M01 G ON T.COMON_CD = G.COMON_CD
        								        AND G.USER_ID = #{userId}
		        WHERE 1=1
		        <if test="coCd != null and !coCd.equals('')">
		            AND T.CO_CD = #{coCd}
		        </if>
		        <if test="comonCd.equals('FITR90')">	        
		        	AND (T.COMON_CD IS NULL OR T.COMON_CD = '' OR B1.ID IS NULL) --저장위치 없는 파일
		        </if>
		        <if test="!comonCd.equals('FITR90')">	        
					AND G.FILE_LIST = 'Y'
		        	AND T.COMON_CD IN (
								SELECT  CODE_ID ID
								  FROM TB_CM05M01
									START WITH CODE_ID = #{comonCd}
									CONNECT BY PRIOR CODE_ID = CODE_KIND		            
		  						) 
		        </if>		  						
		        <if test="fileTrgtKey != null and !fileTrgtKey.equals('')">
		            AND T.FILE_TRGT_KEY= #{fileTrgtKey}  --파일타겟 키값이 있으면 반드시 파일타겟 타입이 있어야 함
		            AND T.FILE_TRGT_TYP= #{fileTrgtTyp}
		        </if>
		        <if test="creatId != null and !creatId.equals('')">
		            AND T.CREAT_ID= #{creatId}
		        </if>
		        <if test="creatNm != null and !creatNm.equals('')">
		            AND D.NAME LIKE '%' || #{creatNm} || '%'
		        </if>
		        <if test="reqDtFrom != null and !reqDtFrom.equals('') and reqDtTo != null and !reqDtTo.equals('')">
		            AND T.CREAT_DTTM BETWEEN to_date(REPLACE(#{reqDtFrom},'-','')) AND to_date(REPLACE(#{reqDtTo},'-',''))+1
		        </if>
		        <if test="searchValue != null and !searchValue.equals('') and searchName != null and !searchName.equals('')">
		            AND ${searchValue} LIKE '%' || #{searchName} || '%'
		        </if>
		        <if test="clntCd != null and !clntCd.equals('')">
		            AND T.CLNT_CD = #{clntCd}
		        </if>
		        <if test="clntNm != null and !clntNm.equals('')">
		            AND A.CLNT_NM LIKE '%' || #{clntNm} || '%'
		        </if>
		        <if test="prdtCd != null and !prdtCd.equals('')">
		            AND T.PRDT_CD = #{prdtCd}
		        </if>
		        <if test="prdtNm != null and !prdtNm.equals('')">
		            AND E.PRDT_NM LIKE '%' || #{prdtNm} || '%'
		        </if>
		        <if test="prjctCd != null and !prjctCd.equals('')">
		            AND T.PRJCT_CD LIKE #{prjctCd}
		        </if>
		        <if test="salesCd != null and !salesCd.equals('')">
		            AND T.SALES_CD LIKE '%' || #{salesCd} || '%'
		        </if>
		        <if test="fileType != null and !fileType.equals('')">
		            AND T.FILE_TRGT_TYP = #{fileType}
		        </if>
				ORDER BY T.CREAT_DTTM DESC
		        ) A
	    	)
        WHERE
              RNUM BETWEEN #{firstIndex} AND #{lastIndex}

    </select>


    <select id="selectConfirmCount" parameterType="Map" resultType="int">
        SELECT COUNT(*) CNT
        FROM TB_CM08M01 A
            LEFT INNER JOIN TB_CM15M01 B
        ON A.COMON_CD = B.COMON_CD
            AND B.USER_ID = #{userId, jdbcType=VARCHAR}
        WHERE FILE_KEY = #{fileKey}
    </select>

    <update id="moveFile">
        UPDATE
            TB_CM08M01
        SET COMON_CD = #{comonCd}
        WHERE FILE_KEY = #{fileKey}
    </update>

    <!-- 	디렉토리 접근권한 관리 (사용자별 접근권한 체크로 임의의 값이 오면 해당 폴더 권한이 있어야 조회됨 -->
    <select id="selectFileInfoUser" parameterType="Map" resultType="CamelMap">
        SELECT A.*
        FROM TB_CM08M01 A
        INNER JOIN TB_CM15M01 B ON A.COMON_CD = B.COMON_CD
        AND B.USER_ID = #{userId}
        <choose>
            <when test='jobType == "fileList"'>
                AND B.FILE_LIST = 'Y'
            </when>
            <when test='jobType == "fileUp"'>
                AND B.FILE_UP = 'Y'
            </when>
            <when test='jobType == "fileDown"'>
                AND B.FILE_DOWN = 'Y'
            </when>
            <when test='jobType == "fileUpdate"'>
                AND B.FILE_UPDATE = 'Y'
            </when>
            <when test='jobType == "fileDelete"'>
                AND B.FILE_DELETE = 'Y'
            </when>
            <otherwise>
                AND 1 = 0
            </otherwise>
        </choose>
        WHERE FILE_KEY = #{fileKey}
    </select>
    
    
    

	<!-- fileTrgtTyp 별로 서로 다른 경로로 M을 찾아옴 -->
	<select id="selectMByTarget" resultType="CamelMap">
	/* fileTrgtTyp = SALES_CD | ORDRS_NO | CLNT_PJT | CLNT_CD | CO_CD */
		<choose>
		<!-- 작업일보관리 첨부파일 -->
		<when test="fileTrgtTyp == 'PM0101M01_M'">
			SELECT M.SALES_CD, M.CLNT_CD, M.ORDRS_NO, M.CLNT_PJT, M.PRDT_CD, M.ITEM_DIV, M.ORD_CO_CD
			  FROM TB_PM01D01 D
					LEFT OUTER JOIN TB_PM01M01 M ON M.WORK_RPT_NO = D.WORK_RPT_NO
			 WHERE D.WORK_RPT_NO =  SUBSTR(#{fileTrgtKey}, 1, INSTR(#{fileTrgtKey}, '-', -1) - 1) -- 'DM20240509-6575' 
			   AND D.WORK_RPT_NO_SEQ = SUBSTR(#{fileTrgtKey}, INSTR(#{fileTrgtKey}, '-', -1) + 1)  --'1'
			 FETCH FIRST 1 ROWS ONLY
		</when>
	
		<!-- WBS 계획 문제 -->
		<when test="fileTrgtTyp == 'WB2401P01'">
			SELECT CO_CD, SALES_CD, WBS_PLAN_CODE_KIND, FILE_TRGT_KEY FROM TB_WB22M01 WHERE FILE_TRGT_KEY = (#{fileTrgtKey}
			FETCH FIRST 1 ROWS ONLY
		</when>
	
	
		<!-- WBS 실적 문제 -->
		<when test="fileTrgtTyp == 'WB2401P11'">
			SELECT CO_CD, SALES_CD, WBS_PLAN_CODE_KIND, FILE_TRGT_KEY  FROM TB_WB23M01 WHERE FILE_TRGT_KEY = (#{fileTrgtKey}
			FETCH FIRST 1 ROWS ONLY
		</when>
	
	
		<!-- 물류진행요청 등록 -->
		<when test="fileTrgtTyp == 'CR1001P01'">
			SELECT M.CO_CD, M.ORDRS_NO, M.CLNT_PJT, D.SALES_CD, M.FILE_TRGT_KEY, M.LGIST_NO
			FROM TB_CR11M01 M 
					LEFT OUTER JOIN TB_CR11D01 D ON D.LGIST_NO = M.LGIST_NO
			WHERE M.FILE_TRGT_KEY = '40'
			ORDER BY SALES_CD
			FETCH FIRST 1 ROWS ONLY
		</when>
		
		
		<!-- 3) CLNT_PJT 경로 -->
		<when test="fileTrgtTyp == 'CLNT_PJT'">
			SELECT
				D.SALES_CD, D.CLNT_CD,
				C.ORDRS_NO, C.CLNT_PJT, D.PRDT_CD, D.ITEM_DIV, C.ORD_CO_CD
			FROM TB_CR02M01 C
			JOIN TB_CR02D02 C2 ON C2.ORDRS_NO = C.ORDRS_NO
			JOIN TB_DRAWING_MASTER D ON D.SALES_CD = C2.SALES_CD
			WHERE C.CLNT_PJT = #{fileTrgtKey}
			ORDER BY NVL(D.REL_DT, D.START_DT) DESC, D.SALES_CD DESC
			FETCH FIRST 1 ROWS ONLY
		</when>
	
		<!-- 4) CLNT_CD 경로 (주문서에서 고객사로 역추적) -->
		<when test="fileTrgtTyp == 'CLNT_CD'">
			SELECT
				D.SALES_CD, D.CLNT_CD,
				C.ORDRS_NO, C.CLNT_PJT, D.PRDT_CD, D.ITEM_DIV, C.ORD_CO_CD
			FROM TB_CR02M01 C
			JOIN TB_CR02D02 C2 ON C2.ORDRS_NO = C.ORDRS_NO
			JOIN TB_DRAWING_MASTER D ON D.SALES_CD = C2.SALES_CD
			WHERE C.ORDRS_CLNT_CD = #{fileTrgtKey}
			ORDER BY NVL(D.REL_DT, D.START_DT) DESC, D.SALES_CD DESC
			FETCH FIRST 1 ROWS ONLY
		</when>
	
		<!-- 5) ORD_CO_CD 경로 (발주사 코드) -->
		<when test="fileTrgtTyp == 'ORD_CO_CD'">
			SELECT
				D.SALES_CD, D.CLNT_CD,
				C.ORDRS_NO, C.CLNT_PJT, D.PRDT_CD, D.ITEM_DIV, C.ORD_CO_CD
			FROM TB_CR02M01 C
			JOIN TB_CR02D02 C2 ON C2.ORDRS_NO = C.ORDRS_NO
			JOIN TB_DRAWING_MASTER D ON D.SALES_CD = C2.SALES_CD
			WHERE C.ORD_CO_CD = #{fileTrgtKey}
			ORDER BY NVL(D.REL_DT, D.START_DT) DESC, D.SALES_CD DESC
			FETCH FIRST 1 ROWS ONLY
		</when>
	
		<!-- 예외 -->
		<otherwise>
			SELECT NULL SALES_CD, NULL CLNT_CD, NULL ORDRS_NO, NULL CLNT_PJT, NULL PRDT_CD, NULL ITEM_DIV, NULL ORD_CO_CD FROM DUAL
		</otherwise>
		</choose>
	</select>    
  
</mapper>