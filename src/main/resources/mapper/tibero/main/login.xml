<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.main.mapper.LoginMapper">

	<select id="selectUserInfo" resultType="User">
		SELECT
			ID id,
			PASSWORD password,
			EMP_NO empNo,
			NAME name,
			CO_CD coCd,
			MNG_CO_CD mngCoCd,
			DEPT_ID deptId,
			LEVEL_CD levelCd,
			EMAIL email,
			AUTH_INFO authInfo,
			ENTER_DT enterDt,
			USE_YN useYn,
			USER_GRADE userGrade,
			CLNT_CD clntCd,
			PWD_DTTM pwdDttm,
			PASS_ERR_CNT passErrCnt,
  	        NVL((SELECT CODE_ETC FROM TB_CM05M01 WHERE CODE_ID = 'PASSYN'),'N') passYn ,  --암호규칙사용여부
		    <![CDATA[CASE WHEN (PWD_DTTM < ADD_MONTHS(SYSDATE, (-1 * NVL((SELECT CODE_ETC FROM TB_CM05M01 WHERE CODE_ID = 'PASSCHG'),9999)))) THEN 1 ELSE 0 END passChg,]]>  --암호변경주기(월)
		    NVL((SELECT CODE_ETC FROM TB_CM05M01 WHERE CODE_ID = 'PASSERRCNT'),10) passChkCnt --암호오류허용횟수
		FROM
			TB_CM06M01
		WHERE 
			ID = #{id}
	</select>

	<insert id="insertUserHistory">
		MERGE INTO TB_CM06H01 A
			USING DUAL
			ON (A.ID = #{id})
		WHEN MATCHED THEN
			UPDATE SET
				NAME = #{name},
				TOT_CNT = TOT_CNT + 1,
				LAST_DT = SYSDATE
		WHEN NOT MATCHED THEN
		INSERT
		(
			ID,
			NAME,
			TOT_CNT,
			LAST_DT
		)
		VALUES(
			#{id},
			#{name},
			1,
			SYSDATE
		)
	</insert>
	
	<select id="isLoginWithin24Hours" resultType="string">
		SELECT last_login_time 
		  FROM USER_LOGIN_LOG 
		 WHERE USERNAME = #{username}
		   AND USER_AGENT = #{userAgent}
		   AND IP_ADDRESS = #{ipAddress}
	</select>
	
	<update id="updateLastLoginTime">
		MERGE INTO USER_LOGIN_LOG A
			USING DUAL
			ON (
					USERNAME 	= #{username}
			   )
		WHEN MATCHED THEN
			UPDATE SET
					  	LAST_LOGIN_TIME	= SYSTIMESTAMP,
			            REFRESH_TOKEN = #{refreshToken, jdbcType=VARCHAR},
			            USER_AGENT = #{userAgent, jdbcType=VARCHAR},
			            IP_ADDRESS = #{ipAddress, jdbcType=VARCHAR}
		WHEN NOT MATCHED THEN
		INSERT
		(
				  USERNAME
				, LAST_LOGIN_TIME
				, REFRESH_TOKEN
				, USER_AGENT
				, IP_ADDRESS
		)
		VALUES(
				  #{username}
				, SYSTIMESTAMP
				, #{refreshToken, jdbcType=VARCHAR}
				, #{userAgent, jdbcType=VARCHAR}
				, #{ipAddress, jdbcType=VARCHAR}
		)
	</update>
	
	
	<select id="getRefreshToken" resultType="string">
		SELECT REFRESH_TOKEN  
		  FROM USER_LOGIN_LOG 
		 WHERE USERNAME = #{username}
	</select>
	
</mapper>