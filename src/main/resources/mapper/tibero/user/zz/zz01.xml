<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.zz.zz01.mapper.ZZ01Mapper">

	<select id="selectBomTreeList" parameterType="Map" resultType="CamelMap">
		SELECT
	         T.UPPER_KEY as PARENT,
	         T.LOWER_KEY ID, 
	         T.UPPER_CD,
	         T.LOWER_CD,
	         T.LOWER_CD || '(' || MATR_NM || ')' AS TEXT, 
	         (LEVEL-1)  LVL,
	         T.DSGN_NO,
	         'unit' AS TYPE,
	         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(T.LOWER_CD, ' -> '), '^\s+\-\>\s+', '') as PATH,
	         T.CO_CD,
	         T.SALES_CD,
	         T.MATR_NM,
	         T.LOWER_QTY,
	         T.MATR_UNIT,
	         T.MATR_YN,
	         T.UPPER_KEY,
	         T.LOWER_KEY,
	         T.FILE_TRGT_KEY
	     FROM TB_ZZ01M01 T
	     WHERE T.SALES_CD = #{salesCd}
	       AND T.CO_CD = #{coCd}	     
		     START WITH T.LOWER_KEY =  (SELECT LOWER_KEY 
							              FROM TB_ZZ01M01 T		     
									     WHERE T.UPPER_CD = '#'
									       AND T.CO_CD    = #{coCd}
										   AND T.LOWER_CD = #{salesCd}	)	
		     CONNECT BY PRIOR T.LOWER_KEY = T.UPPER_KEY
		     ORDER BY LOWER_CD  
	</select>
	
	<select id="selectBomlevelList" parameterType="Map" resultType="CamelMap">
			SELECT * 
			  FROM TB_ZZ01M01 T
			 WHERE T.SALES_CD = #{salesCd}
			   AND T.CO_CD    = #{coCd}	 
			   AND UPPER_KEY  = #{upperKey}
			 ORDER BY LOWER_CD  
	</select>
	
	<select id="selectBomSeqNext" parameterType="Map" resultType="int">
			SELECT TB_ZZ01M01_SQ01.NEXTVAL  FROM DUAL 
	</select>
	
    <insert id="insertBomTree" parameterType="Map">
        INSERT INTO TB_ZZ01M01
			(
			   CO_CD
			 , SALES_CD
			 , UPPER_KEY
			 , LOWER_KEY
			 , UPPER_CD
			 , LOWER_CD
			 , DSGN_NO
			 , BOM_SEQ
			 , PART_NO
			 , UNIT_NO
			 , REV_NO
			 , MATR_SEQ
			 , MATR_CD
			 , MATR_NM
			 , MATR_MAT
			 , MATR_MAKR_NM
			 , MATR_MNO
			 , MATR_SPEC
			 , MATR_RMK
			 , AVLB_STRT_DT
			 , AVLB_END_DT
			 , USE_YN
			 , MATR_YN
			 , ETC_FIELD1
			 , ETC_FIELD2
			 , ETC_FIELD3
			 , CREAT_ID
			 , CREAT_PGM
			 , CREAT_DTTM
			 , FILE_TRGT_KEY
			 , LOWER_QTY
			 , MATR_UNIT
			)
        VALUES
			(
			   #{coCd}
			 , #{salesCd}
			 , #{upperKey}
			 , #{fileTrgtKey}
			 , #{upperCd}
			 , #{lowerCd}
			 , #{dsgnNo}
			 , #{bomSeq, jdbcType=VARCHAR}
			 , #{partNo, jdbcType=VARCHAR}
			 , #{unitNo, jdbcType=VARCHAR}
			 , #{revNo, jdbcType=VARCHAR}
			 , #{matrSeq, jdbcType=VARCHAR}
			 , #{matrCd, jdbcType=VARCHAR}
			 , #{matrNm, jdbcType=VARCHAR}
			 , #{matrMat, jdbcType=VARCHAR}
			 , #{matrMakrNm, jdbcType=VARCHAR}
			 , #{matrMno, jdbcType=VARCHAR}
			 , #{matrSpec, jdbcType=VARCHAR}
			 , #{matrRmk, jdbcType=VARCHAR}
			 , #{avlbStrtDt, jdbcType=VARCHAR}
			 , #{avlbEndDt, jdbcType=VARCHAR}
			 , #{useYn, jdbcType=VARCHAR}
			 , #{matrYn, jdbcType=VARCHAR}
			 , #{etcField1, jdbcType=VARCHAR}
			 , #{etcField2, jdbcType=VARCHAR}
			 , #{etcField3, jdbcType=VARCHAR}
			 , #{userId}
			 , #{pgmId}
			 , SYSDATE
			 , #{fileTrgtKey}
			 , #{lowerQty}
			 , #{matrUnit}
			)
	</insert>

    <update id="updateBom" parameterType="Map">
        UPDATE TB_ZZ01M01
        SET   
				  DSGN_NO			= #{dsgnNo}
				, LOWER_CD			= #{lowerCd, jdbcType=VARCHAR}
				, BOM_SEQ			= #{bomSeq, jdbcType=VARCHAR}
				, PART_NO			= #{partNo, jdbcType=VARCHAR}
				, UNIT_NO			= #{unitNo, jdbcType=VARCHAR}
				, REV_NO			= #{revNo, jdbcType=VARCHAR}
				, MATR_SEQ			= #{matrSeq, jdbcType=VARCHAR}
				, MATR_CD			= #{matrCd, jdbcType=VARCHAR}
				, MATR_NM			= #{matrNm, jdbcType=VARCHAR}
				, MATR_MAT			= #{matrMat, jdbcType=VARCHAR}
				, MATR_MAKR_NM		= #{matrMakrNm, jdbcType=VARCHAR}
				, MATR_MNO			= #{matrMno, jdbcType=VARCHAR}
				, MATR_SPEC			= #{matrSpec, jdbcType=VARCHAR}
				, MATR_RMK			= #{matrRmk, jdbcType=VARCHAR}
				, AVLB_STRT_DT		= #{avlbStrtDt, jdbcType=VARCHAR}
				, AVLB_END_DT		= #{avlbEndDt, jdbcType=VARCHAR}
				, USE_YN			= #{useYn, jdbcType=VARCHAR}
				, MATR_YN			= #{matrYn, jdbcType=VARCHAR}
				, ETC_FIELD1		= #{etcField1, jdbcType=VARCHAR}
				, ETC_FIELD2		= #{etcField2, jdbcType=VARCHAR}
				, ETC_FIELD3		= #{etcField3, jdbcType=VARCHAR}
				, UDT_ID			= #{userId}
				, UDT_PGM			= #{pgmId}
				, UDT_DTTM			= SYSDATE
				, LOWER_QTY			= #{lowerQty}
				, MATR_UNIT			= #{matrUnit}
        WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>

	<delete id="deleteBom" parameterType="Map">
	  DELETE TB_ZZ01M01
	   WHERE FILE_TRGT_KEY IN (
				SELECT FILE_TRGT_KEY 
				  FROM TB_ZZ01M01 T
				 WHERE T.SALES_CD = #{salesCd}
				   AND T.CO_CD    = #{coCd}	 
				 START WITH T.LOWER_KEY =  #{fileTrgtKey}	
			     CONNECT BY PRIOR T.LOWER_KEY = T.UPPER_KEY
		     )
	</delete>

	
	<update id="moveBom">
		UPDATE
			TB_ZZ01M01
		SET
			UPPER_KEY  = #{upDeptId},
			UPPER_CD   = #{upperCd}
		WHERE
			FILE_TRGT_KEY = #{deptId}
	</update>
		
    <insert id="copyBomTree" parameterType="Map">
		INSERT INTO TB_ZZ01M01 
			(CO_CD, SALES_CD, UPPER_KEY, LOWER_KEY, UPPER_CD, LOWER_CD, DSGN_NO, 
			BOM_SEQ, PART_NO, UNIT_NO, REV_NO, MATR_SEQ, MATR_CD, MATR_NM, MATR_MAT, 
			MATR_MAKR_NM, MATR_MNO, MATR_SPEC, MATR_RMK, AVLB_STRT_DT, AVLB_END_DT, 
			USE_YN, MATR_YN, ETC_FIELD1, ETC_FIELD2, ETC_FIELD3, CREAT_ID, CREAT_PGM, 
			CREAT_DTTM, UDT_ID, UDT_PGM, UDT_DTTM, LOWER_QTY, MATR_UNIT, FILE_TRGT_KEY)
			SELECT  
			        CO_CD, SALES_CD, #{upperKey}, #{fileTrgtKey} LOWER_KEY, UPPER_CD, LOWER_CD, DSGN_NO, 
			        BOM_SEQ, PART_NO, UNIT_NO, REV_NO, MATR_SEQ, MATR_CD, MATR_NM, MATR_MAT,
			        MATR_MAKR_NM, MATR_MNO, MATR_SPEC, MATR_RMK, AVLB_STRT_DT, AVLB_END_DT, 
			        USE_YN, MATR_YN, ETC_FIELD1, ETC_FIELD2, ETC_FIELD3, CREAT_ID, CREAT_PGM, 
			        CREAT_DTTM, UDT_ID, UDT_PGM, UDT_DTTM, LOWER_QTY, MATR_UNIT, #{fileTrgtKey}
			FROM TB_ZZ01M01
			WHERE
				FILE_TRGT_KEY = #{lowerKey}
	</insert>	
	
	<select id="selectBomInfo" parameterType="Map" resultType="CamelMap">
			SELECT * 
			  FROM TB_ZZ01M01 T
			 WHERE  T.FILE_TRGT_KEY	= #{fileTrgtKey}	 
	</select>	
	
	<select id="selectBomAllLevelList" parameterType="Map" resultType="CamelMap">
			SELECT 	CASE WHEN T.LOWER_KEY = #{fileTrgtKey} THEN '' ELSE T.UPPER_KEY END PID,  
					T.LOWER_KEY ID ,
					(LEVEL-1)  LVL,
					REGEXP_REPLACE(SYS_CONNECT_BY_PATH(T.LOWER_CD, ' -> '), '^\s+\-\>\s+', '') as PATH,
					T.* 
			  FROM TB_ZZ01M01 T
			 WHERE T.SALES_CD = #{salesCd}
			   AND T.CO_CD    = #{coCd}	 
			 START WITH T.LOWER_KEY =  #{fileTrgtKey}	
		     CONNECT BY PRIOR T.LOWER_KEY = T.UPPER_KEY
		     ORDER BY PATH
	</select>	
</mapper>