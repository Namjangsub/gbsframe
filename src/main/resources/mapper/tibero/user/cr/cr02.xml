<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.cr.cr02.mapper.CR02Mapper">
    <select id="selectOrdrsCount" resultType="int">
        SELECT COUNT(*)
        FROM TB_CR02M01 A
        WHERE 1 = 1
    </select>
    <select id="selectOrdrsList" resultType="CamelMap">
       SELECT A.*
		FROM   (
				SELECT A.*
					, ROWNUM AS RN
				FROM	(
						SELECT DISTINCT A.FILE_TRGT_KEY
							, T.PID
							, T.ID
							, T.CO_CD
							, T.CO_NM
							, T.ORDRS_NO
							, T.EST_NO
							, T.CLNT_PJT
							, T.CTRT_NM
							, T.ORDRS_AMT
							, T.IO_DT
							, T.IO_SEQ
							, CASE WHEN T.IO_SEQ IS NULL OR T.IO_SEQ = '' THEN A.FILE_TRGT_KEY
																		ELSE A.FILE_TRGT_KEY||'-'||T.IO_SEQ
							END AS TREE_ID
							, T.ORDRS_DIV
							, T.SALES_CD
							, T.CLNT_CD       --고객사
							, T.CLNT_NM       --고객사명
							, T.CLNT_PJT      --고객사PJT
							, T.PRDT_CD       --제품구분
							, T.PRDT_NM       --제품구분명
							, T.ITEM_DIV      --아이템구분
							, T.ITEM_DIV_NM   --아이템구분명
							, T.EQP_NM        --설비명
							, T.ORDRS_DTL_DIV10 
							, T.ORDRS_DTL_DIV10_NM
							, T.ORDRS_DTL_DIV20
							, T.ORDRS_DTL_DIV20_NM
							, T.ORDRS_DTL_DIV30 
							, T.ORDRS_DTL_DIV30_NM
							, T.ORDRS_PRC_MACH
							, T.ORDRS_PRC_ELCTY
							, T.ORDRS_PRC
							, T.ORDRS_QTY
							, T.EST_EPCT_MAT_PRC
							, T.TRGT_PCHS_PCOST_MACH
							, T.TRGT_PCHS_PCOST_ELCTY
							, T.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN
							, T.LABOR_COST_MFG_COST
							, T.CREAT_PGM
							, T.CREAT_ID
							, T.CREAT_ID_NM
							, T.CREAT_DTTM
							, T.UDT_PGM
							, T.UDT_ID
							, T.UDT_ID_NM
							, T.UDT_DTTM
							, T.LVL
						FROM   (
									SELECT DISTINCT SM.FILE_TRGT_KEY  
									    , SM.CO_CD    --회사
										, SM.ORDRS_NO          --수주번호
										, TO_CHAR(SM.ORDRS_CLNT_CD) AS CLNT_CD --고객사
										, C.CLNT_NM                 AS CLNT_NM --고객사명
										, SM.CLNT_PJT          --고객사PJT
										, SD.PRDT_CD           --제품구분
										, P.PRDT_NM
										, SD.ITEM_DIV          --아이템구분
										, SD.SALES_CD          --SalesCode
										, SD.EQP_NM            --설비명
									FROM   TB_CR02M01 AS SM
										LEFT OUTER JOIN TB_CR02D02 AS SD  ON SD.CO_CD    = SM.CO_CD
																			AND SD.ORDRS_NO = SM.ORDRS_NO
										LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = SM.ORDRS_CLNT_CD
										LEFT OUTER JOIN TB_BM01M01 AS P ON P.PRDT_CD = SD.PRDT_CD
										WHERE  1 = 1		
										
								
							) AS A
							LEFT OUTER JOIN (
												SELECT DISTINCT T.PID
													, T.ID
													, T.FILE_TRGT_KEY
													, T.CO_CD
													, T.EST_NO
													, R.CODE_NM AS CO_NM
													, T.ORDRS_NO
													, T.IO_SEQ
													, T.ORDRS_DIV
													, T.CTRT_NM
													, T.ORDRS_AMT
													, O.SALES_CD
													, O.CLNT_CD       --고객사
													, O.CLNT_NM       --고객사명
													, O.CLNT_PJT      --고객사PJT
													, O.PRDT_CD       --제품구분
													, O.PRDT_NM       --제품구분명
													, O.ITEM_DIV      --아이템구분
													, O.ITEM_DIV_NM   --아이템구분명
													, O.EQP_NM        --설비명
													, O.ORDRS_DTL_DIV10 
													, O.ORDRS_DTL_DIV10_NM
													, O.ORDRS_DTL_DIV20
													, O.ORDRS_DTL_DIV20_NM
													, O.ORDRS_DTL_DIV30 
													, O.ORDRS_DTL_DIV30_NM
													, O.ORDRS_PRC_MACH
													, O.ORDRS_PRC_ELCTY
													, O.ORDRS_PRC
													, O.ORDRS_QTY
													, O.EST_EPCT_MAT_PRC
													, O.TRGT_PCHS_PCOST_MACH
													, O.TRGT_PCHS_PCOST_ELCTY
													, O.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN
													, O.LABOR_COST_MFG_COST
													, T.IO_DT
													, T.CREAT_PGM
													, T.CREAT_ID
													, U1.NAME AS CREAT_ID_NM
													, T.CREAT_DTTM
													, T.UDT_PGM
													, T.UDT_ID
													, U2.NAME AS UDT_ID_NM
													, T.UDT_DTTM
													, T.LVL
												FROM  (
													SELECT ''               AS PID
															, M.CO_CD||'_'||M.ORDRS_NO AS ID
															, M.FILE_TRGT_KEY
															, M.EST_NO
															, '' AS SALES_CD
															, M.CO_CD
															, M.ORDRS_NO
															, TO_CHAR(M.ORDRS_DT, 'YYYY-MM-DD') AS IO_DT
															, '' AS IO_SEQ
															, M.ORDRS_DIV
															, M.CTRT_NM
															, M.ORDRS_AMT
															
															, M.CREAT_PGM
															, M.CREAT_ID
															, TO_CHAR(M.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM
															, M.UDT_PGM
															, M.UDT_ID
															, TO_CHAR(M.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM
															, '1' AS LVL
													FROM   TB_CR02M01 AS M
													UNION ALL
													SELECT D.CO_CD||'_'||D.ORDRS_NO                AS PID
															, D.CO_CD||'_'||D.ORDRS_NO||'_'||D.ORDRS_SEQ AS ID
															, M.FILE_TRGT_KEY AS FILE_TRGT_KEY
															, '' AS EST_NO
															, D.SALES_CD
															, D.CO_CD
															, D.ORDRS_NO
															, TO_CHAR(M.ORDRS_DT, 'YYYY-MM-DD') AS IO_DT
															, TO_CHAR(D.ORDRS_SEQ) AS IO_SEQ
															, '' AS IRDR_DIV
															, '' AS CTRT_NM
															, '' AS ORDRS_AMT 

															
															, D.CREAT_PGM
															, D.CREAT_ID
															, TO_CHAR(D.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM
															, D.UDT_PGM
															, D.UDT_ID
															, TO_CHAR(D.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM
															, '2' AS LVL
													FROM   TB_CR02D02 AS D
															LEFT OUTER JOIN TB_CR02M01 AS M  ON M.CO_CD = D.CO_CD
																							AND M.ORDRS_NO = D.ORDRS_NO
													WHERE  1 = 1
													
													) AS T
													LEFT OUTER JOIN (
																	SELECT DISTINCT SM.FILE_TRGT_KEY 
																	        , SM.CO_CD    --회사
																			, SM.ORDRS_NO          --수주번호
																			, TO_CHAR(SM.ORDRS_CLNT_CD) AS CLNT_CD --고객사
																			, C.CLNT_NM                 AS CLNT_NM --고객사명
																			, SM.CLNT_PJT          --고객사PJT
																			, SD.PRDT_CD           --제품구분
																			, P.PRDT_NM
																			, SD.ITEM_DIV          --아이템구분
																			, SD.ORDRS_DTL_DIV10 
																			, FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV10) AS ORDRS_DTL_DIV10_NM
																			, SD.ORDRS_DTL_DIV20
																			, FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM
																			, SD.ORDRS_DTL_DIV30 
																			, FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV30) AS ORDRS_DTL_DIV30_NM
																			, SD.ORDRS_PRC_MACH
																			, SD.ORDRS_PRC_ELCTY
																			, SD.ORDRS_PRC
																			, SD.ORDRS_QTY
																			, SD.EST_EPCT_MAT_PRC
																			, SD.TRGT_PCHS_PCOST_MACH
																			, SD.TRGT_PCHS_PCOST_ELCTY
																			, SD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN
																			, SD.LABOR_COST_MFG_COST
																			, R.CODE_NM AS ITEM_DIV_NM
																			, SD.SALES_CD          --SalesCode
																			, SD.EQP_NM            --설비명
																		FROM   TB_CR02M01 AS SM --수주마스터
																			--수주상세 조인
																			LEFT OUTER JOIN TB_CR02D02 AS SD  ON SD.CO_CD    = SM.CO_CD
																										     AND SD.ORDRS_NO = SM.ORDRS_NO
																			--거래처 조인
																			LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = SM.ORDRS_CLNT_CD
																			--제품구분
																			LEFT OUTER JOIN TB_BM01M01 AS P ON P.PRDT_CD = SD.PRDT_CD
																			--아이템구분
																			LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = SD.ITEM_DIV
																	
																	) AS O  ON O.CO_CD    = T.CO_CD
																		   AND O.SALES_CD = T.SALES_CD
																	       AND O.ORDRS_NO = T.ORDRS_NO
													--회사
													LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = T.CO_CD
													--생성자
													LEFT OUTER JOIN TB_CM06M01 AS U1 ON U1.ID = T.CREAT_ID
													--변경자
													LEFT OUTER JOIN TB_CM06M01 AS U2 ON U2.ID = T.UDT_ID
											) AS T ON A.FILE_TRGT_KEY = T.FILE_TRGT_KEY
											
						WHERE  1 = 1
						ORDER BY A.FILE_TRGT_KEY, T.PID DESC, T.ID
						) AS A
				WHERE  1 = 1
		       ) AS A
		WHERE  1 = 1

        <if test="strtDt != null and !strtDt.equals('')">
            AND A.IO_DT BETWEEN TO_DATE(#{strtDt}, 'YYYYMMDD') AND TO_DATE(#{endDt}, 'YYYYMMDD')
        </if>
        <if test="coCd != null and !coCd.equals('')">
            AND A.CO_CD = #{coCd}
        </if>
        <if test="clntCd != null and !clntCd.equals('')">
            AND A.CLNT_CD = #{clntCd}
        </if>
        <if test="ctrtNm != null and !ctrtNm.equals('')">
            AND UPPER(A.CTRT_NM) LIKE '%' || UPPER(#{ctrtNm}) || '%'
        </if>
        <if test="ordrsDiv != null and !ordrsDiv.equals('')">
            AND UPPER(A.ORDRS_DIV) LIKE '%' || UPPER(#{ordrsDiv}) || '%'
        </if>
        <if test="searchType != null and searchType.equals('ORDRS_NO')">
            AND A.ORDRS_NO LIKE '%' || #{searchValue} || '%'
        </if>
        <if test="ordrsNo != null and !ordrsNo.equals('')">

            AND A.ORDRS_NO LIKE '%'|| #{ordrsNo} ||'%'

        </if>
        <if test="clntPjt != null and !clntPjt.equals('')">
            AND UPPER(A.CLNT_PJT) LIKE '%' || UPPER(#{clntPjt}) || '%'
        </if>
        <if test="clntNm != null and !clntNm.equals('')">
            AND UPPER(A.CLNT_NM) LIKE '%' || UPPER(#{clntNm}) || '%'
        </if>
		--AND    A.RN BETWEEN ${firstIndex} AND ${lastIndex}

    </select>
    <select id="selectOrdrsListPop" resultType="CamelMap">
       SELECT C.* 
         FROM (
		        SELECT
		            TO_CHAR(T.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT,
		            TO_CHAR(T.FWD_EXCH_JOIN_DT, 'YYYY-MM-DD') AS FWD_EXCH_JOIN_DT,
		            FN_CM05M01_CD_TO_NM(T.CURR_CD) AS CURR_NM,
		            FN_CM05M01_CD_TO_NM(T.PMNT_MTD) AS PMNT_MTD_NM,
		            FN_CM05M01_CD_TO_NM(T.CO_CD) AS CO_NM,
		            ROWNUM AS RNUM,
		            T.*
		        FROM (
		        SELECT * FROM TB_CR02M01 A
		        LEFT JOIN TB_BM02M01 B ON A.ORDRS_CLNT_CD = B.CLNT_CD  
		        ) T
		        WHERE 1=1
		
		        <if test="strtDt != null and !strtDt.equals('')">
		            AND T.ORDRS_DT BETWEEN #{strtDt} AND #{endDt}
		        </if>
		        <if test="coCd != null and !coCd.equals('')">
		            AND T.CO_CD = #{coCd}
		        </if>
		        <if test="clntCd != null and !clntCd.equals('')">
		            AND T.ORDRS_CLNT_CD = #{clntCd}
		        </if>
		        <if test="ctrtNm != null and !ctrtNm.equals('')">
		            AND UPPER(T.CTRT_NM) LIKE '%' || UPPER(#{ctrtNm}) || '%'
		        </if>
		        <if test="ordrsDiv != null and !ordrsDiv.equals('')">
		            AND UPPER(T.ORDRS_DIV) LIKE '%' || UPPER(#{ordrsDiv}) || '%'
		        </if>
		        <if test="searchType != null and searchType.equals('ORDRS_NO')">
		            AND T.ORDRS_NO LIKE '%' || #{searchValue} || '%'
		        </if>
		        <if test="ordrsNo != null and !ordrsNo.equals('')">
		
		            AND T.ORDRS_NO LIKE '%'|| #{ordrsNo} ||'%'
		
		        </if>
		        <if test="clntPjt != null and !clntPjt.equals('')">
		            AND UPPER(T.CLNT_PJT) LIKE '%' || UPPER(#{clntPjt}) || '%'
		        </if>
		        <if test="clntNm != null and !clntNm.equals('')">
		            AND UPPER(T.CLNT_NM) LIKE '%' || UPPER(#{clntNm}) || '%'
		        </if>
        ) AS C
		WHERE RNUM BETWEEN ${firstIndex} AND ${lastIndex}

    </select>
    <resultMap id="resultInfoMap" type="CamelMap">
        <collection select="selectPmntPlan" property="plans" column="{coCd=CO_CD, ordrsNo=ORDRS_NO}" ofType="CamelMap"/>
        <collection select="selectOrdrsDetails" property="details" column="{coCd=CO_CD, ordrsNo=ORDRS_NO}"
                    ofType="CamelMap"/>
    </resultMap>
    <select id="selectOrdrsInfo" parameterType="map" resultMap="resultInfoMap">
        SELECT TO_CHAR(T.ORDRS_DT, 'YYYY-MM-DD')         AS ORDRS_DT,
               TO_CHAR(T.FWD_EXCH_JOIN_DT, 'YYYY-MM-DD') AS FWD_EXCH_JOIN_DT,
               T.*
        FROM (SELECT *
              FROM TB_CR02M01
              WHERE CO_CD = #{coCd}
                AND FILE_TRGT_KEY = #{fileTrgtKey}) T
    </select>

    <select id="selectOrdrsDetails" parameterType="map" resultType="CamelMap">
        SELECT CO_CD
             , ORDRS_NO
             , ORDRS_SEQ
             , ORDRS_DTL_DIV10
             , PRDT_CD
             , ITEM_DIV
             , ORDRS_DTL_DIV20
             , ORDRS_DTL_DIV30
             , SALES_CD
             , EQP_NM
             , DUDT_INTEND_DT
             , ORDRS_PRC_MACH
             , ORDRS_PRC_ELCTY
             , ORDRS_PRC
             , ORDRS_QTY
             , EST_EPCT_MAT_PRC
             , TRGT_PCHS_PCOST_MACH
             , TRGT_PCHS_PCOST_ELCTY
             , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN
             , LABOR_COST_MFG_COST
             , DTL_RMK
             , CREAT_ID
             , CREAT_PGM
             , TO_CHAR(CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM
             , 'U' AS DATA_CHK
        FROM TB_CR02D02
        WHERE CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
    </select>

    <select id="selectPmntPlan" parameterType="map" resultType="CamelMap">
        SELECT TO_CHAR(T.CLMN_DT, 'YYYY-MM-DD')      AS CLMN_DT,
               TO_CHAR(T.BILL_PBLS_DT, 'YYYY-MM-DD') AS BILL_PBLS_DT,
               T.*
        FROM (SELECT *
              FROM TB_CR02D01
              WHERE CO_CD = #{coCd}
                AND ORDRS_NO = #{ordrsNo}) T
    </select>
    <select id="selectMaxOrdrsNo" resultType="java.lang.String">
        SELECT CONCAT(SUBSTR(TO_CHAR(CURRENT_DATE, 'YY'), 1, 2),
                      LPAD(NVL(MAX(SUBSTR(ordrs_no, 3, 3)), 0) + 1, 3, '0')) as maxOrdrsNo
        FROM TB_CR02M01
        WHERE CO_CD = #{coCd}
          AND SUBSTR(ordrs_no, 1, 2) = SUBSTR(TO_CHAR(CURRENT_DATE, 'YY'), 1, 2)
    </select>
    <select id="selectAsMaxOrdrsNo" resultType="java.lang.String">
        SELECT CONCAT(SUBSTR(TO_CHAR(CURRENT_DATE, 'YY'), 1, 2),
                      LPAD(NVL(MAX(SUBSTR(ordrs_no, 3, 3)), 0) + 1, 3, '0')) as maxOrdrsNo
        FROM TB_CR02M01
        WHERE CO_CD = #{coCd}
          AND SUBSTR(ordrs_no, 1, 2) = SUBSTR(TO_CHAR(CURRENT_DATE, 'YY'), 1, 2)
          AND ORDRS_NO LIKE 'AS%'
    </select>
    <select id="selectItemDivEtc" resultType="java.lang.String">
        SELECT CODE_ETC
          FROM TB_CM05M01
        WHERE CODE_ID = #{itemDiv}
    </select>
    
    <insert id="insertOrdrs" parameterType="map">
        INSERT INTO TB_CR02M01
        <selectKey keyProperty="fileTrgtKey" resultType="String" order="BEFORE">
            SELECT
            TO_CHAR(NVL(MAX(TO_NUMBER(FILE_TRGT_KEY)), 0) + 1)
            FROM TB_CR02M01
        </selectKey>
                (
                    CO_CD,
                    ORDRS_NO,
                    EST_NO,
                    EST_DEG,
                    ORDRS_CLNT_CD,
                    ORDRS_DT,
                    ORDRS_DIV,
                    CLNT_PJT,
                    CTRT_NM,
                    CURR_CD,
                    ORDRS_AMT,
                    FWD_EXCH_JOIN_DT,
                    FWD_EXCH_CHK_LIST,
                    ORDRGER,
                    EXRATE,
                    MNG_ID,
                    CTRT_DOC,
                    PMNT_MTD,
                    ORDRS_RMK,
                    ORGN_SALES_CD,
                    FILE_TRGT_KEY,
                    CREAT_ID,
                    CREAT_PGM,
                    CREAT_DTTM
                )
        VALUES (
                    #{coCd},
                    #{ordrsNo},
                    #{estNo},
                    #{estDeg},
                    #{ordrsClntCd},
                    #{ordrsDt},
                    #{ordrsDiv},
                    #{clntPjt},
                    #{ctrtNm},
                    #{currCd},
                    #{ordrsAmt},
                    #{fwdExchJoinDt},
                    #{fwdExchChkList},
                    #{ordrger},
                    #{exrate},
                    #{mngId},
                    #{ctrtDoc},
                    #{pmntMtd},
                    #{ordrsRmk},
                    #{orgnSalesCd},
                    #{fileTrgtKey},
                    #{userId},
			 		#{pgmId},
			 		SYSDATE
                )
    </insert>
    <update id="updateOrdrs" parameterType="map">
        UPDATE TB_CR02M01
        
        SET EST_NO            = #{estNo},
            ORDRS_DT          = #{ordrsDt},
            ORDRS_DIV         = #{ordrsDiv},
            CLNT_PJT          = #{clntPjt},
            CTRT_NM           = #{ctrtNm},
            CURR_CD           = #{currCd},
            ORDRS_AMT         = #{ordrsAmt},
            FWD_EXCH_JOIN_DT  = #{fwdExchJoinDt},
            FWD_EXCH_CHK_LIST = #{fwdExchChkList},
            ORDRGER           = #{ordrger},
            EXRATE            = #{exrate},
            MNG_ID            = #{mngId},
            CTRT_DOC          = #{ctrtDoc},
            PMNT_MTD          = #{pmntMtd},
            ORDRS_RMK         = #{ordrsRmk},
            ORGN_SALES_CD     = #{orgnSalesCd}
            WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>
    <insert id="insertClmnPlan" parameterType="map">
        INSERT INTO TB_CR02D01
            (
             CO_CD, 
             ORDRS_NO, 
             CLMN_PLAN_SEQ, 
             CLMN_PLAN_DIV, 
             CLMN_DIV_SEQ, 
             CLMN_RATE, 
             CLMN_AMT,
             BILL_PBLS_DT, 
             CLMN_DT, 
             PMNT_DT_AFTER_BILL,
              CURR_CD, 
              CLMN_MGMT_STATUS,
              CREAT_ID,
              CREAT_PGM,
              CREAT_DTTM
             )
        VALUES
            (
             #{coCd}, 
             #{ordrsNo , jdbcType=VARCHAR}, 
             #{clmnPlanSeq},
             #{clmnPlanDiv, jdbcType=VARCHAR}, 
             #{clmnDivSeq}, 
             #{clmnRate},
             #{clmnAmt}, 
             #{billPblsDt}, 
             #{clmnDt},
             #{pmntDtAfterBill}, 
             #{currCd, jdbcType=VARCHAR}, 
             #{clmnMgmtStatus},
             #{userId},
			 #{pgmId},
			 SYSDATE
             )
    </insert>
    
    <update id="updateEstDeleteConfirm" parameterType="map">
        UPDATE TB_CR01M01
        SET ORDRS_YN = 'N',
            ORDRS_DT = ''

        WHERE CO_CD = #{coCd}
          AND EST_NO = #{estNo}
    </update>
    
    <update id="updateClmnPlan" parameterType="map">
        UPDATE TB_CR02D01
        SET CLMN_PLAN_DIV      = #{clmnPlanDiv}, -- 수금구분
            CLMN_DIV_SEQ       = #{clmnDivSeq},  -- 수금계획순번
            CLMN_RATE          = #{clmnRate},    -- 수금비율
            CLMN_AMT           = #{clmnAmt},     -- 수금금액
            BILL_PBLS_DT       = #{billPblsDt},  -- 계산서발행일자
            CLMN_DT            = #{clmnDt},      -- 수금일자
            PMNT_DT_AFTER_BILL = #{pmntDtAfterBill}, -- 계산서 발행 후 지급시기
            CURR_CD            = #{currCd},      -- 환율
            CLMN_MGMT_STATUS   = #{clmnMgmtStatus} -- 수금관리상황
        WHERE CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
          AND CLMN_PLAN_SEQ = #{clmnPlanSeq}
    </update>
    
    <insert id="insertClmnPlanHis" parameterType="map">
        INSERT INTO TB_CR02D01HIST
        (
            CO_CD, 
            ORDRS_NO, 
            CLMN_PLAN_DEG, 
            CLMN_PLAN_SEQ, 
            CLMN_PLAN_DIV, 
            CLMN_DIV_SEQ, 
            CLMN_RATE, 
            CLMN_AMT,
            BILL_PBLS_DT, 
            CLMN_DT, 
            PMNT_DT_AFTER_BILL, 
            CURR_CD, 
            CLMN_MGMT_STATUS
         )
        VALUES (
                   #{coCd}, 
                   #{ordrsNo, jdbcType=VARCHAR}, 
                   1, 
                   #{clmnPlanSeq},
                   #{clmnPlanDiv, jdbcType=VARCHAR}, 
                   #{clmnDivSeq}, 
                   #{clmnRate},
                   #{clmnAmt}, 
                   #{billPblsDt}, 
                   #{clmnDt},
                   #{pmntDtAfterBill}, 
                   #{currCd, jdbcType=VARCHAR}, 
                   #{clmnMgmtStatus, jdbcType=VARCHAR}
                )
    </insert>
    
    
    <select id="selectDegKey" resultType="int" parameterType="map">
            SELECT
            NVL(MAX(TO_NUMBER(CLMN_PLAN_DEG)), 0) + 1
            FROM TB_CR02D01HIST
            WHERE ORDRS_NO = #{ordrsNo}
    </select>
        
        
    <insert id="insertUpdatePlanHis" parameterType="map">
        INSERT INTO TB_CR02D01HIST
        (
            CO_CD, 
            ORDRS_NO, 
            CLMN_PLAN_DEG, 
            CLMN_PLAN_SEQ, 
            CLMN_PLAN_DIV, 
            CLMN_DIV_SEQ, 
            CLMN_RATE, 
            CLMN_AMT,
            BILL_PBLS_DT, 
            CLMN_DT, 
            PMNT_DT_AFTER_BILL, 
            CURR_CD, 
            CLMN_MGMT_STATUS
         )
        VALUES (
                   #{coCd}, 
                   #{ordrsNo, jdbcType=VARCHAR}, 
                   #{clmnPlanDegKey}, 
                   #{clmnPlanSeq},
                   #{clmnPlanDiv, jdbcType=VARCHAR}, 
                   #{clmnDivSeq}, 
                   #{clmnRate},
                   #{clmnAmt}, 
                   #{billPblsDt}, 
                   #{clmnDt},
                   #{pmntDtAfterBill}, 
                   #{currCd, jdbcType=VARCHAR}, 
                   #{clmnMgmtStatus, jdbcType=VARCHAR}
                )
    </insert>
    <insert id="insertOrdrsDetail" parameterType="map">
        INSERT INTO TB_CR02D02
        (
                -- 1. 회사 코드
                CO_CD,
                -- 2. 주문 번호
                ORDRS_NO,
                -- 3. 주문 시퀀스
                ORDRS_SEQ,
                -- 4. 주문 세부 정보 Div10
                ORDRS_DTL_DIV10,
                -- 5. 제품 코드
                PRDT_CD,
                -- 6. 항목 분류
                ITEM_DIV,
                -- 7. 판매 코드
                SALES_CD,
                -- 8. 장비 이름
                EQP_NM,
                -- 9. 주문 가격 기계
                ORDRS_PRC_MACH,
                -- 10. 주문 가격 전기
                ORDRS_PRC_ELCTY,
                -- 11. 주문 가격
                ORDRS_PRC,
                -- 12. 주문 수량
                ORDRS_QTY,
                -- 13. 예상 원자재 가격
                EST_EPCT_MAT_PRC,
                -- 14. 목표 구매 가격 기계
                TRGT_PCHS_PCOST_MACH,
                -- 15. 목표 구매 가격 전기
                TRGT_PCHS_PCOST_ELCTY,
                -- 16. 목표 구매 가격 내부 처리
                TRGT_PCHS_PCOST_IN_HOUSE_PRCSN,
                -- 17. 노동비 제조비
                LABOR_COST_MFG_COST,
                -- 19. 주문 세부 정보 Div20
                ORDRS_DTL_DIV20,
                -- 20. 주문 세부 정보 Div30
                ORDRS_DTL_DIV30,
                CREAT_ID,
                CREAT_PGM,
                CREAT_DTTM
            )
        VALUES (
                   -- 1. 회사 코드
                   #{coCd, jdbcType=VARCHAR},
                   -- 2. 주문 번호
                   #{ordrsNo, jdbcType=VARCHAR},
                   -- 3. 주문 시퀀스
                   #{ordrsSeq},
                   -- 4. 주문 세부 정보 Div10
                   #{ordrsDtlDiv10, jdbcType=VARCHAR},
                   -- 5. 제품 코드
                   #{prdtCd, jdbcType=VARCHAR},
                   -- 6. 항목 분류
                   #{itemDiv, jdbcType=VARCHAR},
                   -- 7. 판매 코드
                   #{salesCd, jdbcType=VARCHAR},
                   -- 8. 장비 이름
                   #{eqpNm, jdbcType=VARCHAR},
                   -- 9. 주문 가격 기계
                   #{ordrsPrcMach},
                   -- 10. 주문 가격 전기
                   #{ordrsPrcElcty},
                   -- 11. 주문 가격
                   #{ordrsPrc},
                   -- 12. 주문 수량
                   #{ordrsQty},
                   -- 13. 예상 원자재 가격
                   #{estEpctMatPrc},
                   -- 14. 목표 구매 가격 기계
                   #{trgtPchsPcostMach},
                   -- 15. 목표 구매 가격 전기
                   #{trgtPchsPcostElcty},
                   -- 16. 목표 구매 가격 내부 처리
                   #{trgtPchsPcostInHousePrcsn},
                   -- 17. 노동비 제조비
                   #{laborCostMfgCost},
                   -- 19. 주문 세부 정보 Div20
                   #{ordrsDtlDiv20, jdbcType=VARCHAR},
                   -- 20. 주문 세부 정보 Div30
                   #{ordrsDtlDiv30, jdbcType=VARCHAR},
                   #{userId, jdbcType=VARCHAR},
			       #{pgmId, jdbcType=VARCHAR},
			       SYSDATE
               )
    </insert>
    <update id="updateOrdrsDetail" parameterType="map">
        UPDATE TB_CR02D02
        SET ORDRS_DTL_DIV20                = #{ordrsDtlDiv20, jdbcType=VARCHAR},  -- 작업구분
            ORDRS_DTL_DIV30				   = #{ordrsDtlDiv30, jdbcType=VARCHAR},  -- 자체구분
            EQP_NM						   = #{eqpNm, jdbcType=VARCHAR},          -- 설비명
            ORDRS_PRC_MACH				   = #{ordrsPrcMach},   -- 기계Part
            ORDRS_PRC_ELCTY				   = #{ordrsPrcElcty},  -- 전기Part
            ORDRS_PRC					   = #{ordrsPrc},       -- 수주가 합계
            ORDRS_QTY					   = #{ordrsQty},	    -- 수주수량
            EST_EPCT_MAT_PRC			   = #{estEpctMatPrc},  -- 견적예상재료비
            TRGT_PCHS_PCOST_MACH		   = #{trgtPchsPcostMach}, -- 목표구매원가 기계
            TRGT_PCHS_PCOST_ELCTY		   = #{trgtPchsPcostElcty}, --목표구매원가 전기
            TRGT_PCHS_PCOST_IN_HOUSE_PRCSN = #{trgtPchsPcostInHousePrcsn}, --목표원가 기계자체가공
            LABOR_COST_MFG_COST			   = #{laborCostMfgCost}   -- 노무비 및 제조경비

        WHERE CO_CD = #{coCd}
          AND ORDRS_NO =  #{ordrsNo}
          AND ORDRS_SEQ = #{ordrsSeq}
    </update>
    <delete id="deleteOrdrs">
        DELETE
        FROM TB_CR02M01
        WHERE 1 = 1
          AND CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
    </delete>
    <delete id="deleteOrdrsPlan">
        DELETE
        FROM TB_CR02D01
        WHERE 1 = 1
          AND CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
    </delete>
    
    <delete id="deleteOrdrsPlanHis">
        DELETE
        FROM TB_CR02D01HIST
        WHERE 1 = 1
          AND CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
    </delete>
    <delete id="deleteOrdrsDetail">
        DELETE
        FROM TB_CR02D02
        WHERE 1 = 1
          AND CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
          <if test="ordrsSeq != null and !ordrsSeq.equals('')">
          AND ORDRS_SEQ = #{ordrsSeq}
          </if>
    </delete>
    <select id="selectOrdrsPlanHisCount" resultType="int">
        SELECT COUNT(*)
        FROM TB_CR02D01HIST A
        WHERE 1 = 1
    </select>
    <select id="selectOrdrsPlanHis" parameterType="map" resultType="camelMap">
        SELECT CO_CD, ORDRS_NO, CLMN_PLAN_SEQ, CLMN_PLAN_DEG, CLMN_PLAN_DIV, CLMN_DIV_SEQ,
               CLMN_RATE, CLMN_AMT, BILL_PBLS_DT, TO_CHAR(CLMN_DT, 'YYYY-MM-DD') AS CLMN_DT, PMNT_DT_AFTER_BILL, CURR_CD,
               CLMN_PLAN_RMK, CREAT_DTTM, TO_CHAR(UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM
        FROM TB_CR02D01HIST
        WHERE CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}


    </select>


       <select id="selectWbsLeftSalesCodeTreeList" parameterType="Map" resultType="camelMap">          
               		 
                SELECT DISTINCT  
                	   '' PID,
                	   #{coCd} ID,
                	   #{coCd} CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(#{coCd}) AS CO_CD_NM,
                       '전체' ORDRS_NO,
                       '전사 현황' AS SALES_CD,
                       '' ORGN_SALES_CD,
                       '' ORDRS_CLNT_CD, -- 고객사
                       '전체' AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV10, -- 입력구분
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '' ORDRS_DTL_DIV30, -- 자체구분
                       '' EQP_NM, -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM DUAL

              UNION ALL  --회사명을 Top LEVEL 생성
                SELECT DISTINCT  
                	   X.CO_CD PID,
                	   TO_CHAR(Y.ORDRS_CLNT_CD) ID,
                	   X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       A.CLNT_NM,
                       A.CLNT_NM  AS SALES_CD,
                       '' ORGN_SALES_CD,
                       Y.ORDRS_CLNT_CD , -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV10, -- 입력구분
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '' ORDRS_DTL_DIV30, -- 자체구분
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD like '%${salesCd}%'                
               </if>
				 
               UNION ALL --오더번호로 1 LEVEL 생성
                SELECT DISTINCT  
                	   TO_CHAR(Y.ORDRS_CLNT_CD) PID,
                	   X.ORDRS_NO ID,
                	   X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO AS ORDRS_NO,
                       X.ORDRS_NO AS SALES_CD,
                       '',
                       Y.ORDRS_CLNT_CD, -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '',
                       '',
                       '',
                       '',
                       '',
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
				 WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD like '%${salesCd}%'                
               </if>

               UNION ALL
                SELECT   --Sales 코드 추출
                	   X.ORDRS_NO PID,
                	   X.SALES_CD ID,
                	   X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO, -- 수주번호
                       X.SALES_CD, -- SALES CODE
                       max(Y.ORGN_SALES_CD), -- 원천 SALES CODE
                       max(Y.ORDRS_CLNT_CD), -- 고객사
                       max(A.CLNT_NM)  AS ORDRS_CLNT_NM,
                       max(Y.CLNT_PJT), -- 고객사 PJT
                       max(X.ORDRS_DTL_DIV10), -- 입력구분
                       max(X.ORDRS_DTL_DIV20), -- 신작구분
                       FN_CM05M01_CD_TO_NM(max(X.ORDRS_DTL_DIV20)) AS ORDRS_DTL_DIV20_NM,
                       max(X.ORDRS_DTL_DIV30), -- 자체구분
                       max(X.EQP_NM), -- 설비명
                       COUNT(W.FILE_TRGT_KEY) PLAN_CNT,
                       NVL(max(W.WBS_PLAN_OS_YN),'N') WBS_PLAN_OS_YN,
                       NVL(max(W.LOCK_YN),'N') PLAN_LOCK_YN,
                       NVL(max(W.CLOSE_YN),'N') PLAN_CLOSE_YN,
                       COUNT(Z.FILE_TRGT_KEY) RSULT_CNT,
                       NVL(max(Z.LOCK_YN),'N') RSULT_LOCK_YN,
                       NVL(max(Z.CLOSE_YN),'N') RSULT_CLOSE_YN,
                       max(X.PRDT_CD) PRDT_CD,
                       FN_BM01M01_ID_TO_NM(max(X.PRDT_CD)) AS PRDT_CD_NM,
                       max(X.ITEM_DIV) ITEM_DIV,
                       FN_CM05M01_CD_TO_NM(max(X.ITEM_DIV)) AS ITEM_DIV_NM,
                       'D' DATA_GBN  --원시데이타
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD    = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
								                AND X.CO_CD = #{coCd}
								               <if test="salesCd != null and !salesCd.equals('')">
								                AND X.SALES_CD like '%${salesCd}%'                
								               </if>
						CROSS JOIN (
												SELECT 
 														 CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
												         CODE_ID,
												         CODE_RPRC,
												         CODE_NM,
												         CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
												         CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
												         CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
												         LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
												         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
												         CONNECT_BY_ISLEAF AS IS_LEAF,
												         CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
											     FROM TB_CM05M01
											     START WITH CODE_ID = 'WBSDIV'
											     CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
					            ) CD  
                        LEFT OUTER JOIN TB_WB01M01 W  ON X.CO_CD    = W.CO_CD
                                                     AND X.SALES_CD = w.SALES_CD  
                                                     AND CD.CODE_ID = W.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_WB02M01 Z  ON X.CO_CD    = Z.CO_CD
                                                     AND X.SALES_CD = Z.SALES_CD  
                                                     AND CD.CODE_ID = Z.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터                             
                GROUP BY X.ORDRS_NO, X.SALES_CD, X.CO_CD,Y.ORGN_SALES_CD,Y.ORDRS_CLNT_CD, Y.CLNT_PJT                    

           </select>      
    <select id="selectItemSalesCodeTreeList" parameterType="Map" resultType="camelMap">          
               		 
                SELECT DISTINCT  
                	   '' PID,
                	   #{coCd} ID,
                	   #{coCd} CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(#{coCd}) AS CO_CD_NM,
                       '전체' ORDRS_NO,
                       '전사 현황' AS SALES_CD,
                       '' ORGN_SALES_CD,
                       '' ORDRS_CLNT_CD, -- 고객사
                       '전체' AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV10, -- 입력구분
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '' ORDRS_DTL_DIV30, -- 자체구분
                       '' EQP_NM, -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM DUAL

              UNION ALL  --회사명을 Top LEVEL 생성
                SELECT DISTINCT  
                	   X.CO_CD PID,
                	   TO_CHAR(Y.ORDRS_CLNT_CD) ID,
                	   X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       A.CLNT_NM,
                       A.CLNT_NM  AS SALES_CD,
                       '' ORGN_SALES_CD,
                       Y.ORDRS_CLNT_CD , -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV10, -- 입력구분
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '' ORDRS_DTL_DIV30, -- 자체구분
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD like '%${salesCd}%'                
               </if>
				 
               UNION ALL --오더번호로 1 LEVEL 생성
                SELECT DISTINCT  
                	   TO_CHAR(Y.ORDRS_CLNT_CD) PID,
                	   X.ORDRS_NO ID,
                	   X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO AS ORDRS_NO,
                       X.ORDRS_NO AS SALES_CD,
                       '',
                       Y.ORDRS_CLNT_CD, -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '',
                       '',
                       '',
                       '',
                       '',
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
				 WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD like '%${salesCd}%'                
               </if>

               UNION ALL
                SELECT   --Sales 코드 추출
                	   X.ORDRS_NO PID,
                	   X.SALES_CD ID,
                	   X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO, -- 수주번호
                       X.SALES_CD, -- SALES CODE
                       max(Y.ORGN_SALES_CD), -- 원천 SALES CODE
                       max(Y.ORDRS_CLNT_CD), -- 고객사
                       max(A.CLNT_NM)  AS ORDRS_CLNT_NM,
                       max(Y.CLNT_PJT), -- 고객사 PJT
                       max(X.ORDRS_DTL_DIV10), -- 입력구분
                       max(X.ORDRS_DTL_DIV20), -- 신작구분
                       FN_CM05M01_CD_TO_NM(max(X.ORDRS_DTL_DIV20)) AS ORDRS_DTL_DIV20_NM,
                       max(X.ORDRS_DTL_DIV30), -- 자체구분
                       max(X.EQP_NM), -- 설비명
                       COUNT(W.FILE_TRGT_KEY) PLAN_CNT,
                       NVL(max(W.WBS_PLAN_OS_YN),'N') WBS_PLAN_OS_YN,
                       NVL(max(W.LOCK_YN),'N') PLAN_LOCK_YN,
                       NVL(max(W.CLOSE_YN),'N') PLAN_CLOSE_YN,
                       COUNT(Z.FILE_TRGT_KEY) RSULT_CNT,
                       NVL(max(Z.LOCK_YN),'N') RSULT_LOCK_YN,
                       NVL(max(Z.CLOSE_YN),'N') RSULT_CLOSE_YN,
                       max(X.PRDT_CD) PRDT_CD,
                       FN_BM01M01_ID_TO_NM(max(X.PRDT_CD)) AS PRDT_CD_NM,
                       max(X.ITEM_DIV) ITEM_DIV,
                       FN_CM05M01_CD_TO_NM(max(X.ITEM_DIV)) AS ITEM_DIV_NM,
                       'D' DATA_GBN  --원시데이타
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD    = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
								                AND X.CO_CD = #{coCd}
								               <if test="salesCd != null and !salesCd.equals('')">
								                AND X.SALES_CD like '%${salesCd}%'                
								               </if>
						CROSS JOIN (
												SELECT 
 														 CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
												         CODE_ID,
												         CODE_RPRC,
												         CODE_NM,
												         CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
												         CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
												         CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
												         LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
												         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
												         CONNECT_BY_ISLEAF AS IS_LEAF,
												         CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
											     FROM TB_CM05M01
											     START WITH CODE_ID = 'WBSDIV'
											     CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
					            ) CD  
                        LEFT OUTER JOIN TB_WB01M01 W  ON X.CO_CD    = W.CO_CD
                                                     AND X.SALES_CD = w.SALES_CD  
                                                     AND CD.CODE_ID = W.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_WB02M01 Z  ON X.CO_CD    = Z.CO_CD
                                                     AND X.SALES_CD = Z.SALES_CD  
                                                     AND CD.CODE_ID = Z.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터     
                        WHERE X.ORDRS_DTL_DIV10 = 'ORDRSDTLDIV1010'                        
                GROUP BY X.ORDRS_NO, X.SALES_CD, X.CO_CD,Y.ORGN_SALES_CD,Y.ORDRS_CLNT_CD, Y.CLNT_PJT                    

           </select>   
</mapper>