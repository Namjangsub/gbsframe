<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.cr.cr02.mapper.CR02Mapper">
    <select id="selectOrdrsCount" resultType="int">
        WITH SJM AS  
		     ( SELECT *
		        FROM (
				     SELECT ROWNUM AS RRN, AA.* 
					    FROM (  
						       SELECT M.*, C.CLNT_NM 
						         FROM TB_CR02M01 AS M  -- 수주마스터
						                LEFT OUTER JOIN TB_BM02M01 AS C  --거래처
						                                           ON M.ORDRS_CLNT_CD = C.CLNT_CD
						        WHERE 1=1
						          <if test="coCd != null and !coCd.equals('')">
						          AND M.CO_CD    = #{coCd}
						          </if>
						          <if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
						          AND M.ORDRS_DT BETWEEN TO_DATE(#{strtDt}, 'YYYYMMDD') AND TO_DATE(#{endDt}, 'YYYYMMDD')
						          </if>
						          <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
						          AND M.ORDRS_CLNT_CD = #{ordrsClntCd}
						         </if>
						          <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
						          AND C.CLNT_NM = '%' || #{ordrsClntNm} || '%'
						          </if>
						         <if test="ordrsNo != null and !ordrsNo.equals('')">
						          AND M.ORDRS_NO = #{ordrsNo}
						         </if>
						         <if test="clntPjt != null and !clntPjt.equals('')">
						          AND M.CLNT_PJT = #{clntPjt}
						         </if>
						         <if test="ctrtNm != null and !ctrtNm.equals('')">
						          AND M.CTRT_NM  LIKE '%' || #{ctrtNm} || '%'
						         </if>
						         <if test="ordrsDiv != null and !ordrsDiv.equals('')">
						          AND M.ORDRS_DIV = #{ordrsDiv}
						         </if>
					           ORDER BY  CO_CD, CLNT_CD, CLNT_PJT, ORDRS_NO, FILE_TRGT_KEY
					         ) AS AA
					)
				<if test="firstIndex != null and !firstIndex.equals('')">
			    WHERE RRN BETWEEN #{firstIndex} AND #{lastIndex}
				</if>
		     )
		   , SJD AS
		     ( SELECT SM.CO_CD                                                    AS CO_CD              --회사코드
		            , FN_CM05M01_CD_TO_NM(SM.CO_CD)             				   AS CO_NM              --회사명 
		            , SM.ORDRS_NO                                                  AS ORDRS_NO           --수주번호
		            , SM.ORDRS_DIV                                                 AS ORDRS_DIV          --수주구분
		            , FN_CM05M01_CD_TO_NM(SM.ORDRS_DIV)        					   AS ORDRS_DIV_NM       --수주구분명
		            , TO_CHAR(SM.ORDRS_DT, 'YYYY-MM-DD')                           AS IO_DT              --수주일자
		            , SM.ORDRS_CLNT_CD                                             AS CLNT_CD            --고객사
		            , SM.CLNT_NM                                                   AS CLNT_NM            --고객사명
		            , SM.CLNT_PJT                                                  AS CLNT_PJT           --고객사PJT
		            , SM.CTRT_NM                                                   AS CTRT_NM            --계약명
		            , SM.ORDRS_AMT                                                 AS ORDRS_AMT          --수주금액
		            , SM.EST_NO                                                    AS EST_NO             --견적번호
		            , SM.EST_DEG                                                   AS EST_DEG            --견적차수
		            , SM.CO_CD||'_'||SM.ORDRS_NO                                   AS PID                --
		            , SM.CO_CD||'_'||SM.ORDRS_NO||'_'||SD.ORDRS_SEQ                AS ID                 --
		            , SD.ORDRS_SEQ                                                 AS IO_SEQ             --
		            , NVL(SD.SALES_CD, SM.ORDRS_NO||'-'||NVL2(SD.ORDRS_SEQ,TO_CHAR(SD.ORDRS_SEQ, '00')||FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV10),'상세없음'))  AS SALES_CD           --SalesCode
		            , SD.ORDRS_DTL_DIV10                                           AS ORDRS_DTL_DIV10    --입력구분
		            , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV10)  					   AS ORDRS_DTL_DIV10_NM --입력구분명 
		            , SD.PRDT_CD                                                   AS PRDT_CD            --제품구분
		            , P.PRDT_NM                                                    AS PRDT_NM            --제품구분명
		            , SD.ITEM_DIV                                                  AS ITEM_DIV           --아이템구분
		            , FN_CM05M01_CD_TO_NM(SD.ITEM_DIV)  						   AS ITEM_DIV_NM        --아이템구분명 
		            , SD.ORDRS_DTL_DIV20                                           AS ORDRS_DTL_DIV20    --작업구분
		            , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV20)  					   AS ORDRS_DTL_DIV20_NM --작업구분명
		            , SD.ORDRS_DTL_DIV30                                           AS ORDRS_DTL_DIV30    --자체구분
		            , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV30)  					   AS ORDRS_DTL_DIV30_NM --자체구분명 
		            , SD.MCTYPE                                                    AS MCTYPE             --기계구분
		            , FN_CM05M01_CD_TO_NM(SD.MCTYPE)  					   		   AS MCTYPE_NM          --기계구분명
		            , SD.EQP_NM                                                    AS EQP_NM             --설비명
		            , SD.ORDRS_PRC_MACH                                            AS ORDRS_PRC_MACH     --수주가-기계파트
		            , SD.ORDRS_PRC_ELCTY                                           AS ORDRS_PRC_ELCTY    --수주가-전기파트
		            , SD.ORDRS_PRC                                                 AS ORDRS_PRC          --수주가
		            , SD.ORDRS_QTY                                                 AS ORDRS_QTY          --수량 
		            , SD.EST_EPCT_MAT_PRC                                          AS EST_EPCT_MAT_PRC   --견적예상재료비
		            , SD.TRGT_PCHS_PCOST_MACH                                      AS TRGT_PCHS_PCOST_MACH --목표구매원가-기계
		            , SD.TRGT_PCHS_PCOST_ELCTY                                     AS TRGT_PCHS_PCOST_ELCTY--목표구매원가-전기
		            , SD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN                            AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
		            , SD.LABOR_COST_MFG_COST                                       AS LABOR_COST_MFG_COST
		            , SD.CREAT_ID                                                  AS CREAT_ID      --작성자ID
		            , FN_CM06M01_ID_TO_NM(SD.CREAT_ID)        					   AS CREAT_ID_NM   --작성자명
		            , TO_CHAR(SD.CREAT_DTTM,'YYYY-MM-DD')                          AS CREAT_DTTM    --작성일시
		            , SD.UDT_ID                                                    AS UDT_ID        --수정자ID
		            , FN_CM06M01_ID_TO_NM(SD.UDT_ID)         					   AS UDT_ID_NM     --수정자명
		            , TO_CHAR(SD.UDT_DTTM, 'YYYY-MM-DD')                           AS UDT_DTTM      --수정일시 
		            , SM.FILE_TRGT_KEY                                             AS FILE_TRGT_KEY 
				    , RRN
		         FROM SJM AS SM --수주마스터
		                 LEFT OUTER JOIN TB_CR02D02 AS SD  ON SM.CO_CD    = SD.CO_CD
		                                                  AND SM.ORDRS_NO = SD.ORDRS_NO
		                 LEFT OUTER JOIN TB_BM01M01 AS P   ON SD.PRDT_CD  = P.PRDT_CD
		        WHERE 1 = 1
		     )
			SELECT COUNT(*) 
			  FROM (
				  SELECT   CO_CD                   --회사코드
					     , FN_CM05M01_CD_TO_NM(CO_CD) CO_NM                   --회사명 
					     , ORDRS_NO                --수주번호
					     , ORDRS_DIV               --수주구분
					     , FN_CM05M01_CD_TO_NM(ORDRS_DIV) ORDRS_DIV_NM            --수주구분명
					     , TO_CHAR(ORDRS_DT, 'YYYY-MM-DD') IO_DT                   --수주일자
					     , ORDRS_CLNT_CD                 --고객사
					     , CLNT_NM                 --고객사명
					     , CLNT_PJT AS CLNT_PJT             --고객사PJT
					     , FN_CM05M01_CD_TO_NM(CLNT_PJT) AS CLNT_PJT_NM             --고객사PJT명
					     , CTRT_NM                 --계약명
					     , ORDRS_AMT               --수주금액
					     , EST_NO                  --견적번호
					     , EST_DEG                 --견적차수
					     , '' PID                     --PID
					     , CO_CD||'_'||ORDRS_NO ID  --ID
					     , 0  IO_SEQ                  --IO_SEQ
					     , '' SALES_CD             --SalesCode
					     , '' ORDRS_DTL_DIV10      --입력구분
					     , '' ORDRS_DTL_DIV10_NM   --입력구분명 
					     , '' PRDT_CD              --제품구분
					     , '' PRDT_NM              --제품구분명
					     , '' ITEM_DIV             --아이템구분
					     , '' ITEM_DIV_NM          --아이템구분명 
					     , '' ORDRS_DTL_DIV20      --작업구분
					     , '' ORDRS_DTL_DIV20_NM   --작업구분명
					     , '' ORDRS_DTL_DIV30      --자체구분
					     , '' ORDRS_DTL_DIV30_NM   --자체구분명 
					     , '' MCTYPE               --기계구분
					     , '' MCTYPE_NM            --기계구분명
					     , '' EQP_NM               --설비명
					     , '' ORDRS_PRC_MACH       --수주가-기계파트
					     , '' ORDRS_PRC_ELCTY      --수주가-전기파트
					     , '' ORDRS_PRC            --수주가
					     , '' ORDRS_QTY            --수량 
					     , '' EST_EPCT_MAT_PRC     --견적예상재료비
					     , '' TRGT_PCHS_PCOST_MACH --목표구매원가-기계
					     , '' TRGT_PCHS_PCOST_ELCTY--목표구매원가-전기
					     , '' TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
					     , '' LABOR_COST_MFG_COST  --노무비및제조경비
					     , CREAT_ID                --작성자ID
					     , FN_CM06M01_ID_TO_NM(CREAT_ID) CREAT_ID_NM             --작성자명
					     , TO_CHAR(CREAT_DTTM,'YYYY-MM-DD') CREAT_DTTM              --작성일시
					     , UDT_ID                  --수정자ID
					     , FN_CM06M01_ID_TO_NM(UDT_ID) UDT_ID_NM               --수정자명
					     , TO_CHAR(UDT_DTTM, 'YYYY-MM-DD') UDT_DTTM                --수정일시 
					     , FILE_TRGT_KEY
				         , RRN
				  FROM SJM
			 )
    </select>
    
    <select id="selectOrdrsList" resultType="CamelMap">
    WITH SJS AS
		( 
		  SELECT A.CO_CD                                                AS CO_CD
		       , A.ORDRS_NO                                             AS ORDRS_NO
		       , ROUND(SUM(A.ORDRS_PRC_MACH) / 1000, 1)                 AS ORDRS_PRC_MACH                 --수주가-기계파트
		       , ROUND(SUM(A.ORDRS_PRC_ELCTY) / 1000, 1)                AS ORDRS_PRC_ELCTY                --수주가-전기파트
		       , ROUND(SUM(A.ORDRS_PRC) / 1000, 1)                      AS ORDRS_PRC                      --수주가
		       , ROUND(SUM(A.ORDRS_QTY) / 1000, 1)                      AS ORDRS_QTY                      --수주수량
		       , ROUND(SUM(A.EST_EPCT_MAT_PRC) / 1000, 1)               AS EST_EPCT_MAT_PRC               --견적예상재료비
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_MACH) / 1000, 1)           AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_ELCTY) / 1000, 1)          AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_TOT) / 1000, 1)            AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN) / 1000, 1) AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표원가-기계자체가공
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_MACH2) / 1000, 1)          AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계
		       , ROUND(SUM(A.LABOR_COST_MFG_COST) / 1000, 1)            AS LABOR_COST_MFG_COST            --노무비 및 제조경비
		       , ROUND(SUM(A.ACT_RGL_MACH) / 1000, 1)                   AS ACT_RGL_MACH                   --실행원가-정상-기계
		       , ROUND(SUM(A.ACT_OBS_MACH) / 1000, 1)                   AS ACT_OBS_MACH                   --실행원가-장애-기계
		       , ROUND(SUM(A.ACT_TOT_MACH) / 1000, 1)                   AS ACT_TOT_MACH                   --실행원가-기계
		       , ROUND(SUM(A.ACT_RGL_ELCTY) / 1000, 1)                  AS ACT_RGL_ELCTY                  --실행원가-정상-전기
		       , ROUND(SUM(A.ACT_OBS_ELCTY) / 1000, 1)                  AS ACT_OBS_ELCTY                  --실행원가-장애-전기
		       , ROUND(SUM(A.ACT_TOT_ELCTY) / 1000, 1)                  AS ACT_TOT_ELCTY                  --실행원가-전기
		       , ROUND(SUM(A.ACT_EXP_COST) / 1000, 1)                   AS ACT_EXP_COST                   --실행원가-경비관리비
		  FROM   (
		          SELECT CO_CD
				       , ORDRS_NO
				       , ORDRS_SEQ
				       , ORDRS_DTL_DIV10
				       , NVL(ORDRS_PRC_MACH, 0)                                                AS ORDRS_PRC_MACH                 --수주가-기계파트
				       , NVL(ORDRS_PRC_ELCTY, 0)                                               AS ORDRS_PRC_ELCTY                --수주가-전기파트
				       , NVL(ORDRS_PRC_MACH, 0) + NVL(ORDRS_PRC_ELCTY, 0)                      AS ORDRS_PRC                      --수주가
				       , CASE WHEN ORDRS_DTL_DIV10 = 'ORDRSDTLDIV1010' THEN NVL(ORDRS_QTY, 0)
				                                                       ELSE 0 END              AS ORDRS_QTY                      --수주수량
				       , NVL(EST_EPCT_MAT_PRC, 0)                                              AS EST_EPCT_MAT_PRC               --견적예상재료비
				       , NVL(TRGT_PCHS_PCOST_MACH, 0)                                          AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
				       , NVL(TRGT_PCHS_PCOST_ELCTY, 0)                                         AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
				       , NVL(TRGT_PCHS_PCOST_MACH, 0) + NVL(TRGT_PCHS_PCOST_ELCTY, 0)          AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
				       , NVL(TRGT_PCHS_PCOST_IN_HOUSE_PRCSN, 0)                                AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표원가-기계자체가공
				       , NVL(TRGT_PCHS_PCOST_MACH, 0) + NVL(TRGT_PCHS_PCOST_IN_HOUSE_PRCSN, 0) AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계
				       , NVL(LABOR_COST_MFG_COST, 0)                                           AS LABOR_COST_MFG_COST            --노무비 및 제조경비
				       , NVL(ACT_RGL_MACH, 0)                                                  AS ACT_RGL_MACH                   --실행원가-정상-기계
					   , NVL(ACT_OBS_MACH, 0)                                                  AS ACT_OBS_MACH                   --실행원가-장애-기계
				       , NVL(ACT_RGL_MACH, 0) + NVL(ACT_OBS_MACH, 0)                           AS ACT_TOT_MACH                   --실행원가-기계
				       , NVL(ACT_RGL_ELCTY, 0)                                                 AS ACT_RGL_ELCTY                  --실행원가-정상-전기
				       , NVL(ACT_OBS_ELCTY, 0)                                                 AS ACT_OBS_ELCTY                  --실행원가-장애-전기
				       , NVL(ACT_RGL_ELCTY, 0) + NVL(ACT_OBS_ELCTY, 0)                         AS ACT_TOT_ELCTY                  --실행원가-전기
				       , NVL(ACT_EXP_COST, 0)                                                  AS ACT_EXP_COST                   --실행원가-경비관리비
		          FROM   TB_CR02D02
				  WHERE  1 = 1
		         ) AS A
		  GROUP BY A.CO_CD, A.ORDRS_NO
		)
		, SJM AS
		( 
		  SELECT *
		  FROM   (
		          SELECT ROWNUM AS RRN
		               , AA.*
		          FROM   (
		                  SELECT M.*
		                       , C.CLNT_NM
							   , SDS.ORDRS_PRC_MACH                 --수주가-기계파트
							   , SDS.ORDRS_PRC_ELCTY                --수주가-전기파트
							   , SDS.ORDRS_PRC                      --수주가
							   , SDS.ORDRS_QTY                      --수주수량
							   , SDS.EST_EPCT_MAT_PRC               --견적예상재료비
							   , SDS.TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
							   , SDS.TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
							   , SDS.TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
							   , SDS.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표원가-기계자체가공
							   , SDS.TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계
							   , SDS.LABOR_COST_MFG_COST            --노무비 및 제조경비
							   , SDS.ACT_RGL_MACH                   --실행원가-정상-기계
							   , SDS.ACT_OBS_MACH                   --실행원가-장애-기계
							   , SDS.ACT_TOT_MACH                   --실행원가-기계
							   , SDS.ACT_RGL_ELCTY                  --실행원가-정상-전기
							   , SDS.ACT_OBS_ELCTY                  --실행원가-장애-전기
							   , SDS.ACT_TOT_ELCTY                  --실행원가-전기
							   , SDS.ACT_EXP_COST                   --실행원가-경비관리비
							   , U.NAME AS MNG_NM					--담당자명
		                  FROM   TB_CR02M01 AS M  -- 수주마스터
		                         LEFT OUTER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD
								 LEFT OUTER JOIN SJS AS SDS  ON M.CO_CD    = SDS.CO_CD
		                                                    AND M.ORDRS_NO = SDS.ORDRS_NO
		                         LEFT OUTER JOIN TB_CM06M01 AS U ON U.ID = M.MNG_ID
		                  WHERE  1 = 1
		                  <if test="coCd != null and !coCd.equals('')">
		                  AND    M.CO_CD    = #{coCd}
		                  </if>
		                  <if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
		                  AND    M.ORDRS_DT BETWEEN TO_DATE(#{strtDt}, 'YYYYMMDD') AND TO_DATE(#{endDt}, 'YYYYMMDD')
		                  </if>
		                  <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
		                  AND    M.ORDRS_CLNT_CD = #{ordrsClntCd}
		                  </if>
						  <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
		                  AND    C.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
		                  </if>
		                  <if test="ordrsNo != null and !ordrsNo.equals('')">
		                  AND    M.ORDRS_NO LIKE '%' || #{ordrsNo} || '%'
		                  </if>
		                  <if test="clntPjt != null and !clntPjt.equals('')">
		                  AND    M.CLNT_PJT = #{clntPjt}
		                  </if>
		                  <if test="ctrtNm != null and !ctrtNm.equals('')">
		                  AND    M.CTRT_NM  LIKE '%' || #{ctrtNm} || '%'
		                  </if>
		                  <if test="ordrsDiv != null and !ordrsDiv.equals('')">
		                  AND    M.ORDRS_DIV = #{ordrsDiv}
		                  </if>
		                  ORDER BY M.CO_CD, M.ORDRS_CLNT_CD, M.CLNT_PJT, M.ORDRS_NO, M.FILE_TRGT_KEY
		                 ) AS AA
		          WHERE  1 = 1
		         )
		  WHERE RRN BETWEEN #{firstIndex} AND #{lastIndex}
		)
		, SJD AS
		(
		  SELECT SM.CO_CD                                      AS CO_CD              --회사코드
		       , FN_CM05M01_CD_TO_NM(SM.CO_CD)                 AS CO_NM              --회사명
		       , SM.ORDRS_NO                                   AS ORDRS_NO           --수주번호
		       , SM.ORDRS_DIV                                  AS ORDRS_DIV          --수주구분
		       , FN_CM05M01_CD_TO_NM(SM.ORDRS_DIV)             AS ORDRS_DIV_NM       --수주구분명
		       , TO_CHAR(SM.ORDRS_DT, 'YYYY-MM-DD')            AS IO_DT              --수주일자
		       , SM.ORDRS_CLNT_CD                              AS CLNT_CD            --고객사
		       , SM.CLNT_NM                                    AS CLNT_NM            --고객사명
		       , SM.CLNT_PJT                                   AS CLNT_PJT           --고객사PJT
		       , SM.CTRT_NM                                    AS CTRT_NM            --계약명
		       , ROUND(SM.ORDRS_AMT / 1000, 1)                 AS ORDRS_AMT          --수주금액
		       , SM.EST_NO                                     AS EST_NO             --견적번호
		       , SM.EST_DEG                                    AS EST_DEG            --견적차수
		       , SM.CO_CD||'_'||SM.ORDRS_NO                    AS PID                --
		       , SM.CO_CD||'_'||SM.ORDRS_NO||'_'||SD.ORDRS_SEQ AS ID                 --
		       , SD.ORDRS_SEQ                                  AS IO_SEQ             --
		       , NVL(SD.SALES_CD, SM.ORDRS_NO||'-'||NVL2(SD.ORDRS_SEQ, TO_CHAR(SD.ORDRS_SEQ, '00'),'상세없음')) AS SALES_CD --SalesCode
		       , SD.ORDRS_DTL_DIV10                            AS ORDRS_DTL_DIV10    --입력구분
		       , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV10)       AS ORDRS_DTL_DIV10_NM --입력구분명
		       , SD.PRDT_CD                                    AS PRDT_CD            --제품구분
		       , P.PRDT_NM                                     AS PRDT_NM            --제품구분명
		       , SD.ITEM_DIV                                   AS ITEM_DIV           --아이템구분
		       , FN_CM05M01_CD_TO_NM(SD.ITEM_DIV)              AS ITEM_DIV_NM        --아이템구분명
		       , SD.ORDRS_DTL_DIV20                            AS ORDRS_DTL_DIV20    --작업구분
		       , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV20)       AS ORDRS_DTL_DIV20_NM --작업구분명
		       , SD.ORDRS_DTL_DIV30                            AS ORDRS_DTL_DIV30    --자체구분
		       , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV30)       AS ORDRS_DTL_DIV30_NM --자체구분명
		       , SD.MCTYPE  								   AS MCTYPE			 --기계구분
		       , FN_CM05M01_CD_TO_NM(SD.MCTYPE)       		   AS MCTYPE_NM 		 --기계구분명
		       , SD.EQP_NM                                     AS EQP_NM             --설비명
		       , TO_CHAR(SD.DUDT_INTEND_DT, 'YYYY-MM-DD')      AS DUDT_INTEND_DT     --납기예정일
		       , ROUND(NVL(SD.ORDRS_PRC_MACH, 0) / 1000, 1)                     AS ORDRS_PRC_MACH     --수주가-기계파트
		       , ROUND(NVL(SD.ORDRS_PRC_ELCTY, 0) / 1000, 1)                    AS ORDRS_PRC_ELCTY    --수주가-전기파트
		       , ROUND((NVL(SD.ORDRS_PRC_MACH, 0) + NVL(SD.ORDRS_PRC_ELCTY, 0)) / 1000, 1) AS ORDRS_PRC --수주가
		       , NVL(SD.ORDRS_QTY, 0)                          AS ORDRS_QTY          --수량
		       , ROUND(NVL(SD.EST_EPCT_MAT_PRC, 0) / 1000, 1)                   AS EST_EPCT_MAT_PRC   --견적예상재료비
		       , ROUND(NVL(SD.TRGT_PCHS_PCOST_MACH, 0) / 1000, 1)               AS TRGT_PCHS_PCOST_MACH --목표구매원가-기계
		       , ROUND(NVL(SD.TRGT_PCHS_PCOST_ELCTY, 0) / 1000, 1)              AS TRGT_PCHS_PCOST_ELCTY --목표구매원가-전기
			   , ROUND((NVL(SD.TRGT_PCHS_PCOST_MACH, 0) + NVL(SD.TRGT_PCHS_PCOST_ELCTY, 0)) / 1000, 1) AS TRGT_PCHS_PCOST_TOT --목표구매원가-합계
		       , ROUND(NVL(SD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN, 0) / 1000, 1)     AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			   , ROUND((NVL(SD.TRGT_PCHS_PCOST_MACH, 0) + NVL(SD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN, 0)) / 1000, 1) AS TRGT_PCHS_PCOST_MACH2 --목표구매원가-차감 후 기계
		       , ROUND(NVL(SD.LABOR_COST_MFG_COST, 0) / 1000, 1)                AS LABOR_COST_MFG_COST --노무비 및 제조경비
			   , ROUND(NVL(SD.ACT_RGL_MACH, 0) / 1000, 1)                             AS ACT_RGL_MACH                   --실행원가-정상-기계
		       , ROUND(NVL(SD.ACT_OBS_MACH, 0) / 1000, 1)                             AS ACT_OBS_MACH                   --실행원가-장애-기계
		       , ROUND((NVL(SD.ACT_RGL_MACH, 0) + NVL(SD.ACT_OBS_MACH, 0)) / 1000, 1)   AS ACT_TOT_MACH                   --실행원가-기계
		       , ROUND(NVL(SD.ACT_RGL_ELCTY, 0) / 1000, 1)                            AS ACT_RGL_ELCTY                  --실행원가-정상-전기
		       , ROUND(NVL(SD.ACT_OBS_ELCTY, 0) / 1000, 1)                            AS ACT_OBS_ELCTY                  --실행원가-장애-전기
		       , ROUND((NVL(SD.ACT_RGL_ELCTY, 0) + NVL(SD.ACT_OBS_ELCTY, 0)) / 1000, 1) AS ACT_TOT_ELCTY                  --실행원가-전기
		       , ROUND(NVL(SD.ACT_EXP_COST, 0) / 1000, 1)                             AS ACT_EXP_COST                   --실행원가-경비관리비
		       , SD.CREAT_ID                                   AS CREAT_ID      --작성자ID
		       , FN_CM06M01_ID_TO_NM(SD.CREAT_ID)              AS CREAT_ID_NM   --작성자명
		       , TO_CHAR(SD.CREAT_DTTM,'YYYY-MM-DD')           AS CREAT_DTTM    --작성일시
		       , SD.UDT_ID                                     AS UDT_ID        --수정자ID
		       , FN_CM06M01_ID_TO_NM(SD.UDT_ID)                AS UDT_ID_NM     --수정자명
		       , TO_CHAR(SD.UDT_DTTM, 'YYYY-MM-DD')            AS UDT_DTTM      --수정일시
		       , SM.FILE_TRGT_KEY                              AS FILE_TRGT_KEY
		       , RRN
		       , SM.MNG_NM
		  FROM   SJM AS SM --수주마스터
		         LEFT OUTER JOIN TB_CR02D02 AS SD  ON SM.CO_CD    = SD.CO_CD
		                                          AND SM.ORDRS_NO = SD.ORDRS_NO
		         LEFT OUTER JOIN TB_BM01M01 AS P   ON SD.PRDT_CD  = P.PRDT_CD
		  WHERE  1 = 1
		)
		, SJG1 AS
		(
		  SELECT CO_CD                                   AS CO_CD        --회사코드
		       , ORDRS_CLNT_CD                           AS CLNT_CD      --고객사
		       , MAX(CLNT_NM)                            AS CLNT_NM
		       , SUM(ROUND(NVL(ORDRS_AMT, 0) / 1000, 1)) AS ORDRS_AMT --수주금액
		       , SUM(ORDRS_PRC_MACH)                     AS ORDRS_PRC_MACH     --수주가-기계파트
		       , SUM(ORDRS_PRC_ELCTY)                    AS ORDRS_PRC_ELCTY    --수주가-전기파트
		       , SUM(ORDRS_PRC)                          AS ORDRS_PRC          --수주가
		       , SUM(ORDRS_QTY)                          AS ORDRS_QTY          --수량 
		       , SUM(EST_EPCT_MAT_PRC)                   AS EST_EPCT_MAT_PRC   --견적예상재료비
		       , SUM(TRGT_PCHS_PCOST_MACH)               AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		       , SUM(TRGT_PCHS_PCOST_ELCTY)              AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			   , SUM(TRGT_PCHS_PCOST_TOT)                AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
		       , SUM(TRGT_PCHS_PCOST_IN_HOUSE_PRCSN)     AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			   , SUM(TRGT_PCHS_PCOST_MACH2)              AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			   , SUM(ACT_RGL_MACH)                       AS ACT_RGL_MACH        --실행원가-정상-기계
			   , SUM(ACT_OBS_MACH)                       AS ACT_OBS_MACH        --실행원가-장애-기계
			   , SUM(ACT_TOT_MACH)                       AS ACT_TOT_MACH        --실행원가-기계
			   , SUM(ACT_RGL_ELCTY)                      AS ACT_RGL_ELCTY       --실행원가-정상-전기
			   , SUM(ACT_OBS_ELCTY)                      AS ACT_OBS_ELCTY       --실행원가-장애-전기
			   , SUM(ACT_TOT_ELCTY)                      AS ACT_TOT_ELCTY       --실행원가-전기
			   , SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY)  AS ACT_TOT
			   , SUM(LABOR_COST_MFG_COST)                AS LABOR_COST_MFG_COST --노무비및제조경비
			   , SUM(ACT_EXP_COST)                       AS ACT_EXP_COST        --실행원가-경비관리비
			   , SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY) + SUM(LABOR_COST_MFG_COST) AS WONGA_TOT
		       , SUM(ORDRS_PRC) - (SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY) + SUM(LABOR_COST_MFG_COST)) - SUM(ACT_EXP_COST) AS FIT
		       , MAX(FILE_TRGT_KEY)                      AS FILE_TRGT_KEY
		       , MAX(RRN)                                AS RRN
		  FROM   SJM
		  GROUP BY CO_CD, ORDRS_CLNT_CD
		)
		, SJG2 AS
		(
		  SELECT CO_CD                                   AS CO_CD        --회사코드
		       , SUM(ROUND(NVL(ORDRS_AMT, 0) / 1000, 1)) AS ORDRS_AMT --수주금액
		       , SUM(ORDRS_PRC_MACH)                     AS ORDRS_PRC_MACH     --수주가-기계파트
		       , SUM(ORDRS_PRC_ELCTY)                    AS ORDRS_PRC_ELCTY    --수주가-전기파트
		       , SUM(ORDRS_PRC)                          AS ORDRS_PRC          --수주가
		       , SUM(ORDRS_QTY)                          AS ORDRS_QTY          --수량 
		       , SUM(EST_EPCT_MAT_PRC)                   AS EST_EPCT_MAT_PRC   --견적예상재료비
		       , SUM(TRGT_PCHS_PCOST_MACH)               AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		       , SUM(TRGT_PCHS_PCOST_ELCTY)              AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			   , SUM(TRGT_PCHS_PCOST_TOT)                AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
		       , SUM(TRGT_PCHS_PCOST_IN_HOUSE_PRCSN)     AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			   , SUM(TRGT_PCHS_PCOST_MACH2)              AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			   , SUM(ACT_RGL_MACH)                       AS ACT_RGL_MACH        --실행원가-정상-기계
			   , SUM(ACT_OBS_MACH)                       AS ACT_OBS_MACH        --실행원가-장애-기계
			   , SUM(ACT_TOT_MACH)                       AS ACT_TOT_MACH        --실행원가-기계
			   , SUM(ACT_RGL_ELCTY)                      AS ACT_RGL_ELCTY       --실행원가-정상-전기
			   , SUM(ACT_OBS_ELCTY)                      AS ACT_OBS_ELCTY       --실행원가-장애-전기
			   , SUM(ACT_TOT_ELCTY)                      AS ACT_TOT_ELCTY       --실행원가-전기
			   , SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY)  AS ACT_TOT
			   , SUM(LABOR_COST_MFG_COST)                AS LABOR_COST_MFG_COST --노무비및제조경비
			   , SUM(ACT_EXP_COST)                       AS ACT_EXP_COST        --실행원가-경비관리비
			   , SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY) + SUM(LABOR_COST_MFG_COST) AS WONGA_TOT
		       , SUM(ORDRS_PRC) - (SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY) + SUM(LABOR_COST_MFG_COST)) - SUM(ACT_EXP_COST) AS FIT
		       , MAX(FILE_TRGT_KEY)                      AS FILE_TRGT_KEY
		       , MAX(RRN)                                AS RRN
		  FROM   SJM
		  GROUP BY CO_CD
		)
		, SJALL AS
		(
		  SELECT CO_CD                           AS CO_CD        --회사코드
		     , FN_CM05M01_CD_TO_NM(CO_CD)      AS CO_NM        --회사명
		     , ORDRS_NO                        AS ORDRS_NO     --수주번호
		     , ORDRS_DIV                       AS ORDRS_DIV    --수주구분
		     , FN_CM05M01_CD_TO_NM(ORDRS_DIV)  AS ORDRS_DIV_NM --수주구분명
		     , TO_CHAR(ORDRS_DT, 'YYYY-MM-DD') AS IO_DT        --수주일자
		     , ORDRS_CLNT_CD                   AS CLNT_CD      --고객사
		     , CLNT_NM                         AS CLNT_NM      --고객사명
		     , CLNT_PJT                        AS CLNT_PJT     --고객사PJT
			 , (SELECT FN_CM05M01_CD_TO_NM(CLNT_PJT) FROM DUAL) AS CLNT_PJT_NM --고객사PJT명
		     , CTRT_NM                         AS CTRT_NM   --계약명
		     , ROUND(NVL(ORDRS_AMT, 0) / 1000, 1) AS ORDRS_AMT --수주금액
		     , EST_NO                          AS EST_NO    --견적번호
		     , EST_DEG                         AS EST_DEG   --견적차수
		     , ''                              AS PID       --PID
		     , CO_CD||'_'||ORDRS_NO            AS ID        --ID
		     , 0                               AS IO_SEQ    --IO_SEQ
		     , ORDRS_NO                        AS SALES_CD  --SalesCode
		     , ''                              AS ORDRS_DTL_DIV10    --입력구분
		     , ''                              AS ORDRS_DTL_DIV10_NM --입력구분명
		     , ''                              AS PRDT_CD            --제품구분
		     , ''                              AS PRDT_NM            --제품구분명
		     , ''                              AS ITEM_DIV           --아이템구분
		     , ''                              AS ITEM_DIV_NM        --아이템구분명
		     , ''                              AS ORDRS_DTL_DIV20    --작업구분
		     , ''                              AS ORDRS_DTL_DIV20_NM --작업구분명
		     , ''                              AS ORDRS_DTL_DIV30    --자체구분
		     , ''                              AS ORDRS_DTL_DIV30_NM --자체구분명
		     , ''                              AS MCTYPE 			 --기계구분   
		     , ''                              AS MCTYPE_NM 		 --기계구분명
		     , ''                              AS EQP_NM             --설비명
		     ,''							   AS DUDT_INTEND_DT     --납기예정일
		     , ORDRS_PRC_MACH                  AS ORDRS_PRC_MACH     --수주가-기계파트
		     , ORDRS_PRC_ELCTY                 AS ORDRS_PRC_ELCTY    --수주가-전기파트
		     , ORDRS_PRC                       AS ORDRS_PRC          --수주가
		     , ORDRS_QTY                       AS ORDRS_QTY          --수량 
		     , EST_EPCT_MAT_PRC                AS EST_EPCT_MAT_PRC   --견적예상재료비
		     , TRGT_PCHS_PCOST_MACH            AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		     , TRGT_PCHS_PCOST_ELCTY           AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			 , TRGT_PCHS_PCOST_TOT             AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((TRGT_PCHS_PCOST_TOT / ORDRS_PRC) * 100, 1)
			   END                             AS TRGT_PCHS_PCOST_PER
		     , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN  AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			 , TRGT_PCHS_PCOST_MACH2           AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계
		     
			 , ACT_RGL_MACH                    AS ACT_RGL_MACH        --실행원가-정상-기계
			 , ACT_OBS_MACH                    AS ACT_OBS_MACH        --실행원가-장애-기계
			 , ACT_TOT_MACH                    AS ACT_TOT_MACH        --실행원가-기계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT_MACH / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_PER_MACH
			 , ACT_RGL_ELCTY                   AS ACT_RGL_ELCTY       --실행원가-정상-전기
			 , ACT_OBS_ELCTY                   AS ACT_OBS_ELCTY       --실행원가-장애-전기
			 , ACT_TOT_ELCTY                   AS ACT_TOT_ELCTY       --실행원가-전기
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT_ELCTY / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_PER_ELCTY
			 , ACT_TOT_MACH + ACT_TOT_ELCTY    AS ACT_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ACT_TOT_MACH + ACT_TOT_ELCTY) / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_TOT_PER
			 , CASE WHEN (ACT_TOT_MACH + ACT_TOT_ELCTY) = 0 THEN 0
			                            ELSE ROUND((TRGT_PCHS_PCOST_TOT / (ACT_TOT_MACH + ACT_TOT_ELCTY)) * 100, 1)
			   END                             AS TRGT_ACT_PER
			 , LABOR_COST_MFG_COST             AS LABOR_COST_MFG_COST --노무비및제조경비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((LABOR_COST_MFG_COST / ORDRS_PRC) * 100, 1)
			   END                             AS LABOR_COST_PER
			 , ACT_EXP_COST                    AS ACT_EXP_COST        --실행원가-경비관리비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_EXP_COST / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_EXP_PER
			 , ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST AS WONGA_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) / ORDRS_PRC) * 100, 1)
			   END                            AS WONGA_PER
		     , ORDRS_PRC - (ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) - ACT_EXP_COST AS FIT
		     , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ORDRS_PRC - (ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) - ACT_EXP_COST) / ORDRS_PRC) * 100, 1)
			   END                             AS FIT_PER
		     , CREAT_ID                         AS CREAT_ID     --작성자ID
		     , FN_CM06M01_ID_TO_NM(CREAT_ID)    AS CREAT_ID_NM  --작성자명
		     , TO_CHAR(CREAT_DTTM,'YYYY-MM-DD') AS CREAT_DTTM   --작성일시
		     , UDT_ID                           AS UDT_ID       --수정자ID
		     , FN_CM06M01_ID_TO_NM(UDT_ID)      AS UDT_ID_NM    --수정자명
		     , TO_CHAR(UDT_DTTM, 'YYYY-MM-DD')  AS UDT_DTTM     --수정일시 
		     , FILE_TRGT_KEY                    AS FILE_TRGT_KEY
		     , 0                                AS COLLAPSE
		     , RRN                              AS RRN
		     , MNG_NM
		     , 1 AS LVL
		FROM   SJM
		UNION ALL
		SELECT CO_CD                           AS CO_CD        --회사코드
		     , CO_NM                           AS CO_NM        --회사명
		     , ORDRS_NO                        AS ORDRS_NO     --수주번호
		     , ORDRS_DIV                       AS ORDRS_DIV    --수주구분
		     , ORDRS_DIV_NM                    AS ORDRS_DIV_NM --수주구분명
		     , IO_DT                           AS IO_DT        --수주일자
		     , CLNT_CD                         AS CLNT_CD      --고객사
		     , CLNT_NM                         AS CLNT_NM      --고객사명
		     , CLNT_PJT                        AS CLNT_PJT     --고객사PJT
			 , (SELECT FN_CM05M01_CD_TO_NM(CLNT_PJT) FROM DUAL) AS CLNT_PJT_NM --고객사PJT명
		     , CTRT_NM                         AS CTRT_NM   --계약명
		     , ORDRS_AMT                       AS ORDRS_AMT --수주금액
		     , EST_NO                          AS EST_NO    --견적번호
		     , EST_DEG                         AS EST_DEG   --견적차수
		     , PID                             AS PID       --PID
		     , ID                              AS ID        --ID
		     , IO_SEQ                          AS IO_SEQ    --IO_SEQ
		     , REPLACE(SALES_CD, ' ', '')      AS SALES_CD  --SalesCode
		     , ORDRS_DTL_DIV10                 AS ORDRS_DTL_DIV10    --입력구분
		     , ORDRS_DTL_DIV10_NM              AS ORDRS_DTL_DIV10_NM --입력구분명
		     , PRDT_CD                         AS PRDT_CD            --제품구분
		     , PRDT_NM                         AS PRDT_NM            --제품구분명
		     , ITEM_DIV             AS ITEM_DIV           --아이템구분
		     , ITEM_DIV_NM          AS ITEM_DIV_NM        --아이템구분명
		     , ORDRS_DTL_DIV20      AS ORDRS_DTL_DIV20    --작업구분
		     , ORDRS_DTL_DIV20_NM   AS ORDRS_DTL_DIV20_NM --작업구분명
		     , ORDRS_DTL_DIV30      AS ORDRS_DTL_DIV30    --자체구분
		     , ORDRS_DTL_DIV30_NM   AS ORDRS_DTL_DIV30_NM --자체구분명
		     , MCTYPE  			    AS MCTYPE			  --기계구분
		     , MCTYPE_NM            AS MCTYPE_NM          --기계구분명  
		     , EQP_NM               AS EQP_NM             --설비명
		     , DUDT_INTEND_DT		AS  DUDT_INTED_DT     --납기예정일
			 , ORDRS_PRC_MACH                 AS ORDRS_PRC_MACH     --수주가-기계파트
		     , ORDRS_PRC_ELCTY                AS ORDRS_PRC_ELCTY    --수주가-전기파트
		     , ORDRS_PRC                      AS ORDRS_PRC          --수주가
		     , ORDRS_QTY                      AS ORDRS_QTY          --수량 
		     , EST_EPCT_MAT_PRC               AS EST_EPCT_MAT_PRC   --견적예상재료비
		     , TRGT_PCHS_PCOST_MACH           AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		     , TRGT_PCHS_PCOST_ELCTY          AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			 , TRGT_PCHS_PCOST_TOT            AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((TRGT_PCHS_PCOST_TOT / ORDRS_PRC) * 100, 1)
			   END                             AS TRGT_PCHS_PCOST_PER
		     , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			 , TRGT_PCHS_PCOST_MACH2          AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			 , ACT_RGL_MACH                   AS ACT_RGL_MACH        --실행원가-정상-기계
			 , ACT_OBS_MACH                   AS ACT_OBS_MACH        --실행원가-장애-기계
			 , ACT_TOT_MACH                   AS ACT_TOT_MACH        --실행원가-기계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT_MACH / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_MACH
			 , ACT_RGL_ELCTY                  AS ACT_RGL_ELCTY       --실행원가-정상-전기
			 , ACT_OBS_ELCTY                  AS ACT_OBS_ELCTY       --실행원가-장애-전기
			 , ACT_TOT_ELCTY                  AS ACT_TOT_ELCTY       --실행원가-전기
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT_ELCTY / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_ELCTY
			 , ACT_TOT_MACH + ACT_TOT_ELCTY   AS ACT_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ACT_TOT_MACH + ACT_TOT_ELCTY) / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_TOT_PER
			 , CASE WHEN (ACT_TOT_MACH + ACT_TOT_ELCTY) = 0 THEN 0
			                            ELSE ROUND((TRGT_PCHS_PCOST_TOT / (ACT_TOT_MACH + ACT_TOT_ELCTY)) * 100, 1)
			   END                            AS TRGT_ACT_PER
			 , LABOR_COST_MFG_COST            AS LABOR_COST_MFG_COST --노무비및제조경비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((LABOR_COST_MFG_COST / ORDRS_PRC) * 100, 1)
			   END                            AS LABOR_COST_PER
			 , ACT_EXP_COST                    AS ACT_EXP_COST        --실행원가-경비관리비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_EXP_COST / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_EXP_PER
			 , ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST AS WONGA_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) / ORDRS_PRC) * 100, 1)
			   END                            AS WONGA_PER
		     , ORDRS_PRC - (ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) - ACT_EXP_COST AS FIT
		     , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ORDRS_PRC - (ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) - ACT_EXP_COST) / ORDRS_PRC) * 100, 1)
			   END                             AS FIT_PER
		     , CREAT_ID      AS CREAT_ID     --작성자ID
		     , CREAT_ID_NM   AS CREAT_ID_NM  --작성자명
		     , CREAT_DTTM    AS CREAT_DTTM   --작성일시
		     , UDT_ID        AS UDT_ID       --수정자ID
		     , UDT_ID_NM     AS UDT_ID_NM    --수정자명
		     , UDT_DTTM      AS UDT_DTTM     --수정일시 
		     , FILE_TRGT_KEY AS FILE_TRGT_KEY
		     , 1             AS COLLAPSE
		     , RRN           AS RRN
		     , MNG_NM
		     , 2		 AS LVL
		FROM   SJD
		UNION ALL
		SELECT CO_CD                          AS CO_CD        --회사코드
			 , ''                             AS CO_NM        --회사명
			 , ''                             AS ORDRS_NO     --수주번호
			 , ''                             AS ORDRS_DIV    --수주구분
			 , ''                             AS ORDRS_DIV_NM --수주구분명
			 , ''                             AS IO_DT        --수주일자
		     , CLNT_CD                        AS CLNT_CD      --고객사
		     , ''                             AS CLNT_NM      --고객사명
		     , ''                             AS CLNT_PJT     --고객사PJT
			 , ''                             AS CLNT_PJT_NM --고객사PJT명
			 , ''                             AS CTRT_NM   --계약명
		     , ORDRS_AMT                      AS ORDRS_AMT --수주금액
			 , ''                             AS EST_NO    --견적번호
			 , ''                             AS EST_DEG   --견적차수
		     , ''                             AS PID       --PID
		     , ''                             AS ID        --ID
			 , ''                             AS IO_SEQ    --IO_SEQ
			 , ' [소계] '                     AS SALES_CD  --SalesCode
			 , ''                             AS ORDRS_DTL_DIV10    --입력구분
			 , ''                             AS ORDRS_DTL_DIV10_NM --입력구분명
			 , ''                             AS PRDT_CD            --제품구분
			 , ''                             AS PRDT_NM            --제품구분명
			 , ''                             AS ITEM_DIV           --아이템구분
			 , ''                             AS ITEM_DIV_NM        --아이템구분명
			 , ''                             AS ORDRS_DTL_DIV20    --작업구분
			 , ''                             AS ORDRS_DTL_DIV20_NM --작업구분명
			 , ''                             AS ORDRS_DTL_DIV30    --자체구분
			 , ''                             AS ORDRS_DTL_DIV30_NM --자체구분명
			 , ''                             AS MCTYPE				--기계구분    
		     , ''                             AS MCTYPE_NM  		--기계구분명
			 , ''                             AS EQP_NM             --설비명
			 , ''						      AS DUDT_INTED_DT      --납기예정일
		     , ORDRS_PRC_MACH                 AS ORDRS_PRC_MACH     --수주가-기계파트
		     , ORDRS_PRC_ELCTY                AS ORDRS_PRC_ELCTY    --수주가-전기파트
		     , ORDRS_PRC                      AS ORDRS_PRC          --수주가
		     , ORDRS_QTY                      AS ORDRS_QTY          --수량 
		     , EST_EPCT_MAT_PRC               AS EST_EPCT_MAT_PRC   --견적예상재료비
		     , TRGT_PCHS_PCOST_MACH           AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		     , TRGT_PCHS_PCOST_ELCTY          AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			 , TRGT_PCHS_PCOST_TOT            AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((TRGT_PCHS_PCOST_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS TRGT_PCHS_PCOST_PER
			 , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			 , TRGT_PCHS_PCOST_MACH2          AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			 , ACT_RGL_MACH                   AS ACT_RGL_MACH        --실행원가-정상-기계
			 , ACT_OBS_MACH                   AS ACT_OBS_MACH        --실행원가-장애-기계
			 , ACT_TOT_MACH                   AS ACT_TOT_MACH        --실행원가-기계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_TOT_MACH / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_MACH
			 , ACT_RGL_ELCTY                  AS ACT_RGL_ELCTY       --실행원가-정상-전기
			 , ACT_OBS_ELCTY                  AS ACT_OBS_ELCTY       --실행원가-장애-전기
			 , ACT_TOT_ELCTY                  AS ACT_TOT_ELCTY       --실행원가-전기
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_TOT_ELCTY / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_ELCTY
			 , ACT_TOT AS ACT_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_TOT_PER
			 , CASE WHEN ACT_TOT = 0 THEN 0
			                         ELSE ROUND((TRGT_PCHS_PCOST_TOT / ACT_TOT) * 100, 1)
			   END                            AS TRGT_ACT_PER
			 , LABOR_COST_MFG_COST            AS LABOR_COST_MFG_COST --노무비및제조경비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((LABOR_COST_MFG_COST / ORDRS_PRC) * 100, 1)
			   END                            AS LABOR_COST_PER
			 , ACT_EXP_COST                   AS ACT_EXP_COST        --실행원가-경비관리비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_EXP_COST / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_EXP_PER
			 , WONGA_TOT AS WONGA_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((WONGA_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS WONGA_PER
		     , FIT AS FIT
		     , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((FIT / ORDRS_PRC) * 100, 1)
			   END                            AS FIT_PER
			 , ''                             AS CREAT_ID     --작성자ID
			 , ''                             AS CREAT_ID_NM  --작성자명
			 , ''                             AS CREAT_DTTM   --작성일시
			 , ''                             AS UDT_ID       --수정자ID
			 , ''                             AS UDT_ID_NM    --수정자명
			 , ''                             AS UDT_DTTM     --수정일시 
		     , FILE_TRGT_KEY                  AS FILE_TRGT_KEY
		     , 2                              AS COLLAPSE
		     , RRN                            AS RRN
		     , '' AS MNG_NM
		     , '' AS LVL
		FROM   SJG1
		UNION ALL
		SELECT CO_CD                          AS CO_CD        --회사코드
			 , ''                             AS CO_NM        --회사명
			 , ''                             AS ORDRS_NO     --수주번호
			 , ''                             AS ORDRS_DIV    --수주구분
			 , ''                             AS ORDRS_DIV_NM --수주구분명
			 , ''                             AS IO_DT        --수주일자
		     , ''                             AS CLNT_CD      --고객사
		     , '[ 합계 ]'                             AS CLNT_NM      --고객사명
		     , ''                             AS CLNT_PJT     --고객사PJT
			 , ''                             AS CLNT_PJT_NM --고객사PJT명
			 , ''                             AS CTRT_NM   --계약명
		     , ORDRS_AMT                      AS ORDRS_AMT --수주금액
			 , ''                             AS EST_NO    --견적번호
			 , ''                             AS EST_DEG   --견적차수
		     , ''                             AS PID       --PID
		     , ''                             AS ID        --ID
			 , ''                             AS IO_SEQ    --IO_SEQ
			 , ''                             AS SALES_CD  --SalesCode
			 , ''                             AS ORDRS_DTL_DIV10    --입력구분
			 , ''                             AS ORDRS_DTL_DIV10_NM --입력구분명
			 , ''                             AS PRDT_CD            --제품구분
			 , ''                             AS PRDT_NM            --제품구분명
			 , ''                             AS ITEM_DIV           --아이템구분
			 , ''                             AS ITEM_DIV_NM        --아이템구분명
			 , ''                             AS ORDRS_DTL_DIV20    --작업구분
			 , ''                             AS ORDRS_DTL_DIV20_NM --작업구분명
			 , ''                             AS ORDRS_DTL_DIV30    --자체구분
			 , ''                             AS ORDRS_DTL_DIV30_NM --자체구분명
			 , ''                             AS MCTYPE             --기계구분
		     , ''                             AS MCTYPE_NM          --기계구분명 
			 , ''                             AS EQP_NM             --설비명
			 ,''							  AS DUDT_INTED_DT      --납기예정일
		     , ORDRS_PRC_MACH                 AS ORDRS_PRC_MACH     --수주가-기계파트
		     , ORDRS_PRC_ELCTY                AS ORDRS_PRC_ELCTY    --수주가-전기파트
		     , ORDRS_PRC                      AS ORDRS_PRC          --수주가
		     , ORDRS_QTY                      AS ORDRS_QTY          --수량 
		     , EST_EPCT_MAT_PRC               AS EST_EPCT_MAT_PRC   --견적예상재료비
		     , TRGT_PCHS_PCOST_MACH           AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		     , TRGT_PCHS_PCOST_ELCTY          AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			 , TRGT_PCHS_PCOST_TOT            AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((TRGT_PCHS_PCOST_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS TRGT_PCHS_PCOST_PER
			 , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			 , TRGT_PCHS_PCOST_MACH2          AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			 , ACT_RGL_MACH                   AS ACT_RGL_MACH        --실행원가-정상-기계
			 , ACT_OBS_MACH                   AS ACT_OBS_MACH        --실행원가-장애-기계
			 , ACT_TOT_MACH                   AS ACT_TOT_MACH        --실행원가-기계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_TOT_MACH / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_MACH
			 , ACT_RGL_ELCTY                  AS ACT_RGL_ELCTY       --실행원가-정상-전기
			 , ACT_OBS_ELCTY                  AS ACT_OBS_ELCTY       --실행원가-장애-전기
			 , ACT_TOT_ELCTY                  AS ACT_TOT_ELCTY       --실행원가-전기
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_TOT_ELCTY / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_ELCTY
			 , ACT_TOT AS ACT_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_TOT_PER
			 , CASE WHEN ACT_TOT = 0 THEN 0
			                         ELSE ROUND((TRGT_PCHS_PCOST_TOT / ACT_TOT) * 100, 1)
			   END                            AS TRGT_ACT_PER
			 , LABOR_COST_MFG_COST            AS LABOR_COST_MFG_COST --노무비및제조경비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((LABOR_COST_MFG_COST / ORDRS_PRC) * 100, 1)
			   END                            AS LABOR_COST_PER
			 , ACT_EXP_COST                   AS ACT_EXP_COST        --실행원가-경비관리비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_EXP_COST / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_EXP_PER
			 , WONGA_TOT AS WONGA_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((WONGA_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS WONGA_PER
		     , FIT AS FIT
		     , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((FIT / ORDRS_PRC) * 100, 1)
			   END                            AS FIT_PER
			 , ''                             AS CREAT_ID     --작성자ID
			 , ''                             AS CREAT_ID_NM  --작성자명
			 , ''                             AS CREAT_DTTM   --작성일시
			 , ''                             AS UDT_ID       --수정자ID
			 , ''                             AS UDT_ID_NM    --수정자명
			 , ''                             AS UDT_DTTM     --수정일시 
		     , FILE_TRGT_KEY                  AS FILE_TRGT_KEY
		     , 3                              AS COLLAPSE
		     , RRN                            AS RRN
		     , '' AS MNG_NM
		     , '' AS LVL
		FROM   SJG2
		)
		SELECT *
		FROM   SJALL
		ORDER BY CO_CD, RRN, COLLAPSE
    </select>
    <select id="selectOrdrsList1" resultType="CamelMap">
        WITH SJM AS  
		     ( SELECT *
		        FROM (
				     SELECT ROWNUM AS RRN, AA.* 
					    FROM (  
						       SELECT M.*, C.CLNT_NM 
						         FROM TB_CR02M01 AS M  -- 수주마스터
						                LEFT OUTER JOIN TB_BM02M01 AS C   ON M.ORDRS_CLNT_CD = C.CLNT_CD
						        WHERE 1=1
						          <if test="coCd != null and !coCd.equals('')">
						          AND M.CO_CD    = #{coCd}
						          </if>
						          <if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
						          AND M.ORDRS_DT BETWEEN TO_DATE(#{strtDt}, 'YYYYMMDD') AND TO_DATE(#{endDt}, 'YYYYMMDD')
						          </if>
						          <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
						          AND M.ORDRS_CLNT_CD = #{ordrsClntCd}
						          </if>
						          <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
						          AND C.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
						          </if>
						         <if test="ordrsNo != null and !ordrsNo.equals('')">
						          AND M.ORDRS_NO = #{ordrsNo}
						         </if>
						         <if test="clntPjt != null and !clntPjt.equals('')">
						          AND M.CLNT_PJT = #{clntPjt}
						         </if>
						         <if test="ctrtNm != null and !ctrtNm.equals('')">
						          AND M.CTRT_NM  LIKE '%' || #{ctrtNm} || '%'
						         </if>
						         <if test="ordrsDiv != null and !ordrsDiv.equals('')">
						          AND M.ORDRS_DIV = #{ordrsDiv}
						         </if>
					           ORDER BY  CO_CD, CLNT_CD, CLNT_PJT, ORDRS_NO, FILE_TRGT_KEY
					         ) AS AA
					)
			    WHERE RRN BETWEEN ${firstIndex} AND ${lastIndex}
		     )
		   , SJD AS
		     ( SELECT SM.CO_CD                                                    AS CO_CD              --회사코드
		            , FN_CM05M01_CD_TO_NM(SM.CO_CD)             				   AS CO_NM              --회사명 
		            , SM.ORDRS_NO                                                  AS ORDRS_NO           --수주번호
		            , SM.ORDRS_DIV                                                 AS ORDRS_DIV          --수주구분
		            , FN_CM05M01_CD_TO_NM(SM.ORDRS_DIV)        					   AS ORDRS_DIV_NM       --수주구분명
		            , TO_CHAR(SM.ORDRS_DT, 'YYYY-MM-DD')                           AS IO_DT              --수주일자
		            , SM.ORDRS_CLNT_CD                                             AS CLNT_CD            --고객사
		            , SM.CLNT_NM                                                   AS CLNT_NM            --고객사명
		            , SM.CLNT_PJT                                                  AS CLNT_PJT           --고객사PJT
		            , SM.CTRT_NM                                                   AS CTRT_NM            --계약명
		            , SM.ORDRS_AMT                                                 AS ORDRS_AMT          --수주금액
		            , SM.EST_NO                                                    AS EST_NO             --견적번호
		            , SM.EST_DEG                                                   AS EST_DEG            --견적차수
		            , SM.CO_CD||'_'||SM.ORDRS_NO                                   AS PID                --
		            , SM.CO_CD||'_'||SM.ORDRS_NO||'_'||SD.ORDRS_SEQ                AS ID                 --
		            , SD.ORDRS_SEQ                                                 AS IO_SEQ             --
		            , NVL(SD.SALES_CD, SM.ORDRS_NO||'-'||NVL2(SD.ORDRS_SEQ,TO_CHAR(SD.ORDRS_SEQ, '00')||FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV10),'상세없음'))  AS SALES_CD           --SalesCode
		            , SD.ORDRS_DTL_DIV10                                           AS ORDRS_DTL_DIV10    --입력구분
		            , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV10)  					   AS ORDRS_DTL_DIV10_NM --입력구분명 
		            , SD.PRDT_CD                                                   AS PRDT_CD            --제품구분
		            , P.PRDT_NM                                                    AS PRDT_NM            --제품구분명
		            , SD.ITEM_DIV                                                  AS ITEM_DIV           --아이템구분
		            , FN_CM05M01_CD_TO_NM(SD.ITEM_DIV)  						   AS ITEM_DIV_NM        --아이템구분명 
		            , SD.ORDRS_DTL_DIV20                                           AS ORDRS_DTL_DIV20    --작업구분
		            , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV20)  					   AS ORDRS_DTL_DIV20_NM --작업구분명
		            , SD.ORDRS_DTL_DIV30                                           AS ORDRS_DTL_DIV30    --자체구분
		            , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV30)  					   AS ORDRS_DTL_DIV30_NM --자체구분명
		            , SD.MCTYPE                                           		   AS MCTYPE    --자체구분
		            , FN_CM05M01_CD_TO_NM(SD.MCTYPE)  					   		   AS MCTYPE_NM --자체구분명 
		            , SD.EQP_NM                                                    AS EQP_NM             --설비명
		            , SD.ORDRS_PRC_MACH                                            AS ORDRS_PRC_MACH     --수주가-기계파트
		            , SD.ORDRS_PRC_ELCTY                                           AS ORDRS_PRC_ELCTY    --수주가-전기파트
		            , SD.ORDRS_PRC                                                 AS ORDRS_PRC          --수주가
		            , SD.ORDRS_QTY                                                 AS ORDRS_QTY          --수량 
		            , SD.EST_EPCT_MAT_PRC                                          AS EST_EPCT_MAT_PRC   --견적예상재료비
		            , SD.TRGT_PCHS_PCOST_MACH                                      AS TRGT_PCHS_PCOST_MACH --목표구매원가-기계
		            , SD.TRGT_PCHS_PCOST_ELCTY                                     AS TRGT_PCHS_PCOST_ELCTY--목표구매원가-전기
		            , SD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN                            AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
		            , SD.LABOR_COST_MFG_COST                                       AS LABOR_COST_MFG_COST
		            , SD.CREAT_ID                                                  AS CREAT_ID      --작성자ID
		            , FN_CM06M01_ID_TO_NM(SD.CREAT_ID)        					   AS CREAT_ID_NM   --작성자명
		            , TO_CHAR(SD.CREAT_DTTM,'YYYY-MM-DD')                          AS CREAT_DTTM    --작성일시
		            , SD.UDT_ID                                                    AS UDT_ID        --수정자ID
		            , FN_CM06M01_ID_TO_NM(SD.UDT_ID)         					   AS UDT_ID_NM     --수정자명
		            , TO_CHAR(SD.UDT_DTTM, 'YYYY-MM-DD')                           AS UDT_DTTM      --수정일시 
		            , SM.FILE_TRGT_KEY                                             AS FILE_TRGT_KEY 
		            , RRN
		         FROM SJM AS SM --수주마스터
		                 LEFT OUTER JOIN TB_CR02D02 AS SD  ON SM.CO_CD    = SD.CO_CD
		                                                  AND SM.ORDRS_NO = SD.ORDRS_NO
		                 LEFT OUTER JOIN TB_BM01M01 AS P   ON SD.PRDT_CD  = P.PRDT_CD
		        WHERE 1 = 1
		     )
			SELECT CO_CD                   --회사코드
				     , FN_CM05M01_CD_TO_NM(CO_CD) CO_NM                   --회사명 
				     , ORDRS_NO                --수주번호
				     , ORDRS_DIV               --수주구분
				     , FN_CM05M01_CD_TO_NM(ORDRS_DIV) ORDRS_DIV_NM            --수주구분명
				     , TO_CHAR(ORDRS_DT, 'YYYY-MM-DD') IO_DT                   --수주일자
				     , ORDRS_CLNT_CD                 --고객사
				     , CLNT_NM                 --고객사명
				     , CLNT_PJT AS CLNT_PJT             --고객사PJT
				     , FN_CM05M01_CD_TO_NM(CLNT_PJT) AS CLNT_PJT_NM           --고객사PJT명
				     , CTRT_NM                 --계약명
				     , ORDRS_AMT               --수주금액
				     , EST_NO                  --견적번호
				     , EST_DEG                 --견적차수
				     , 1 AS LVL
				     , '' PID                     --PID
				     , CO_CD||'_'||ORDRS_NO ID  --ID
				     , 0  IO_SEQ                  --IO_SEQ
				     , ORDRS_NO AS  SALES_CD   --SalesCode
				     , '' ORDRS_DTL_DIV10      --입력구분
				     , '' ORDRS_DTL_DIV10_NM   --입력구분명 
				     , '' PRDT_CD              --제품구분
				     , '' PRDT_NM              --제품구분명
				     , '' ITEM_DIV             --아이템구분
				     , '' ITEM_DIV_NM          --아이템구분명 
				     , '' ORDRS_DTL_DIV20      --작업구분
				     , '' ORDRS_DTL_DIV20_NM   --작업구분명
				     , '' ORDRS_DTL_DIV30      --자체구분
				     , '' ORDRS_DTL_DIV30_NM   --자체구분명
				     , '' MCTYPE               --기계구분
		             , '' MCTYPE_NM            --기계구분명
				     , '' EQP_NM               --설비명
				     , '' ORDRS_PRC_MACH       --수주가-기계파트
				     , '' ORDRS_PRC_ELCTY      --수주가-전기파트
				     , '' ORDRS_PRC            --수주가
				     , '' ORDRS_QTY            --수량 
				     , '' EST_EPCT_MAT_PRC     --견적예상재료비
				     , '' TRGT_PCHS_PCOST_MACH --목표구매원가-기계
				     , '' TRGT_PCHS_PCOST_ELCTY--목표구매원가-전기
				     , '' TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
				     , '' LABOR_COST_MFG_COST  --노무비및제조경비
				     , CREAT_ID                --작성자ID
				     , FN_CM06M01_ID_TO_NM(CREAT_ID) CREAT_ID_NM             --작성자명
				     , TO_CHAR(CREAT_DTTM,'YYYY-MM-DD') CREAT_DTTM              --작성일시
				     , UDT_ID                  --수정자ID
				     , FN_CM06M01_ID_TO_NM(UDT_ID) UDT_ID_NM               --수정자명
				     , TO_CHAR(UDT_DTTM, 'YYYY-MM-DD') UDT_DTTM                --수정일시 
				     , FILE_TRGT_KEY
				     , 1 AS COLLAPSE
				     , RRN
				  FROM SJM
				UNION ALL
				SELECT CO_CD                --회사코드
				     , CO_NM                --회사명 
				     , ORDRS_NO             --수주번호
				     , ORDRS_DIV            --수주구분
				     , ORDRS_DIV_NM         --수주구분명
				     , IO_DT                --수주일자
				     , CLNT_CD              --고객사
				     , CLNT_NM              --고객사명
				     , CLNT_PJT AS CLNT_PJT             --고객사PJT
				     , FN_CM05M01_CD_TO_NM(CLNT_PJT) AS CLNT_PJT_NM           --고객사PJT
				     , CTRT_NM              --계약명
				     , ORDRS_AMT            --수주금액
				     , EST_NO               --견적번호
				     , EST_DEG              --견적차수
				     , 2 AS LVL
				     , PID                  --PID
				     , ID                   --ID
				     , IO_SEQ               --IO_SEQ
				     , SALES_CD             --SalesCode
				     , ORDRS_DTL_DIV10      --입력구분
				     , ORDRS_DTL_DIV10_NM   --입력구분명 
				     , PRDT_CD              --제품구분
				     , PRDT_NM              --제품구분명
				     , ITEM_DIV             --아이템구분
				     , ITEM_DIV_NM          --아이템구분명 
				     , ORDRS_DTL_DIV20      --작업구분
				     , ORDRS_DTL_DIV20_NM   --작업구분명
				     , ORDRS_DTL_DIV30      --자체구분
				     , ORDRS_DTL_DIV30_NM   --자체구분명 
				     , MCTYPE               --기계구분
		             , MCTYPE_NM            --기계구분명
				     , EQP_NM               --설비명
				     , ORDRS_PRC_MACH       --수주가-기계파트
				     , ORDRS_PRC_ELCTY      --수주가-전기파트
				     , ORDRS_PRC            --수주가
				     , ORDRS_QTY            --수량 
				     , EST_EPCT_MAT_PRC     --견적예상재료비
				     , TRGT_PCHS_PCOST_MACH --목표구매원가-기계
				     , TRGT_PCHS_PCOST_ELCTY--목표구매원가-전기
				     , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
				     , LABOR_COST_MFG_COST  --노무비및제조경비
				     , CREAT_ID             --작성자ID
				     , CREAT_ID_NM          --작성자명
				     , CREAT_DTTM           --작성일시
				     , UDT_ID               --수정자ID
				     , UDT_ID_NM            --수정자명
				     , UDT_DTTM             --수정일시 
				     , FILE_TRGT_KEY
				     , 0 AS COLLAPSE
				     , RRN
				  FROM SJD
    </select>

    <select id="selectOrdrsListPop" resultType="CamelMap">
        SELECT C.*
             , U1.NAME AS MNG_NM
        FROM   (
		        SELECT TO_CHAR(T.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
                     , TO_CHAR(T.FWD_EXCH_JOIN_DT, 'YYYY-MM-DD') AS FWD_EXCH_JOIN_DT
                     , FN_CM05M01_CD_TO_NM(T.CURR_CD) AS CURR_NM
                     , FN_CM05M01_CD_TO_NM(T.PMNT_MTD) AS PMNT_MTD_NM
                     , FN_CM05M01_CD_TO_NM(T.CO_CD) AS CO_NM
                     , ROWNUM AS RNUM
                     , T.*
		        FROM   (
                        SELECT *
                        FROM   TB_CR02M01 AS A
                               LEFT JOIN TB_BM02M01 B ON A.ORDRS_CLNT_CD = B.CLNT_CD
                        ORDER BY A.ORDRS_DT DESC, A.ORDRS_NO
                       ) AS T
                WHERE  1 = 1
                <if test="strtDt != null and !strtDt.equals('')">
                AND    T.ORDRS_DT BETWEEN #{strtDt} AND #{endDt}
		        </if>
		        <if test="coCd != null and !coCd.equals('')">
                AND    T.CO_CD = #{coCd}
		        </if>
		        <if test="clntCd != null and !clntCd.equals('')">
                AND    T.ORDRS_CLNT_CD = #{clntCd}
		        </if>
		        <if test="ctrtNm != null and !ctrtNm.equals('')">
		        AND    T.CTRT_NM LIKE '%' || #{ctrtNm} || '%'
		        </if>
		        <if test="ordrsDiv != null and !ordrsDiv.equals('')">
		        AND    T.ORDRS_DIV = #{ordrsDiv}
		        </if>
		        <if test="searchType != null and searchType.equals('ORDRS_NO')">
                AND    T.ORDRS_NO LIKE '%' || #{searchValue} || '%'
		        </if>
		        <if test="ordrsNo != null and !ordrsNo.equals('')">
                AND    T.ORDRS_NO LIKE '%'|| #{ordrsNo} ||'%'		
		        </if>
		        <if test="clntPjt != null and !clntPjt.equals('')">
                AND    T.CLNT_PJT LIKE '%' || #{clntPjt} || '%'
		        </if>
		        <if test="clntNm != null and !clntNm.equals('')">
                AND    T.CLNT_NM LIKE '%' || #{clntNm} || '%'
		        </if>
               ) AS C
               LEFT OUTER JOIN TB_CM06M01 AS U1 ON U1.ID = C.MNG_ID
		WHERE  C.RNUM BETWEEN #{firstIndex} AND #{lastIndex}

    </select>
    <resultMap id="resultInfoMap" type="CamelMap">
        <collection select="selectPmntPlan" property="plans" column="{coCd=CO_CD, ordrsNo=ORDRS_NO}" ofType="CamelMap"/>
        <collection select="selectOrdrsDetails" property="details" column="{coCd=CO_CD, ordrsNo=ORDRS_NO}"
                    ofType="CamelMap"/>
    </resultMap>
    <select id="selectOrdrsInfo" parameterType="map" resultMap="resultInfoMap">
        SELECT TO_CHAR(T.ORDRS_DT, 'YYYY-MM-DD')         AS ORDRS_DT,
               TO_CHAR(T.FWD_EXCH_JOIN_DT, 'YYYY-MM-DD') AS FWD_EXCH_JOIN_DT,
               T.*,
               B.CLNT_NM  AS ORDRS_CLNT_NM,
               FN_CM06M01_ID_TO_NM(MNG_ID) AS MNG_ID_NM
        FROM (SELECT *
              FROM TB_CR02M01 
              WHERE CO_CD = #{coCd}
                AND FILE_TRGT_KEY = #{fileTrgtKey}
              ) T 
                   LEFT OUTER JOIN TB_BM02M01 B ON T.ORDRS_CLNT_CD = B.CLNT_CD
    </select>

    <select id="selectOrdrsDetails" parameterType="map" resultType="CamelMap">
        SELECT CO_CD
             , ORDRS_NO
             , ORDRS_SEQ
             , ORDRS_DTL_DIV10
             , PRDT_CD
             , ITEM_DIV
             , ORDRS_DTL_DIV20
             , ORDRS_DTL_DIV30
             , MCTYPE
             , SALES_CD
             , EQP_NM
             , TO_CHAR(DUDT_INTEND_DT, 'YYYY-MM-DD') AS DUDT_INTEND_DT
             , ORDRS_PRC_MACH
             , ORDRS_PRC_ELCTY
             , ORDRS_PRC
             , ORDRS_QTY
             , EST_EPCT_MAT_PRC
             , TRGT_PCHS_PCOST_MACH
             , TRGT_PCHS_PCOST_ELCTY
             , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN
             , LABOR_COST_MFG_COST
             , DTL_RMK
             , CREAT_ID
             , CREAT_PGM
             , TO_CHAR(CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM
             , 'U' AS DATA_CHK
        FROM TB_CR02D02
        WHERE CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
    </select>

    <select id="selectPmntPlan" parameterType="map" resultType="CamelMap">
        SELECT TO_CHAR(T.CLMN_DT, 'YYYY-MM-DD')      AS CLMN_DT,
               TO_CHAR(T.BILL_PBLS_DT, 'YYYY-MM-DD') AS BILL_PBLS_DT,
               F_BIL_CONF_AMT(T.CO_CD, T.ORDRS_NO, T.CLMN_PLAN_SEQ) AS 매출확정합계,
               F_BIL_TAX_AMT(T.CO_CD, T.ORDRS_NO, T.CLMN_PLAN_SEQ) AS 세금계산서합계,
               F_BIL_CLMN_AMT(T.CO_CD, T.ORDRS_NO, T.CLMN_PLAN_SEQ) AS 수금합계,
               T.*
        FROM (SELECT *
              FROM TB_CR02D01
              WHERE CO_CD = #{coCd}
                AND ORDRS_NO = #{ordrsNo}) T
    </select>
    <select id="selectMaxOrdrsNo" resultType="java.lang.String">
        SELECT CONCAT(SUBSTR(TO_CHAR(CURRENT_DATE, 'YY'), 1, 2),
                      LPAD(NVL(MAX(SUBSTR(ordrs_no, 3, 3)), 0) + 1, 3, '0')) as maxOrdrsNo
        FROM TB_CR02M01
        WHERE CO_CD = #{coCd}
          AND SUBSTR(ordrs_no, 1, 2) = SUBSTR(TO_CHAR(CURRENT_DATE, 'YY'), 1, 2)
    </select>
    <select id="selectAsMaxOrdrsNo" resultType="java.lang.String">
        SELECT CONCAT(SUBSTR(TO_CHAR(CURRENT_DATE, 'YY'), 1, 2),
                      LPAD(NVL(MAX(SUBSTR(ordrs_no, 5, 3)), 0) + 1, 3, '0')) as maxOrdrsNo
        FROM TB_CR02M01
        WHERE CO_CD = #{coCd}
          AND SUBSTR(ordrs_no, 3, 2) = SUBSTR(TO_CHAR(CURRENT_DATE, 'YY'), 1, 2)
          AND ORDRS_NO LIKE 'AS%'
    </select>
    <select id="selectItemDivEtc" resultType="java.lang.String">
        SELECT CODE_ETC
          FROM TB_CM05M01
        WHERE CODE_ID = #{itemDiv}
    </select>
    
    <insert id="insertOrdrs" parameterType="map">
        INSERT INTO TB_CR02M01
        <selectKey keyProperty="fileTrgtKey" resultType="String" order="BEFORE">
            SELECT
            TO_CHAR(NVL(MAX(TO_NUMBER(FILE_TRGT_KEY)), 0) + 1)
            FROM TB_CR02M01
        </selectKey>
                (
                    CO_CD,
                    ORDRS_NO,
                    EST_NO,
                    EST_DEG,
                    ORDRS_CLNT_CD,
                    ORDRS_DT,
                    ORDRS_DIV,
                    CLNT_PJT,
                    CTRT_NM,
                    CURR_CD,
                    ORDRS_AMT,
                    FWD_EXCH_JOIN_DT,
                    FWD_EXCH_CHK_LIST,
                    ORDRGER,
                    EXRATE,
                    MNG_ID,
                    CTRT_DOC,
                    PMNT_MTD,
                    ORDRS_RMK,
                    ORGN_SALES_CD,
                    INPEXP_CD,
                    FILE_TRGT_KEY,
                    CREAT_ID,
                    CREAT_PGM,
                    CREAT_DTTM
                )
        VALUES (
                    #{coCd},
                    #{ordrsNo},
                    #{estNo},
                    #{estDeg},
                    #{ordrsClntCd},
                    #{ordrsDt},
                    #{ordrsDiv},
                    #{clntPjt},
                    #{ctrtNm},
                    #{currCd},
                    #{ordrsAmt},
                    #{fwdExchJoinDt},
                    #{fwdExchChkList},
                    #{ordrger},
                    #{exrate},
                    #{mngId},
                    #{ctrtDoc},
                    #{pmntMtd},
                    #{ordrsRmk},
                    #{orgnSalesCd},
                    #{inpexpCd},
                    #{fileTrgtKey},
                    #{userId},
			 		#{pgmId},
			 		SYSDATE
                )
    </insert>
    <update id="updateOrdrs" parameterType="map">
        UPDATE TB_CR02M01
        
        SET EST_NO            = #{estNo},
            ORDRS_DT          = #{ordrsDt},
            ORDRS_DIV         = #{ordrsDiv},
            CLNT_PJT          = #{clntPjt},
            CTRT_NM           = #{ctrtNm},
            CURR_CD           = #{currCd},
            ORDRS_AMT         = #{ordrsAmt},
            FWD_EXCH_JOIN_DT  = #{fwdExchJoinDt},
            FWD_EXCH_CHK_LIST = #{fwdExchChkList},
            ORDRGER           = #{ordrger},
            EXRATE            = #{exrate},
            MNG_ID            = #{mngId},
            CTRT_DOC          = #{ctrtDoc, jdbcType=VARCHAR}, 
            PMNT_MTD          = #{pmntMtd},
            ORDRS_RMK         = #{ordrsRmk},
            ORGN_SALES_CD     = #{orgnSalesCd},
            INPEXP_CD         = #{inpexpCd},
            UDT_ID  		  = #{userId, jdbcType=VARCHAR},
			UDT_PGM 		  = #{pgmId, jdbcType=VARCHAR},
			UDT_DTTM 		  = SYSDATE
            WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>
    
    <select id="callUpdateOrdrsNo" statementType="CALLABLE" parameterType="map">
        {call SP_CR02M01_U(
	        #{coCd      , mode=IN, jdbcType=VARCHAR},
	        #{ordrsNo   , mode=IN, jdbcType=VARCHAR},
	        #{userId    , mode=IN, jdbcType=VARCHAR},
	        #{pgmId     , mode=IN, jdbcType=VARCHAR},
	        #{errMsg     , mode=OUT, jdbcType=VARCHAR}
	    )}
    </select>
    
    <select id="callUpdateProjectMaster" statementType="CALLABLE" parameterType="map">
        {call SP_CR02M01_U_BM06_UPR(
	        #{coCd      , mode=IN, jdbcType=VARCHAR},
	        #{ordrsNo   , mode=IN, jdbcType=VARCHAR},
	        #{userId    , mode=IN, jdbcType=VARCHAR},
	        #{pgmId     , mode=IN, jdbcType=VARCHAR},
	        #{errMsg     , mode=OUT, jdbcType=VARCHAR}
	    )}
    </select>
    
    <insert id="insertClmnPlan" parameterType="map">
        INSERT INTO TB_CR02D01
            (
             CO_CD, 
             ORDRS_NO, 
             CLMN_PLAN_SEQ, 
             CLMN_PLAN_DIV, 
             CLMN_DIV_SEQ, 
             CLMN_RATE, 
             CLMN_AMT,
             BILL_PBLS_DT, 
             CLMN_DT, 
             PMNT_DT_AFTER_BILL,
              CURR_CD, 
              CLMN_MGMT_STATUS,
              CREAT_ID,
              CREAT_PGM,
              CREAT_DTTM
             )
        VALUES
            (
             #{coCd}, 
             #{ordrsNo , jdbcType=VARCHAR}, 
             #{clmnPlanSeq},
             #{clmnPlanDiv, jdbcType=VARCHAR}, 
             #{clmnDivSeq}, 
             #{clmnRate},
             #{clmnAmt}, 
             #{billPblsDt, jdbcType=VARCHAR}, 
             #{clmnDt, jdbcType=VARCHAR},
             #{pmntDtAfterBill, jdbcType=VARCHAR}, 
             #{currCd, jdbcType=VARCHAR}, 
             #{clmnMgmtStatus, jdbcType=VARCHAR},
             #{userId},
			 #{pgmId},
			 SYSDATE
             )
    </insert>
    
    <update id="updateEstDeleteConfirm" parameterType="map">
        UPDATE TB_CR01M01
        SET ORDRS_YN = 'N',
            ORDRS_DT = ''
        WHERE CO_CD = #{coCd}
          AND EST_NO = #{estNo}
    </update>
    
    <update id="updateClmnPlan" parameterType="map">
        UPDATE TB_CR02D01
        SET CLMN_PLAN_DIV      = #{clmnPlanDiv}, -- 수금구분
            CLMN_DIV_SEQ       = #{clmnDivSeq},  -- 수금계획순번
            CLMN_RATE          = #{clmnRate},    -- 수금비율
            CLMN_AMT           = #{clmnAmt},     -- 수금금액
            BILL_PBLS_DT       = #{billPblsDt, jdbcType=VARCHAR},  -- 계산서발행일자
            CLMN_DT            = #{clmnDt, jdbcType=VARCHAR},      -- 수금일자
            PMNT_DT_AFTER_BILL = #{pmntDtAfterBill, jdbcType=VARCHAR}, -- 계산서 발행 후 지급시기
            CURR_CD            = #{currCd, jdbcType=VARCHAR},      -- 환율
            CLMN_MGMT_STATUS   = #{clmnMgmtStatus, jdbcType=VARCHAR} -- 수금관리상황
        WHERE CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
          AND CLMN_PLAN_SEQ = #{clmnPlanSeq}
    </update>
    
    <insert id="insertClmnPlanHis" parameterType="map">
        INSERT INTO TB_CR02D01HIST
        (
            CO_CD, 
            ORDRS_NO, 
            CLMN_PLAN_DEG, 
            CLMN_PLAN_SEQ, 
            CLMN_PLAN_DIV, 
            CLMN_DIV_SEQ, 
            CLMN_RATE, 
            CLMN_AMT,
            BILL_PBLS_DT, 
            CLMN_DT, 
            PMNT_DT_AFTER_BILL, 
            CURR_CD, 
            CLMN_MGMT_STATUS
         )
        VALUES (
                   #{coCd}, 
                   #{ordrsNo, jdbcType=VARCHAR}, 
                   1, 
                   #{clmnPlanSeq},
                   #{clmnPlanDiv, jdbcType=VARCHAR}, 
                   #{clmnDivSeq}, 
                   #{clmnRate},
                   #{clmnAmt}, 
                   #{billPblsDt, jdbcType=VARCHAR}, 
                   #{clmnDt, jdbcType=VARCHAR},
                   #{pmntDtAfterBill, jdbcType=VARCHAR}, 
                   #{currCd, jdbcType=VARCHAR}, 
                   #{clmnMgmtStatus, jdbcType=VARCHAR}
                )
    </insert>
    
    
    <select id="selectDegKey" resultType="int" parameterType="map">
            SELECT
            NVL(MAX(TO_NUMBER(CLMN_PLAN_DEG)), 0) + 1
            FROM TB_CR02D01HIST
            WHERE ORDRS_NO = #{ordrsNo}
    </select>
        
        
    <insert id="insertUpdatePlanHis" parameterType="map">
        INSERT INTO TB_CR02D01HIST
        (
            CO_CD, 
            ORDRS_NO, 
            CLMN_PLAN_DEG, 
            CLMN_PLAN_SEQ, 
            CLMN_PLAN_DIV, 
            CLMN_DIV_SEQ, 
            CLMN_RATE, 
            CLMN_AMT,
            BILL_PBLS_DT, 
            CLMN_DT, 
            PMNT_DT_AFTER_BILL, 
            CURR_CD, 
            CLMN_MGMT_STATUS
         )
        VALUES (
                   #{coCd}, 
                   #{ordrsNo, jdbcType=VARCHAR}, 
                   #{clmnPlanDegKey}, 
                   #{clmnPlanSeq},
                   #{clmnPlanDiv, jdbcType=VARCHAR}, 
                   #{clmnDivSeq}, 
                   #{clmnRate},
                   #{clmnAmt}, 
                   #{billPblsDt}, 
                   #{clmnDt},
                   #{pmntDtAfterBill}, 
                   #{currCd, jdbcType=VARCHAR}, 
                   #{clmnMgmtStatus, jdbcType=VARCHAR}
                )
    </insert>
    <insert id="insertOrdrsDetail" parameterType="map">
        INSERT INTO TB_CR02D02
        (
                -- 1. 회사 코드
                CO_CD,
                -- 2. 주문 번호
                ORDRS_NO,
                -- 3. 주문 시퀀스
                ORDRS_SEQ,
                -- 4. 주문 세부 정보 Div10
                ORDRS_DTL_DIV10,
                -- 5. 제품 코드
                PRDT_CD,
                -- 6. 항목 분류
                ITEM_DIV,
                -- 7. 판매 코드
                SALES_CD,
                -- 8. 장비 이름
                EQP_NM,
                -- 8-2. 납기예정일
                DUDT_INTEND_DT,
                -- 9. 주문 가격 기계
                ORDRS_PRC_MACH,
                -- 10. 주문 가격 전기
                ORDRS_PRC_ELCTY,
                -- 11. 주문 가격
                ORDRS_PRC,
                -- 12. 주문 수량
                ORDRS_QTY,
                -- 13. 예상 원자재 가격
                EST_EPCT_MAT_PRC,
                -- 14. 목표 구매 가격 기계
                TRGT_PCHS_PCOST_MACH,
                -- 15. 목표 구매 가격 전기
                TRGT_PCHS_PCOST_ELCTY,
                -- 16. 목표 구매 가격 내부 처리
                TRGT_PCHS_PCOST_IN_HOUSE_PRCSN,
                -- 17. 노동비 제조비
                LABOR_COST_MFG_COST,
                -- 19. 주문 세부 정보 Div20
                ORDRS_DTL_DIV20,
                -- 20. 주문 세부 정보 Div30
                ORDRS_DTL_DIV30,
                -- 21. 주문 세부 정보 기계구분 MCTYPE
                MCTYPE,
                CREAT_ID,
                CREAT_PGM,
                CREAT_DTTM,
                DTL_RMK
            )
        VALUES (
                   -- 1. 회사 코드
                   #{coCd, jdbcType=VARCHAR},
                   -- 2. 주문 번호
                   #{ordrsNo, jdbcType=VARCHAR},
                   -- 3. 주문 시퀀스
                   #{ordrsSeq},
                   -- 4. 주문 세부 정보 Div10
                   #{ordrsDtlDiv10, jdbcType=VARCHAR},
                   -- 5. 제품 코드
                   #{prdtCd, jdbcType=VARCHAR},
                   -- 6. 항목 분류
                   #{itemDiv, jdbcType=VARCHAR},
                   -- 7. 판매 코드
                   #{salesCd, jdbcType=VARCHAR},
                   -- 8. 장비 이름
                   #{eqpNm, jdbcType=VARCHAR},
                   -- 8-2. 납기예정일
                   #{dudtIntendDt, jdbcType=VARCHAR},
                   -- 9. 주문 가격 기계
                   #{ordrsPrcMach},
                   -- 10. 주문 가격 전기
                   #{ordrsPrcElcty},
                   -- 11. 주문 가격
                   #{ordrsPrc},
                   -- 12. 주문 수량
                   #{ordrsQty},
                   -- 13. 예상 원자재 가격
                   #{estEpctMatPrc},
                   -- 14. 목표 구매 가격 기계
                   #{trgtPchsPcostMach},
                   -- 15. 목표 구매 가격 전기
                   #{trgtPchsPcostElcty},
                   -- 16. 목표 구매 가격 내부 처리
                   #{trgtPchsPcostInHousePrcsn},
                   -- 17. 노동비 제조비
                   #{laborCostMfgCost},
                   -- 19. 주문 세부 정보 Div20
                   #{ordrsDtlDiv20, jdbcType=VARCHAR},
                   -- 20. 주문 세부 정보 Div30
                   #{ordrsDtlDiv30, jdbcType=VARCHAR},
                   -- 21. 주문 세부 정보 기계구분 Div40
                   #{mctype, jdbcType=VARCHAR},
                   #{userId, jdbcType=VARCHAR},
			       #{pgmId, jdbcType=VARCHAR},
			       SYSDATE,
			       #{dtlRmk, jdbcType=VARCHAR}
               )
    </insert>
    <update id="updateOrdrsDetail" parameterType="map">
        UPDATE TB_CR02D02
        SET ORDRS_DTL_DIV10                = #{ordrsDtlDiv10, jdbcType=VARCHAR},  -- 작업구분
	        PRDT_CD		                   = #{prdtCd, jdbcType=VARCHAR},  -- 제품코드
	        ITEM_DIV                       = #{itemDiv, jdbcType=VARCHAR},  -- 항목분류
	        ORDRS_DTL_DIV20                = #{ordrsDtlDiv20, jdbcType=VARCHAR},  -- 작업구분
            ORDRS_DTL_DIV30				   = #{ordrsDtlDiv30, jdbcType=VARCHAR},  -- 자체구분
            MCTYPE  					   = #{mctype, jdbcType=VARCHAR},         --기계구분
            EQP_NM						   = #{eqpNm, jdbcType=VARCHAR},          -- 설비명
            DUDT_INTEND_DT                 = #{dudtIntendDt, jdbcType=VARCHAR},   -- 납기예정일
            ORDRS_PRC_MACH				   = #{ordrsPrcMach},   -- 기계Part
            ORDRS_PRC_ELCTY				   = #{ordrsPrcElcty},  -- 전기Part
            ORDRS_PRC					   = #{ordrsPrc},       -- 수주가 합계
            ORDRS_QTY					   = #{ordrsQty},	    -- 수주수량
            EST_EPCT_MAT_PRC			   = #{estEpctMatPrc},  -- 견적예상재료비
            TRGT_PCHS_PCOST_MACH		   = #{trgtPchsPcostMach}, -- 목표구매원가 기계
            TRGT_PCHS_PCOST_ELCTY		   = #{trgtPchsPcostElcty}, --목표구매원가 전기
            TRGT_PCHS_PCOST_IN_HOUSE_PRCSN = #{trgtPchsPcostInHousePrcsn}, --목표원가 기계자체가공
            LABOR_COST_MFG_COST			   = #{laborCostMfgCost},   -- 노무비 및 제조경비
			DTL_RMK						   = #{dtlRmk, jdbcType=VARCHAR},
			UDT_ID  					   = #{userId, jdbcType=VARCHAR},
			UDT_PGM 					   = #{pgmId, jdbcType=VARCHAR},
			UDT_DTTM 					   = SYSDATE
        WHERE CO_CD = #{coCd}
          AND ORDRS_NO =  #{ordrsNo}
          AND ORDRS_SEQ = #{ordrsSeq}
    </update>
    <delete id="deleteOrdrs">
        DELETE
        FROM TB_CR02M01
        WHERE 1 = 1
          AND CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
    </delete>
    <delete id="deleteOrdrsPlan">
        DELETE
        FROM TB_CR02D01
        WHERE 1 = 1
          AND CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
    </delete>
    
    <delete id="deleteOrdrsPlanHis">
        DELETE
        FROM TB_CR02D01HIST
        WHERE 1 = 1
          AND CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
    </delete>
    <delete id="deleteOrdrsDetail">
        DELETE
        FROM TB_CR02D02
        WHERE 1 = 1
          AND CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}
          <if test="ordrsSeq != null and !ordrsSeq.equals('')">
          AND ORDRS_SEQ = #{ordrsSeq}
          </if>
    </delete>
    <select id="selectOrdrsPlanHisCount" resultType="int">
        SELECT COUNT(*)
        FROM TB_CR02D01HIST A
        WHERE 1 = 1
    </select>
    <select id="selectOrdrsPlanHis" parameterType="map" resultType="camelMap">
        SELECT CO_CD, ORDRS_NO, CLMN_PLAN_SEQ, CLMN_PLAN_DEG, CLMN_PLAN_DIV, CLMN_DIV_SEQ,
               CLMN_RATE, CLMN_AMT, BILL_PBLS_DT, TO_CHAR(CLMN_DT, 'YYYY-MM-DD') AS CLMN_DT, PMNT_DT_AFTER_BILL, CURR_CD,
               CLMN_PLAN_RMK, CREAT_DTTM, TO_CHAR(UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM
        FROM TB_CR02D01HIST
        WHERE CO_CD = #{coCd}
          AND ORDRS_NO = #{ordrsNo}


    </select>

  <select id="selectWbsLeftSalesCodeTreeList" parameterType="Map" resultType="camelMap">
  /*selectWbsLeftSalesCodeTreeList*/
    SELECT DISTINCT
           '' PID
         , #{coCd} ID
         , #{coCd} CO_CD  -- 회사코드
         , FN_CM05M01_CD_TO_NM(#{coCd}) AS CO_CD_NM
         , '전체' ORDRS_NO
         , '전사 현황' AS SALES_CD
         , '' ORGN_SALES_CD
         , '' ORDRS_CLNT_CD  -- 고객사
         , '전체' AS ORDRS_CLNT_NM
         , '' CLNT_PJT
         , '' CLNT_PJT_NM
         , '' ORDRS_DTL_DIV10  -- 입력구분
         , '' ORDRS_DTL_DIV20  -- 신작구분
         , '' AS ORDRS_DTL_DIV20_NM
         , '' ORDRS_DTL_DIV30  -- 자체구분
         , '' AS MCTYPE  -- 기계구분
         , '' EQP_NM  -- 설비명
         , 0 PLAN_CNT
         , 'E' WBS_PLAN_OS_YN
         , 'E' PLAN_LOCK_YN
         , 'E' PLAN_CLOSE_YN
         , 0 RSULT_CNT
         , 'E' RSULT_LOCK_YN
         , 'E' RSULT_CLOSE_YN
         , '' PRDT_CD
         , '' AS PRDT_CD_NM
         , '' ITEM_DIV
         , '' ITEM_DIV_NM
         , '' DATA_GBN
         , '' CTRT_NM
    FROM   DUAL
    UNION ALL  --회사명을 Top LEVEL 생성
    SELECT DISTINCT
           X.CO_CD PID
         , TO_CHAR(Y.ORDRS_CLNT_CD) ID
         , X.CO_CD  -- 회사코드
         , FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM
         , A.CLNT_NM
         , A.CLNT_NM  AS SALES_CD
         , '' ORGN_SALES_CD
         , Y.ORDRS_CLNT_CD  -- 고객사
         , A.CLNT_NM  AS ORDRS_CLNT_NM
         , '' CLNT_PJT
         , '' CLNT_PJT_NM
         , '' ORDRS_DTL_DIV10  -- 입력구분
         , '' ORDRS_DTL_DIV20  -- 신작구분
         , '' AS ORDRS_DTL_DIV20_NM
         , '' ORDRS_DTL_DIV30  -- 자체구분
         , '' AS MCTYPE  -- 기계구분
         , ''  -- 설비명
         , 0 PLAN_CNT
         , 'E' WBS_PLAN_OS_YN
         , 'E' PLAN_LOCK_YN
         , 'E' PLAN_CLOSE_YN
         , 0 RSULT_CNT
         , 'E' RSULT_LOCK_YN
         , 'E' RSULT_CLOSE_YN
         , '' PRDT_CD
         , '' AS PRDT_CD_NM
         , '' ITEM_DIV
         , '' ITEM_DIV_NM
         , '' DATA_GBN
         , '' CTRT_NM
    FROM   TB_CR02D02 X
           INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                   AND X.ORDRS_NO = Y.ORDRS_NO
           LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
    WHERE  X.CO_CD = #{coCd}
    <if test="salesCd != null and !salesCd.equals('')">
    AND    X.SALES_CD like '%${salesCd}%'
    </if>
    UNION ALL --오더번호로 1 LEVEL 생성
    SELECT DISTINCT
           TO_CHAR(Y.ORDRS_CLNT_CD) PID
         , X.ORDRS_NO ID
         , X.CO_CD  -- 회사코드
         , FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM
         , X.ORDRS_NO AS ORDRS_NO
         , X.ORDRS_NO AS SALES_CD
         , ''
         , Y.ORDRS_CLNT_CD  -- 고객사
         , A.CLNT_NM  AS ORDRS_CLNT_NM
         , ''
         , ''
         , ''
         , ''
         , ''
         , ''
         , '' AS MCTYPE  -- 기계구분
         , ''  -- 설비명
         , 0 PLAN_CNT
         , 'E' WBS_PLAN_OS_YN
         , 'E' PLAN_LOCK_YN
         , 'E' PLAN_CLOSE_YN
         , 0 RSULT_CNT
         , 'E' RSULT_LOCK_YN
         , 'E' RSULT_CLOSE_YN
         , '' PRDT_CD
         , '' AS PRDT_CD_NM
         , '' ITEM_DIV
         , '' ITEM_DIV_NM
         , '' DATA_GBN
         , '' CTRT_NM
    FROM   TB_CR02D02 X
           INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                   AND X.ORDRS_NO = Y.ORDRS_NO
           LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
    WHERE  X.CO_CD = #{coCd}
    <if test="salesCd != null and !salesCd.equals('')">
    AND    X.SALES_CD like '%${salesCd}%'
    </if>
    UNION ALL
    SELECT --Sales 코드 추출
           X.ORDRS_NO PID
         , X.SALES_CD ID
         , X.CO_CD  -- 회사코드
         , FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM
         , X.ORDRS_NO  -- 수주번호
         , X.SALES_CD  -- SALES CODE
         , max(Y.ORGN_SALES_CD)  -- 원천 SALES CODE
         , max(Y.ORDRS_CLNT_CD)  -- 고객사
         , max(A.CLNT_NM)  AS ORDRS_CLNT_NM
         , max(Y.CLNT_PJT)  -- 고객사 PJT
         , FN_CM05M01_CD_TO_NM(max(Y.CLNT_PJT)) AS CLNT_PJT_NM
         , max(X.ORDRS_DTL_DIV10)  -- 입력구분
         , max(X.ORDRS_DTL_DIV20)  -- 신작구분
         , FN_CM05M01_CD_TO_NM(max(X.ORDRS_DTL_DIV20)) AS ORDRS_DTL_DIV20_NM
         , max(X.ORDRS_DTL_DIV30)  -- 자체구분
         , max(X.MCTYPE)  -- 기계구분
         , max(X.EQP_NM)  -- 설비명
         , COUNT(W.FILE_TRGT_KEY) PLAN_CNT
         , NVL(max(W.WBS_PLAN_OS_YN),'N') WBS_PLAN_OS_YN
         , NVL(max(W.LOCK_YN),'N') PLAN_LOCK_YN
         , NVL(max(W.CLOSE_YN),'N') PLAN_CLOSE_YN
         , COUNT(Z.FILE_TRGT_KEY) RSULT_CNT
         , NVL(max(Z.LOCK_YN),'N') RSULT_LOCK_YN
         , NVL(max(Z.CLOSE_YN),'N') RSULT_CLOSE_YN
         , max(X.PRDT_CD) PRDT_CD
         , FN_BM01M01_ID_TO_NM(max(X.PRDT_CD)) AS PRDT_CD_NM
         , max(X.ITEM_DIV) ITEM_DIV
         , FN_CM05M01_CD_TO_NM(max(X.ITEM_DIV)) AS ITEM_DIV_NM
         , 'D' DATA_GBN  /* 원시데이타 */
         , Y.CTRT_NM   /* 계약명 */
    FROM   TB_CR02D02 X
           INNER JOIN TB_CR02M01 Y  ON X.CO_CD    = Y.CO_CD
                                   AND X.ORDRS_NO = Y.ORDRS_NO
                                   AND X.CO_CD = #{coCd}
                                   <if test="salesCd != null and !salesCd.equals('')">
                                   AND X.SALES_CD like '%${salesCd}%'
                                   </if>
					 CROSS JOIN (
                       SELECT CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND
                            , CODE_ID
                            , CODE_RPRC
                            , CODE_NM
                            , CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1
                            , CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2
                            , CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3
                            , LPAD('', 3*(LEVEL-1)) || LEVEL LVL
                            , REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH
                            , CONNECT_BY_ISLEAF AS IS_LEAF
                            , CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
											 FROM   TB_CM05M01
                       START WITH CODE_ID = 'WBSDIV'
                       CONNECT BY PRIOR CODE_ID  =  CODE_KIND
					            ) CD
           LEFT OUTER JOIN TB_WB01M01 W  ON X.CO_CD    = W.CO_CD
                                        AND X.SALES_CD = w.SALES_CD
                                        AND CD.CODE_ID = W.WBS_PLAN_CODE_ID
           LEFT OUTER JOIN TB_WB02M01 Z  ON X.CO_CD    = Z.CO_CD
                                        AND X.SALES_CD = Z.SALES_CD
                                        AND CD.CODE_ID = Z.WBS_PLAN_CODE_ID
           LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
    GROUP BY X.ORDRS_NO, X.SALES_CD, X.CO_CD,Y.ORGN_SALES_CD,Y.ORDRS_CLNT_CD, Y.CLNT_PJT, Y.CTRT_NM

  </select>
  
    <select id="selectItemSalesCodeTreeList" parameterType="Map" resultType="camelMap">          
/*selectItemSalesCodeTreeList*/
                SELECT DISTINCT  
                	   '' PID,
                	   #{coCd} ID,
                	   #{coCd} CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(#{coCd}) AS CO_CD_NM,
                       '전체' ORDRS_NO,
                       '전사 현황' AS SALES_CD,
                       '' ORGN_SALES_CD,
                       '' ORDRS_CLNT_CD, -- 고객사
                       '전체' AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV10, -- 입력구분
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '' ORDRS_DTL_DIV30, -- 자체구분
                       '' AS MCTYPE, -- 기계구분
                       '' EQP_NM, -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM DUAL

              UNION ALL  --회사명을 Top LEVEL 생성
                SELECT DISTINCT  
                	   X.CO_CD PID,
                	   TO_CHAR(Y.ORDRS_CLNT_CD) ID,
                	   X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       A.CLNT_NM,
                       A.CLNT_NM  AS SALES_CD,
                       '' ORGN_SALES_CD,
                       Y.ORDRS_CLNT_CD , -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV10, -- 입력구분
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '' ORDRS_DTL_DIV30, -- 자체구분
                       '' AS MCTYPE, -- 기계구분
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD like '%${salesCd}%'                
               </if>
				 
               UNION ALL --오더번호로 1 LEVEL 생성
                SELECT DISTINCT  
                	   TO_CHAR(Y.ORDRS_CLNT_CD) PID,
                	   X.ORDRS_NO ID,
                	   X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO AS ORDRS_NO,
                       X.ORDRS_NO AS SALES_CD,
                       '',
                       Y.ORDRS_CLNT_CD, -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '',
                       '',
                       '',
                       '',
                       '',
                       '' AS MCTYPE, -- 기계구분
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
				 WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD like '%${salesCd}%'                
               </if>

               UNION ALL
                SELECT   --Sales 코드 추출
                	   X.ORDRS_NO PID,
                	   X.SALES_CD ID,
                	   X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO, -- 수주번호
                       X.SALES_CD, -- SALES CODE
                       max(Y.ORGN_SALES_CD), -- 원천 SALES CODE
                       max(Y.ORDRS_CLNT_CD), -- 고객사
                       max(A.CLNT_NM)  AS ORDRS_CLNT_NM,
                       max(Y.CLNT_PJT), -- 고객사 PJT
                       max(X.ORDRS_DTL_DIV10), -- 입력구분
                       max(X.ORDRS_DTL_DIV20), -- 신작구분
                       FN_CM05M01_CD_TO_NM(max(X.ORDRS_DTL_DIV20)) AS ORDRS_DTL_DIV20_NM,
                       max(X.ORDRS_DTL_DIV30), -- 자체구분
                       max(X.MCTYPE), -- 기계구분
                       max(X.EQP_NM), -- 설비명
                       COUNT(W.FILE_TRGT_KEY) PLAN_CNT,
                       NVL(max(W.WBS_PLAN_OS_YN),'N') WBS_PLAN_OS_YN,
                       NVL(max(W.LOCK_YN),'N') PLAN_LOCK_YN,
                       NVL(max(W.CLOSE_YN),'N') PLAN_CLOSE_YN,
                       COUNT(Z.FILE_TRGT_KEY) RSULT_CNT,
                       NVL(max(Z.LOCK_YN),'N') RSULT_LOCK_YN,
                       NVL(max(Z.CLOSE_YN),'N') RSULT_CLOSE_YN,
                       max(X.PRDT_CD) PRDT_CD,
                       FN_BM01M01_ID_TO_NM(max(X.PRDT_CD)) AS PRDT_CD_NM,
                       max(X.ITEM_DIV) ITEM_DIV,
                       FN_CM05M01_CD_TO_NM(max(X.ITEM_DIV)) AS ITEM_DIV_NM,
                       'D' DATA_GBN  --원시데이타
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD    = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
								                AND X.CO_CD = #{coCd}
								               <if test="salesCd != null and !salesCd.equals('')">
								                AND X.SALES_CD like '%${salesCd}%'                
								               </if>
						CROSS JOIN (
												SELECT 
 														 CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
												         CODE_ID,
												         CODE_RPRC,
												         CODE_NM,
												         CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
												         CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
												         CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
												         LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
												         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
												         CONNECT_BY_ISLEAF AS IS_LEAF,
												         CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
											     FROM TB_CM05M01
											     START WITH CODE_ID = 'WBSDIV'
											     CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
					            ) CD  
                        LEFT OUTER JOIN TB_WB01M01 W  ON X.CO_CD    = W.CO_CD
                                                     AND X.SALES_CD = w.SALES_CD  
                                                     AND CD.CODE_ID = W.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_WB02M01 Z  ON X.CO_CD    = Z.CO_CD
                                                     AND X.SALES_CD = Z.SALES_CD  
                                                     AND CD.CODE_ID = Z.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터     
                        WHERE X.ORDRS_DTL_DIV10 = 'ORDRSDTLDIV1010'                        
                GROUP BY X.ORDRS_NO, X.SALES_CD, X.CO_CD,Y.ORGN_SALES_CD,Y.ORDRS_CLNT_CD, Y.CLNT_PJT                    

           </select>

    <select id="callCopyOrdrs" statementType="CALLABLE" parameterType="map">
        {call SP_CR02M01_HISTORY_I(
	        #{coCd      , mode=IN, jdbcType=VARCHAR},
	        #{ordrsNo   , mode=IN, jdbcType=VARCHAR},
	        #{userId    , mode=IN, jdbcType=VARCHAR},
	        #{pgmId     , mode=IN, jdbcType=VARCHAR},
	        #{errMsg     , mode=OUT, jdbcType=VARCHAR}
	    )}
    </select>
    
</mapper>