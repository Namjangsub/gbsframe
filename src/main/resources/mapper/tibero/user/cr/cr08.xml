<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.cr.cr08.mapper.CR08Mapper">

	<select id="selectPchsCostCount" parameterType="Map" resultType="int">
		SELECT count(*)
		FROM   TB_CR02M01 AS ORDRS
		       LEFT OUTER JOIN (
		             SELECT CO_CD                                 
		                  , ORDRS_NO                             
		                  , MAX(CURR_CD)          AS CLMN_CURR_CD 
		                  , NVL(MAX(EXRATE)  , 1) AS CLMN_EXRATE  
		                  , NVL(SUM(CLMN_AMT), 0) AS CLMN_AMT                    
		             FROM   TB_CR02D01
		             GROUP BY CO_CD, ORDRS_NO
		            ) AS CLMN  ON CLMN.CO_CD    = ORDRS.CO_CD
		                       AND CLMN.ORDRS_NO = ORDRS.ORDRS_NO
		       LEFT OUTER JOIN (
		             SELECT CM.CO_CD                                         
		                  , CD.ORDRS_NO                                       
		                  , MAX(CD.CURR_CD)                   AS CONF_CURR_CD 
		                  , NVL(SUM(CD.SELL_DCSN_DTL_AMT), 0) AS CONF_AMT     
		             FROM   TB_CR03M01 AS CM
		                    JOIN TB_CR03D01 AS CD ON CD.CO_CD        = CM.CO_CD
		                                   AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
		             GROUP BY CM.CO_CD, CD.ORDRS_NO
		             ) AS CONF  ON CONF.CO_CD    = ORDRS.CO_CD
		                     AND CONF.ORDRS_NO = ORDRS.ORDRS_NO
		       JOIN (
		             SELECT BM.CO_CD                                         
		                  , BD.ORDRS_NO                                       
		                  , MAX(BD.CURR_CD)                   AS BILL_CURR_CD 
		                  , NVL(SUM(BD.SELL_BILL_DTL_AMT), 0) AS BILL_AMT 
		                  , TO_CHAR(BM.SELL_BILL_DT,'YYYYMMDD') AS SELL_BILL_DT    
		             FROM   TB_CR04M01 AS BM
		                    JOIN TB_CR04D01 AS BD ON BD.CO_CD        = BM.CO_CD
		                                   AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
		             WHERE  1 = 1  
		             GROUP BY BM.CO_CD, BD.ORDRS_NO,BM.SELL_BILL_DT
		             ) AS BILL  ON BILL.CO_CD    = ORDRS.CO_CD
		                     AND BILL.ORDRS_NO = ORDRS.ORDRS_NO
		       LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = ORDRS.ORDRS_CLNT_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = ORDRS.CO_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = ORDRS.ORDRS_DIV
		       LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = ORDRS.CURR_CD
		       WHERE  1 = 1
			<if test="coCd !=null and !coCd.equals('')">
				 AND  ORDRS.CO_CD = #{coCd}
			</if>
			<if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
				 AND BILL.SELL_BILL_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYYMMDD') AND TO_DATE( #{reqDtTo},'YYYYMMDD') +1
			</if>
			<if test="ordrsClntCd !=null and !ordrsClntCd.equals('')">
			     AND  ORDRS.ORDRS_CLNT_CD LIKE '%${ordrsClntCd}%'  
			</if>
			<if test="ordrsClntNm !=null and !ordrsClntNm.equals('')">
			     AND  C.CLNT_NM   LIKE '%${ordrsClntNm}%' 
			</if>
			<if test="ordrsNo !=null and !ordrsNo.equals('')">
			     AND  ORDRS.ORDRS_NO LIKE '%${ordrsNo}%' 
			</if>
			<if test="clntPjt !=null and !clntPjt.equals('')">	
			     AND  ORDRS.CLNT_PJT LIKE '%${clntPjt}%' 
			</if>	
			<if test="ctrtNm !=null and !ctrtNm.equals('')">
				 AND  ORDRS.CTRT_NM  LIKE '%${ctrtNm}%' 
			</if>
			<if test="ORDRSDIV !=null and !ORDRSDIV.equals('')">
			    AND ORDRS.ORDRS_DIV LIKE '%${ORDRSDIV}%' 
			</if>
	</select>
	
	<select id="selectSalesStmtCalCount" parameterType="Map" resultType="int">
	  SELECT COUNT(*)
	  FROM(
		SELECT DISTINCT BM.FILE_TRGT_KEY 
		     , BM.CO_CD        
		     , R.CODE_NM AS CO_CD_NM 
		     , BD.ORDRS_NO
		     , BM.SELL_BILL_NO  
		     , BM.ORDRS_CLNT_CD 
		     , C.CLNT_NM AS ORDRS_CLNT_NM 
		     , TO_CHAR(BM.SELL_BILL_DT, 'YYYYMMDD') AS SELL_BILL_DT  
		     , BM.CURR_CD       
		     , R1.CODE_NM AS CURR_NM 
		     , BM.EXRATE       
		     , BM.SELL_BILL_AMT 
		     , BM.SELL_BILL_SUMRMK 
		     , BM.SELL_BILL_RMK 
		     , BM.CREAT_ID     
		     , U1.NAME AS CREAT_ID_NM
		     , BM.CREAT_PGM   
		     , TO_CHAR(BM.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM 
		     , BM.UDT_ID      
		     , U2.NAME AS UDT_ID_NM
		     , BM.UDT_PGM      
		     , TO_CHAR(BM.UDT_DTTM, 'YYYY-MM-DD')   AS UDT_DTTM      
		FROM   TB_CR04M01 AS BM
		       JOIN TB_CR04D01 AS BD ON BD.CO_CD        = BM.CO_CD
		                             AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
		       LEFT OUTER JOIN TB_CM06M01 AS U1 ON U1.ID = BM.CREAT_ID
		       LEFT OUTER JOIN TB_CM06M01 AS U2 ON U2.ID = BM.UDT_ID
		       LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = BM.ORDRS_CLNT_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = BM.CO_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = BM.CURR_CD
		WHERE  1 = 1	
	 	<if test="coCd !=null and !coCd.equals('')">
		         AND  BD.CO_CD =  #{coCd}
		</if>
		<if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
				 AND BM.SELL_BILL_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
		</if>
		<if test="ordrsClntCd !=null and !ordrsClntCd.equals('')">
			     AND BM.ORDRS_CLNT_CD LIKE '%${ordrsClntCd}%'  
		</if>
		<if test="ordrsClntNm !=null and !ordrsClntNm.equals('')">
			     AND C.ORDRS_CLNT_NM   LIKE '%${ordrsClntNm}%' 
		</if>
		<if test="ordrsNo !=null and !ordrsNo.equals('')">
		         AND  BD.ORDRS_NO  LIKE '%${ordrsNo}%' 
		</if>		
	   )
	</select>
	
	
	<select id="selectSalesStmtList" parameterType="Map" resultType="CamelMap">
			SELECT
					*
				FROM(
					SELECT
						ROWNUM AS RNUM, A.*
					FROM
					(		          
						SELECT DISTINCT ORDRS.FILE_TRGT_KEY AS FILE_TRGT_KEY 
						     , ORDRS.CO_CD             AS CO_CD            
						     , R.CODE_NM               AS CO_CD_NM         
						     , ORDRS.ORDRS_NO          AS ORDRS_NO          
						     , TO_CHAR(ORDRS.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT 
						     , ORDRS.ORDRS_CLNT_CD     AS ORDRS_CLNT_CD    
						     , C.CLNT_NM               AS ORDRS_CLNT_NM     
						     , ORDRS.CLNT_PJT          AS CLNT_PJT         
						     , ORDRS.CTRT_NM           AS CTRT_NM           
						     , ORDRS.CURR_CD           AS ORDRS_CURR_CD     
						     , R2.CODE_NM              AS ORDRS_CURR_NM    
						     , ORDRS.EXRATE            AS ORDRS_EXRATE      
						     , CLMN.CLMN_AMT           AS CLMN_AMT         
						     , CONF.CONF_AMT           AS CONF_AMT          
						     , CLMN.CLMN_AMT - CONF.CONF_AMT AS UNCONF_AMT     
						     , BILL.BILL_AMT           AS BILL_AMT         
						     , CLMN.CLMN_AMT - BILL.BILL_AMT AS UNBILL_AMT  
						     , ORDRS.ORDRS_DIV         AS ORDRS_DIV        
						     , R1.CODE_NM              AS ORDRS_DIV_NM     
						     , ORDRS.EST_NO            AS EST_NO           
						     , ORDRS.EST_DEG           AS EST_DEG           
						     , ORDRS.ORDRS_AMT         AS ORDRS_AMT        
						     , ORDRS.FWD_EXCH_JOIN_DT  AS FWD_EXCH_JOIN_DT 
						     , ORDRS.FWD_EXCH_CHK_LIST AS FWD_EXCH_CHK_LIST 
						     , ORDRS.ORDRGER           AS ORDRGER         
						     , ORDRS.MNG_ID            AS MNG_ID           
						     , ORDRS.CTRT_DOC          AS CTRT_DOC        
						     , ORDRS.PMNT_MTD          AS PMNT_MTD          
						     , ORDRS.ORDRS_RMK         AS ORDRS_RMK        
						     , ORDRS.ORGN_SALES_CD     AS ORGN_SALES_CD   
						 --    , BILL.SELL_BILL_DT   
				FROM   TB_CR02M01 AS ORDRS
				       LEFT OUTER JOIN (
				             SELECT CO_CD                                 
				                  , ORDRS_NO                             
				                  , MAX(CURR_CD)          AS CLMN_CURR_CD 
				                  , NVL(MAX(EXRATE)  , 1) AS CLMN_EXRATE  
				                  , NVL(SUM(CLMN_AMT), 0) AS CLMN_AMT                    
				             FROM   TB_CR02D01
				             GROUP BY CO_CD, ORDRS_NO
				            ) AS CLMN  ON CLMN.CO_CD    = ORDRS.CO_CD
				                       AND CLMN.ORDRS_NO = ORDRS.ORDRS_NO
				       LEFT OUTER JOIN (
				             SELECT CM.CO_CD                                         
				                  , CD.ORDRS_NO                                       
				                  , MAX(CD.CURR_CD)                   AS CONF_CURR_CD 
				                  , NVL(SUM(CD.SELL_DCSN_DTL_AMT), 0) AS CONF_AMT     
				             FROM   TB_CR03M01 AS CM
				                    JOIN TB_CR03D01 AS CD ON CD.CO_CD        = CM.CO_CD
				                                   AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
				             GROUP BY CM.CO_CD, CD.ORDRS_NO
				             ) AS CONF  ON CONF.CO_CD    = ORDRS.CO_CD
				                     AND CONF.ORDRS_NO = ORDRS.ORDRS_NO
				       JOIN (
				             SELECT BM.CO_CD                                         
				                  , BD.ORDRS_NO                                       
				                  , MAX(BD.CURR_CD)                   AS BILL_CURR_CD 
				                  , NVL(SUM(BD.SELL_BILL_DTL_AMT), 0) AS BILL_AMT 
				              --    , TO_CHAR(BM.SELL_BILL_DT,'YYYYMMDD') AS SELL_BILL_DT    
				             FROM   TB_CR04M01 AS BM
				                    JOIN TB_CR04D01 AS BD ON BD.CO_CD        = BM.CO_CD
				                                   AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
				             WHERE  1 = 1  
				                AND  BM.CO_CD = #{coCd} 
				                AND  BM.SELL_BILL_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYYMMDD') AND TO_DATE( #{reqDtTo},'YYYYMMDD') + 1
				             GROUP BY BM.CO_CD, BD.ORDRS_NO--,BM.SELL_BILL_DT
				             ) AS BILL  ON BILL.CO_CD    = ORDRS.CO_CD
				                     AND BILL.ORDRS_NO = ORDRS.ORDRS_NO
				       LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = ORDRS.ORDRS_CLNT_CD
				       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = ORDRS.CO_CD
				       LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = ORDRS.ORDRS_DIV
				       LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = ORDRS.CURR_CD
				WHERE  1 = 1
			<if test="coCd !=null and !coCd.equals('')">
				 AND  ORDRS.CO_CD = #{coCd}
			</if>
		<!-- <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
				 AND BILL.SELL_BILL_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYYMMDD') AND TO_DATE( #{reqDtTo},'YYYYMMDD') +1
			</if> -->
			<if test="ordrsClntCd !=null and !ordrsClntCd.equals('')">
			     AND  ORDRS.ORDRS_CLNT_CD LIKE '%${ordrsClntCd}%'  
			</if>
			<if test="ordrsClntNm !=null and !ordrsClntNm.equals('')">
			     AND  C.CLNT_NM   LIKE '%${ordrsClntNm}%' 
			</if>
			<if test="ordrsNo !=null and !ordrsNo.equals('')">
			     AND  ORDRS.ORDRS_NO LIKE '%${ordrsNo}%' 
			</if>
			<if test="clntPjt !=null and !clntPjt.equals('')">	
			     AND  ORDRS.CLNT_PJT LIKE '%${clntPjt}%' 
			</if>	
			<if test="ctrtNm !=null and !ctrtNm.equals('')">
				 AND  ORDRS.CTRT_NM  LIKE '%${ctrtNm}%' 
			</if>
			<if test="ORDRSDIV !=null and !ORDRSDIV.equals('')">
			    AND ORDRS.ORDRS_DIV LIKE '%${ORDRSDIV}%' 
			</if>
					
			) AS a
		 ) A
		WHERE  RNUM BETWEEN #{firstIndex} AND #{lastIndex}
		          
	</select>
	
	<select id="selectSalesStmtConCount" parameterType="Map" resultType="int">
	SELECT COUNT(*)
	FROM   TB_CR02M01 AS ORDRS
	       --수주수금계획
	       JOIN TB_CR02D01 AS CLMN  ON CLMN.CO_CD    = ORDRS.CO_CD
	                             AND CLMN.ORDRS_NO = ORDRS.ORDRS_NO
	       --매출확정(계산서 미발행)
	       JOIN (
	             SELECT A.*
	             FROM   (
	                     SELECT CM.CO_CD                                          --회사코드
	                          , CD.ORDRS_NO                                       --수주번호
	                          , CD.CLMN_PLAN_SEQ                                  --수금계획순번
	                          , MAX(CD.CURR_CD)                   AS CONF_CURR_CD --통화단위
	                          , NVL(SUM(CD.SELL_DCSN_DTL_AMT), 0) AS CONF_AMT     --확정금액
	                          , NVL(CD.SELL_BILL_NO, '.')         AS SELL_BILL_NO
	                          , CD.SELL_DCSN_NO
	                     FROM   TB_CR03M01 AS CM
	                            JOIN TB_CR03D01 AS CD ON CD.CO_CD        = CM.CO_CD
	                                                 AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
	                     GROUP BY CM.CO_CD, CD.ORDRS_NO, CD.CLMN_PLAN_SEQ, CD.SELL_DCSN_NO, CD.SELL_BILL_NO
	                    ) AS A
	             WHERE  A.SELL_BILL_NO = '.'
	            ) AS CONF  ON CONF.CO_CD         = CLMN.CO_CD
	                     AND CONF.ORDRS_NO      = CLMN.ORDRS_NO
	                     AND CONF.CLMN_PLAN_SEQ = CLMN.CLMN_PLAN_SEQ
	       --매출계산서
	       LEFT OUTER JOIN (
	              SELECT BM.CO_CD                                          --회사코드
	                   , BD.ORDRS_NO                                       --수주번호
	                   , BD.CLMN_PLAN_SEQ                                  --수금계획순번
	                   , MAX(BD.CURR_CD)                   AS BILL_CURR_CD --통화단위
	                   , NVL(SUM(BD.SELL_BILL_DTL_AMT), 0) AS BILL_AMT     --확정금액
	              FROM   TB_CR04M01 AS BM
	                     JOIN TB_CR04D01 AS BD ON BD.CO_CD        = BM.CO_CD
	                                    AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
	              GROUP BY BM.CO_CD, BD.ORDRS_NO, BD.CLMN_PLAN_SEQ
	             ) AS BILL  ON BILL.CO_CD         = CLMN.CO_CD
	                     AND BILL.ORDRS_NO      = CLMN.ORDRS_NO
	                     AND BILL.CLMN_PLAN_SEQ = CLMN.CLMN_PLAN_SEQ
	       --고객사
	       LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = ORDRS.ORDRS_CLNT_CD
	       --회사
	       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = ORDRS.CO_CD
	       --수주구분
	       LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = ORDRS.ORDRS_DIV
	       --통화단위
	       LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = ORDRS.CURR_CD
	       --수금구분
	       LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = CLMN.CLMN_PLAN_DIV
	       --통화단위
	       LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = CLMN.CURR_CD
	WHERE  1 = 1
	  <if test="coCd !=null and !coCd.equals('')">
	       AND  ORDRS.CO_CD = #{coCd} 
	  </if>
	  <if test="ordrsClntCd !=null and !ordrsClntCd.equals('')">
		   AND  ORDRS.ORDRS_CLNT_CD  LIKE '%${ordrsClntCd}%'  
	  </if>
	  <if test="ordrsClntNm !=null and !ordrsClntNm.equals('')">
		   AND  C.CLNT_NM  LIKE '%${ordrsClntNm}%' 
	  </if>
	ORDER BY ORDRS.CO_CD, ORDRS.ORDRS_NO, CLMN.CLMN_PLAN_SEQ, CONF.SELL_DCSN_NO
	</select>
	
	<select id="selectSalesStmtCalList" parameterType="Map" resultType="CamelMap">
	    SELECT  *
				FROM(
					SELECT
						ROWNUM AS RNUM, A.*
					FROM
					(			
			
			SELECT DISTINCT BM.FILE_TRGT_KEY 
		     , BM.CO_CD        
		     , R.CODE_NM AS CO_CD_NM 
		     , BD.ORDRS_NO
		     , BM.SELL_BILL_NO  
		     , BM.ORDRS_CLNT_CD 
		     , C.CLNT_NM AS ORDRS_CLNT_NM 
		     , TO_CHAR(BM.SELL_BILL_DT, 'YYYY-MM-DD') AS SELL_BILL_DT  
		     , BM.CURR_CD       
		     , R1.CODE_NM AS CURR_NM 
		     , BM.EXRATE       
		     , BM.SELL_BILL_AMT 
		     , BM.SELL_BILL_SUMRMK 
		     , BM.SELL_BILL_RMK 
		     , BM.CREAT_ID     
		     , U1.NAME AS CREAT_ID_NM
		     , BM.CREAT_PGM   
		     , TO_CHAR(BM.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM 
		     , BM.UDT_ID      
		     , U2.NAME AS UDT_ID_NM
		     , BM.UDT_PGM      
		     , TO_CHAR(BM.UDT_DTTM, 'YYYY-MM-DD')   AS UDT_DTTM 
		     , BD.SELL_DCSN_NO
		     , BD.CLMN_PLAN_SEQ
		     , BD. CREAT_PGM
		     , BD.CREAT_ID
		     , BD.UDT_ID
		     , BD.UDT_PGM
		FROM   TB_CR04M01 AS BM
		       JOIN TB_CR04D01 AS BD ON BD.CO_CD        = BM.CO_CD
		                             AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
		       LEFT OUTER JOIN TB_CM06M01 AS U1 ON U1.ID = BM.CREAT_ID
		       LEFT OUTER JOIN TB_CM06M01 AS U2 ON U2.ID = BM.UDT_ID
		       LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = BM.ORDRS_CLNT_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = BM.CO_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = BM.CURR_CD
		WHERE  1 = 1	
	 	<if test="coCd !=null and !coCd.equals('')">
		         AND BD.CO_CD =  #{coCd}
		</if>
		<if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
				 AND BM.SELL_BILL_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
		</if>
		<if test="ordrsClntCd !=null and !ordrsClntCd.equals('')">
			     AND BM.ORDRS_CLNT_CD LIKE '%${ordrsClntCd}%'  
		</if>
		<if test="ordrsClntNm !=null and !ordrsClntNm.equals('')">
			     AND C.ORDRS_CLNT_NM   LIKE '%${ordrsClntNm}%' 
		</if>
		<if test="ordrsNo !=null and !ordrsNo.equals('')">
		         AND  BD.ORDRS_NO  LIKE '%${ordrsNo}%' 
		</if>	
			) AS a			
		 ) A
		WHERE  RNUM BETWEEN #{firstIndex} AND #{lastIndex}
		          
	</select>

	<select id="selectSalesStmtConList" parameterType="Map" resultType="CamelMap">
	 SELECT DISTINCT ORDRS.FILE_TRGT_KEY  AS FILE_TRGT_KEY  
	                     , ROWNUM	               AS RNUM           
					     , ORDRS.CO_CD             AS CO_CD            
					     , R.CODE_NM               AS CO_CD_NM          
					     , TO_CHAR(ORDRS.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT 
					     , ORDRS.ORDRS_CLNT_CD     AS ORDRS_CLNT_CD     
					     , NVL(ORDRS.EXRATE, 1)    AS ORDRS_EXRATE     
					     , ORDRS.CURR_CD           AS ORDRS_CURR_CD     
					     , CLMN.CLMN_PLAN_SEQ      AS CLMN_PLAN_SEQ     
					     , CLMN.CURR_CD            AS CLMN_CURR_CD      
					     , R4.CODE_NM              AS CLMN_CURR_NM     
					     , NVL(CLMN.EXRATE, 1)     AS CLMN_EXRATE            
					     , CLMN.CLMN_PLAN_DIV      AS CLMN_PLAN_DIV           
					     , ORDRS.ORDRS_NO          AS ORDRS_NO              
					     , C.CLNT_NM               AS ORDRS_CLNT_NM     
					     , ORDRS.CLNT_PJT          AS CLNT_PJT               
					     , ORDRS.CTRT_NM           AS CTRT_NM              
					     , R2.CODE_NM              AS ORDRS_CURR_NM    
					     , R3.CODE_NM              AS CLMN_PLAN_DIV_NM  
					     , CLMN.CLMN_DIV_SEQ       AS CLMN_DIV_SEQ      
					     , CLMN.CLMN_RATE          AS CLMN_RATE         
					     , CLMN.CLMN_AMT           AS CLMN_AMT         
					     , TO_CHAR(CLMN.BILL_PBLS_DT, 'YYYY-MM-DD') AS CLMN_BILL_PBLS_DT 
					     , TO_CHAR(CLMN.CLMN_DT, 'YYYY-MM-DD')      AS CLMN_DT          
					     , BILL.BILL_AMT                 AS BEF_BILL_AMT  
					     , CONF.SELL_DCSN_NO             AS SELL_DCSN_NO  
					     , CONF.CONF_AMT                 AS TRGT_BILL_AMT 
					     , 'N'                           AS CHK          
					     , 0                             AS BILL_AMT     
	FROM   TB_CR02M01 AS ORDRS
	       --수주수금계획
	       JOIN TB_CR02D01 AS CLMN  ON CLMN.CO_CD    = ORDRS.CO_CD
	                             AND CLMN.ORDRS_NO = ORDRS.ORDRS_NO
	       --매출확정(계산서 미발행)
	       JOIN (
	             SELECT A.*
	             FROM   (
	                     SELECT CM.CO_CD                                          --회사코드
	                          , CD.ORDRS_NO                                       --수주번호
	                          , CD.CLMN_PLAN_SEQ                                  --수금계획순번
	                          , MAX(CD.CURR_CD)                   AS CONF_CURR_CD --통화단위
	                          , NVL(SUM(CD.SELL_DCSN_DTL_AMT), 0) AS CONF_AMT     --확정금액
	                          , NVL(CD.SELL_BILL_NO, '.')         AS SELL_BILL_NO
	                          , CD.SELL_DCSN_NO
	                     FROM   TB_CR03M01 AS CM
	                            JOIN TB_CR03D01 AS CD ON CD.CO_CD        = CM.CO_CD
	                                                 AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
	                     GROUP BY CM.CO_CD, CD.ORDRS_NO, CD.CLMN_PLAN_SEQ, CD.SELL_DCSN_NO, CD.SELL_BILL_NO
	                    ) AS A
	             WHERE  A.SELL_BILL_NO = '.'
	            ) AS CONF  ON CONF.CO_CD         = CLMN.CO_CD
	                     AND CONF.ORDRS_NO      = CLMN.ORDRS_NO
	                     AND CONF.CLMN_PLAN_SEQ = CLMN.CLMN_PLAN_SEQ
	       --매출계산서
	       LEFT OUTER JOIN (
	              SELECT BM.CO_CD                                          --회사코드
	                   , BD.ORDRS_NO                                       --수주번호
	                   , BD.CLMN_PLAN_SEQ                                  --수금계획순번
	                   , MAX(BD.CURR_CD)                   AS BILL_CURR_CD --통화단위
	                   , NVL(SUM(BD.SELL_BILL_DTL_AMT), 0) AS BILL_AMT     --확정금액
	              FROM   TB_CR04M01 AS BM
	                     JOIN TB_CR04D01 AS BD ON BD.CO_CD        = BM.CO_CD
	                                    AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
	              GROUP BY BM.CO_CD, BD.ORDRS_NO, BD.CLMN_PLAN_SEQ
	             ) AS BILL  ON BILL.CO_CD         = CLMN.CO_CD
	                     AND BILL.ORDRS_NO      = CLMN.ORDRS_NO
	                     AND BILL.CLMN_PLAN_SEQ = CLMN.CLMN_PLAN_SEQ
	       --고객사
	       LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = ORDRS.ORDRS_CLNT_CD
	       --회사
	       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = ORDRS.CO_CD
	       --수주구분
	       LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = ORDRS.ORDRS_DIV
	       --통화단위
	       LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = ORDRS.CURR_CD
	       --수금구분
	       LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = CLMN.CLMN_PLAN_DIV
	       --통화단위
	       LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = CLMN.CURR_CD
	WHERE  1 = 1
	  <if test="coCd !=null and !coCd.equals('')">
	       AND  ORDRS.CO_CD = #{coCd} 
	  </if>
	  <if test="ordrsClntCd !=null and !ordrsClntCd.equals('')">
		   AND  ORDRS.ORDRS_CLNT_CD  LIKE '%${ordrsClntCd}%'  
	  </if>
	  <if test="ordrsClntNm !=null and !ordrsClntNm.equals('')">
		   AND  C.CLNT_NM  LIKE '%${ordrsClntNm}%' 
	  </if>
	ORDER BY ORDRS.CO_CD, ORDRS.ORDRS_NO, CLMN.CLMN_PLAN_SEQ, CONF.SELL_DCSN_NO
	</select>
  
  <select id="selectSalesStmtInfo" resultType="CamelMap">
  	   SELECT DISTINCT BM.FILE_TRGT_KEY 
		     , BM.CO_CD_S1        
		     , R.CODE_NM AS CO_CD_NM 
		     , BD.ORDRS_NO
		     , BM.SELL_BILL_NO  
		     , BM.ORDRS_CLNT_CD_S1 
		     , C.CLNT_NM AS ORDRS_CLNT_NM_S1
		     , TO_CHAR(BM.SELL_BILL_DT, 'YYYY-MM-DD') AS SELL_BILL_DT  
		     , BM.CURR_CD       
		     , R1.CODE_NM AS CURR_NM 
		     , BM.EXRATE       
		     , BM.SELL_BILL_AMT 
		     , BM.SELL_BILL_SUMRMK 
		     , BM.SELL_BILL_RMK 
		     , BM.CREAT_ID     
		     , U1.NAME AS CREAT_ID_NM
		     , BM.CREAT_PGM   
		     , TO_CHAR(BM.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM 
		     , BM.UDT_ID      
		     , U2.NAME AS UDT_ID_NM
		     , BM.UDT_PGM      
		     , TO_CHAR(BM.UDT_DTTM, 'YYYY-MM-DD')   AS UDT_DTTM 
		FROM   TB_CR04M01 AS BM
		       JOIN TB_CR04D01 AS BD ON BD.CO_CD        = BM.CO_CD
		                             AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
		       LEFT OUTER JOIN TB_CM06M01 AS U1 ON U1.ID = BM.CREAT_ID
		       LEFT OUTER JOIN TB_CM06M01 AS U2 ON U2.ID = BM.UDT_ID
		       LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = BM.ORDRS_CLNT_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = BM.CO_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = BM.CURR_CD
		WHERE  BM.FILE_TRGT_KEY = #{fileTrgtKey}	
  </select>
  
  <select id="selectPchsCostInfo" resultType="CamelMap">
          SELECT
					T.FILE_TRGT_KEY,
					T.CO_CD,
					FN_CM05M01_CD_TO_NM(T.CO_CD) CO_NM,
					T.COST_NO,
					S.PRDT_CD,
					P.PRDT_NM,
					S.ITEM_DIV,
					FN_CM05M01_CD_TO_NM(S.ITEM_DIV) ITEM_DIV_NM,
					S.EQP_NM,
					T.SALES_CD,
					SM.ORDRS_CLNT_CD  	VEND_CD,
					X.CLNT_NM 			VEND_NM,
					SM.CLNT_PJT			CLNT_PJT_CD,
					SM.CLNT_PJT,
					T.PCHS_CLNT_CD,
					A.CLNT_NM PCHS_CLNT_NM,
					TO_CHAR(T.COST_DT, 'YYYY-MM-DD') AS COST_DT,
					T.PCHS_COST_DIV10,
					FN_CM05M01_CD_TO_NM(T.PCHS_COST_DIV10) PCHS_COST_DIV10_NM,
					T.PCHS_COST_DIV20,
					FN_CM05M01_CD_TO_NM(T.PCHS_COST_DIV20) PCHS_COST_DIV20_NM,
					T.CURR_CD,
					FN_CM05M01_CD_TO_NM(T.CURR_CD) CURR_NM,
					T.EXRATE,
					T.COST_AMT,
					T.MATR_CD,
					M.MATR_NM,
					T.COST_RMK,
					T.ETC_FIELD1,
					T.ETC_FIELD2,
					T.ETC_FIELD3,
					T.CREAT_ID,
					B.NAME CREAT_NM,
					T.CREAT_PGM,
					TO_CHAR(T.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM,
					T.UDT_ID,
					C.NAME UDT_NM,
					T.UDT_PGM,
					TO_CHAR(T.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM
		FROM TB_SM10M01 T
			             LEFT OUTER JOIN TB_BM02M01 A ON T.PCHS_CLNT_CD = A.CLNT_CD --거래처마스터
			             LEFT OUTER JOIN TB_CM06M01 B ON T.CREAT_ID = B.ID
			             LEFT OUTER JOIN TB_CM06M01 C ON T.UDT_ID = C.ID		--사용자마스터
			             LEFT OUTER JOIN TB_BM05M01 M ON T.MATR_CD = M.MATR_CD  --자재마스터
			             LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD  --수주상세(Sales Code)
			             LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD    = SM.CO_CD  --수주상세(Sales Code)
			            							  AND S.ORDRS_NO = SM.ORDRS_NO
			             LEFT OUTER JOIN TB_BM02M01 X ON SM.ORDRS_CLNT_CD = X.CLNT_CD --거래처마스터
			             LEFT OUTER JOIN TB_BM01M01 P ON S.PRDT_CD = P.PRDT_CD  --제품마스터
       WHERE T.FILE_TRGT_KEY = #{fileTrgtKey}
  </select>

  <select id="selectConfirmCount" parameterType="Map" resultType="int">
    SELECT COUNT(FILE_TRGT_KEY) CNT
      FROM TB_SM10M01
     WHERE FILE_TRGT_KEY = #{fileTrgtKey}
  </select>
  
<update id="updatePchsCost" parameterType="Map">
    UPDATE TB_SM10M01
		SET
			SALES_CD               	= #{salesCd},
			PCHS_CLNT_CD           	= #{pchsClntCd},
			COST_DT                	= #{costDt},
			PCHS_COST_DIV10        	= #{pchsCostDiv10},
			PCHS_COST_DIV20        	= #{pchsCostDiv20},
			CURR_CD                	= #{currCd},
			EXRATE                 	= #{exrate},
			COST_AMT               	= #{costAmt},
			MATR_CD                	= #{matrCd},
			COST_RMK               	= #{costRmk},
			ETC_FIELD1             	= #{etcField1, jdbcType=VARCHAR},
			ETC_FIELD2             	= #{etcField2, jdbcType=VARCHAR},
			ETC_FIELD3             	= #{etcField3, jdbcType=VARCHAR},
			UDT_ID                 	= #{userId},
			UDT_PGM                	= #{pgmId},
			UDT_DTTM               	= SYSDATE
    WHERE FILE_TRGT_KEY             = #{fileTrgtKey}
<!--     		CO_CD                  	= #{coCd} -->
<!-- 		AND	COST_NO                	= #{costNo}, -->

  </update>
    
  <update id="updateSalesStmt" parameterType="Map">
   UPDATE TB_CR04M01
   SET   SELL_BILL_DT   = to_date(#{sellBillDt}, 'YYYY-MM-DD')
        ,CURR_CD        = #{currCd}
        ,SELL_BILL_AMT  = #{sellBillDtlAmt}
        ,EXRATE         = #{exrate} 
        ,SELL_BILL_RMK  = #{sellBillDtlRmk}
	    ,SELL_BILL_SUMRMK = #{sellBillSumrmk}
	    ,UDT_ID           = #{udtId}      
	    ,UDT_PGM          = #{udtPgm}   
   WHERE  FILE_TRGT_KEY   = #{fileTrgtKey}
  </update>
  
  <select id="selectPchsCostSeqNext" parameterType="Map" resultType="int">
		SELECT TO_CHAR(SYSDATE, 'YYYYMM')||LPAD(TB_SM10M01_SQ01.NEXTVAL,3,0) FROM DUAL
  </select>
  
  <select id="selectSalesStmtSeqNext" parameterType="Map" resultType="int">
		SELECT TB_CR04M01_SQ01.NEXTVAL FROM DUAL
  </select>
  
  
   <select id="selectSalesStmtCalNext" parameterType="Map" resultType="String">
		 SELECT 'BILL' || TO_CHAR(SYSDATE,'YY') || '-' || SUBSTR(MAX(SELL_BILL_NO),8,5) AS SELL_BILL_NO
		 FROM TB_CR04D01
         WHERE CO_CD = 'GUN'     
  </select>
  
<insert id="insertPchsCost" parameterType="Map">
    <selectKey keyProperty="costNo" resultType="String" order="BEFORE">
      SELECT 'COST' || TO_CHAR(SYSDATE, 'YY')||LPAD(TB_SM10M01_SQ02.NEXTVAL,4,0) FROM DUAL
    </selectKey>
    INSERT INTO TB_SM10M01
      (
		FILE_TRGT_KEY,  
		CO_CD,          
		COST_NO,        
		SALES_CD,       
		PCHS_CLNT_CD,   
		COST_DT,        
		PCHS_COST_DIV10,
		PCHS_COST_DIV20,
		CURR_CD,        
		EXRATE,         
		COST_AMT,       
		MATR_CD,        
		COST_RMK,       
		ETC_FIELD1,     
		ETC_FIELD2,     
		ETC_FIELD3,     
		CREAT_ID,       
		CREAT_PGM,      
		CREAT_DTTM     
      )
    VALUES
    (
		#{fileTrgtKey},
		#{coCd},
		#{costNo},
		#{salesCd},
		#{pchsClntCd},
		#{costDt},
		#{pchsCostDiv10},
		#{pchsCostDiv20},
		#{currCd},
		#{exrate},
		#{costAmt},
		#{matrCd},
		#{costRmk},
		#{etcField1, jdbcType=VARCHAR},
		#{etcField2, jdbcType=VARCHAR},
		#{etcField3, jdbcType=VARCHAR},
		#{userId},
		#{pgmId},
		SYSDATE
    )
  </insert>
  
   <insert id="insertSalesStmt" parameterType="Map"> 
	INSERT ALL INTO TB_CR04D01
	(	CO_CD,       
		SELL_BILL_NO, 
		SELL_DCSN_NO, 
		ORDRS_NO,    
		CLMN_PLAN_SEQ, 
        CREAT_ID, 
        CREAT_PGM, 
        CURR_CD, 
        EXRATE, 
        SELL_BILL_DTL_AMT, 
        SELL_BILL_DTL_RMK 
	)VALUES(
		#{coCdS1}, 
		#{sellBillNo}, 
		#{sellDcsnNo}, 
		#{ordrsNo},
		#{clmnPlanSeq},
		#{creatId}, 
	    #{creatPgm}, 
		#{currCd}, 
		#{exrate}, 
		#{sellBillDtlAmt}, 
		#{sellBillDtlRmk}
	)INTO TB_CR04M01(
		FILE_TRGT_KEY, 
		CO_CD,          
		SELL_BILL_NO,   
        CREAT_ID, 
        CREAT_PGM, 
        CURR_CD,
        EXRATE, 
		ORDRS_CLNT_CD, 
		SELL_BILL_AMT, 
		SELL_BILL_DT,
		SELL_BILL_RMK,
		SELL_BILL_SUMRMK,
		UDT_ID,      
		UDT_PGM   
	)VALUES(
		#{fileTrgtKey},
		#{coCdS1},
		#{sellBillNo},
        #{creatId},
        #{creatPgm},
        #{currCd}, 
        #{exrate}, 
		#{ordrsClntCdS1},
		#{sellBillDtlAmt},
		to_date(#{sellBillDt}, 'YYYY-MM-DD'),
		#{sellBillDtlRmk}, 
		#{sellBillSumrmk}, 
		#{udtId},      
		#{udtPgm}  
		)SELECT * FROM DUAL
  </insert>
  
  
  <insert id="insertSalesStmtCal" parameterType="Map"> 
	INSERT INTO TB_CR04D01
	(	CO_CD,       
		SELL_BILL_NO, 
		SELL_DCSN_NO, 
		ORDRS_NO,    
		CLMN_PLAN_SEQ, 
        CREAT_ID, 
        CREAT_PGM, 
        CURR_CD, 
        EXRATE, 
        SELL_BILL_DTL_AMT, 
        SELL_BILL_DTL_RMK 
	)VALUES(
		#{coCd}, 
		#{sellBillNo}, 
		#{sellDcsnNo}, 
		#{ordrsNo},
		#{clmnPlanSeq},
		#{creatId}, 
	    #{creatPgm}, 
		#{currCd}, 
		#{exrate}, 
		#{sellBillDtlAmt}, 
		#{sellBillDtlRmk}
	)
  </insert>
  
    <insert id="insertSalesStmtCal2" parameterType="Map">
		INSERT INTO TB_CR04M01(
					FILE_TRGT_KEY, 
					CO_CD,          
					SELL_BILL_NO,   
		            CREAT_ID, 
		            CREAT_PGM, 
		            CURR_CD,
		            EXRATE, 
					ORDRS_CLNT_CD, 
					SELL_BILL_AMT, 
					SELL_BILL_DT,
					SELL_BILL_RMK,
					SELL_BILL_SUMRMK,
					UDT_ID,      
					UDT_PGM   
		)VALUES(
					#{fileTrgtKey},
					#{coCd},
					#{sellBillNo},
		            #{creatId},
		            #{creatPgm},
		            #{currCd}, 
		            #{exrate}, 
					#{ordrsClntCd},
					#{sellBillDtlAmt},
					to_date(#{sellBillDt}, 'YYYY-MM-DD'),
					#{sellBillDtlRmk}, 
					#{sellBillSumrmk}, 
					#{udtId},      
					#{udtPgm}  
		)
  </insert>
  
  <delete id="deletePchsCost" parameterType="Map">
    DELETE TB_SM10M01 WHERE FILE_TRGT_KEY = #{fileTrgtKey}
  </delete>
  
  <select id="selectSalesStmtExcelList" parameterType="Map" resultType="camelMap">  	          
	     SELECT    DISTINCT ORDRS.FILE_TRGT_KEY AS FILE_TRGT_KEY 
			     , ORDRS.CO_CD             AS CO_CD            
			     , R.CODE_NM               AS CO_CD_NM         
			     , ORDRS.ORDRS_NO          AS ORDRS_NO          
			     , TO_CHAR(ORDRS.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT 
			     , ORDRS.ORDRS_CLNT_CD     AS ORDRS_CLNT_CD    
			     , C.CLNT_NM               AS ORDRS_CLNT_NM     
			     , ORDRS.CLNT_PJT          AS CLNT_PJT         
			     , ORDRS.CTRT_NM           AS CTRT_NM           
			     , ORDRS.CURR_CD           AS ORDRS_CURR_CD     
			     , R2.CODE_NM              AS ORDRS_CURR_NM    
			     , ORDRS.EXRATE            AS ORDRS_EXRATE      
			     , CLMN.CLMN_AMT           AS CLMN_AMT         
			     , CONF.CONF_AMT           AS CONF_AMT          
			     , CLMN.CLMN_AMT - CONF.CONF_AMT AS UNCONF_AMT     
			     , BILL.BILL_AMT           AS BILL_AMT         
			     , CLMN.CLMN_AMT - BILL.BILL_AMT AS UNBILL_AMT  
			     , ORDRS.ORDRS_DIV         AS ORDRS_DIV        
			     , R1.CODE_NM              AS ORDRS_DIV_NM     
			     , ORDRS.EST_NO            AS EST_NO           
			     , ORDRS.EST_DEG           AS EST_DEG           
			     , ORDRS.ORDRS_AMT         AS ORDRS_AMT        
			     , ORDRS.FWD_EXCH_JOIN_DT  AS FWD_EXCH_JOIN_DT 
			     , ORDRS.FWD_EXCH_CHK_LIST AS FWD_EXCH_CHK_LIST 
			     , ORDRS.ORDRGER           AS ORDRGER         
			     , ORDRS.MNG_ID            AS MNG_ID           
			     , ORDRS.CTRT_DOC          AS CTRT_DOC        
			     , ORDRS.PMNT_MTD          AS PMNT_MTD          
			     , ORDRS.ORDRS_RMK         AS ORDRS_RMK        
			     , ORDRS.ORGN_SALES_CD     AS ORGN_SALES_CD   
			     , BILL.SELL_BILL_DT   
		FROM   TB_CR02M01 AS ORDRS
	       LEFT OUTER JOIN (
	             SELECT CO_CD                                 
	                  , ORDRS_NO                             
	                  , MAX(CURR_CD)          AS CLMN_CURR_CD 
	                  , NVL(MAX(EXRATE)  , 1) AS CLMN_EXRATE  
	                  , NVL(SUM(CLMN_AMT), 0) AS CLMN_AMT                    
	             FROM   TB_CR02D01
	             GROUP BY CO_CD, ORDRS_NO
	            ) AS CLMN  ON CLMN.CO_CD    = ORDRS.CO_CD
	                       AND CLMN.ORDRS_NO = ORDRS.ORDRS_NO
	       LEFT OUTER JOIN (
	             SELECT CM.CO_CD                                         
	                  , CD.ORDRS_NO                                       
	                  , MAX(CD.CURR_CD)                   AS CONF_CURR_CD 
	                  , NVL(SUM(CD.SELL_DCSN_DTL_AMT), 0) AS CONF_AMT     
	             FROM   TB_CR03M01 AS CM
	                    JOIN TB_CR03D01 AS CD ON CD.CO_CD        = CM.CO_CD
	                                   AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
	             GROUP BY CM.CO_CD, CD.ORDRS_NO
	             ) AS CONF  ON CONF.CO_CD    = ORDRS.CO_CD
	                     AND CONF.ORDRS_NO = ORDRS.ORDRS_NO
	       JOIN (
	             SELECT BM.CO_CD                                         
	                  , BD.ORDRS_NO                                       
	                  , MAX(BD.CURR_CD)                   AS BILL_CURR_CD 
	                  , NVL(SUM(BD.SELL_BILL_DTL_AMT), 0) AS BILL_AMT 
	                  , TO_CHAR(BM.SELL_BILL_DT,'YYYYMMDD') AS SELL_BILL_DT    
	             FROM   TB_CR04M01 AS BM
	                    JOIN TB_CR04D01 AS BD ON BD.CO_CD        = BM.CO_CD
	                                   AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
	             WHERE  1 = 1  
	             GROUP BY BM.CO_CD, BD.ORDRS_NO,BM.SELL_BILL_DT
	             ) AS BILL  ON BILL.CO_CD    = ORDRS.CO_CD
	                     AND BILL.ORDRS_NO = ORDRS.ORDRS_NO
	       LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = ORDRS.ORDRS_CLNT_CD
	       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = ORDRS.CO_CD
	       LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = ORDRS.ORDRS_DIV
	       LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = ORDRS.CURR_CD
	     WHERE  1 = 1	
	     <if test="coCd !=null and !coCd.equals('')">
				 AND  ORDRS.CO_CD = #{coCd}
			</if>
			<if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
				 AND BILL.SELL_BILL_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYYMMDD') AND TO_DATE( #{reqDtTo},'YYYYMMDD') +1
			</if>
			<if test="ordrsClntCd !=null and !ordrsClntCd.equals('')">
			     AND  ORDRS.ORDRS_CLNT_CD LIKE '%${ordrsClntCd}%'  
			</if>
			<if test="ordrsClntNm !=null and !ordrsClntNm.equals('')">
			     AND  C.CLNT_NM   LIKE '%${ordrsClntNm}%' 
			</if>
			<if test="ordrsNo !=null and !ordrsNo.equals('')">
			     AND  ORDRS.ORDRS_NO LIKE '%${ordrsNo}%' 
			</if>
			<if test="clntPjt !=null and !clntPjt.equals('')">	
			     AND  ORDRS.CLNT_PJT LIKE '%${clntPjt}%' 
			</if>	
			<if test="ctrtNm !=null and !ctrtNm.equals('')">
				 AND  ORDRS.CTRT_NM  LIKE '%${ctrtNm}%' 
			</if>
			<if test="ORDRSDIV !=null and !ORDRSDIV.equals('')">
			    AND ORDRS.ORDRS_DIV LIKE '%${ORDRSDIV}%' 
			</if>
  </select>
  
  <select id="selectSalesStmtCalExcelList" parameterType="Map" resultType="camelMap">  	
 	SELECT DISTINCT BM.FILE_TRGT_KEY 
		     , BM.CO_CD        
		     , R.CODE_NM AS CO_CD_NM 
		     , BD.ORDRS_NO
		     , BM.SELL_BILL_NO  
		     , BM.ORDRS_CLNT_CD 
		     , C.CLNT_NM AS ORDRS_CLNT_NM 
		     , TO_CHAR(BM.SELL_BILL_DT, 'YYYY-MM-DD') AS SELL_BILL_DT  
		     , BM.CURR_CD       
		     , R1.CODE_NM AS CURR_NM 
		     , BM.EXRATE       
		     , BM.SELL_BILL_AMT 
		     , BM.SELL_BILL_SUMRMK 
		     , BM.SELL_BILL_RMK 
		     , BM.CREAT_ID     
		     , U1.NAME AS CREAT_ID_NM
		     , BM.CREAT_PGM   
		     , TO_CHAR(BM.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM 
		     , BM.UDT_ID      
		     , U2.NAME AS UDT_ID_NM
		     , BM.UDT_PGM      
		     , TO_CHAR(BM.UDT_DTTM, 'YYYY-MM-DD')   AS UDT_DTTM   
		     , TO_CHAR(BM.SELL_BILL_DT, 'YYYYMMDD') AS SELL_BILL_PERIOD     
		FROM   TB_CR04M01 AS BM
		       JOIN TB_CR04D01 AS BD ON BD.CO_CD        = BM.CO_CD
		                             AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
		       LEFT OUTER JOIN TB_CM06M01 AS U1 ON U1.ID = BM.CREAT_ID
		       LEFT OUTER JOIN TB_CM06M01 AS U2 ON U2.ID = BM.UDT_ID
		       LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = BM.ORDRS_CLNT_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = BM.CO_CD
		       LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = BM.CURR_CD
	 	WHERE  1 = 1
		<if test="coCd !=null and !coCd.equals('')">
		      AND  BD.CO_CD =  #{coCd}
		</if>
		<if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
			  AND BM.SELL_BILL_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
		</if>
		<if test="ordrsClntCd !=null and !ordrsClntCd.equals('')">
			     AND BM.ORDRS_CLNT_CD LIKE '%${ordrsClntCd}%'  
		</if>
		<if test="ordrsClntNm !=null and !ordrsClntNm.equals('')">
			     AND C.ORDRS_CLNT_NM   LIKE '%${ordrsClntNm}%' 
		</if>
		<if test="ordrsNo !=null and !ordrsNo.equals('')">
		         AND  BD.ORDRS_NO  LIKE '%${ordrsNo}%' 
		</if>	
				
  </select>
  
</mapper>