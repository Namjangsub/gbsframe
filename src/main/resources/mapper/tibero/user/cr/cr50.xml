<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.cr.cr50.mapper.CR50Mapper">

	<!-- 표준PFU에 등록된 내역을 화면 그리드에 출력하기위함 -->
	<select id="selectPFUAreaItemList" parameterType="Map" resultType="camelMap">
		SELECT 	  PRDT_DIV
				, AREA_DIV
				, (SELECT FN_CM05M01_CD_TO_NM(C.AREA_DIV) FROM DUAL)            AS AREA_DIV_NM
				, PART_DIV
				, (SELECT FN_CM05M01_CD_TO_NM(C.PART_DIV) FROM DUAL)            AS PART_DIV_NM
				, PART_ID
				, PART_NM
				, PART_STD
				, PART_CUST
				, PART_CONF
				, PART_ETC
				, SORT_NO
				, USE_YN
				, CLNT_CD
				, 'Y'  AS STD_CHK	--표준PFU항목 = Y
				, 'N'  AS IND_CHK	--Nomal, I=추가, U=수정, D=삭제
				, PART_ID AS ORG_PART_ID
		  FROM TB_CM50M01 C
		 WHERE 1 = 1
			<if test="prdtDiv != null and !prdtDiv.equals('')">
			AND    C.PRDT_DIV = #{prdtDiv}
			</if>
			<if test="areaDiv != null and !areaDiv.equals('')">
			AND    C.AREA_DIV = #{areaDiv}
			</if>
	</select>
         
	
  <resultMap id="resultInfoMap" type="CamelMap">
    <collection select="selectPfuClobInfo" property="resultClob" column="{fileTrgtKey=FILE_TRGT_KEY }" ofType="CamelMap"/>
<!--     <collection select="selectAreaList" property="area01List" column="{fileTrgtKey=FILE_TRGT_KEY, areaDiv='PFUAREA01' }" ofType="CamelMap"/> -->
<!--     <collection select="selectAreaList" property="area02List" column="{fileTrgtKey=FILE_TRGT_KEY, areaDiv='PFUAREA02' }" ofType="CamelMap"/> -->
<!--     <collection select="selectAreaList" property="area03List" column="{fileTrgtKey=FILE_TRGT_KEY, areaDiv='PFUAREA03' }" ofType="CamelMap"/> -->
<!--     <collection select="selectAreaList" property="area04List" column="{fileTrgtKey=FILE_TRGT_KEY, areaDiv='PFUAREA04' }" ofType="CamelMap"/> -->
<!--     <collection select="selectFileList" property="FILE_LIST" column="{fileTrgtKey=PRJCT_SEQ}" ofType="CamelMap"/> -->
  </resultMap>

  <select id="selectPfuInfo" parameterType="Map" resultMap="resultInfoMap">
      SELECT  T.FILE_TRGT_KEY
			, T.CO_CD
			, FN_CM05M01_CD_TO_NM(T.CO_CD) CO_CD_NM
			, T.CLNT_CD
			, A.CLNT_NM
			, T.ORDRS_CO_CD
			, T.ORDRS_NO
			, T.SALES_CDS
			, T.CLNT_PJT
			, FN_CM05M01_CD_TO_NM(T.CLNT_PJT) AS CLNT_PJT_NM
			, T.CTRT_NM
			, T.PRDT_DIV
			, T.PRDT_TYP
			, TO_CHAR(T.CTRT_DT, 'YYYY-MM-DD') AS CTRT_DT
			, TO_CHAR(T.PRDCTN_DT, 'YYYY-MM-DD') AS PRDCTN_DT
			, TO_CHAR(T.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT
			, T.MNG_ID
			, B.NAME AS MNG_ID_NM
			, T.CLNT_MNG_NM
			, T.CLNT_MNG_HP
			, T.CLNT_MNG_EMAIL
			, T.TRANS_OPT
			, T.TRANS_INFO
			, T.TRANS_VEHICLE
			, T.INSTALL_ADDR
			, T.GATE_WIDTH
			, T.GATE_HEIGHT
--			, T.CTRT_RMK	--CLOB Data
--			, T.CUST_REQ	--CLOB Data
--			, T.SPARE_LIST	--CLOB Data
--			, T.PFU_ETC	--CLOB Data
			, T.USE_YN
			, T.CREAT_ID
			, (SELECT FN_CM06M01_ID_TO_NM(T.CREAT_ID) FROM DUAL) AS CREAT_ID_NM
			, TO_CHAR(T.CREAT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS CREAT_DTTM
			, T.CREAT_PGM
			, T.UDT_ID
			, (SELECT FN_CM06M01_ID_TO_NM(T.UDT_ID) FROM DUAL) AS UDT_ID_NM
			, TO_CHAR(T.UDT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS UDT_DTTM
			, T.UDT_PGM
			, T.VER_NO
        FROM TB_CR50M01 T 
             LEFT OUTER JOIN TB_BM02M01 A ON T.CLNT_CD = A.CLNT_CD
             LEFT OUTER JOIN TB_CM06M01 B ON T.MNG_ID = B.ID
       WHERE FILE_TRGT_KEY = #{fileTrgtKey}
  </select>


<!-- CLOB Field는 일반 필드처럼 사용할수 없음.  오류 발생됨 -->
<!-- jdbcType="CLOB" javaType="java.lang.String" 으로 설정해야 정상적으로 처리 가능함-->
	<resultMap id="imgMap" type="hashMap">
<!-- 		<result property="base64" column="USER_IMG" javaType="[B" jdbcType="BLOB"/> -->
<!-- 		<result property="USER_IMG" column="USER_IMG" jdbcType="BLOB" javaType="byte[]"/> -->
		<result property="fileTrgtKey" column="FILE_TRGT_KEY" />
		<result property="ctrtRmk" column="CTRT_RMK" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="custReq" column="CUST_REQ" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="spareList" column="SPARE_LIST" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="pfuEtc" column="PFU_ETC" jdbcType="CLOB" javaType="java.lang.String"/>
		
	</resultMap>
	<select id="selectPfuClobInfo" resultMap="imgMap">
<!--   <select id="selectPfuInfo" resultMap="resultInfoMap"> -->
      SELECT  T.FILE_TRGT_KEY
			, T.CTRT_RMK
			, T.CUST_REQ
			, T.SPARE_LIST
			, T.PFU_ETC
        FROM TB_CR50M01 T 
       WHERE FILE_TRGT_KEY = #{fileTrgtKey}
  </select>
  
  
  <!-- 각설비별 등록된 내역을 화면 그리드에 출력하기위함 -->
  <select id="selectPFUAreaRetriveList" parameterType="Map" resultType="CamelMap">  
 		SELECT 	  C.FILE_TRGT_KEY
				, C.PFU_SEQ
				, C.PRDT_DIV
				, (SELECT FN_CM05M01_CD_TO_NM(C.PRDT_DIV) FROM DUAL)            AS AREA_DIV_NM
				, C.PART_ID
				, (SELECT FN_CM05M01_CD_TO_NM(C.PART_ID) FROM DUAL)            AS PART_ID_NM
				, C.AREA_DIV
				, (SELECT FN_CM05M01_CD_TO_NM(C.AREA_DIV) FROM DUAL)            AS AREA_DIV_NM
				, C.PART_DIV
				, (SELECT FN_CM05M01_CD_TO_NM(C.PART_DIV) FROM DUAL)            AS PART_DIV_NM
				, C.PART_NM
				, C.PART_STD
				, C.PART_CUST
				, C.PART_CONF
				, C.PART_ETC
				, C.SORT_NO
				, C.CREAT_ID
				, (SELECT FN_CM06M01_ID_TO_NM(C.CREAT_ID) FROM DUAL) AS CREAT_ID_NM
				, TO_CHAR(C.CREAT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS CREAT_DTTM
				, C.CREAT_PGM
				, C.UDT_ID
				, (SELECT FN_CM06M01_ID_TO_NM(C.UDT_ID) FROM DUAL) AS UDT_ID_NM
				, TO_CHAR(C.UDT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS UDT_DTTM
				, C.UDT_PGM
				, 'U' 											AS UDT_CHK
				, C.STD_CHK	--표준PFU항목 = Y
				, C.IND_CHK	--Nomal, I=추가, U=수정, D=삭제
				, C.ORG_PART_ID
		  FROM TB_CR50D01 C
		 WHERE 1 = 1
		 	AND	    C.FILE_TRGT_KEY = #{fileTrgtKey}
			<if test="prdtDiv != null and !prdtDiv.equals('')">
			AND    C.PRDT_DIV = #{prdtDiv} </if>
			<if test="areaDiv != null and !areaDiv.equals('')">
			AND    C.AREA_DIV = #{areaDiv} </if>
  </select>
  
  
  
  <select id="selectSystemCreateDttm" parameterType="Map" resultType="String">
		SELECT TO_CHAR(sysdate, 'YYYY-MM-DD HH24:MI:SS') FROM DUAL 
  </select>
  
  
  <insert id="insertPfu" parameterType="Map">
	<selectKey keyProperty="fileTrgtKey" resultType="String" order="BEFORE">
      SELECT 'PFU' || TO_CHAR(SYSDATE, 'YY')||LPAD(TB_CR50M01_SQ01.NEXTVAL,4,0) FROM DUAL
	</selectKey>
    INSERT INTO TB_CR50M01
      (   FILE_TRGT_KEY
		, CO_CD
		, CLNT_CD
		, ORDRS_CO_CD
		, ORDRS_NO
		, SALES_CDS
		, CLNT_PJT
		, CTRT_NM
		, PRDT_DIV
		, PRDT_TYP
		, CTRT_DT
		, PRDCTN_DT
		, ACPTNC_DT
		, MNG_ID
		, CLNT_MNG_NM
		, CLNT_MNG_HP
		, CLNT_MNG_EMAIL
		, TRANS_OPT
		, TRANS_INFO
		, TRANS_VEHICLE
		, INSTALL_ADDR
		, GATE_WIDTH
		, GATE_HEIGHT
		, CTRT_RMK
		, CUST_REQ
		, SPARE_LIST
		, PFU_ETC
		, USE_YN
		, CREAT_ID
		, CREAT_DTTM
		, CREAT_PGM
      )
    VALUES
    (
		  #{fileTrgtKey }
		, #{coCd        }
		, #{clntCd      }
		, #{ordrsCoCd   }
		, #{ordrsNo     }
		, #{salesCds    }
		, #{clntPjt     }
		, #{ctrtNm      }
		, #{prdtDiv     }
		, #{prdtTyp     }
		, #{ctrtDt      }
		, #{prdctnDt    , jdbcType=VARCHAR}
		, #{acptncDt    , jdbcType=VARCHAR}
		, #{mngId       }
		, #{clntMngNm   , jdbcType=VARCHAR}
		, #{clntMngHp   , jdbcType=VARCHAR}
		, #{clntMngEmail, jdbcType=VARCHAR}
		, #{transOpt    , jdbcType=VARCHAR}
		, #{transInfo   , jdbcType=VARCHAR}
		, #{transVehicle, jdbcType=VARCHAR}
		, #{installAddr , jdbcType=VARCHAR}
		, #{gateWidth   }
		, #{gateHeight  }
		, #{ctrtRmk, jdbcType=CLOB}
		, #{custReq, jdbcType=CLOB}
		, #{spareList, jdbcType=CLOB}
		, #{pfuEtc, jdbcType=CLOB}
		, #{useYn, jdbcType=VARCHAR}
		, #{userId}
		, SYSDATE
		, #{pgmId}
    )
  </insert>
  
  

  <update id="updatePfu" parameterType="Map">
    UPDATE TB_CR50M01
		SET
		  SALES_CDS                 =   #{salesCds    } 
		, CTRT_NM                   =   #{ctrtNm      }   
		, PRDT_DIV                  =   #{prdtDiv     }   
		, PRDT_TYP                  =   #{prdtTyp     }   
		, CTRT_DT                   =   #{ctrtDt      }   
		, PRDCTN_DT                 =   #{prdctnDt    , jdbcType=VARCHAR}   
		, ACPTNC_DT                 =   #{acptncDt    , jdbcType=VARCHAR}   
		, MNG_ID                    =   #{mngId       }   
		, CLNT_MNG_NM               =   #{clntMngNm   , jdbcType=VARCHAR}   
		, CLNT_MNG_HP               =   #{clntMngHp   , jdbcType=VARCHAR}   
		, CLNT_MNG_EMAIL            =   #{clntMngEmail, jdbcType=VARCHAR}   
		, TRANS_OPT                 =   #{transOpt    , jdbcType=VARCHAR}   
		, TRANS_INFO                =   #{transInfo   , jdbcType=VARCHAR}   
		, TRANS_VEHICLE             =   #{transVehicle, jdbcType=VARCHAR}   
		, INSTALL_ADDR              =   #{installAddr , jdbcType=VARCHAR}   
		, GATE_WIDTH                =   #{gateWidth   }   
		, GATE_HEIGHT               =   #{gateHeight  }   
		, CTRT_RMK                  =   #{ctrtRmk, jdbcType=CLOB}   
		, CUST_REQ                  =   #{custReq, jdbcType=CLOB}   
		, SPARE_LIST                =   #{spareList, jdbcType=CLOB}   
		, PFU_ETC                   =	#{pfuEtc, jdbcType=CLOB}  
		, USE_YN                    =	#{useYn, jdbcType=VARCHAR}  
		, UDT_ID                	=	#{userId}  
		, UDT_DTTM                	=	SYSDATE  
		, UDT_PGM                	=	#{pgmId} 
    WHERE FILE_TRGT_KEY         = #{fileTrgtKey}
  </update>
  
  <delete id="deletePfu" parameterType="Map">
    DELETE TB_CR50M01 WHERE FILE_TRGT_KEY = #{fileTrgtKey}
  </delete>
  
  
  <insert id="insertPfuArea" parameterType="Map">
    INSERT INTO TB_CR50D01
      (   
			  FILE_TRGT_KEY
			, PFU_SEQ
			, PRDT_DIV
			, PART_ID
			, AREA_DIV
			, PART_DIV
			, PART_NM
			, PART_STD
			, PART_CUST
			, PART_CONF
			, PART_ETC
			, SORT_NO
			, CREAT_ID
			, CREAT_DTTM
			, CREAT_PGM
			, STD_CHK
			, IND_CHK
			, ORG_PART_ID
			, UDT_ID
			, UDT_DTTM
			, UDT_PGM
      )
    VALUES
    (
			  #{fileTrgtKey}
			, #{pfuSeq     }
			, #{prdtDiv    , jdbcType=VARCHAR}
			, #{partId     , jdbcType=VARCHAR}
			, #{areaDiv    , jdbcType=VARCHAR}
			, #{partDiv    , jdbcType=VARCHAR}
			, #{partNm     }
			, #{partStd    , jdbcType=VARCHAR}
			, #{partCust   , jdbcType=VARCHAR}
			, #{partConf   , jdbcType=VARCHAR}
			, #{partEtc    , jdbcType=VARCHAR}
			, #{sortNo     }
			, #{creatId}
			, #{creatDttm}
			, #{creatPgm}
			, #{stdChk     }
			, #{indChk     }
			, #{orgPartId  , jdbcType=VARCHAR}
			, #{udtId	   , jdbcType=VARCHAR}  
			, #{udtDttm	   , jdbcType=VARCHAR} 
			, #{udtPgm	   , jdbcType=VARCHAR} 
    )
  </insert>
  
  

  <update id="updatePfuArea" parameterType="Map">
    UPDATE TB_CR50D01
		SET
			  PRDT_DIV            = #{prdtDiv    , jdbcType=VARCHAR}
			, PART_ID             = #{partId     , jdbcType=VARCHAR}
			, AREA_DIV            = #{areaDiv    , jdbcType=VARCHAR}
			, PART_DIV            = #{partDiv    , jdbcType=VARCHAR}
			, PART_NM             = #{partNm     }
			, PART_STD            = #{partStd    , jdbcType=VARCHAR}
			, PART_CUST           = #{partCust   , jdbcType=VARCHAR}
			, PART_CONF           = #{partConf   , jdbcType=VARCHAR}
			, PART_ETC            = #{partEtc    , jdbcType=VARCHAR}
			, SORT_NO             = #{sortNo     }
			, UDT_ID              =	#{userId}  
			, UDT_DTTM            =	SYSDATE  
			, UDT_PGM             =	#{pgmId} 
			, STD_CHK             = #{stdChk     }
			, IND_CHK             = #{indChk     }
			, ORG_PART_ID         = #{orgPartId  , jdbcType=VARCHAR}
    WHERE FILE_TRGT_KEY         = #{fileTrgtKey}
      AND PFU_SEQ				= #{pfuSeq}
  </update>
  
  <delete id="deletePfuArea" parameterType="Map">
    DELETE TB_CR50D01 
     WHERE FILE_TRGT_KEY = #{fileTrgtKey}
       AND PFU_SEQ		 = #{pfuSeq}
  </delete>
  
  <delete id="deletePfuAreaAll" parameterType="Map">
    DELETE TB_CR50D01 
     WHERE FILE_TRGT_KEY = #{fileTrgtKey}
  </delete>
 
</mapper>


