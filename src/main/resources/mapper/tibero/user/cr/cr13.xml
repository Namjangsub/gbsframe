<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.cr.cr13.mapper.CR13Mapper">
	<!-- 그리드 조회 카운트-->
    <select id="select_cr13_Count" parameterType="Map" resultType="int">
		SELECT count(*)
		FROM   (
			    SELECT A.*
				     , ROWNUM AS RN
					 , CASE WHEN A.ORDRS_ROW_NUM = 1 THEN A.ORDRS_AMT ELSE 0 END AS GROUP_ORDRS_AMT
				FROM   (
						SELECT A.*
							, ROW_NUMBER() OVER( PARTITION BY A.ORDRS_NO ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO) AS ORDRS_ROW_NUM							
						FROM	(
								SELECT DISTINCT A.FILE_TRGT_KEY AS ORDRS_FILE_TRGT_KEY
									, A.CO_CD
									, R.CODE_NM AS CO_NM
									, A.ORDRS_CLNT_CD
									, S.CLNT_NM AS ORDRS_CLNT_NM
									, NVL(TO_NUMBER(R4.CODE_RPRC), 0) AS CODE_RPRC   --부가세
									, A.CLNT_PJT
									, FN_CM05M01_CD_TO_NM(A.CLNT_PJT) AS CLNT_PJT_NM
									, A.ORDRS_NO
									, TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
									, A.ORDRS_DIV
									, R1.CODE_NM          AS ORDRS_DIV_NM
									, A.CTRT_NM
									, A.CURR_CD
									, R2.CODE_NM          AS CURR_NM
									, NVL(A.EXRATE, 1)    AS EXRATE
									, NVL(A.ORDRS_AMT, 0) AS ORDRS_AMT
									, P.CLMN_PLAN_SEQ
									, P.CLMN_PLAN_DIV
									, R3.CODE_NM          AS CLMN_PLAN_DIV_NM
									, P.CLMN_DIV_SEQ
									, TO_CHAR(NVL(P.CLMN_DIV_SEQ, 1)) || ' 차' AS CLMN_DIV_SEQ_NM
									, NVL(P.CLMN_RATE, 0) AS CLMN_RATE
									, TO_CHAR(NVL(P.CLMN_RATE, 0)) || ' %'     AS CLMN_RATE_NM
									, NVL(P.CLMN_AMT, 0)  AS PLAN_CLMN_AMT
									, (NVL(P.CLMN_AMT, 0) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS PLAN_CLMN_AMT_VAT                  --수금예정금액VAT   
									, TO_CHAR(P.BILL_PBLS_DT, 'YYYY-MM-DD')    AS BILL_PBLS_DT
									, TO_CHAR(P.CLMN_DT, 'YYYY-MM-DD')         AS PLAN_CLMN_DT
									, NVL(CS.SELL_DCSN_DTL_AMT, 0)             AS SELL_DCSN_AMT_SUM
									, NVL(BS.SELL_BILL_DTL_AMT, 0)             AS SELL_BILL_AMT_SUM
									, (NVL(BS.SELL_BILL_DTL_AMT, 0) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS SELL_BILL_AMT_SUM_VAT     --계산서발행VAT
									, NVL(SS.CLMN_DTL_AMT, 0)                  AS CLMN_DTL_AMT_SUM
									, (NVL(SS.CLMN_DTL_AMT, 0) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS CLMN_DTL_AMT_SUM_VAT              --수금금액VAT
									, CASE WHEN (NVL(P.CLMN_AMT, 0) - NVL(SS.CLMN_DTL_AMT, 0)) > 0 THEN 'N' ELSE 'Y' END AS CLMN_YN
									, NVL(P.CLMN_AMT, 0) - NVL(CS.SELL_DCSN_DTL_AMT, 0) AS SELL_DCSN_AMT_MI
									, NVL(P.CLMN_AMT, 0) - NVL(BS.SELL_BILL_DTL_AMT, 0) AS SELL_BILL_AMT_MI
									, ((NVL(P.CLMN_AMT, 0) - NVL(BS.SELL_BILL_DTL_AMT, 0)) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS SELL_BILL_AMT_MI_VAT     --계산서 미발행VAT
									, NVL(P.CLMN_AMT, 0) - NVL(SS.CLMN_DTL_AMT, 0)      AS CLMN_AMT_MI
									, ((NVL(P.CLMN_AMT, 0) - NVL(SS.CLMN_DTL_AMT, 0)) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS CLMN_AMT_MI_VAT  --미수금금액VAT
									, A.MNG_ID
									, U.NAME AS MNG_NM
								FROM   TB_CR02M01 AS A --수주
									--수금계획
									LEFT OUTER JOIN TB_CR02D01 AS P  ON P.CO_CD    = A.CO_CD
																	AND P.ORDRS_NO = A.ORDRS_NO
									--매출확정집계
									LEFT OUTER JOIN (
														SELECT DISTINCT CM.CO_CD
															, CD.ORDRS_NO
															, CD.CLMN_PLAN_SEQ
															, SUM(NVL(CD.SELL_DCSN_DTL_AMT, 0)) AS SELL_DCSN_DTL_AMT
														FROM   TB_CR03M01 AS CM --매출확정
															--매출확정상세
															LEFT OUTER JOIN TB_CR03D01 AS CD  ON CD.CO_CD        = CM.CO_CD
																								AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
														GROUP BY CM.CO_CD, CD.ORDRS_NO, CD.CLMN_PLAN_SEQ
													) AS CS  ON CS.CO_CD         = P.CO_CD
															AND CS.ORDRS_NO      = P.ORDRS_NO
															AND CS.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
									--매출계산서 집계
									LEFT OUTER JOIN (
														SELECT DISTINCT BM.CO_CD
															, BD.ORDRS_NO
															, BD.CLMN_PLAN_SEQ
															, SUM(NVL(BD.SELL_BILL_DTL_AMT, 0)) AS SELL_BILL_DTL_AMT
														FROM   TB_CR04M01 AS BM --매출계산서
															--매출계산서 상세
															LEFT OUTER JOIN TB_CR04D01 AS BD  ON BD.CO_CD        = BM.CO_CD
																								AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
														GROUP BY BM.CO_CD, BD.ORDRS_NO, BD.CLMN_PLAN_SEQ
													) AS BS  ON BS.CO_CD         = P.CO_CD
															AND BS.ORDRS_NO      = P.ORDRS_NO
															AND BS.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
									--수금 집계
									LEFT OUTER JOIN (
														SELECT DISTINCT SM.CO_CD
															, SD.ORDRS_NO
															, SD.CLMN_PLAN_SEQ
															, SUM(NVL(SD.CLMN_DTL_AMT, 0)) AS CLMN_DTL_AMT
														FROM   TB_CR05M01 AS SM --수금
															--수금 상세
															LEFT OUTER JOIN TB_CR05D01 AS SD  ON SD.CO_CD   = SM.CO_CD
																								AND SD.CLMN_NO = SM.CLMN_NO
														GROUP BY SM.CO_CD, SD.ORDRS_NO, SD.CLMN_PLAN_SEQ
													) AS SS  ON SS.CO_CD         = P.CO_CD
															AND SS.ORDRS_NO      = P.ORDRS_NO
															AND SS.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
									--회사
									LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = A.CO_CD
									--수주구분
									LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DIV
									--통화단위
									LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
									--수금계획구분
									LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = P.CLMN_PLAN_DIV
									--고객사
									LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
									--거래처 VAT
									LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = S.SELL_VAT_CD
									--담당자
									LEFT OUTER JOIN TB_CM06M01 AS U ON U.ID = A.MNG_ID
								WHERE  1 = 1
								<if test="coCd != null and !coCd.equals('')">
								AND    A.CO_CD = #{coCd}
								</if>
								<if test="strtDt != null and !strtDt.equals('')" >
								AND    A.ORDRS_DT BETWEEN TO_DATE('19990101', 'YYYYMMDD') AND TO_DATE( #{strtDt},'YYYYMMDD')
								</if>
								<if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
								AND    A.ORDRS_CLNT_CD = #{ordrsClntCd}
								</if>
								<if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
								AND    S.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
								</if>
								<if test="ordrsNo != null and !ordrsNo.equals('')">
								AND    A.ORDRS_NO LIKE '%' || #{ordrsNo} || '%'
								</if>
								<if test="clntPjt != null and !clntPjt.equals('')">
								AND    A.CLNT_PJT LIKE '%' || #{clntPjt} || '%'
								</if>
								<if test="ctrtNm != null and !ctrtNm.equals('')">
								AND    A.CTRT_NM LIKE '%' || #{ctrtNm} || '%'
								</if>
								<if test="ordrsDiv != null and !ordrsDiv.equals('')">
								AND    A.ORDRS_DIV = #{ordrsDiv}
								</if>
								<if test="planClmnDt != null and !planClmnDt.equals('')">
								AND    P.CLMN_DT <![CDATA[<]]> TO_DATE(#{planClmnDt},'YYYYMMDD')
								</if>
								ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO, P.CLMN_PLAN_SEQ
								) AS A
						WHERE  1 = 1
						AND    A.CLMN_AMT_MI > 0
					) AS A
				WHERE  1 = 1
			   ) AS A
		WHERE  1 = 1
    </select>

	<!-- 그리드 조회 -->
	<select id="select_cr13_List" parameterType="Map" resultType="camelMap">
		SELECT A.*
		FROM   (
			    SELECT A.*
				     , ROW_NUMBER() OVER(ORDER BY A.CO_NM, A.ORDRS_CLNT_NM, A.ORDRS_NO) AS RN
					 , CASE WHEN A.ORDRS_ROW_NUM = 1 THEN A.ORDRS_AMT ELSE 0 END AS GROUP_ORDRS_AMT
				FROM   (
						SELECT A.*
							, ROW_NUMBER() OVER( PARTITION BY A.ORDRS_NO ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO) AS ORDRS_ROW_NUM							
						FROM	(
								SELECT DISTINCT A.FILE_TRGT_KEY AS ORDRS_FILE_TRGT_KEY
									, A.CO_CD
									, R.CODE_NM AS CO_NM
									, A.ORDRS_CLNT_CD
									, S.CLNT_NM AS ORDRS_CLNT_NM
									, NVL(TO_NUMBER(R4.CODE_RPRC), 0) AS CODE_RPRC   --부가세
									, A.CLNT_PJT
									, FN_CM05M01_CD_TO_NM(A.CLNT_PJT) AS CLNT_PJT_NM
									, A.ORDRS_NO
									, TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
									, A.ORDRS_DIV
									, R1.CODE_NM          AS ORDRS_DIV_NM
									, A.CTRT_NM
									, A.CURR_CD
									, R2.CODE_NM          AS CURR_NM
									, NVL(A.EXRATE, 1)    AS EXRATE
									, NVL(A.ORDRS_AMT, 0) AS ORDRS_AMT
									, P.CLMN_PLAN_SEQ
									, P.CLMN_PLAN_DIV
									, R3.CODE_NM          AS CLMN_PLAN_DIV_NM
									, P.CLMN_DIV_SEQ
									, TO_CHAR(NVL(P.CLMN_DIV_SEQ, 1)) || ' 차' AS CLMN_DIV_SEQ_NM
									, NVL(P.CLMN_RATE, 0) AS CLMN_RATE
									, TO_CHAR(NVL(P.CLMN_RATE, 0)) || ' %'     AS CLMN_RATE_NM
									, NVL(P.CLMN_AMT, 0)  AS PLAN_CLMN_AMT
									, (NVL(P.CLMN_AMT, 0) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS PLAN_CLMN_AMT_VAT                  --수금예정금액VAT   
									, TO_CHAR(P.BILL_PBLS_DT, 'YYYY-MM-DD')    AS BILL_PBLS_DT
									, TO_CHAR(P.CLMN_DT, 'YYYY-MM-DD')         AS PLAN_CLMN_DT
									, NVL(CS.SELL_DCSN_DTL_AMT, 0)             AS SELL_DCSN_AMT_SUM
									, NVL(BS.SELL_BILL_DTL_AMT, 0)             AS SELL_BILL_AMT_SUM
									, (NVL(BS.SELL_BILL_DTL_AMT, 0) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS SELL_BILL_AMT_SUM_VAT     --계산서발행VAT
									, NVL(SS.CLMN_DTL_AMT, 0)                  AS CLMN_DTL_AMT_SUM
									, (NVL(SS.CLMN_DTL_AMT, 0) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS CLMN_DTL_AMT_SUM_VAT              --수금금액VAT
									, CASE WHEN (NVL(P.CLMN_AMT, 0) - NVL(SS.CLMN_DTL_AMT, 0)) > 0 THEN 'N' ELSE 'Y' END AS CLMN_YN
									, NVL(P.CLMN_AMT, 0) - NVL(CS.SELL_DCSN_DTL_AMT, 0) AS SELL_DCSN_AMT_MI
									, NVL(P.CLMN_AMT, 0) - NVL(BS.SELL_BILL_DTL_AMT, 0) AS SELL_BILL_AMT_MI
									, ((NVL(P.CLMN_AMT, 0) - NVL(BS.SELL_BILL_DTL_AMT, 0)) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS SELL_BILL_AMT_MI_VAT     --계산서 미발행VAT
									, NVL(P.CLMN_AMT, 0) - NVL(SS.CLMN_DTL_AMT, 0)      AS CLMN_AMT_MI
									, ((NVL(P.CLMN_AMT, 0) - NVL(SS.CLMN_DTL_AMT, 0)) * NVL(TO_NUMBER(R4.CODE_RPRC), 0)) / 100  AS CLMN_AMT_MI_VAT  --미수금금액VAT
									, A.MNG_ID
									, U.NAME AS MNG_NM
								FROM   TB_CR02M01 AS A --수주
									--수금계획
									LEFT OUTER JOIN TB_CR02D01 AS P  ON P.CO_CD    = A.CO_CD
																	AND P.ORDRS_NO = A.ORDRS_NO
									--매출확정집계
									LEFT OUTER JOIN (
														SELECT DISTINCT CM.CO_CD
															, CD.ORDRS_NO
															, CD.CLMN_PLAN_SEQ
															, SUM(NVL(CD.SELL_DCSN_DTL_AMT, 0)) AS SELL_DCSN_DTL_AMT
														FROM   TB_CR03M01 AS CM --매출확정
															--매출확정상세
															LEFT OUTER JOIN TB_CR03D01 AS CD  ON CD.CO_CD        = CM.CO_CD
																								AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
														GROUP BY CM.CO_CD, CD.ORDRS_NO, CD.CLMN_PLAN_SEQ
													) AS CS  ON CS.CO_CD         = P.CO_CD
															AND CS.ORDRS_NO      = P.ORDRS_NO
															AND CS.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
									--매출계산서 집계
									LEFT OUTER JOIN (
														SELECT DISTINCT BM.CO_CD
															, BD.ORDRS_NO
															, BD.CLMN_PLAN_SEQ
															, SUM(NVL(BD.SELL_BILL_DTL_AMT, 0)) AS SELL_BILL_DTL_AMT
														FROM   TB_CR04M01 AS BM --매출계산서
															--매출계산서 상세
															LEFT OUTER JOIN TB_CR04D01 AS BD  ON BD.CO_CD        = BM.CO_CD
																								AND BD.SELL_BILL_NO = BM.SELL_BILL_NO
														GROUP BY BM.CO_CD, BD.ORDRS_NO, BD.CLMN_PLAN_SEQ
													) AS BS  ON BS.CO_CD         = P.CO_CD
															AND BS.ORDRS_NO      = P.ORDRS_NO
															AND BS.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
									--수금 집계
									LEFT OUTER JOIN (
														SELECT DISTINCT SM.CO_CD
															, SD.ORDRS_NO
															, SD.CLMN_PLAN_SEQ
															, SUM(NVL(SD.CLMN_DTL_AMT, 0)) AS CLMN_DTL_AMT
														FROM   TB_CR05M01 AS SM --수금
															--수금 상세
															LEFT OUTER JOIN TB_CR05D01 AS SD  ON SD.CO_CD   = SM.CO_CD
																								AND SD.CLMN_NO = SM.CLMN_NO
														GROUP BY SM.CO_CD, SD.ORDRS_NO, SD.CLMN_PLAN_SEQ
													) AS SS  ON SS.CO_CD         = P.CO_CD
															AND SS.ORDRS_NO      = P.ORDRS_NO
															AND SS.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
									--회사
									LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = A.CO_CD
									--수주구분
									LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DIV
									--통화단위
									LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
									--수금계획구분
									LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = P.CLMN_PLAN_DIV
									--고객사
									LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
									--거래처 VAT
									LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = S.SELL_VAT_CD
									--담당자
									LEFT OUTER JOIN TB_CM06M01 AS U ON U.ID = A.MNG_ID
								WHERE  1 = 1
								<if test="coCd != null and !coCd.equals('')">
								AND    A.CO_CD = #{coCd}
								</if>
								<if test="strtDt != null and !strtDt.equals('')" >
								AND    A.ORDRS_DT BETWEEN TO_DATE('19990101', 'YYYYMMDD') AND TO_DATE( #{strtDt},'YYYYMMDD')
								</if>
								<if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
								AND    A.ORDRS_CLNT_CD = #{ordrsClntCd}
								</if>
								<if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
								AND    S.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
								</if>
								<if test="ordrsNo != null and !ordrsNo.equals('')">
								AND    A.ORDRS_NO LIKE '%' || #{ordrsNo} || '%'
								</if>
								<if test="clntPjt != null and !clntPjt.equals('')">
								AND    A.CLNT_PJT LIKE '%' || #{clntPjt} || '%'
								</if>
								<if test="ctrtNm != null and !ctrtNm.equals('')">
								AND    A.CTRT_NM LIKE '%' || #{ctrtNm} || '%'
								</if>
								<if test="ordrsDiv != null and !ordrsDiv.equals('')">
								AND    A.ORDRS_DIV = #{ordrsDiv}
								</if>
								<if test="planClmnDt != null and !planClmnDt.equals('')">
								AND    P.CLMN_DT <![CDATA[<]]> TO_DATE(#{planClmnDt},'YYYYMMDD')
								</if>
								ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO, P.CLMN_PLAN_SEQ
								) AS A
						WHERE  1 = 1
						AND    A.CLMN_AMT_MI > 0
						ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO, A.CLMN_PLAN_SEQ
					) AS A
				WHERE  1 = 1
				ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO, A.CLMN_PLAN_SEQ
			   ) AS A
		WHERE  1 = 1
		AND    A.RN BETWEEN ${firstIndex} AND ${lastIndex}
	</select>

	<!-- 수금유형 -->		
	<select id="selectPmntmtdCd" parameterType="Map" resultType="camelMap">
		SELECT CODE_ID AS CODE_ID
		     , CODE_NM AS CODE_NM
		FROM   TB_CM05M01 AS A
		WHERE  A.CODE_KIND = 'PMNTMTD'
		<if test="codeId != null and !codeId.equals('')">
		AND    A.CODE_ID = #{codeId}
		</if>
	</select>
</mapper>