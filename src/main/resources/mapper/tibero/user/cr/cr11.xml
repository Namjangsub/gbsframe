<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.cr.cr11.mapper.CR11Mapper">
	<!-- 그리드 카운트 -->
	<select id="grid1_selectCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		FROM   (
				SELECT ROWNUM AS RN
					, A.FILE_TRGT_KEY
					, A.CO_CD                     --회사코드
					, R.CODE_NM AS CO_NM          --회사이름
					, A.ORDRS_CLNT_CD             --고객사코드
					, BM.CLNT_NM AS CLNT_NM       --고객사명
					, A.ORDRS_NO                  --수주번호
					, CRD.ORDRS_SEQ               --수주순번
					, TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT  --수주일자
					, A.ORDRS_DIV	              --수주구분
					, A.CLNT_PJT	              --고객사PJT
					, FN_CM05M01_CD_TO_NM(A.CLNT_PJT) AS CLNT_PJT_NM
					, CRD.SALES_CD                --SALESCODE
					, CRD.PRDT_CD                 --제품구분
					, R1.CODE_NM AS PRDT_NM       --제품구분
					, CRD.ITEM_DIV                --아이템구분
					, R2.CODE_NM AS ITEM_DIV_NM   --아이템구분
					, CRD.ORDRS_DTL_DIV20         --작업구분
					, R3.CODE_NM AS ORDRS_DTL_DIV20_NM         --작업구분
					, CRD.ORDRS_DTL_DIV30         --자체구분
					, R4.CODE_NM AS ORDRS_DTL_DIV30_NM         --작업구분
					, CRD.EQP_NM                  --설비명
					, A.CTRT_NM                   --계약명
					, CRD.ORDRS_PRC_MACH          --기계PART(수주)
					, CRD.ORDRS_PRC_ELCTY         --전기PART(수주)
					, CRD.ORDRS_PRC               --합계(수주)
					, CRD.ORDRS_QTY               --수량
					, CRD.EST_EPCT_MAT_PRC        --견적예상재료비
					, CRD.TRGT_PCHS_PCOST_MACH          --기계PART(목표)
					, CRD.TRGT_PCHS_PCOST_ELCTY         --전기PART(목표)
					, CRD.TRGT_PCHS_PCOST_MACH +  CRD.TRGT_PCHS_PCOST_ELCTY AS TRGT_PCHS_SUM  --목표 합계
					, CONCAT(ROUND(NVL(((CRD.TRGT_PCHS_PCOST_MACH + CRD.TRGT_PCHS_PCOST_ELCTY) / 
					DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC)* 100 ), 0),3), '%') AS RATE   --목표 비율
					, CRD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --자체가공
					, CRD.ORDRS_PRC + CRD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS MACHINE_VALUE_AFTER_DEDUCTION --차감 후 기계값
					<!--실집행 기계 -->
					, CRD.ACT_RGL_MACH
					, CRD.ACT_OBS_MACH
					, CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH AS SUM_MACH  --합계
					, CONCAT(ROUND(NVL(((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH) /
					DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC)* 100 ), 0),3), '%') AS RATE_MACH   --목표 비율
					<!--실집행 전기-->
					, CRD.ACT_RGL_ELCTY
					, CRD.ACT_OBS_ELCTY
					, CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY AS SUM_ELCTY  --합계
					, CONCAT(ROUND(NVL(((CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY) /
					DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC)* 100 ), 0),3), '%') AS RATE_ELCTY   --목표 비율
					<!--실집행 구매외주-->
					, (CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY) AS SUM_MACH_ELCTY  --TOTAL
					, CONCAT(ROUND(NVL((((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) /
					DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC)* 100 ), 0),3), '%') AS RATE_MACH_ELCTY  --비율
					<!--실집행 달성율-->
					, CONCAT(ROUND(NVL(((CRD.TRGT_PCHS_PCOST_MACH +  CRD.TRGT_PCHS_PCOST_ELCTY) /
					DECODE(((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)), 0, NULL, ((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)))* 100 ), 0),3), '%') AS ACHIV  --실집행 달성율
					<!--노무비 및 제조경비-->
					, CRD.LABOR_COST_MFG_COST --금액
					, CONCAT(ROUND(NVL((CRD.LABOR_COST_MFG_COST /
					DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC)* 100 ), 0),3), '%') AS LABOR_RATE_MFG_RATE   --비율
					<!--판관비-->
					, CRD.ACT_EXP_COST--경비 및 관리비
					, CONCAT(ROUND(NVL((CRD.ACT_EXP_COST /
					DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC)* 100 ), 0),3), '%') AS RATE_EXP  --비율
					<!--원가총합계-->
					, ((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) + CRD.LABOR_COST_MFG_COST AS SUM_PCOST  --TOTAL
					, CONCAT(ROUND(NVL(((((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) + CRD.LABOR_COST_MFG_COST) /
					DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC)* 100 ), 0),3), '%') AS RATE_SUM_PCOST  --비율
					<!--영업이익-->
					, CRD.ORDRS_PRC -
					(((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH) + (CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) + CRD.LABOR_COST_MFG_COST) -
					CRD.ACT_EXP_COST AS BSN_PROFIT --영업이익
					, CONCAT(ROUND(NVL(((CRD.ORDRS_PRC - (((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) + CRD.LABOR_COST_MFG_COST) - CRD.ACT_EXP_COST) / 
					DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC)* 100 ), 0),3), '%') AS RATE_BSN_PROFIT  --비율
					, CRD.LABOR_COST_MFG_COST          --노무비 및 제조경비
					, NVL(CRD.ACT_RGL_MACH, 0) AS ACT_RGL_MACH      --실행원가 기계 정상
					, NVL(CRD.ACT_OBS_MACH, 0) AS ACT_OBS_MACH      --실행원가 기계 장애
					, NVL(CRD.ACT_RGL_ELCTY, 0) AS ACT_RGL_ELCTY    --실행원가 전기 정상
					, NVL(CRD.ACT_OBS_ELCTY, 0) AS ACT_OBS_ELCTY    --실행원가 전기 장애
					, NVL(CRD.ACT_EXP_COST, 0) AS ACT_EXP_COST      --경비 및 관리비
					, CASE WHEN (NVL(CRD.ACT_RGL_MACH,0) + NVL(CRD.ACT_OBS_MACH,0) + NVL(CRD.ACT_RGL_ELCTY,0) + NVL(CRD.ACT_OBS_ELCTY,0) + NVL(CRD.LABOR_COST_MFG_COST,0)) > 0 THEN 'Y'
							ELSE 'N' END AS EXCUT_YN
				FROM   TB_CR02M01 AS A
					<!-- 수주상세 조인 -->
					LEFT OUTER JOIN TB_CR02D02 AS CRD  ON CRD.CO_CD = A.CO_CD
														AND CRD.ORDRS_NO = A.ORDRS_NO	 												  
					<!-- 고객사명 조인 -->
					LEFT OUTER JOIN TB_BM02M01 AS BM ON BM.CLNT_CD = A.ORDRS_CLNT_CD 
					<!-- 회사이름 조인 -->
					LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = A.CO_CD	 	
					<!-- 제품구분 -->
					LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = CRD.PRDT_CD
					<!-- 아이템구분 -->
					LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = CRD.ITEM_DIV
					<!-- 작업구분 -->
					LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = CRD.ORDRS_DTL_DIV20
					<!-- 자체구분 -->
					LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = CRD.ORDRS_DTL_DIV30
					
				WHERE  1 = 1
				<!-- 검색조건 -->
				<if test="coCd != null and !coCd.equals('')">
				AND    A.CO_CD = '${coCd}' --회사
				</if>
				<if test="salesCd != null and !salesCd.equals('')">
				AND    CRD.SALES_CD = '${salesCd}' --salesCd
				</if>
				<if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
				AND    A.ORDRS_DT BETWEEN TO_DATE( #{strtDt},'YYYYMMDD') AND TO_DATE( #{endDt},'YYYYMMDD') --수주일자
				</if>
				<if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
				AND    A.ORDRS_CLNT_CD = #{OrdrsClntCd} --고객사
				</if>
				<if test="clntNm != null and !clntNm.equals('')">
				AND    BM.CLNT_NM LIKE '%' || #{clntNm} || '%'  --고객사명
				</if>
				<if test="ordrsNo != null and !ordrsNo.equals('')">
				AND    A.ORDRS_NO LIKE '%' || #{ordrsNo} || '%'  --수주번호
				</if>
				<if test="clntPjt != null and !clntPjt.equals('')">
				AND    A.CLNT_PJT = #{clntPjt}  --고객사PJT
				</if>
				<if test="ordrsDiv != null and !ordrsDiv.equals('')">
				AND    A.ORDRS_DIV = #{ordrsDiv} --수주구분
				</if>
			) AS Z
		WHERE  1 = 1
	</select>
	
	<!-- 그리드 조회 -->
	<select id="grid1_selectList" parameterType="Map" resultType="camelMap">
		SELECT Z.*
		FROM   (
				SELECT ROWNUM AS RN
					, A.FILE_TRGT_KEY
					, A.CO_CD                     --회사코드
					, R.CODE_NM AS CO_NM          --회사이름
					, A.ORDRS_CLNT_CD             --고객사코드
					, BM.CLNT_NM AS CLNT_NM       --고객사명
					, A.ORDRS_NO                  --수주번호
					, CRD.ORDRS_SEQ               --수주순번
					, TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT  --수주일자
					, A.ORDRS_DIV	              --수주구분
					, A.CLNT_PJT	              --고객사PJT
					, FN_CM05M01_CD_TO_NM(A.CLNT_PJT) AS CLNT_PJT_NM
					, CRD.SALES_CD                --SALESCODE
					, CRD.PRDT_CD                 --제품구분
					, R1.CODE_NM AS PRDT_NM       --제품구분
					, CRD.ITEM_DIV                --아이템구분
					, R2.CODE_NM AS ITEM_DIV_NM   --아이템구분
					, CRD.ORDRS_DTL_DIV20         --작업구분
					, R3.CODE_NM AS ORDRS_DTL_DIV20_NM         --작업구분
					, CRD.ORDRS_DTL_DIV30         --자체구분
					, R4.CODE_NM AS ORDRS_DTL_DIV30_NM         --작업구분
					, CRD.EQP_NM                  --설비명
					, A.CTRT_NM                   --계약명
					, CRD.ORDRS_PRC_MACH          --기계PART(수주)
					, CRD.ORDRS_PRC_ELCTY         --전기PART(수주)
					, CRD.ORDRS_PRC               --합계(수주)
					, CRD.ORDRS_QTY               --수량
					, CRD.EST_EPCT_MAT_PRC        --견적예상재료비
					, CRD.TRGT_PCHS_PCOST_MACH          --기계PART(목표)
					, CRD.TRGT_PCHS_PCOST_ELCTY         --전기PART(목표)
					, CRD.TRGT_PCHS_PCOST_MACH +  CRD.TRGT_PCHS_PCOST_ELCTY AS TRGT_PCHS_SUM  --목표 합계
					, CONCAT(ROUND(NVL(((CRD.TRGT_PCHS_PCOST_MACH + CRD.TRGT_PCHS_PCOST_ELCTY) / 
					  DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC) * 100), 0), 1), '%') AS RATE   --목표 비율
					, CRD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --자체가공
					, CRD.TRGT_PCHS_PCOST_MACH - CRD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS MACHINE_VALUE_AFTER_DEDUCTION --차감 후 기계값
					<!--실집행 기계 -->
					, CRD.ACT_RGL_MACH
					, CRD.ACT_OBS_MACH
					, CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH AS SUM_MACH  --합계
					, CONCAT(ROUND(NVL(((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH) /
					  DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC) * 100), 0), 1), '%') AS RATE_MACH   --목표 비율
					<!--실집행 전기-->
					, CRD.ACT_RGL_ELCTY
					, CRD.ACT_OBS_ELCTY
					, CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY AS SUM_ELCTY  --합계
					, CONCAT(ROUND(NVL(((CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY) /
					  DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC) * 100), 0), 1), '%') AS RATE_ELCTY   --목표 비율
					<!--실집행 구매외주-->
					, (CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY) AS SUM_MACH_ELCTY  --TOTAL
					, CONCAT(ROUND(NVL((((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) /
					  DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC) * 100 ), 0), 1), '%') AS RATE_MACH_ELCTY  --비율
					<!--실집행 달성율-->
					, CONCAT(ROUND(NVL(((CRD.TRGT_PCHS_PCOST_MACH +  CRD.TRGT_PCHS_PCOST_ELCTY) /
					  DECODE(((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)), 0, NULL, ((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY))) * 100), 0), 1), '%') AS ACHIV  --실집행 달성율
					<!--노무비 및 제조경비-->
					, CRD.LABOR_COST_MFG_COST --금액
					, CONCAT(ROUND(NVL((CRD.LABOR_COST_MFG_COST /
					  DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC) * 100 ), 0), 1), '%') AS LABOR_RATE_MFG_RATE   --비율
					<!--판관비-->
					, CRD.ACT_EXP_COST--경비 및 관리비
					, CONCAT(ROUND(NVL((CRD.ACT_EXP_COST /
					  DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC) * 100), 0), 1), '%') AS RATE_EXP  --비율
					<!--원가총합계-->
					, ((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) + CRD.LABOR_COST_MFG_COST AS SUM_PCOST  --TOTAL
					, CONCAT(ROUND(NVL(((((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) + CRD.LABOR_COST_MFG_COST) /
					  DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC) * 100 ), 0), 1), '%') AS RATE_SUM_PCOST  --비율
					<!--영업이익-->
					, CRD.ORDRS_PRC -
					(((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH) + (CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) + CRD.LABOR_COST_MFG_COST) -
					CRD.ACT_EXP_COST AS BSN_PROFIT --영업이익
					, CONCAT(ROUND(NVL(((CRD.ORDRS_PRC - (((CRD.ACT_RGL_MACH + CRD.ACT_OBS_MACH)+(CRD.ACT_RGL_ELCTY + CRD.ACT_OBS_ELCTY)) + CRD.LABOR_COST_MFG_COST) - CRD.ACT_EXP_COST) / 
					  DECODE(CRD.ORDRS_PRC, 0, NULL, CRD.ORDRS_PRC) * 100 ), 0), 1), '%') AS RATE_BSN_PROFIT  --비율
					, CRD.LABOR_COST_MFG_COST          --노무비 및 제조경비
					, NVL(CRD.ACT_RGL_MACH, 0) AS ACT_RGL_MACH      --실행원가 기계 정상
					, NVL(CRD.ACT_OBS_MACH, 0) AS ACT_OBS_MACH      --실행원가 기계 장애
					, NVL(CRD.ACT_RGL_ELCTY, 0) AS ACT_RGL_ELCTY    --실행원가 전기 정상
					, NVL(CRD.ACT_OBS_ELCTY, 0) AS ACT_OBS_ELCTY    --실행원가 전기 장애
					, NVL(CRD.ACT_EXP_COST, 0) AS ACT_EXP_COST      --경비 및 관리비
					, CASE WHEN (NVL(CRD.ACT_RGL_MACH,0) + NVL(CRD.ACT_OBS_MACH,0) + NVL(CRD.ACT_RGL_ELCTY,0) + NVL(CRD.ACT_OBS_ELCTY,0) + NVL(CRD.LABOR_COST_MFG_COST,0)) > 0 THEN 'Y'
							ELSE 'N' END AS EXCUT_YN
					, CRD.EST_TRGT_COST	--수주목표가
				FROM   TB_CR02M01 AS A
					<!-- 수주상세 조인 -->
					LEFT OUTER JOIN TB_CR02D02 AS CRD  ON CRD.CO_CD = A.CO_CD
														AND CRD.ORDRS_NO = A.ORDRS_NO	 												  
					<!-- 고객사명 조인 -->
					LEFT OUTER JOIN TB_BM02M01 AS BM ON BM.CLNT_CD = A.ORDRS_CLNT_CD 
					<!-- 회사이름 조인 -->
					LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = A.CO_CD	 	
					<!-- 제품구분 -->
					LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = CRD.PRDT_CD
					<!-- 아이템구분 -->
					LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = CRD.ITEM_DIV
					<!-- 작업구분 -->
					LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = CRD.ORDRS_DTL_DIV20
					<!-- 자체구분 -->
					LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = CRD.ORDRS_DTL_DIV30
					
				WHERE  1 = 1
				<!-- 검색조건 -->
				<if test="coCd != null and !coCd.equals('')">
				AND    A.CO_CD = '${coCd}' --회사
				</if>
				<if test="salesCd != null and !salesCd.equals('')">
				AND    CRD.SALES_CD = '${salesCd}' --salesCd
				</if>
				<if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
				AND    A.ORDRS_DT BETWEEN TO_DATE( #{strtDt},'YYYYMMDD') AND TO_DATE( #{endDt},'YYYYMMDD') --수주일자
				</if>
				<if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
				AND    A.ORDRS_CLNT_CD = #{OrdrsClntCd} --고객사
				</if>
				<if test="clntNm != null and !clntNm.equals('')">
				AND    BM.CLNT_NM LIKE '%' || #{clntNm} || '%'  --고객사명
				</if>
				<if test="ordrsNo != null and !ordrsNo.equals('')">
				AND    A.ORDRS_NO LIKE '%' || #{ordrsNo} || '%'  --수주번호
				</if>
				<if test="clntPjt != null and !clntPjt.equals('')">
				AND    A.CLNT_PJT = #{clntPjt}  --고객사PJT
				</if>
				<if test="ordrsDiv != null and !ordrsDiv.equals('')">
				AND    A.ORDRS_DIV = #{ordrsDiv} --수주구분
				</if>
			) AS Z
		WHERE  1 = 1
		AND    Z.RN BETWEEN ${firstIndex} AND ${lastIndex}
	</select>
	
	<!-- 모달창 검색조건 (해당 값 더블클릭시) -->
	<select id="select_cr11_Info" resultType="CamelMap">
		SELECT 
			  A.FILE_TRGT_KEY	
			, A.CO_CD                     --회사코드
			, R.CODE_NM AS CO_NM          --회사이름
			, A.ORDRS_CLNT_CD             --고객사코드
			, BM.CLNT_NM AS CLNT_NM       --고객사명
			, A.ORDRS_NO                  --수주번호	
			, CRD.ORDRS_SEQ               --수주순번	
			, TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT  --수주일자
			, A.ORDRS_DIV	              --수주구분
			, A.CLNT_PJT	              --고객사PJT
			, FN_CM05M01_CD_TO_NM(A.CLNT_PJT) AS CLNT_PJT_NM
			, CRD.SALES_CD                --SALESCODE
			
			, CRD.PRDT_CD                 --제품구분
			, R1.CODE_NM AS PRDT_NM       --제품구분
			
			, CRD.ITEM_DIV                --아이템구분
			, R2.CODE_NM AS ITEM_DIV_NM   --아이템구분
			
			, CRD.ORDRS_DTL_DIV20         --작업구분
			, R3.CODE_NM AS ORDRS_DTL_DIV20_NM         --작업구분
			, CRD.ORDRS_DTL_DIV30         --자체구분
			, R4.CODE_NM AS ORDRS_DTL_DIV30_NM         --작업구분
			, CRD.EQP_NM                  --설비명
			, A.CTRT_NM                   --계약명
			, CRD.ORDRS_DTL_DIV10 		  --입력구분
			, FN_CM05M01_CD_TO_NM(CRD.ORDRS_DTL_DIV10) AS ORDRS_DTL_DIV10_NM		--입력구분
			
			, CRD.ORDRS_PRC_MACH          --기계PART(수주)
			, CRD.ORDRS_PRC_ELCTY         --전기PART(수주)
			, CRD.ORDRS_PRC               --합계(수주)
			, CRD.ORDRS_QTY               --수량
			, CRD.EST_EPCT_MAT_PRC        --견적예상재료비
			
			, CRD.TRGT_PCHS_PCOST_MACH          --기계PART(목표)
			, CRD.TRGT_PCHS_PCOST_ELCTY         --전기PART(목표)			
			, CRD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --자체가공
			
			, CRD.LABOR_COST_MFG_COST          --노무비 및 제조경비
			, NVL(CRD.ACT_RGL_MACH, 0) AS ACT_RGL_MACH      --실행원가 기계 정상
			, NVL(CRD.ACT_OBS_MACH, 0) AS ACT_OBS_MACH      --실행원가 기계 장애
			, NVL(CRD.ACT_RGL_ELCTY, 0) AS ACT_RGL_ELCTY    --실행원가 전기 정상
			, NVL(CRD.ACT_OBS_ELCTY, 0) AS ACT_OBS_ELCTY    --실행원가 전기 장애
			, NVL(CRD.ACT_EXP_COST, 0) AS ACT_EXP_COST      --경비 및 관리비
			, CASE WHEN (NVL(CRD.ACT_RGL_MACH,0)+
				  NVL(CRD.ACT_OBS_MACH,0)+
				  NVL(CRD.ACT_RGL_ELCTY,0)+NVL(CRD.ACT_OBS_ELCTY,0)+NVL(CRD.LABOR_COST_MFG_COST,0)) > 0 THEN 'Y' ELSE 'N' END AS EXCUT_YN
		FROM TB_CR02M01 AS A   
			<!-- 수주상세 조인 -->
			LEFT OUTER JOIN TB_CR02D02 AS CRD ON CRD.CO_CD = A.CO_CD 
			 								  AND CRD.ORDRS_NO = A.ORDRS_NO	 												  
			<!-- 고객사명 조인 -->
			LEFT OUTER JOIN TB_BM02M01 AS BM ON BM.CLNT_CD = A.ORDRS_CLNT_CD 
			<!-- 회사이름 조인 -->
			LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = A.CO_CD	 	
			<!-- 제품구분 -->
			LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = CRD.PRDT_CD
			<!-- 아이템구분 -->
			LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = CRD.ITEM_DIV
			<!-- 작업구분 -->
			LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = CRD.ORDRS_DTL_DIV20
			<!-- 자체구분 -->
			LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = CRD.ORDRS_DTL_DIV30
		WHERE A.FILE_TRGT_KEY = #{fileTrgtKey}
		<if test="salesCd != null and !salesCd.equals('')">
		  AND CRD.SALES_CD = #{salesCd}
		</if>
		<if test="ordrsSeq != null and !ordrsSeq.equals('')">
		  AND CRD.ORDRS_SEQ = #{ordrsSeq}
		</if>
	</select>
	
	<!-- 모달창 안에 그리드 grid-modal -->
	<select id="grid_Modal_selectList" parameterType="Map" resultType="camelMap">
		SELECT A.*
		     , ROWNUM AS RN
		FROM   (
			    SELECT A.CO_CD                                   --회사코드
				     , R.CODE_NM AS CO_NM                      --회사이름
				     , A.ORDRS_NO                              --수주번호
				     , A.ORDRS_SEQ                             --수주순번
				     , A.ORDRS_DTL_DIV10                       --수주설비입력구분
				     , A.PRDT_CD                               --제품구분
				     , R1.CODE_NM AS PRDT_NM                   --제품구분
				     , A.ITEM_DIV                              --아이템구분
				     , R2.CODE_NM AS ITEM_DIV_NM               --아이템구분
				     , A.ORDRS_DTL_DIV20                       --작업구분
				     , R3.CODE_NM AS ORDRS_DTL_DIV20_NM        --작업구분
				     , A.ORDRS_DTL_DIV30                       --자체구분
				     , R4.CODE_NM AS ORDRS_DTL_DIV20_NM        --작업구분
				     , A.SALES_CD                              --SALES CODE
				     , A.EQP_NM                                --설비명
				     , A.DUDT_INTEND_DT                        --남기예정일
				     , A.ORDRS_PRC_MACH                        --수주가 기계
				     , A.ORDRS_PRC_ELCTY                       --수주가 전기
				     , A.ORDRS_PRC                             --수주가
				     , A.ORDRS_QTY                             --수주가 수량
				     , A.EST_EPCT_MAT_PRC                      --견적예상재료비
				     , A.TRGT_PCHS_PCOST_MACH - A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS MACHINE_VALUE_AFTER_DEDUCTION --차감 후 기계값
				     , A.TRGT_PCHS_PCOST_MACH                  --목표 기계
				     , A.TRGT_PCHS_PCOST_ELCTY                 --목표 전기
				     , A.TRGT_PCHS_PCOST_MACH +  A.TRGT_PCHS_PCOST_ELCTY AS TRGT_PCHS_SUM  --목표 합계
				     , CONCAT(ROUND(NVL(((A.TRGT_PCHS_PCOST_MACH + A.TRGT_PCHS_PCOST_ELCTY) / 
					   DECODE(A.ORDRS_PRC, 0, NULL, A.ORDRS_PRC) * 100), 0), 1), '%') AS RATE   --목표 비율
				     , A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN        --목표 자체가공
				     , A.LABOR_COST_MFG_COST                   --노무비 및 제조경비
				     , A.DTL_RMK                               --상세비고
				     , NVL(A.ACT_RGL_MACH, 0) AS ACT_RGL_MACH      --실행원가 기계 정상
				     , NVL(A.ACT_OBS_MACH, 0) AS ACT_OBS_MACH      --실행원가 기계 장애
				     , NVL(A.ACT_RGL_ELCTY, 0) AS ACT_RGL_ELCTY    --실행원가 전기 정상
				     , NVL(A.ACT_OBS_ELCTY, 0) AS ACT_OBS_ELCTY    --실행원가 전기 장애
					 <!--실집행 기계 합계 비율-->
				     , A.ACT_RGL_MACH + A.ACT_OBS_MACH AS SUM_MACH--합계
				     , CONCAT(ROUND(NVL(((A.ACT_RGL_MACH + A.ACT_OBS_MACH) / 
					   DECODE(A.ORDRS_PRC, 0, NULL, A.ORDRS_PRC) * 100), 0), 1), '%') AS RATE_MACH   --목표 비율
					 <!--실집행 전기 합계 비율-->
				     , A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY AS SUM_ELCTY--합계
				     , CONCAT(ROUND(NVL(((A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY) / 
					   DECODE(A.ORDRS_PRC, 0, NULL, A.ORDRS_PRC) * 100), 0), 1), '%') AS RATE_ELCTY   --목표 비율
					 <!--실집행 구매외주-->
				     , (A.ACT_RGL_MACH + A.ACT_OBS_MACH)+(A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY) AS SUM_MACH_ELCTY  --TOTAL
				     , CONCAT(ROUND(NVL((((A.ACT_RGL_MACH + A.ACT_OBS_MACH)+(A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY)) / 
					   DECODE(A.ORDRS_PRC, 0, NULL, A.ORDRS_PRC) * 100), 0), 1), '%') AS RATE_MACH_ELCTY  --비율
					 <!--실집행 달성율-->
				     , CONCAT(ROUND(NVL(((A.TRGT_PCHS_PCOST_MACH +  A.TRGT_PCHS_PCOST_ELCTY) / 
					   DECODE(((A.ACT_RGL_MACH + A.ACT_OBS_MACH)+(A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY)), 0, NULL, ((A.ACT_RGL_MACH + A.ACT_OBS_MACH)+(A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY))) * 100), 0), 1), '%') ACHIV  --실집행 달성율
					 <!--노무비 및 제조경비-->
				     , A.LABOR_COST_MFG_COST --금액
				     , CONCAT(ROUND(NVL((A.LABOR_COST_MFG_COST / 
					   DECODE(A.ORDRS_PRC, 0, NULL, A.ORDRS_PRC) * 100), 0), 1), '%') AS LABOR_RATE_MFG_RATE   --비율
					 <!--판관비-->
				     , A.ACT_EXP_COST--경비 및 관리비
				     , CONCAT(ROUND(NVL((A.ACT_EXP_COST / 
					   DECODE(A.ORDRS_PRC, 0, NULL, A.ORDRS_PRC) * 100), 0), 1), '%') AS RATE_EXP  --비율
					 <!--원가총합계-->
				     , ((A.ACT_RGL_MACH + A.ACT_OBS_MACH)+(A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY)) + A.LABOR_COST_MFG_COST AS SUM_PCOST  --TOTAL
				     , CONCAT(ROUND(NVL(((((A.ACT_RGL_MACH + A.ACT_OBS_MACH)+(A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY)) + A.LABOR_COST_MFG_COST) / 
					   DECODE(A.ORDRS_PRC, 0, NULL, A.ORDRS_PRC) * 100), 0), 1), '%') AS RATE_SUM_PCOST  --비율
					 <!--영업이익-->
				     , A.ORDRS_PRC - 
					   (((A.ACT_RGL_MACH + A.ACT_OBS_MACH)+(A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY)) + A.LABOR_COST_MFG_COST) - A.ACT_EXP_COST AS BSN_PROFIT  --영업이익
				     , CONCAT(ROUND(NVL(((A.ORDRS_PRC - (((A.ACT_RGL_MACH + A.ACT_OBS_MACH)+(A.ACT_RGL_ELCTY + A.ACT_OBS_ELCTY)) + A.LABOR_COST_MFG_COST) - A.ACT_EXP_COST) / 
					   DECODE(A.ORDRS_PRC, 0, NULL, A.ORDRS_PRC) * 100), 0), 1), '%') AS RATE_BSN_PROFIT  --비율
				     , NVL(A.ACT_EXP_COST, 0) AS ACT_EXP_COST      --경비 및 관리비
				     , DTL_RMK2 --비고
				FROM   TB_CR02D02 AS A
					   <!-- 회사이름 조인 -->
					   LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = A.CO_CD	
					   <!-- 제품구분 --> 
					   LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.PRDT_CD
					   <!-- 아이템구분 -->
					   LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.ITEM_DIV
					   <!-- 작업구분 -->
					   LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = A.ORDRS_DTL_DIV20
					   <!-- 자체구분 -->
					   LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = A.ORDRS_DTL_DIV30
				WHERE  1 = 1
			   ) AS A
		WHERE  1 = 1
		<if test="coCd != null and !coCd.equals('')">
		AND    A.CO_CD = '${coCd}' --회사
		</if>
		<if test="salesCd != null and !salesCd.equals('')">
		AND    A.SALES_CD = #{salesCd}
		</if>
		<if test="ordrsNo != null and !ordrsNo.equals('')">
		AND    A.ORDRS_NO = #{ordrsNo}
		</if>
		<if test="ordrsSeq != null and !ordrsSeq.equals('')">
		AND    A.ORDRS_SEQ = #{ordrsSeq}
		</if>
	</select>
	
<!--    <update id="update_cr11_Modal2" parameterType="Map"> -->
<!--    		UPDATE TB_CR02M01 -->
<!-- 		SET    -->
			
<!-- 			  UDT_ID             = #{userId} -->
<!-- 			, UDT_PGM            = #{pgmId} -->
<!-- 			, UDT_DTTM           = SYSDATE -->
<!-- 		WHERE  FILE_TRGT_KEY = #{fileTrgtKey} -->
			 
<!--    </update> -->
   
	<update id="update_cr11_Modal" parameterType="Map">
		UPDATE TB_CR02D02
		SET    TRGT_PCHS_PCOST_IN_HOUSE_PRCSN = #{trgtPchsPcostInHousePrcsn, jdbcType=INTEGER}
		     , ACT_RGL_MACH        = #{actRglMach, jdbcType=INTEGER}
		     , ACT_OBS_MACH        = #{actObsMach, jdbcType=INTEGER}
			 , ACT_RGL_ELCTY       = #{actRglElcty, jdbcType=INTEGER}
			 , ACT_OBS_ELCTY       = #{actObsElcty, jdbcType=INTEGER}
			 , ACT_EXP_COST        = #{actExpCost, jdbcType=INTEGER}
			 , LABOR_COST_MFG_COST = #{laborCostMfgCost, jdbcType=INTEGER}
			 , DTL_RMK2            = #{dtlRmk2, jdbcType=VARCHAR}
			 , UDT_ID              = #{userId}
			 , UDT_PGM             = #{pgmId}
			 , UDT_DTTM            = SYSDATE
		WHERE  CO_CD     = #{coCd}
		AND    ORDRS_NO  = #{ordrsNo}
		AND    ORDRS_SEQ = #{ordrsSeq}
	</update>
	 
</mapper>