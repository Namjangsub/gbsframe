<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.cr.cr10.mapper.CR10Mapper">

	<sql id="selectLgistReqList">
        SELECT LEVEL AS LEV
        	 , FN_CM05M01_CD_TO_NM(T.CO_CD) CO_NM
        	 ,T.*
		  FROM (
		  	 	/* top -> 회사*/
                SELECT 'top' AS UPPER_CD
                	   , #{coCd} AS LOWER_CD
                	   , #{coCd} AS CO_CD
                       , '' AS ORDRS_NO
                       , '전체 현황' AS TITLE
                       , '' ORDRS_CLNT_CD
                       , '전체' AS ORDRS_CLNT_NM
                       , '' AS CLNT_PJT
                  FROM DUAL
           UNION ALL
         		/* top -> 회사 -> 고객사 */
                SELECT DISTINCT
                	   X.CO_CD UPPER_CD
                	   , TO_CHAR(Y.ORDRS_CLNT_CD) LOWER_CD
                	   , X.CO_CD
                       , '' AS ORDRS_NO
                       , A.CLNT_NM AS TITLE
                       , Y.ORDRS_CLNT_CD
                       , A.CLNT_NM  AS ORDRS_CLNT_NM
                       , Y.CLNT_PJT
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD
				 WHERE 1=1
				   AND X.CO_CD = #{coCd}
           UNION ALL
                /* top -> 고객사 -> 수주번호 */
                SELECT DISTINCT
                	   TO_CHAR(Y.ORDRS_CLNT_CD) UPPER_CD
                	   , X.ORDRS_NO LOWER_CD
                	   , X.CO_CD
                       , X.ORDRS_NO
                       , X.ORDRS_NO AS TITLE
                       , Y.ORDRS_CLNT_CD
                       , A.CLNT_NM AS ORDRS_CLNT_NM
                       , Y.CLNT_PJT
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD
				 WHERE 1=1
				   AND X.CO_CD = #{coCd}
           UNION ALL
                /* top -> 고객사 -> 수주번호 -> 물류번호 */
				SELECT   X.ORDRS_NO AS UPPER_CD
				       , X.ORDRS_NO||'-'||TRIM(TO_CHAR(X.FILE_TRGT_KEY,'0000')) AS LOWER_CD
                 	   , X.CO_CD
                       , X.ORDRS_NO
                       , X.ORDRS_NO||'-'||TRIM(TO_CHAR(X.FILE_TRGT_KEY,'0000')) AS TITLE
                       , A.ORDRS_CLNT_CD
                       , B.CLNT_NM AS ORDRS_CLNT_NM
                       , X.CLNT_PJT
                 FROM TB_CR11M01 X
                 LEFT OUTER JOIN TB_CR02M01 A ON X.CO_CD = A.CO_CD AND X.ORDRS_NO = A.ORDRS_NO
                 LEFT OUTER JOIN TB_BM02M01 B ON A.ORDRS_CLNT_CD = B.CLNT_CD
				 WHERE 1=1
				   AND X.CO_CD = #{coCd}
           ) T
           START WITH UPPER_CD = 'top' CONNECT BY PRIOR LOWER_CD = UPPER_CD
	</sql>

	<select id="selectLgistReqPageCount" parameterType="Map" resultType="int">
        SELECT
        COUNT(*)
        FROM (
        	<include refid="selectLgistReqList"></include>
        )
	</select>
	<select id="selectLgistReqPageList" parameterType="Map" resultType="CamelMap">
        SELECT
        *
        FROM(
        SELECT
        ROWNUM AS RNUM, A.*
        FROM
        (
        <include refid="selectLgistReqList"></include>
        ) AS a
        ) A
        WHERE RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>
	
	<select id="selectSelesCdList" parameterType="Map" resultType="camelMap">
       SELECT X.CO_CD,
              X.ORDRS_NO,
              X.SALES_CD,
              X.ORDRS_NO, -- 수주번호
              X.SALES_CD, -- SALES CODE
              #{fileTrgtKey} AS FILE_TRGT_KEY,
              T.SALES_SEQ,
              CASE WHEN T.SALES_SEQ IS NOT NULL THEN 'Y'
              ELSE 'N' END AS CHK_YN,
              Y.ORDRS_CLNT_CD, -- 고객사
              A.CLNT_NM  AS ORDRS_CLNT_NM,
              Y.CLNT_PJT, -- 고객사 PJT
              FN_CM05M01_CD_TO_NM(X.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM, -- 신작구분
              X.PRDT_CD, -- 제품구분
              P.PRDT_NM  PRDT_CD_NM,
              X.ITEM_DIV, -- 아이템구분
              FN_CM05M01_CD_TO_NM(X.ITEM_DIV) ITEM_DIV_NM,
              X.EQP_NM -- 설비명
         FROM TB_CR02D02 X
               INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                       AND X.ORDRS_NO = Y.ORDRS_NO
               LEFT OUTER JOIN TB_BM01M01 P ON X.PRDT_CD = P.PRDT_CD  --제품마스터
               LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
               LEFT OUTER JOIN TB_CR11D01 T ON X.SALES_CD = T.SALES_CD AND NVL2(#{fileTrgtKey},T.FILE_TRGT_KEY,'.') = NVL(#{fileTrgtKey},'.')
		WHERE X.CO_CD = #{coCd}
		  AND X.ORDRS_NO = #{ordrsNo}
	</select>








	<!-- 구매 BOM 조회 -->
	<select id="selectBuyBomList" resultType="CamelMap">
		SELECT LEVEL - 1 AS LVL
			, T.FILE_TRGT_KEY
			, T.CO_CD
			, T.SALES_CD
			, T.PART_NO
			, T.UNIT_NO
			, T.REV_NO
			, T.DSGN_NO
			, T.UPPER_CD
			, T.LOWER_CD
			, T.PART_NO AS OLD_PART_NO
			, T.UNIT_NO AS OLD_UNIT_NO
			, T.REV_NO AS OLD_REV_NO
			, T.LOWER_CD AS OLD_LOWER_CD
		FROM TB_CR11M01 T
		START WITH T.UPPER_CD = '.' AND T.SALES_CD = #{salesCd}
		CONNECT BY PRIOR T.LOWER_CD = T.UPPER_CD
		ORDER BY T.CO_CD, NVL(T.PART_NO,'0'), NVL(T.UNIT_NO,'0'), NVL(T.REV_NO,'0'),T.LOWER_CD, T.UPPER_CD
	</select>

	<!-- BOM 자재정보 조회 -->
	<select id="selectBomMatrList" resultType="CamelMap">
		SELECT CO_CD
			, SALES_CD
			, UPPER_CD
			, LOWER_CD
			, UPPER_CD AS OLD_UPPER_CD
			, LOWER_CD AS OLD_LOWER_CD
			, LOWER_CD AS DSGN_NO
			, MATR_SEQ
			, ORDRG_DIV_10
			, ORDRG_DIV_20
			, NEXT_PRCSN_NM
			, DLVPLC_NM
			, BOM_QTY
			, MATR_CD
			, MATR_NM
			, GOODS_DIV
			, MATR_CLNT_DIV
			, MATR_DIV
			, MATR_GRP
			, MATR_MAT
			, MATR_SIZE
			, MATR_SPEC
			, MATR_MAKR_NM
			, MATR_MNO
			, MATR_WT
			, MATR_UNIT
			, ORIGIN_NM
			, MATR_DRW_NO
			, MATR_TEST_DIV
			, DLVR_RQM_DAY
			, MATR_PURC_DIV
			, MIN_ORDRG_QTY
			, MATR_SAFT_QTY
			, MATR_STOCK_CD
			, DSGN_2D_MD
			, AVRG_2D_MD
			, DSGN_3D_MD
			, AVRG_3D_MD
			, PRDCTN_RQM_MD
			, PRDCTN_AVRG_MD
			, USE_YN
			, MATR_PART_NO
			, PCHS_CLNT_CD1
			, PCHS_CLNT_PCT1
			, PCHS_CLNT_CD2
			, PCHS_CLNT_PCT2
			, PCHS_CLNT_CD3
			, PCHS_CLNT_PCT3
			, MATR_UPR
			, MATR_AVRG_UPR
			, MATR_RMK
			, TO_CHAR(T.MATR_LAST_TRST_DT, 'YYYY-MM-DD') AS MATR_LAST_TRST_DT
			, MATR_ATNT_CD
		FROM TB_SM01D01 T
		WHERE CO_CD = #{coCd}
		  AND SALES_CD = #{salesCd}
		ORDER BY T.CO_CD, T.LOWER_CD, T.UPPER_CD, T.MATR_SEQ
	</select>








	<select id="selectFileTrgtKeyNext" parameterType="Map" resultType="String">
		SELECT TO_NUMBER(NVL(MAX(FILE_TRGT_KEY),'0')) + 1 FROM TB_CR11M01
	</select>

    <insert id="insertLgistMast" parameterType="Map">
        INSERT INTO TB_CR11M01
        ( FILE_TRGT_KEY
		, CO_CD
		, SALES_CD
		, PART_NO
		, UNIT_NO
		, REV_NO
		, DSGN_NO
		, UPPER_CD
		, LOWER_CD
        , ETC_FIELD1
        , ETC_FIELD2
        , ETC_FIELD3
        , CREAT_ID
        , CREAT_PGM
        , CREAT_DTTM
        )
        VALUES
        ( #{fileTrgtKey}
		, #{coCd}
		, #{salesCd}
		, #{partNo, jdbcType=VARCHAR}
		, #{unitNo, jdbcType=VARCHAR}
		, #{revNo, jdbcType=VARCHAR}
		, #{dsgnNo}
		, #{upperCd}
		, #{lowerCd}
        , #{etcField1, jdbcType=VARCHAR}
        , #{etcField2, jdbcType=VARCHAR}
        , #{etcField3, jdbcType=VARCHAR}
        , #{userId}
        , #{pgmId}
        , SYSDATE
        )
    </insert>

    <update id="updateLgistMast" parameterType="Map">
        UPDATE TB_CR11M01
        SET   CO_CD 		= #{coCd}
			, SALES_CD 		= #{salesCd}
			, PART_NO 		= #{partNo, jdbcType=VARCHAR}
			, UNIT_NO 		= #{unitNo, jdbcType=VARCHAR}
			, REV_NO 		= #{revNo, jdbcType=VARCHAR}
			, DSGN_NO 		= #{dsgnNo}
			, UPPER_CD 		= #{upperCd}
			, LOWER_CD 		= #{lowerCd}
            , ETC_FIELD1    = #{etcField1, jdbcType=VARCHAR}
            , ETC_FIELD2    = #{etcField2, jdbcType=VARCHAR}
            , ETC_FIELD3    = #{etcField3, jdbcType=VARCHAR}
            , UDT_ID        = #{userId}
            , UDT_PGM       = #{pgmId}
            , UDT_DTTM      = SYSDATE
        WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>

	<delete id="deleteBom" parameterType="Map">
	  DELETE TB_CR11M01
	   WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>
	
	<delete id="deleteBomMatrAll" parameterType="Map">
	  DELETE TB_SM01D01
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	</delete>
	
	<delete id="deleteBomAll" parameterType="Map">
	  DELETE TB_CR11M01
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	</delete>

    <insert id="insertLgistMastMatr" parameterType="Map">
        <selectKey keyProperty="matrSeq" resultType="String" order="BEFORE">
			SELECT NVL(MAX(MATR_SEQ), 0) + 1 FROM TB_SM01D01
			 WHERE CO_CD = #{coCd}
			   AND SALES_CD = #{salesCd}
			   AND UPPER_CD = #{upperCd}
			   AND LOWER_CD = #{lowerCd}
        </selectKey>
        INSERT INTO TB_SM01D01
        ( CO_CD
		, SALES_CD
		, MATR_SEQ
		, UPPER_CD
		, LOWER_CD
		, ORDRG_DIV_10
		, ORDRG_DIV_20
		, NEXT_PRCSN_NM
		, DLVPLC_NM
		, BOM_QTY
		, MATR_CD
		, MATR_NM
		, GOODS_DIV
		, MATR_CLNT_DIV
		, MATR_DIV
		, MATR_GRP
		, MATR_MAT
		, MATR_SIZE
		, MATR_SPEC
		, MATR_MAKR_NM
		, MATR_MNO
		, MATR_WT
		, MATR_UNIT
		, ORIGIN_NM
		, MATR_DRW_NO
		, MATR_TEST_DIV
		, DLVR_RQM_DAY
		, MATR_PURC_DIV
		, MIN_ORDRG_QTY
		, MATR_SAFT_QTY
		, MATR_STOCK_CD
		, DSGN_2D_MD
		, AVRG_2D_MD
		, DSGN_3D_MD
		, AVRG_3D_MD
		, PRDCTN_RQM_MD
		, PRDCTN_AVRG_MD
		, USE_YN
		, MATR_PART_NO
		, PCHS_CLNT_CD1
		, PCHS_CLNT_PCT1
		, PCHS_CLNT_CD2
		, PCHS_CLNT_PCT2
		, PCHS_CLNT_CD3
		, PCHS_CLNT_PCT3
		, MATR_UPR
		, MATR_AVRG_UPR
		, MATR_RMK
		, MATR_LAST_TRST_DT
		, MATR_ATNT_CD
        , ETC_FIELD1
        , ETC_FIELD2
        , ETC_FIELD3
        , CREAT_ID
        , CREAT_PGM
        , CREAT_DTTM
        )
        VALUES
        ( #{coCd}
		, #{salesCd}
		, #{matrSeq}
		, #{upperCd}
		, #{lowerCd}
		, #{ordrgDiv10, jdbcType=VARCHAR}
		, #{ordrgDiv20, jdbcType=VARCHAR}
		, #{nextPrcsnNm, jdbcType=VARCHAR}
		, #{dlvplcNm, jdbcType=VARCHAR}
		, #{bomQty, jdbcType=VARCHAR}
		, #{matrCd, jdbcType=VARCHAR}
		, #{matrNm, jdbcType=VARCHAR}
		, #{goodsDiv, jdbcType=VARCHAR}
		, #{matrClntDiv, jdbcType=VARCHAR}
		, #{matrDiv, jdbcType=VARCHAR}
		, #{matrGrp, jdbcType=VARCHAR}
		, #{matrMat, jdbcType=VARCHAR}
		, #{matrSize, jdbcType=VARCHAR}
		, #{matrSpec, jdbcType=VARCHAR}
		, #{matrMakrNm, jdbcType=VARCHAR}
		, #{matrMno, jdbcType=VARCHAR}
		, #{matrWt, jdbcType=VARCHAR}
		, #{matrUnit, jdbcType=VARCHAR}
		, #{originNm, jdbcType=VARCHAR}
		, #{matrDrwNo, jdbcType=VARCHAR}
		, #{matrTestDiv, jdbcType=VARCHAR}
		, #{dlvrRqmDay, jdbcType=VARCHAR}
		, #{matrPurcDiv, jdbcType=VARCHAR}
		, #{minOrdrgQty, jdbcType=VARCHAR}
		, #{matrSaftQty, jdbcType=VARCHAR}
		, #{matrStockCd, jdbcType=VARCHAR}
		, #{dsgn2DMd, jdbcType=VARCHAR}
		, #{avrg2DMd, jdbcType=VARCHAR}
		, #{dsgn3DMd, jdbcType=VARCHAR}
		, #{avrg3DMd, jdbcType=VARCHAR}
		, #{prdctnRqmMd, jdbcType=VARCHAR}
		, #{prdctnAvrgMd, jdbcType=VARCHAR}
		, #{useYn, jdbcType=VARCHAR}
		, #{matrPartNo, jdbcType=VARCHAR}
		, #{pchsClntCd1, jdbcType=VARCHAR}
		, #{pchsClntPct1, jdbcType=VARCHAR}
		, #{pchsClntCd2, jdbcType=VARCHAR}
		, #{pchsClntPct2, jdbcType=VARCHAR}
		, #{pchsClntCd3, jdbcType=VARCHAR}
		, #{pchsClntPct3, jdbcType=VARCHAR}
		, #{matrUpr, jdbcType=VARCHAR}
		, #{matrAvrgUpr, jdbcType=VARCHAR}
		, #{matrRmk, jdbcType=VARCHAR}
		, #{matrLastTrstDt, jdbcType=VARCHAR}
		, #{matrAtntCd, jdbcType=VARCHAR}
        , #{etcField1, jdbcType=VARCHAR}
        , #{etcField2, jdbcType=VARCHAR}
        , #{etcField3, jdbcType=VARCHAR}
        , #{userId}
        , #{pgmId}
        , SYSDATE
        )
    </insert>
	
    <update id="updateLgistMastMatr" parameterType="Map">
        UPDATE TB_SM01D01
        SET   UPPER_CD 			= #{upperCd, jdbcType=VARCHAR}
			, LOWER_CD 			= #{lowerCd, jdbcType=VARCHAR}
			, ORDRG_DIV_10 		= #{ordrgDiv10, jdbcType=VARCHAR}
			, ORDRG_DIV_20 		= #{ordrgDiv20, jdbcType=VARCHAR}
			, NEXT_PRCSN_NM 	= #{nextPrcsnNm, jdbcType=VARCHAR}
			, DLVPLC_NM 		= #{dlvplcNm, jdbcType=VARCHAR}
			, BOM_QTY 			= #{bomQty, jdbcType=VARCHAR}
			, MATR_CD 			= #{matrCd, jdbcType=VARCHAR}
			, MATR_NM 			= #{matrNm, jdbcType=VARCHAR}
			, GOODS_DIV 		= #{goodsDiv, jdbcType=VARCHAR}
			, MATR_CLNT_DIV 	= #{matrClntDiv, jdbcType=VARCHAR}
			, MATR_DIV 			= #{matrDiv, jdbcType=VARCHAR}
			, MATR_GRP 			= #{matrGrp, jdbcType=VARCHAR}
			, MATR_MAT 			= #{matrMat, jdbcType=VARCHAR}
			, MATR_SIZE 		= #{matrSize, jdbcType=VARCHAR}
			, MATR_SPEC 		= #{matrSpec, jdbcType=VARCHAR}
			, MATR_MAKR_NM 		= #{matrMakrNm, jdbcType=VARCHAR}
			, MATR_MNO 			= #{matrMno, jdbcType=VARCHAR}
			, MATR_WT 			= #{matrWt, jdbcType=VARCHAR}
			, MATR_UNIT 		= #{matrUnit, jdbcType=VARCHAR}
			, ORIGIN_NM 		= #{originNm, jdbcType=VARCHAR}
			, MATR_DRW_NO 		= #{matrDrwNo, jdbcType=VARCHAR}
			, MATR_TEST_DIV 	= #{matrTestDiv, jdbcType=VARCHAR}
			, DLVR_RQM_DAY 		= #{dlvrRqmDay, jdbcType=VARCHAR}
			, MATR_PURC_DIV 	= #{matrPurcDiv, jdbcType=VARCHAR}
			, MIN_ORDRG_QTY 	= #{minOrdrgQty, jdbcType=VARCHAR}
			, MATR_SAFT_QTY 	= #{matrSaftQty, jdbcType=VARCHAR}
			, MATR_STOCK_CD 	= #{matrStockCd, jdbcType=VARCHAR}
			, DSGN_2D_MD 		= #{dsgn2DMd, jdbcType=VARCHAR}
			, AVRG_2D_MD 		= #{avrg2DMd, jdbcType=VARCHAR}
			, DSGN_3D_MD 		= #{dsgn3DMd, jdbcType=VARCHAR}
			, AVRG_3D_MD 		= #{avrg3DMd, jdbcType=VARCHAR}
			, PRDCTN_RQM_MD 	= #{prdctnRqmMd, jdbcType=VARCHAR}
			, PRDCTN_AVRG_MD 	= #{prdctnAvrgMd, jdbcType=VARCHAR}
			, USE_YN 			= #{useYn, jdbcType=VARCHAR}
			, MATR_PART_NO 		= #{matrPartNo, jdbcType=VARCHAR}
			, PCHS_CLNT_CD1 	= #{pchsClntCd1, jdbcType=VARCHAR}
			, PCHS_CLNT_PCT1 	= #{pchsClntPct1, jdbcType=VARCHAR}
			, PCHS_CLNT_CD2 	= #{pchsClntCd2, jdbcType=VARCHAR}
			, PCHS_CLNT_PCT2 	= #{pchsClntPct2, jdbcType=VARCHAR}
			, PCHS_CLNT_CD3 	= #{pchsClntCd3, jdbcType=VARCHAR}
			, PCHS_CLNT_PCT3 	= #{pchsClntPct3, jdbcType=VARCHAR}
			, MATR_UPR 			= #{matrUpr, jdbcType=VARCHAR}
			, MATR_AVRG_UPR 	= #{matrAvrgUpr, jdbcType=VARCHAR}
			, MATR_RMK 			= #{matrRmk, jdbcType=VARCHAR}
			, MATR_LAST_TRST_DT = #{matrLastTrstDt, jdbcType=VARCHAR}
			, MATR_ATNT_CD 		= #{matrAtntCd, jdbcType=VARCHAR}
			, MATR_NO 		    = #{matrNo, jdbcType=VARCHAR}
            , ETC_FIELD1        = #{etcField1, jdbcType=VARCHAR}
            , ETC_FIELD2        = #{etcField2, jdbcType=VARCHAR}
            , ETC_FIELD3        = #{etcField3, jdbcType=VARCHAR}
            , UDT_ID        = #{userId}
            , UDT_PGM       = #{pgmId}
            , UDT_DTTM      = SYSDATE
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	    AND MATR_SEQ = #{matrSeq}
	    AND UPPER_CD = #{oldUpperCd}
	    AND LOWER_CD = #{oldLowerCd}
	    <!-- 
	    UPPER_CD, LOWER_CD 가 Key 수정을 MultiLine 으로 작업시 에러발생.
	     -->
    </update>

	<delete id="deleteBomMatr" parameterType="Map">
	  DELETE TB_SM01D01
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	    AND MATR_SEQ = #{matrSeq}
	    AND UPPER_CD = #{upperCd}
	    AND LOWER_CD = #{lowerCd}
	</delete>

	<!--
	<resultMap id="resultInfoMap" type="CamelMap">
		<collection select="selectBomMatrList" property="BOM_MATR_LIST" column="{matrSeq=MATR_SEQ}" ofType="CamelMap"/>
	</resultMap>
		<select id="selectBomMatrInfo" resultMap="resultInfoMap">
	 -->
	<select id="selectBomMatrInfo" resultType="camelMap">
		SELECT CO_CD
			, SALES_CD
			, MATR_SEQ
			, UPPER_CD
			, LOWER_CD
			, ORDRG_DIV_10
			, ORDRG_DIV_20
			, NEXT_PRCSN_NM
			, DLVPLC_NM
			, BOM_QTY
			, MATR_CD
			, MATR_NM
			, GOODS_DIV
			, MATR_CLNT_DIV
			, MATR_DIV
			, MATR_GRP
			, MATR_MAT
			, MATR_SIZE
			, MATR_SPEC
			, MATR_MAKR_NM
			, MATR_MNO
			, MATR_WT
			, MATR_UNIT
			, ORIGIN_NM
			, MATR_DRW_NO
			, MATR_TEST_DIV
			, DLVR_RQM_DAY
			, MATR_PURC_DIV
			, MIN_ORDRG_QTY
			, MATR_SAFT_QTY
			, MATR_STOCK_CD
			, DSGN_2D_MD
			, AVRG_2D_MD
			, DSGN_3D_MD
			, AVRG_3D_MD
			, PRDCTN_RQM_MD
			, PRDCTN_AVRG_MD
			, USE_YN
			, MATR_PART_NO
			, PCHS_CLNT_CD1
			, PCHS_CLNT_PCT1
			, PCHS_CLNT_CD2
			, PCHS_CLNT_PCT2
			, PCHS_CLNT_CD3
			, PCHS_CLNT_PCT3
			, MATR_UPR
			, MATR_AVRG_UPR
			, MATR_RMK
			, TO_CHAR(T.MATR_LAST_TRST_DT, 'YYYY-MM-DD') AS MATR_LAST_TRST_DT
			, MATR_ATNT_CD
		FROM TB_SM01D01 T
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	    AND MATR_SEQ = #{matrSeq}
	    AND UPPER_CD = #{upperCd}
	    AND LOWER_CD = #{lowerCd}
  </select>

  
</mapper>
