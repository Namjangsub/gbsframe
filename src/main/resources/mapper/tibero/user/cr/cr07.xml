<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.cr.cr07.mapper.CR07Mapper">
	<!-- 그리드 조회 카운트-->
    <select id="grid1_selectCount" parameterType="Map" resultType="int">
		SELECT count(*)
		FROM   (
				SELECT A.*
					, ROWNUM AS RN
				FROM	(
						SELECT DISTINCT A.FILE_TRGT_KEY AS ORDRS_FILE_TRGT_KEY
						     , A.CO_CD
							 , R.CODE_NM AS CO_NM
							 , A.ORDRS_CLNT_CD
							 , S.CLNT_NM AS ORDRS_CLNT_NM
							 , A.CLNT_PJT
							 , A.ORDRS_NO
							 , TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
							 , A.ORDRS_DIV
							 , R1.CODE_NM          AS ORDRS_DIV_NM
							 , A.CTRT_NM
							 , A.CURR_CD
							 , R2.CODE_NM          AS CURR_NM
							 , NVL(A.EXRATE, 1)    AS EXRATE
							 , NVL(A.ORDRS_AMT, 0) AS ORDRS_AMT
							 , P.CLMN_PLAN_SEQ
							 , P.CLMN_PLAN_DIV
							 , R3.CODE_NM          AS CLMN_PLAN_DIV_NM
							 , P.CLMN_DIV_SEQ
							 , TO_CHAR(NVL(P.CLMN_DIV_SEQ, 1)) || ' 차'  AS CLMN_DIV_SEQ_NM
							 , NVL(P.CLMN_RATE, 0) AS CLMN_RATE
							 , TO_CHAR(NVL(P.CLMN_RATE, 0)) || ' %'  AS CLMN_RATE_NM
							 , NVL(P.CLMN_AMT, 0)  AS CLMN_AMT
							 , TO_CHAR(P.BILL_PBLS_DT, 'YYYY-MM-DD') AS BILL_PBLS_DT
							 , TO_CHAR(P.CLMN_DT, 'YYYY-MM-DD')      AS CLMN_DT
							 , NVL(C.FILE_TRGT_KEY, 0) AS FILE_TRGT_KEY
							 , C.SELL_DCSN_NO      AS SELL_DCSN_NO
							 , TO_CHAR(C.SELL_DCSN_DT, 'YYYY-MM-DD') AS SELL_DCSN_DT
							 , C.SELL_DCSN_AMT     AS SELL_DCSN_AMT
							 , C.SELL_DCSN_DTL_AMT AS SELL_DCSN_DTL_AMT
							 , NVL(CS.SELL_DCSN_DTL_AMT, 0) AS SELL_DCSN_AMT_SUM
							 , CASE WHEN (NVL(P.CLMN_AMT, 0) - NVL(CS.SELL_DCSN_DTL_AMT, 0)) > 0 THEN 'N' ELSE 'Y' END AS CONF_YN
							 , NVL(P.CLMN_AMT, 0) - NVL(CS.SELL_DCSN_DTL_AMT, 0) AS MI_AMT
							 , C.SELL_BILL_NO
						FROM   TB_CR02M01 AS A --수주
						       --수금계획
							   LEFT OUTER JOIN TB_CR02D01 AS P  ON P.CO_CD    = A.CO_CD
							                                   AND P.ORDRS_NO = A.ORDRS_NO
							   --매출확정
							   LEFT OUTER JOIN (
								                SELECT DISTINCT CM.FILE_TRGT_KEY
												     , CM.CO_CD
													 , CM.SELL_DCSN_NO
													 , CM.ORDRS_CLNT_CD
													 , CM.SELL_DCSN_DT
													 , CM.CURR_CD
													 , NVL(CM.EXRATE, 1)            AS EXRATE
													 , NVL(CM.SELL_DCSN_AMT, 0)     AS SELL_DCSN_AMT
													 , CD.ORDRS_NO
													 , CD.CLMN_PLAN_SEQ
													 , NVL(CD.SELL_DCSN_DTL_AMT, 0) AS SELL_DCSN_DTL_AMT
													 , CD.SELL_BILL_NO
												FROM   TB_CR03M01 AS CM --매출확정
												       --매출확정상세
													   LEFT OUTER JOIN TB_CR03D01 AS CD  ON CD.CO_CD        = CM.CO_CD
													                                    AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
											   ) AS C  ON C.CO_CD         = P.CO_CD
											          AND C.ORDRS_NO      = P.ORDRS_NO
													  AND C.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
							   --매출확정집계
							   LEFT OUTER JOIN (
								                SELECT DISTINCT CM.CO_CD
												     , CD.ORDRS_NO
													 , CD.CLMN_PLAN_SEQ
													 , SUM(NVL(CD.SELL_DCSN_DTL_AMT, 0)) AS SELL_DCSN_DTL_AMT
												FROM   TB_CR03M01 AS CM --매출확정
												       --매출확정상세
													   LEFT OUTER JOIN TB_CR03D01 AS CD  ON CD.CO_CD        = CM.CO_CD
													                                    AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
												GROUP BY CM.CO_CD, CD.ORDRS_NO, CD.CLMN_PLAN_SEQ
											   ) AS CS  ON CS.CO_CD         = P.CO_CD
											           AND CS.ORDRS_NO      = P.ORDRS_NO
													   AND CS.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
							   --회사
							   LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = A.CO_CD
							   --수주구분
							   LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DIV
							   --통화단위
							   LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
							   --수금계획구분
							   LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = P.CLMN_PLAN_DIV
							   --고객사
							   LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
						WHERE  1 = 1
						<if test="coCd != null and !coCd.equals('')">
						AND    A.CO_CD = #{coCd}
						</if>
						<if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
						AND    A.ORDRS_DT BETWEEN TO_DATE( #{strtDt},'YYYYMMDD') AND TO_DATE( #{endDt},'YYYYMMDD')
						</if>
						<if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
						AND    A.ORDRS_CLNT_CD = #{ordrsClntCd}
						</if>
						<if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
						AND    S.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
						</if>
						<if test="ordrsNo != null and !ordrsNo.equals('')">
						AND    A.ORDRS_NO LIKE '%' || #{ordrsNo} || '%'
						</if>
						<if test="clntPjt != null and !clntPjt.equals('')">
						AND    A.CLNT_PJT LIKE '%' || #{clntPjt} || '%'
						</if>
						<if test="ctrtNm != null and !ctrtNm.equals('')">
						AND    A.CTRT_NM LIKE '%' || #{ctrtNm} || '%'
						</if>
						<if test="ordrsDiv != null and !ordrsDiv.equals('')">
						AND    A.ORDRS_DIV = #{ordrsDiv}
						</if>
						ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO, P.CLMN_PLAN_SEQ, C.SELL_DCSN_NO
						) AS A
				WHERE  1 = 1
		       ) AS A
		WHERE  1 = 1
    </select>

	<!-- 그리드 조회 -->
	<select id="grid1_selectList" parameterType="Map" resultType="camelMap">
		SELECT A.*
		FROM   (
				SELECT A.*
					, ROWNUM AS RN
				FROM	(
						SELECT DISTINCT A.FILE_TRGT_KEY AS ORDRS_FILE_TRGT_KEY
						     , A.CO_CD
							 , R.CODE_NM AS CO_NM
							 , A.ORDRS_CLNT_CD
							 , S.CLNT_NM AS ORDRS_CLNT_NM
							 , A.CLNT_PJT
							 , A.ORDRS_NO
							 , TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
							 , A.ORDRS_DIV
							 , R1.CODE_NM          AS ORDRS_DIV_NM
							 , A.CTRT_NM
							 , A.CURR_CD
							 , R2.CODE_NM          AS CURR_NM
							 , NVL(A.EXRATE, 1)    AS EXRATE
							 , NVL(A.ORDRS_AMT, 0) AS ORDRS_AMT
							 , P.CLMN_PLAN_SEQ
							 , P.CLMN_PLAN_DIV
							 , R3.CODE_NM          AS CLMN_PLAN_DIV_NM
							 , P.CLMN_DIV_SEQ
							 , TO_CHAR(NVL(P.CLMN_DIV_SEQ, 1)) || ' 차'  AS CLMN_DIV_SEQ_NM
							 , NVL(P.CLMN_RATE, 0) AS CLMN_RATE
							 , TO_CHAR(NVL(P.CLMN_RATE, 0)) || ' %'  AS CLMN_RATE_NM
							 , NVL(P.CLMN_AMT, 0)  AS CLMN_AMT
							 , TO_CHAR(P.BILL_PBLS_DT, 'YYYY-MM-DD') AS BILL_PBLS_DT
							 , TO_CHAR(P.CLMN_DT, 'YYYY-MM-DD')      AS CLMN_DT
							 , NVL(C.FILE_TRGT_KEY, 0) AS FILE_TRGT_KEY
							 , C.SELL_DCSN_NO      AS SELL_DCSN_NO
							 , TO_CHAR(C.SELL_DCSN_DT, 'YYYY-MM-DD') AS SELL_DCSN_DT
							 , C.SELL_DCSN_AMT     AS SELL_DCSN_AMT
							 , C.SELL_DCSN_DTL_AMT AS SELL_DCSN_DTL_AMT
							 , NVL(CS.SELL_DCSN_DTL_AMT, 0) AS SELL_DCSN_AMT_SUM
							 , CASE WHEN (NVL(P.CLMN_AMT, 0) - NVL(CS.SELL_DCSN_DTL_AMT, 0)) > 0 THEN 'N' ELSE 'Y' END AS CONF_YN
							 , NVL(P.CLMN_AMT, 0) - NVL(CS.SELL_DCSN_DTL_AMT, 0) AS MI_AMT
							 , C.SELL_BILL_NO
						FROM   TB_CR02M01 AS A --수주
						       --수금계획
							   LEFT OUTER JOIN TB_CR02D01 AS P  ON P.CO_CD    = A.CO_CD
							                                   AND P.ORDRS_NO = A.ORDRS_NO
							   --매출확정
							   LEFT OUTER JOIN (
								                SELECT DISTINCT CM.FILE_TRGT_KEY
												     , CM.CO_CD
													 , CM.SELL_DCSN_NO
													 , CM.ORDRS_CLNT_CD
													 , CM.SELL_DCSN_DT
													 , CM.CURR_CD
													 , NVL(CM.EXRATE, 1)            AS EXRATE
													 , NVL(CM.SELL_DCSN_AMT, 0)     AS SELL_DCSN_AMT
													 , CD.ORDRS_NO
													 , CD.CLMN_PLAN_SEQ
													 , NVL(CD.SELL_DCSN_DTL_AMT, 0) AS SELL_DCSN_DTL_AMT
													 , CD.SELL_BILL_NO
												FROM   TB_CR03M01 AS CM --매출확정
												       --매출확정상세
													   LEFT OUTER JOIN TB_CR03D01 AS CD  ON CD.CO_CD        = CM.CO_CD
													                                    AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
											   ) AS C  ON C.CO_CD         = P.CO_CD
											          AND C.ORDRS_NO      = P.ORDRS_NO
													  AND C.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
							   --매출확정집계
							   LEFT OUTER JOIN (
								                SELECT DISTINCT CM.CO_CD
												     , CD.ORDRS_NO
													 , CD.CLMN_PLAN_SEQ
													 , SUM(NVL(CD.SELL_DCSN_DTL_AMT, 0)) AS SELL_DCSN_DTL_AMT
												FROM   TB_CR03M01 AS CM --매출확정
												       --매출확정상세
													   LEFT OUTER JOIN TB_CR03D01 AS CD  ON CD.CO_CD        = CM.CO_CD
													                                    AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
												GROUP BY CM.CO_CD, CD.ORDRS_NO, CD.CLMN_PLAN_SEQ
											   ) AS CS  ON CS.CO_CD         = P.CO_CD
											           AND CS.ORDRS_NO      = P.ORDRS_NO
													   AND CS.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
							   --회사
							   LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = A.CO_CD
							   --수주구분
							   LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DIV
							   --통화단위
							   LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
							   --수금계획구분
							   LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = P.CLMN_PLAN_DIV
							   --고객사
							   LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
						WHERE  1 = 1
						<if test="coCd != null and !coCd.equals('')">
						AND    A.CO_CD = #{coCd}
						</if>
						<if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
						AND    A.ORDRS_DT BETWEEN TO_DATE( #{strtDt},'YYYYMMDD') AND TO_DATE( #{endDt},'YYYYMMDD')
						</if>
						<if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
						AND    A.ORDRS_CLNT_CD = #{ordrsClntCd}
						</if>
						<if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
						AND    S.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
						</if>
						<if test="ordrsNo != null and !ordrsNo.equals('')">
						AND    A.ORDRS_NO LIKE '%' || #{ordrsNo} || '%'
						</if>
						<if test="clntPjt != null and !clntPjt.equals('')">
						AND    A.CLNT_PJT LIKE '%' || #{clntPjt} || '%'
						</if>
						<if test="ctrtNm != null and !ctrtNm.equals('')">
						AND    A.CTRT_NM LIKE '%' || #{ctrtNm} || '%'
						</if>
						<if test="ordrsDiv != null and !ordrsDiv.equals('')">
						AND    A.ORDRS_DIV = #{ordrsDiv}
						</if>
						ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO, P.CLMN_PLAN_SEQ, C.SELL_DCSN_NO
						) AS A
				WHERE  1 = 1
		       ) AS A
		WHERE  1 = 1
		AND    A.RN BETWEEN ${firstIndex} AND ${lastIndex}
	</select>

	<select id="select_insert_target_modal" parameterType="Map" resultType="camelMap">
		SELECT A.*
		FROM   (
				SELECT A.*
					, ROWNUM AS RN
				FROM	(
						SELECT DISTINCT A.FILE_TRGT_KEY
						     , A.CO_CD
							 , R.CODE_NM AS CO_NM
							 , A.ORDRS_CLNT_CD
							 , S.CLNT_NM AS ORDRS_CLNT_NM
							 , A.CLNT_PJT
							 , A.ORDRS_NO
							 , TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
							 , A.ORDRS_DIV
							 , R1.CODE_NM          AS ORDRS_DIV_NM
							 , A.CTRT_NM
							 , A.CURR_CD
							 , R2.CODE_NM          AS CURR_NM
							 , NVL(A.EXRATE, 1)    AS EXRATE
							 , NVL(A.ORDRS_AMT, 0) AS ORDRS_AMT
							 , P.CLMN_PLAN_SEQ
							 , P.CLMN_PLAN_DIV
							 , R3.CODE_NM          AS CLMN_PLAN_DIV_NM
							 , P.CLMN_DIV_SEQ
							 , TO_CHAR(NVL(P.CLMN_DIV_SEQ, 1)) || ' 차'  AS CLMN_DIV_SEQ_NM
							 , NVL(P.CLMN_RATE, 0) AS CLMN_RATE
							 , TO_CHAR(NVL(P.CLMN_RATE, 0)) || ' %'  AS CLMN_RATE_NM
							 , NVL(P.CLMN_AMT, 0)  AS CLMN_AMT
							 , TO_CHAR(P.BILL_PBLS_DT, 'YYYY-MM-DD') AS BILL_PBLS_DT
							 , TO_CHAR(P.CLMN_DT, 'YYYY-MM-DD')      AS CLMN_DT
							 , NVL(C.SELL_DCSN_DTL_AMT, 0) AS BEF_CONF_AMT
							 , NVL(P.CLMN_AMT, 0) - NVL(C.SELL_DCSN_DTL_AMT, 0) AS MI_CONF_AMT
							 , NVL(C.SELL_DCSN_DTL_AMT, 0) AS SELL_DCSN_DTL_AMT
							 , ''  AS SELL_DCSN_NO
							 , 'N' AS CHK      --체크여부
							 , 0   AS CONF_AMT  --확정금액
							 , 'I' AS DATA_CHK
						FROM   TB_CR02M01 AS A --수주
						       --수금계획
							   JOIN TB_CR02D01 AS P  ON P.CO_CD    = A.CO_CD
							                                   AND P.ORDRS_NO = A.ORDRS_NO
							   --매출확정
							   LEFT OUTER JOIN (
								                SELECT DISTINCT CM.CO_CD
												     , CD.ORDRS_NO
													 , CD.CLMN_PLAN_SEQ
													 , SUM(NVL(CD.SELL_DCSN_DTL_AMT, 0)) AS SELL_DCSN_DTL_AMT
												FROM   TB_CR03M01 AS CM --매출확정
												       --매출확정상세
													   LEFT OUTER JOIN TB_CR03D01 AS CD  ON CD.CO_CD        = CM.CO_CD
													                                    AND CD.SELL_DCSN_NO = CM.SELL_DCSN_NO
												GROUP BY CM.CO_CD, CD.ORDRS_NO, CD.CLMN_PLAN_SEQ
											   ) AS C  ON C.CO_CD         = P.CO_CD
											          AND C.ORDRS_NO      = P.ORDRS_NO
													  AND C.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
							   --회사
							   LEFT OUTER JOIN TB_CM05M01 AS R ON R.CODE_ID = A.CO_CD
							   --수주구분
							   LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DIV
							   --통화단위
							   LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
							   --수금계획구분
							   LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = P.CLMN_PLAN_DIV
							   --고객사
							   LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
						WHERE  1 = 1
						ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO, P.CLMN_PLAN_SEQ
						) AS A
				WHERE  1 = 1
				AND    A.MI_CONF_AMT > 0
		       ) AS A
		WHERE  1 = 1
		AND    A.CO_CD = #{coCd}
		AND    A.ORDRS_CLNT_CD = #{ordrsClntCd}
		AND    A.CURR_CD       = #{currCd}
    </select>
	
    <!-- 수정팝업 조회 -->
    <select id="select_cr07_Info" parameterType="Map" resultType="camelMap">
		SELECT DISTINCT A.FILE_TRGT_KEY
		     , A.CO_CD
		     , A.SELL_DCSN_NO
		     , A.ORDRS_CLNT_CD
		     , S.CLNT_NM AS ORDRS_CLNT_NM
		     , TO_CHAR(A.SELL_DCSN_DT, 'YYYY-MM-DD') AS SELL_DCSN_DT
		     , A.CURR_CD
		     , NVL(A.EXRATE, 1) AS EXRATE
		     , B.SELL_DCSN_AMT
		     , A.SELL_DCSN_RMK
		     , A.ETC_FIELD1
		     , A.ETC_FIELD2
		     , A.ETC_FIELD3
		     , A.CREAT_ID
		     , U1.NAME AS CREAT_ID_NM
		     , TO_CHAR(A.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM
		     , A.CREAT_PGM
		     , A.UDT_ID
		     , U2.NAME AS UDT_ID_NM
		     , TO_CHAR(A.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM
		     , A.UDT_PGM
		     , 'U' AS DATA_CHK
		FROM   TB_CR03M01 AS A
		       LEFT OUTER JOIN (
		                        SELECT CO_CD
		                             , SELL_DCSN_NO
		                             , SUM(NVL(SELL_DCSN_DTL_AMT, 0)) AS SELL_DCSN_AMT
		                        FROM   TB_CR03D01
		                        GROUP BY CO_CD
		                               , SELL_DCSN_NO
		                        
		                       ) AS B  ON B.CO_CD        = A.CO_CD
		                              AND B.SELL_DCSN_NO = A.SELL_DCSN_NO
               LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
               LEFT OUTER JOIN TB_CM06M01 AS U1 ON U1.ID = A.CREAT_ID
               LEFT OUTER JOIN TB_CM06M01 AS U2 ON U2.ID = A.UDT_ID
		WHERE  1 = 1
		AND    A.FILE_TRGT_KEY = #{fileTrgtKey}
    </select>

	<!-- 수정팝업 그리드 조회 -->
	<select id="select_cr07_Info_Dtl" parameterType="Map" resultType="camelMap">
		SELECT A.*
		FROM   (
				SELECT A.*
					, ROWNUM AS RN
				FROM	(
						 SELECT DISTINCT B.FILE_TRGT_KEY    AS FILE_TRGT_KEY
						     , A.CO_CD                     AS CO_CD
							 , R.CODE_NM                   AS CO_NM
							 , O.ORDRS_CLNT_CD             AS ORDRS_CLNT_CD
							 , O.ORDRS_CLNT_NM             AS ORDRS_CLNT_NM
							 , O.CLNT_PJT                  AS CLNT_PJT
							 , O.ORDRS_NO                  AS ORDRS_NO
							 , O.ORDRS_DT                  AS ORDRS_DT
							 , O.ORDRS_DIV                 AS ORDRS_DIV
							 , O.ORDRS_DIV_NM              AS ORDRS_DIV_NM
							 , O.CTRT_NM                   AS CTRT_NM
							 , O.CURR_CD                   AS CURR_CD
							 , O.CURR_NM                   AS CURR_NM
							 , O.EXRATE                    AS EXRATE
							 , O.ORDRS_AMT                 AS ORDRS_AMT
							 , O.CLMN_PLAN_SEQ             AS CLMN_PLAN_SEQ
							 , O.CLMN_PLAN_DIV             AS CLMN_PLAN_DIV
							 , O.CLMN_PLAN_DIV_NM          AS CLMN_PLAN_DIV_NM
							 , O.CLMN_DIV_SEQ              AS CLMN_DIV_SEQ
							 , O.CLMN_DIV_SEQ_NM           AS CLMN_DIV_SEQ_NM
							 , O.CLMN_RATE                 AS CLMN_RATE
							 , O.CLMN_RATE_NM              AS CLMN_RATE_NM
							 , O.CLMN_AMT                  AS CLMN_AMT
							 , O.BILL_PBLS_DT              AS BILL_PBLS_DT
							 , O.CLMN_DT                   AS CLMN_DT
							 , O.BEF_CONF_AMT              AS BEF_CONF_AMT
							 , O.MI_CONF_AMT               AS MI_CONF_AMT
							 , NVL(A.SELL_DCSN_DTL_AMT, 0) AS SELL_DCSN_DTL_AMT
							 , A.SELL_DCSN_NO              AS SELL_DCSN_NO
							 , 'N'                         AS CHK      --체크여부
							 , NVL(A.SELL_DCSN_DTL_AMT, 0) AS CONF_AMT  --확정금액
							 , 'U'                         AS DATA_CHK
						FROM   TB_CR03D01 AS A
						       LEFT OUTER JOIN TB_CR03M01 AS B  ON B.CO_CD        = A.CO_CD
						                                       AND B.SELL_DCSN_NO = A.SELL_DCSN_NO
						       LEFT OUTER JOIN (
						                        SELECT DISTINCT A.FILE_TRGT_KEY                AS FILE_TRGT_KEY
						                             , A.CO_CD                                 AS CO_CD
						                             , A.ORDRS_CLNT_CD                         AS ORDRS_CLNT_CD
						                             , S.CLNT_NM                               AS ORDRS_CLNT_NM
						                             , A.CLNT_PJT                              AS CLNT_PJT
						                             , A.ORDRS_NO                              AS ORDRS_NO
						                             , TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD')       AS ORDRS_DT
						                             , A.ORDRS_DIV                             AS ORDRS_DIV
						                             , R1.CODE_NM                              AS ORDRS_DIV_NM
						                             , A.CTRT_NM                               AS CTRT_NM
						                             , A.CURR_CD                               AS CURR_CD
						                             , R2.CODE_NM                              AS CURR_NM
						                             , NVL(A.EXRATE, 1)                        AS EXRATE
						                             , NVL(A.ORDRS_AMT, 0)                     AS ORDRS_AMT
						                             , P.CLMN_PLAN_SEQ                         AS CLMN_PLAN_SEQ
						                             , P.CLMN_PLAN_DIV                         AS CLMN_PLAN_DIV
						                             , R3.CODE_NM                              AS CLMN_PLAN_DIV_NM
						                             , P.CLMN_DIV_SEQ                          AS CLMN_DIV_SEQ
						                             , TO_CHAR(NVL(P.CLMN_DIV_SEQ, 1)) || ' 차' AS CLMN_DIV_SEQ_NM
						                             , NVL(P.CLMN_RATE, 0)                     AS CLMN_RATE
						                             , TO_CHAR(NVL(P.CLMN_RATE, 0)) || ' %'    AS CLMN_RATE_NM
						                             , NVL(P.CLMN_AMT, 0)                      AS CLMN_AMT
						                             , TO_CHAR(P.BILL_PBLS_DT, 'YYYY-MM-DD')   AS BILL_PBLS_DT
						                             , TO_CHAR(P.CLMN_DT, 'YYYY-MM-DD')        AS CLMN_DT
						                             , NVL(C.SELL_DCSN_DTL_AMT, 0)             AS BEF_CONF_AMT
						                             , NVL(P.CLMN_AMT, 0) - NVL(C.SELL_DCSN_DTL_AMT, 0) AS MI_CONF_AMT
						                        FROM   TB_CR02M01 AS A
						                               JOIN TB_CR02D01 AS P  ON P.CO_CD    = A.CO_CD
						                                                    AND P.ORDRS_NO = A.ORDRS_NO
						                               LEFT OUTER JOIN (
						                                                SELECT DISTINCT CO_CD
						                                                     , ORDRS_NO
						                                                     , CLMN_PLAN_SEQ
						                                                     , SUM(NVL(SELL_DCSN_DTL_AMT, 0)) AS SELL_DCSN_DTL_AMT
						                                                FROM   TB_CR03D01
						                                                GROUP BY CO_CD, ORDRS_NO, CLMN_PLAN_SEQ
						                                               ) AS C  ON C.CO_CD         = P.CO_CD
						                                                      AND C.ORDRS_NO      = P.ORDRS_NO
						                                                      AND C.CLMN_PLAN_SEQ = P.CLMN_PLAN_SEQ
						                               LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DIV
						                               LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
						                               LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = P.CLMN_PLAN_DIV
						                               LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
						                        WHERE  1 = 1
						                        ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.ORDRS_NO
						                       )AS O  ON O.CO_CD         = A.CO_CD
						                             AND O.ORDRS_NO      = A.ORDRS_NO
						                             AND O.CLMN_PLAN_SEQ = A.CLMN_PLAN_SEQ
						       LEFT OUTER JOIN TB_CM05M01 AS R  ON R.CODE_ID  = A.CO_CD
						WHERE  1 = 1
						ORDER BY A.CO_CD, O.ORDRS_CLNT_CD, O.ORDRS_NO, O.CLMN_PLAN_SEQ
						) AS A
				WHERE  1 = 1
		       ) AS A
		WHERE  1 = 1
		AND    A.CO_CD        = #{coCd}
		AND    A.SELL_DCSN_NO = #{sellDcsnNo}
    </select>
    
	<!-- 삭제 전 체크 -->
	<select id="delete_Chk" parameterType="Map" resultType="camelMap">
		SELECT NVL(MAX(A.CNT), 0)      AS CNT
		     , NVL(MAX(A.BILL_CNT), 0) AS BILL_CNT
		     , NVL(MAX(A.DEL_YN), 'N') AS DEL_YN
		FROM   (
		        SELECT COUNT(*) AS CNT
		             , SUM(CASE WHEN B.SELL_BILL_NO IS NULL OR SELL_BILL_NO = '' THEN 0 ELSE 1 END) AS BILL_CNT
				     , '' AS DEL_YN
				FROM   TB_CR03M01 AS A
				       JOIN TB_CR03D01 AS B  ON B.CO_CD        = A.CO_CD
				                            AND B.SELL_DCSN_NO = A.SELL_DCSN_NO
				WHERE  1 = 1
				AND    A.CO_CD         = #{coCd}
				AND    A.SELL_DCSN_NO  = #{sellDcsnNo}
				UNION
				SELECT 0 AS CNT
				     , 0 AS BILL_CNT
				     , CASE WHEN SELL_BILL_NO IS NULL OR SELL_BILL_NO = '' THEN 'Y' ELSE 'N' END AS DEL_YN
				FROM   TB_CR03D01
				WHERE  1 = 1
				AND    CO_CD         = #{coCd}
				AND    SELL_DCSN_NO  = #{sellDcsnNo}
				AND    ORDRS_NO      = #{ordrsNo}
				AND    CLMN_PLAN_SEQ = #{clmnPlanSeq}
		       ) AS A
		WHERE  1 = 1
	</select>
	
	<!-- 파일키 MAX + 1 채번 -->
	<select id="select_cr07_SeqNext" parameterType="Map" resultType="int">
		SELECT MAX(TO_NUMBER(FILE_TRGT_KEY)) + 1
		FROM   TB_CR03M01
	</select>

	<!-- 수불키 채번 -->
	<select id="select_cr07_Ioseq" parameterType="Map" resultType="int">
		SELECT TB_BM30M01_SQ01.NEXTVAL
		FROM   DUAL
	</select>

	<!-- 관리번호 채번 -->
	<select id="select_cr07_Next_MNGM_NO" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT CASE WHEN MAX(SELL_DCSN_NO) IS NULL THEN 'CONF'||SUBSTR(#{sellDcsnDt}, 3, 2)||'00001'
		                                           ELSE 'CONF'||SUBSTR(#{sellDcsnDt}, 3, 2)||LPAD(TO_NUMBER(SUBSTR(MAX(SELL_DCSN_NO), -5)) + 1, 5, 0)
			   END AS MNGM_NO
		FROM   TB_CR03M01
		WHERE  CO_CD = #{coCd}
		AND    SELL_DCSN_DT LIKE SUBSTR(#{sellDcsnDt}, 0, 4)||'%'
    </select>
	
	<!-- insert -->
    <insert id="insert_cr07" parameterType="Map">
        INSERT INTO TB_CR03M01
		(
			  FILE_TRGT_KEY
			, CO_CD
			, SELL_DCSN_NO
			, ORDRS_CLNT_CD
			, SELL_DCSN_DT
			, CURR_CD
			, EXRATE
			, SELL_DCSN_AMT
			, SELL_DCSN_RMK
			, ETC_FIELD1
			, ETC_FIELD2
			, ETC_FIELD3
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
		)
		VALUES
		(
			  #{fileTrgtKey}
			, #{coCd}
			, #{sellDcsnNo}
			, #{ordrsClntCd}
			, #{sellDcsnDt}
			, #{currCd}
			, #{exrate}
			, #{sellDcsnAmt}
			, #{sellDcsnRmk}
			, #{etcField1, jdbcType=VARCHAR}
			, #{etcField2, jdbcType=VARCHAR}
			, #{etcField3, jdbcType=VARCHAR}
			, #{userId}
			, #{pgmId}
			, SYSDATE
		)
    </insert>

	<insert id="insert_cr07_Dtl" parameterType="Map">
		INSERT INTO TB_CR03D01
		(
			  CO_CD
			, SELL_DCSN_NO
			, ORDRS_NO
			, CLMN_PLAN_SEQ
			, CURR_CD
			, EXRATE
			, SELL_DCSN_DTL_AMT
			, SELL_DCSN_DTL_RMK
			, ETC_FIELD1
			, ETC_FIELD2
			, ETC_FIELD3
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
		)
		VALUES
		(
			  #{coCd}
			, #{sellDcsnNo}
			, #{ordrsNo}
			, #{clmnPlanSeq}
			, #{currCd}
			, #{exrate}
			, #{sellDcsnDtlAmt}
			, #{sellDcsnDtlRmk, jdbcType=VARCHAR}
			, #{etcField1, jdbcType=VARCHAR}
			, #{etcField2, jdbcType=VARCHAR}
			, #{etcField3, jdbcType=VARCHAR}
			, #{userId}
			, #{pgmId}
			, SYSDATE
		)
	</insert>
    
	<!-- update -->
    <update id="update_cr07" parameterType="map">
		UPDATE TB_CR03M01
		SET    SELL_DCSN_RMK = #{sellDcsnRmk}
			 , UDT_ID   = #{userId}
			 , UDT_PGM  = #{pgmId}
			 , UDT_DTTM = SYSDATE
		WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
    </update>

	<update id="update_cr07_Dtl" parameterType="map">
		UPDATE TB_CR03D01
		SET    UDT_ID   = #{userId}
			 , UDT_PGM  = #{pgmId}
			 , UDT_DTTM = SYSDATE
		WHERE  CO_CD         = #{coCd}
		AND    SELL_DCSN_NO  = #{sellDcsnNo}
		AND    ORDRS_NO      = #{ordrsNo}
		AND    CLMN_PLAN_SEQ = #{clmnPlanSeq}
    </update>

	<update id="update_cr07_delete" parameterType="map">
		UPDATE TB_CR03M01
		SET    SELL_DCSN_AMT = SELL_DCSN_AMT - #{sellDcsnDtlAmt}
			 , UDT_ID   = #{userId}
			 , UDT_PGM  = #{pgmId}
			 , UDT_DTTM = SYSDATE
		WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
    </update>
    
    <!-- delete -->    
    <delete id="delete_cr07" parameterType="Map">
		DELETE TB_CR03M01
		WHERE  CO_CD         = #{coCd}
		AND    SELL_DCSN_NO  = #{sellDcsnNo}
	</delete>
    
    <delete id="delete_cr07_Dtl" parameterType="Map">
		DELETE TB_CR03D01
		WHERE  CO_CD         = #{coCd}
		AND    SELL_DCSN_NO  = #{sellDcsnNo}
		AND    ORDRS_NO      = #{ordrsNo}
		AND    CLMN_PLAN_SEQ = #{clmnPlanSeq}
	</delete>
	
	<delete id="delete_cr07_Dtl_All" parameterType="Map">
		DELETE TB_CR03D01
		WHERE  CO_CD         = #{coCd}
		AND    SELL_DCSN_NO  = #{sellDcsnNo}
	</delete>

</mapper>