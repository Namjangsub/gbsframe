<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.cr.cr14.mapper.CR14Mapper">
	<!-- 그리드 조회 카운트-->
    <select id="select_cr14_Count" parameterType="Map" resultType="int">
		WITH SJM AS
		( 
		  SELECT *
		  FROM   (
		          SELECT ROWNUM AS RRN
		               , AA.*
		          FROM   (
		                  SELECT M.*
		                       , C.CLNT_NM
		                  FROM   TB_CR02M01 AS M  -- 수주마스터
		                         LEFT OUTER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD
		                  WHERE  1 = 1
		                  <if test="coCd != null and !coCd.equals('')">
		                  AND    M.CO_CD    = #{coCd}
		                  </if>
		                  <if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
		                  AND    M.ORDRS_DT BETWEEN TO_DATE(#{strtDt}, 'YYYYMMDD') AND TO_DATE(#{endDt}, 'YYYYMMDD')
		                  </if>
		                  <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
		                  AND    M.ORDRS_CLNT_CD = #{ordrsClntCd}
		                  </if>
						  <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
		                  AND    C.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
		                  </if>
		                  <if test="ordrsNo != null and !ordrsNo.equals('')">
		                  AND    M.ORDRS_NO LIKE '%' || #{ordrsNo} || '%'
		                  </if>
		                  <if test="clntPjt != null and !clntPjt.equals('')">
		                  AND    M.CLNT_PJT = #{clntPjt}
		                  </if>
		                  <if test="ctrtNm != null and !ctrtNm.equals('')">
		                  AND    M.CTRT_NM  LIKE '%' || #{ctrtNm} || '%'
		                  </if>
		                  <if test="ordrsDiv != null and !ordrsDiv.equals('')">
		                  AND    M.ORDRS_DIV = #{ordrsDiv}
		                  </if>
		                  ORDER BY M.CO_CD, M.ORDRS_CLNT_CD, M.CLNT_PJT, M.ORDRS_NO, M.FILE_TRGT_KEY
		                 ) AS AA
		          WHERE  1 = 1
		         )
		  <if test="firstIndex != null and !firstIndex.equals('')">
		  WHERE RRN BETWEEN #{firstIndex} AND #{lastIndex}
		  </if>
		)
		, SJD AS
		(
		  SELECT SM.CO_CD                                      AS CO_CD              --회사코드
		       , FN_CM05M01_CD_TO_NM(SM.CO_CD)                 AS CO_NM              --회사명
		       , SM.ORDRS_NO                                   AS ORDRS_NO           --수주번호
		       , SM.ORDRS_DIV                                  AS ORDRS_DIV          --수주구분
		       , FN_CM05M01_CD_TO_NM(SM.ORDRS_DIV)             AS ORDRS_DIV_NM       --수주구분명
		       , TO_CHAR(SM.ORDRS_DT, 'YYYY-MM-DD')            AS IO_DT              --수주일자
		       , SM.ORDRS_CLNT_CD                              AS CLNT_CD            --고객사
		       , SM.CLNT_NM                                    AS CLNT_NM            --고객사명
		       , SM.CLNT_PJT                                   AS CLNT_PJT           --고객사PJT
		       , SM.CTRT_NM                                    AS CTRT_NM            --계약명
		       , SM.ORDRS_AMT                                  AS ORDRS_AMT          --수주금액
		       , SM.EST_NO                                     AS EST_NO             --견적번호
		       , SM.EST_DEG                                    AS EST_DEG            --견적차수
		       , SM.CO_CD||'_'||SM.ORDRS_NO                    AS PID                --
		       , SM.CO_CD||'_'||SM.ORDRS_NO||'_'||SD.ORDRS_SEQ AS ID                 --
		       , SD.ORDRS_SEQ                                  AS IO_SEQ             --
		       , NVL(SD.SALES_CD, SM.ORDRS_NO||'-'||NVL2(SD.ORDRS_SEQ,TO_CHAR(SD.ORDRS_SEQ, '00')||FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV10),'상세없음')) AS SALES_CD --SalesCode
		       , SD.ORDRS_DTL_DIV10                            AS ORDRS_DTL_DIV10    --입력구분
		       , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV10)       AS ORDRS_DTL_DIV10_NM --입력구분명
		       , SD.PRDT_CD                                    AS PRDT_CD            --제품구분
		       , P.PRDT_NM                                     AS PRDT_NM            --제품구분명
		       , SD.ITEM_DIV                                   AS ITEM_DIV           --아이템구분
		       , FN_CM05M01_CD_TO_NM(SD.ITEM_DIV)              AS ITEM_DIV_NM        --아이템구분명
		       , SD.ORDRS_DTL_DIV20                            AS ORDRS_DTL_DIV20    --작업구분
		       , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV20)       AS ORDRS_DTL_DIV20_NM --작업구분명
		       , SD.ORDRS_DTL_DIV30                            AS ORDRS_DTL_DIV30    --자체구분
		       , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV30)       AS ORDRS_DTL_DIV30_NM --자체구분명
		       , SD.EQP_NM                                     AS EQP_NM             --설비명
		       , SD.ORDRS_PRC_MACH                             AS ORDRS_PRC_MACH     --수주가-기계파트
		       , SD.ORDRS_PRC_ELCTY                            AS ORDRS_PRC_ELCTY    --수주가-전기파트
		       , SD.ORDRS_PRC                                  AS ORDRS_PRC          --수주가
		       , SD.ORDRS_QTY                                  AS ORDRS_QTY          --수량
		       , SD.EST_EPCT_MAT_PRC                           AS EST_EPCT_MAT_PRC   --견적예상재료비
		       , SD.TRGT_PCHS_PCOST_MACH                       AS TRGT_PCHS_PCOST_MACH --목표구매원가-기계
		       , SD.TRGT_PCHS_PCOST_ELCTY                      AS TRGT_PCHS_PCOST_ELCTY--목표구매원가-전기
		       , SD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN             AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
		       , SD.LABOR_COST_MFG_COST                        AS LABOR_COST_MFG_COST
		       , SD.CREAT_ID                                   AS CREAT_ID      --작성자ID
		       , FN_CM06M01_ID_TO_NM(SD.CREAT_ID)              AS CREAT_ID_NM   --작성자명
		       , TO_CHAR(SD.CREAT_DTTM,'YYYY-MM-DD')           AS CREAT_DTTM    --작성일시
		       , SD.UDT_ID                                     AS UDT_ID        --수정자ID
		       , FN_CM06M01_ID_TO_NM(SD.UDT_ID)                AS UDT_ID_NM     --수정자명
		       , TO_CHAR(SD.UDT_DTTM, 'YYYY-MM-DD')            AS UDT_DTTM      --수정일시
		       , SM.FILE_TRGT_KEY                              AS FILE_TRGT_KEY
		       , RRN
		  FROM   SJM AS SM --수주마스터
		         LEFT OUTER JOIN TB_CR02D02 AS SD  ON SM.CO_CD    = SD.CO_CD
		                                          AND SM.ORDRS_NO = SD.ORDRS_NO
		         LEFT OUTER JOIN TB_BM01M01 AS P   ON SD.PRDT_CD  = P.PRDT_CD
		  WHERE  1 = 1
		)
		SELECT COUNT(*)
		FROM   (
				SELECT CO_CD                   --회사코드
					, FN_CM05M01_CD_TO_NM(CO_CD) CO_NM                   --회사명
					, ORDRS_NO                --수주번호
					, ORDRS_DIV               --수주구분
					, FN_CM05M01_CD_TO_NM(ORDRS_DIV) ORDRS_DIV_NM            --수주구분명
					, TO_CHAR(ORDRS_DT, 'YYYY-MM-DD') IO_DT                   --수주일자
					, ORDRS_CLNT_CD                 --고객사
					, CLNT_NM                 --고객사명
					, CLNT_PJT                --고객사PJT
					, CTRT_NM                 --계약명
					, ORDRS_AMT               --수주금액
					, EST_NO                  --견적번호
					, EST_DEG                 --견적차수
					, '' PID                     --PID
					, CO_CD||'_'||ORDRS_NO ID  --ID
					, 0  IO_SEQ                  --IO_SEQ
					, ORDRS_NO AS  SALES_CD   --SalesCode
					, '' ORDRS_DTL_DIV10      --입력구분
					, '' ORDRS_DTL_DIV10_NM   --입력구분명
					, '' PRDT_CD              --제품구분
					, '' PRDT_NM              --제품구분명
					, '' ITEM_DIV             --아이템구분
					, '' ITEM_DIV_NM          --아이템구분명
					, '' ORDRS_DTL_DIV20      --작업구분
					, '' ORDRS_DTL_DIV20_NM   --작업구분명
					, '' ORDRS_DTL_DIV30      --자체구분
					, '' ORDRS_DTL_DIV30_NM   --자체구분명 
					, '' EQP_NM               --설비명
					, '' ORDRS_PRC_MACH       --수주가-기계파트
					, '' ORDRS_PRC_ELCTY      --수주가-전기파트
					, '' ORDRS_PRC            --수주가
					, '' ORDRS_QTY            --수량 
					, '' EST_EPCT_MAT_PRC     --견적예상재료비
					, '' TRGT_PCHS_PCOST_MACH --목표구매원가-기계
					, '' TRGT_PCHS_PCOST_ELCTY--목표구매원가-전기
					, '' TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
					, '' LABOR_COST_MFG_COST  --노무비및제조경비
					, CREAT_ID                --작성자ID
					, FN_CM06M01_ID_TO_NM(CREAT_ID) CREAT_ID_NM             --작성자명
					, TO_CHAR(CREAT_DTTM,'YYYY-MM-DD') CREAT_DTTM              --작성일시
					, UDT_ID                  --수정자ID
					, FN_CM06M01_ID_TO_NM(UDT_ID) UDT_ID_NM               --수정자명
					, TO_CHAR(UDT_DTTM, 'YYYY-MM-DD') UDT_DTTM                --수정일시 
					, FILE_TRGT_KEY
					, 1 AS COLLAPSE
					, RRN
				FROM   SJM
		       )
    </select>

	<!-- 그리드 조회 -->
	<select id="select_cr14_List" parameterType="Map" resultType="camelMap">
		WITH SJS AS
		( 
		  SELECT A.CO_CD                                                AS CO_CD
		       , A.ORDRS_NO                                             AS ORDRS_NO
		       , ROUND(SUM(A.ORDRS_PRC_MACH) / 1000, 1)                 AS ORDRS_PRC_MACH                 --수주가-기계파트
		       , ROUND(SUM(A.ORDRS_PRC_ELCTY) / 1000, 1)                AS ORDRS_PRC_ELCTY                --수주가-전기파트
		       , ROUND(SUM(A.ORDRS_PRC) / 1000, 1)                      AS ORDRS_PRC                      --수주가
		       , ROUND(SUM(A.ORDRS_QTY) / 1000, 1)                      AS ORDRS_QTY                      --수주수량
		       , ROUND(SUM(A.EST_EPCT_MAT_PRC) / 1000, 1)               AS EST_EPCT_MAT_PRC               --견적예상재료비
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_MACH) / 1000, 1)           AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_ELCTY) / 1000, 1)          AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_TOT) / 1000, 1)            AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN) / 1000, 1) AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표원가-기계자체가공
		       , ROUND(SUM(A.TRGT_PCHS_PCOST_MACH2) / 1000, 1)          AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계
		       , ROUND(SUM(A.LABOR_COST_MFG_COST) / 1000, 1)            AS LABOR_COST_MFG_COST            --노무비 및 제조경비
		       , ROUND(SUM(A.ACT_RGL_MACH) / 1000, 1)                   AS ACT_RGL_MACH                   --실행원가-정상-기계
		       , ROUND(SUM(A.ACT_OBS_MACH) / 1000, 1)                   AS ACT_OBS_MACH                   --실행원가-장애-기계
		       , ROUND(SUM(A.ACT_TOT_MACH) / 1000, 1)                   AS ACT_TOT_MACH                   --실행원가-기계
		       , ROUND(SUM(A.ACT_RGL_ELCTY) / 1000, 1)                  AS ACT_RGL_ELCTY                  --실행원가-정상-전기
		       , ROUND(SUM(A.ACT_OBS_ELCTY) / 1000, 1)                  AS ACT_OBS_ELCTY                  --실행원가-장애-전기
		       , ROUND(SUM(A.ACT_TOT_ELCTY) / 1000, 1)                  AS ACT_TOT_ELCTY                  --실행원가-전기
		       , ROUND(SUM(A.ACT_EXP_COST) / 1000, 1)                   AS ACT_EXP_COST                   --실행원가-경비관리비
		  FROM   (
		          SELECT CO_CD
				       , ORDRS_NO
				       , ORDRS_SEQ
				       , ORDRS_DTL_DIV10
				       , NVL(ORDRS_PRC_MACH, 0)                                                AS ORDRS_PRC_MACH                 --수주가-기계파트
				       , NVL(ORDRS_PRC_ELCTY, 0)                                               AS ORDRS_PRC_ELCTY                --수주가-전기파트
				       , NVL(ORDRS_PRC_MACH, 0) + NVL(ORDRS_PRC_ELCTY, 0)                      AS ORDRS_PRC                      --수주가
				       , CASE WHEN ORDRS_DTL_DIV10 = 'ORDRSDTLDIV1010' THEN NVL(ORDRS_QTY, 0)
				                                                       ELSE 0 END              AS ORDRS_QTY                      --수주수량
				       , NVL(EST_EPCT_MAT_PRC, 0)                                              AS EST_EPCT_MAT_PRC               --견적예상재료비
				       , NVL(TRGT_PCHS_PCOST_MACH, 0)                                          AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
				       , NVL(TRGT_PCHS_PCOST_ELCTY, 0)                                         AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
				       , NVL(TRGT_PCHS_PCOST_MACH, 0) + NVL(TRGT_PCHS_PCOST_ELCTY, 0)          AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
				       , NVL(TRGT_PCHS_PCOST_IN_HOUSE_PRCSN, 0)                                AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표원가-기계자체가공
				       , NVL(TRGT_PCHS_PCOST_MACH, 0) + NVL(TRGT_PCHS_PCOST_IN_HOUSE_PRCSN, 0) AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계
				       , NVL(LABOR_COST_MFG_COST, 0)                                           AS LABOR_COST_MFG_COST            --노무비 및 제조경비
				       , NVL(ACT_RGL_MACH, 0)                                                  AS ACT_RGL_MACH                   --실행원가-정상-기계
					   , NVL(ACT_OBS_MACH, 0)                                                  AS ACT_OBS_MACH                   --실행원가-장애-기계
				       , NVL(ACT_RGL_MACH, 0) + NVL(ACT_OBS_MACH, 0)                           AS ACT_TOT_MACH                   --실행원가-기계
				       , NVL(ACT_RGL_ELCTY, 0)                                                 AS ACT_RGL_ELCTY                  --실행원가-정상-전기
				       , NVL(ACT_OBS_ELCTY, 0)                                                 AS ACT_OBS_ELCTY                  --실행원가-장애-전기
				       , NVL(ACT_RGL_ELCTY, 0) + NVL(ACT_OBS_ELCTY, 0)                         AS ACT_TOT_ELCTY                  --실행원가-전기
				       , NVL(ACT_EXP_COST, 0)                                                  AS ACT_EXP_COST                   --실행원가-경비관리비
		          FROM   TB_CR02D02
				  WHERE  1 = 1
		         ) AS A
		  GROUP BY A.CO_CD, A.ORDRS_NO
		)
		, SJM AS
		( 
		  SELECT *
		  FROM   (
		          SELECT ROWNUM AS RRN
		               , AA.*
		          FROM   (
		                  SELECT M.*
		                       , C.CLNT_NM
							   , SDS.ORDRS_PRC_MACH                 --수주가-기계파트
							   , SDS.ORDRS_PRC_ELCTY                --수주가-전기파트
							   , SDS.ORDRS_PRC                      --수주가
							   , SDS.ORDRS_QTY                      --수주수량
							   , SDS.EST_EPCT_MAT_PRC               --견적예상재료비
							   , SDS.TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
							   , SDS.TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
							   , SDS.TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
							   , SDS.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표원가-기계자체가공
							   , SDS.TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계
							   , SDS.LABOR_COST_MFG_COST            --노무비 및 제조경비
							   , SDS.ACT_RGL_MACH                   --실행원가-정상-기계
							   , SDS.ACT_OBS_MACH                   --실행원가-장애-기계
							   , SDS.ACT_TOT_MACH                   --실행원가-기계
							   , SDS.ACT_RGL_ELCTY                  --실행원가-정상-전기
							   , SDS.ACT_OBS_ELCTY                  --실행원가-장애-전기
							   , SDS.ACT_TOT_ELCTY                  --실행원가-전기
							   , SDS.ACT_EXP_COST                   --실행원가-경비관리비
							   , U.NAME AS MNG_NM
		                  FROM   TB_CR02M01 AS M  -- 수주마스터
		                         LEFT OUTER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD
								 LEFT OUTER JOIN SJS AS SDS  ON M.CO_CD    = SDS.CO_CD
		                                                    AND M.ORDRS_NO = SDS.ORDRS_NO
								 LEFT OUTER JOIN TB_CM06M01 AS U ON U.ID = M.MNG_ID
		                  WHERE  1 = 1
		                  <if test="coCd != null and !coCd.equals('')">
		                  AND    M.CO_CD    = #{coCd}
		                  </if>
		                  <if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
		                  AND    M.ORDRS_DT BETWEEN TO_DATE(#{strtDt}, 'YYYYMMDD') AND TO_DATE(#{endDt}, 'YYYYMMDD')
		                  </if>
		                  <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
		                  AND    M.ORDRS_CLNT_CD = #{ordrsClntCd}
		                  </if>
						  <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
		                  AND    C.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
		                  </if>
		                  <if test="ordrsNo != null and !ordrsNo.equals('')">
		                  AND    M.ORDRS_NO LIKE '%' || #{ordrsNo} || '%'
		                  </if>
		                  <if test="clntPjt != null and !clntPjt.equals('')">
		                  AND    M.CLNT_PJT = #{clntPjt}
		                  </if>
		                  <if test="ctrtNm != null and !ctrtNm.equals('')">
		                  AND    M.CTRT_NM  LIKE '%' || #{ctrtNm} || '%'
		                  </if>
		                  <if test="ordrsDiv != null and !ordrsDiv.equals('')">
		                  AND    M.ORDRS_DIV = #{ordrsDiv}
		                  </if>
		                  ORDER BY M.CO_CD, M.ORDRS_CLNT_CD, M.CLNT_PJT, M.ORDRS_NO, M.FILE_TRGT_KEY
		                 ) AS AA
		          WHERE  1 = 1
		         )
		  WHERE RRN BETWEEN #{firstIndex} AND #{lastIndex}
		)
		, SJD AS
		(
		  SELECT SM.CO_CD                                      AS CO_CD              --회사코드
		       , FN_CM05M01_CD_TO_NM(SM.CO_CD)                 AS CO_NM              --회사명
		       , SM.ORDRS_NO                                   AS ORDRS_NO           --수주번호
		       , SM.ORDRS_DIV                                  AS ORDRS_DIV          --수주구분
		       , FN_CM05M01_CD_TO_NM(SM.ORDRS_DIV)             AS ORDRS_DIV_NM       --수주구분명
		       , TO_CHAR(SM.ORDRS_DT, 'YYYY-MM-DD')            AS IO_DT              --수주일자
		       , SM.ORDRS_CLNT_CD                              AS CLNT_CD            --고객사
		       , SM.CLNT_NM                                    AS CLNT_NM            --고객사명
		       , SM.CLNT_PJT                                   AS CLNT_PJT           --고객사PJT
		       , SM.CTRT_NM                                    AS CTRT_NM            --계약명
		       , ROUND(SM.ORDRS_AMT / 1000, 1)                 AS ORDRS_AMT          --수주금액
		       , ROUND(SM.ORDRS_AMT * EXRATE / 1000, 1)        AS EXCHANGE_AMT       --원화금액
		       , SM.EST_NO                                     AS EST_NO             --견적번호
		       , SM.EST_DEG                                    AS EST_DEG            --견적차수
		       , SM.CO_CD||'_'||SM.ORDRS_NO                    AS PID                --
		       , SM.CO_CD||'_'||SM.ORDRS_NO||'_'||SD.ORDRS_SEQ AS ID                 --
		       , SD.ORDRS_SEQ                                  AS IO_SEQ             --
		       , NVL(SD.SALES_CD, SM.ORDRS_NO||'-'||NVL2(SD.ORDRS_SEQ, TO_CHAR(SD.ORDRS_SEQ, '00'),'상세없음')) AS SALES_CD --SalesCode
		       , SD.ORDRS_DTL_DIV10                            AS ORDRS_DTL_DIV10    --입력구분
		       , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV10)       AS ORDRS_DTL_DIV10_NM --입력구분명
		       , SD.PRDT_CD                                    AS PRDT_CD            --제품구분
		       , P.PRDT_NM                                     AS PRDT_NM            --제품구분명
		       , SD.ITEM_DIV                                   AS ITEM_DIV           --아이템구분
		       , FN_CM05M01_CD_TO_NM(SD.ITEM_DIV)              AS ITEM_DIV_NM        --아이템구분명
		       , SD.ORDRS_DTL_DIV20                            AS ORDRS_DTL_DIV20    --작업구분
		       , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV20)       AS ORDRS_DTL_DIV20_NM --작업구분명
		       , SD.ORDRS_DTL_DIV30                            AS ORDRS_DTL_DIV30    --자체구분
		       , FN_CM05M01_CD_TO_NM(SD.ORDRS_DTL_DIV30)       AS ORDRS_DTL_DIV30_NM --자체구분명
			   , SD.MCTYPE                                     AS MCTYPE             --기계구분
		       , FN_CM05M01_CD_TO_NM(SD.MCTYPE)                AS MCTYPE_NM          --기계구분명
		       , SD.EQP_NM                                     AS EQP_NM             --설비명
		       , ROUND(NVL(SD.ORDRS_PRC_MACH, 0) / 1000, 1)                     AS ORDRS_PRC_MACH     --수주가-기계파트
		       , ROUND(NVL(SD.ORDRS_PRC_ELCTY, 0) / 1000, 1)                    AS ORDRS_PRC_ELCTY    --수주가-전기파트
		       , ROUND((NVL(SD.ORDRS_PRC_MACH, 0) + NVL(SD.ORDRS_PRC_ELCTY, 0)) / 1000, 1) AS ORDRS_PRC --수주가
		       , NVL(SD.ORDRS_QTY, 0)                          AS ORDRS_QTY          --수량
		       , ROUND(NVL(SD.EST_EPCT_MAT_PRC, 0) / 1000, 1)                   AS EST_EPCT_MAT_PRC   --견적예상재료비
		       , ROUND(NVL(SD.TRGT_PCHS_PCOST_MACH, 0) / 1000, 1)               AS TRGT_PCHS_PCOST_MACH --목표구매원가-기계
		       , ROUND(NVL(SD.TRGT_PCHS_PCOST_ELCTY, 0) / 1000, 1)              AS TRGT_PCHS_PCOST_ELCTY --목표구매원가-전기
			   , ROUND((NVL(SD.TRGT_PCHS_PCOST_MACH, 0) + NVL(SD.TRGT_PCHS_PCOST_ELCTY, 0)) / 1000, 1) AS TRGT_PCHS_PCOST_TOT --목표구매원가-합계
		       , ROUND(NVL(SD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN, 0) / 1000, 1)     AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			   , ROUND((NVL(SD.TRGT_PCHS_PCOST_MACH, 0) + NVL(SD.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN, 0)) / 1000, 1) AS TRGT_PCHS_PCOST_MACH2 --목표구매원가-차감 후 기계
		       , ROUND(NVL(SD.LABOR_COST_MFG_COST, 0) / 1000, 1)                AS LABOR_COST_MFG_COST --노무비 및 제조경비
			   , ROUND(NVL(SD.ACT_RGL_MACH, 0) / 1000, 1)                             AS ACT_RGL_MACH                   --실행원가-정상-기계
		       , ROUND(NVL(SD.ACT_OBS_MACH, 0) / 1000, 1)                             AS ACT_OBS_MACH                   --실행원가-장애-기계
		       , ROUND((NVL(SD.ACT_RGL_MACH, 0) + NVL(SD.ACT_OBS_MACH, 0)) / 1000, 1)   AS ACT_TOT_MACH                   --실행원가-기계
		       , ROUND(NVL(SD.ACT_RGL_ELCTY, 0) / 1000, 1)                            AS ACT_RGL_ELCTY                  --실행원가-정상-전기
		       , ROUND(NVL(SD.ACT_OBS_ELCTY, 0) / 1000, 1)                            AS ACT_OBS_ELCTY                  --실행원가-장애-전기
		       , ROUND((NVL(SD.ACT_RGL_ELCTY, 0) + NVL(SD.ACT_OBS_ELCTY, 0)) / 1000, 1) AS ACT_TOT_ELCTY                  --실행원가-전기
		       , ROUND(NVL(SD.ACT_EXP_COST, 0) / 1000, 1)                             AS ACT_EXP_COST                   --실행원가-경비관리비
		       , SD.CREAT_ID                                   AS CREAT_ID      --작성자ID
		       , FN_CM06M01_ID_TO_NM(SD.CREAT_ID)              AS CREAT_ID_NM   --작성자명
		       , TO_CHAR(SD.CREAT_DTTM,'YYYY-MM-DD')           AS CREAT_DTTM    --작성일시
		       , SD.UDT_ID                                     AS UDT_ID        --수정자ID
		       , FN_CM06M01_ID_TO_NM(SD.UDT_ID)                AS UDT_ID_NM     --수정자명
		       , TO_CHAR(SD.UDT_DTTM, 'YYYY-MM-DD')            AS UDT_DTTM      --수정일시
		       , SM.FILE_TRGT_KEY                              AS FILE_TRGT_KEY
		       , RRN
			   , SM.MNG_NM
		  FROM   SJM AS SM --수주마스터
		         LEFT OUTER JOIN TB_CR02D02 AS SD  ON SM.CO_CD    = SD.CO_CD
		                                          AND SM.ORDRS_NO = SD.ORDRS_NO
		         LEFT OUTER JOIN TB_BM01M01 AS P   ON SD.PRDT_CD  = P.PRDT_CD
		  WHERE  1 = 1
		)
		, SJG1 AS
		(
		  SELECT CO_CD                                   AS CO_CD        --회사코드
		       , ORDRS_CLNT_CD                           AS CLNT_CD      --고객사
		       , MAX(CLNT_NM)                            AS CLNT_NM
		       , SUM(ROUND(NVL(ORDRS_AMT, 0) / 1000, 1)) AS ORDRS_AMT --수주금액
		       , SUM(ROUND(ORDRS_AMT * EXRATE / 1000, 1))  AS EXCHANGE_AMT       --원화금액
		       , SUM(ORDRS_PRC_MACH)                     AS ORDRS_PRC_MACH     --수주가-기계파트
		       , SUM(ORDRS_PRC_ELCTY)                    AS ORDRS_PRC_ELCTY    --수주가-전기파트
		       , SUM(ORDRS_PRC)                          AS ORDRS_PRC          --수주가
		       , SUM(ORDRS_QTY)                          AS ORDRS_QTY          --수량 
		       , SUM(EST_EPCT_MAT_PRC)                   AS EST_EPCT_MAT_PRC   --견적예상재료비
		       , SUM(TRGT_PCHS_PCOST_MACH)               AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		       , SUM(TRGT_PCHS_PCOST_ELCTY)              AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			   , SUM(TRGT_PCHS_PCOST_TOT)                AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
		       , SUM(TRGT_PCHS_PCOST_IN_HOUSE_PRCSN)     AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			   , SUM(TRGT_PCHS_PCOST_MACH2)              AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			   , SUM(ACT_RGL_MACH)                       AS ACT_RGL_MACH        --실행원가-정상-기계
			   , SUM(ACT_OBS_MACH)                       AS ACT_OBS_MACH        --실행원가-장애-기계
			   , SUM(ACT_TOT_MACH)                       AS ACT_TOT_MACH        --실행원가-기계
			   , SUM(ACT_RGL_ELCTY)                      AS ACT_RGL_ELCTY       --실행원가-정상-전기
			   , SUM(ACT_OBS_ELCTY)                      AS ACT_OBS_ELCTY       --실행원가-장애-전기
			   , SUM(ACT_TOT_ELCTY)                      AS ACT_TOT_ELCTY       --실행원가-전기
			   , SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY)  AS ACT_TOT
			   , SUM(LABOR_COST_MFG_COST)                AS LABOR_COST_MFG_COST --노무비및제조경비
			   , SUM(ACT_EXP_COST)                       AS ACT_EXP_COST        --실행원가-경비관리비
			   , SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY) + SUM(LABOR_COST_MFG_COST) AS WONGA_TOT
		       , SUM(ORDRS_PRC) - (SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY) + SUM(LABOR_COST_MFG_COST)) - SUM(ACT_EXP_COST) AS FIT
		       , MAX(FILE_TRGT_KEY)                      AS FILE_TRGT_KEY
		       , MAX(RRN)                                AS RRN
		  FROM   SJM
		  GROUP BY CO_CD, ORDRS_CLNT_CD
		)
		, SJG2 AS
		(
		  SELECT CO_CD                                   AS CO_CD        --회사코드
		       , SUM(ROUND(NVL(ORDRS_AMT, 0) / 1000, 1)) AS ORDRS_AMT --수주금액
		       , SUM(ROUND(ORDRS_AMT * EXRATE / 1000, 1))  AS EXCHANGE_AMT       --원화금액
		       , SUM(ORDRS_PRC_MACH)                     AS ORDRS_PRC_MACH     --수주가-기계파트
		       , SUM(ORDRS_PRC_ELCTY)                    AS ORDRS_PRC_ELCTY    --수주가-전기파트
		       , SUM(ORDRS_PRC)                          AS ORDRS_PRC          --수주가
		       , SUM(ORDRS_QTY)                          AS ORDRS_QTY          --수량 
		       , SUM(EST_EPCT_MAT_PRC)                   AS EST_EPCT_MAT_PRC   --견적예상재료비
		       , SUM(TRGT_PCHS_PCOST_MACH)               AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		       , SUM(TRGT_PCHS_PCOST_ELCTY)              AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			   , SUM(TRGT_PCHS_PCOST_TOT)                AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
		       , SUM(TRGT_PCHS_PCOST_IN_HOUSE_PRCSN)     AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			   , SUM(TRGT_PCHS_PCOST_MACH2)              AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			   , SUM(ACT_RGL_MACH)                       AS ACT_RGL_MACH        --실행원가-정상-기계
			   , SUM(ACT_OBS_MACH)                       AS ACT_OBS_MACH        --실행원가-장애-기계
			   , SUM(ACT_TOT_MACH)                       AS ACT_TOT_MACH        --실행원가-기계
			   , SUM(ACT_RGL_ELCTY)                      AS ACT_RGL_ELCTY       --실행원가-정상-전기
			   , SUM(ACT_OBS_ELCTY)                      AS ACT_OBS_ELCTY       --실행원가-장애-전기
			   , SUM(ACT_TOT_ELCTY)                      AS ACT_TOT_ELCTY       --실행원가-전기
			   , SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY)  AS ACT_TOT
			   , SUM(LABOR_COST_MFG_COST)                AS LABOR_COST_MFG_COST --노무비및제조경비
			   , SUM(ACT_EXP_COST)                       AS ACT_EXP_COST        --실행원가-경비관리비
			   , SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY) + SUM(LABOR_COST_MFG_COST) AS WONGA_TOT
		       , SUM(ORDRS_PRC) - (SUM(ACT_TOT_MACH) + SUM(ACT_TOT_ELCTY) + SUM(LABOR_COST_MFG_COST)) - SUM(ACT_EXP_COST) AS FIT
		       , MAX(FILE_TRGT_KEY)                      AS FILE_TRGT_KEY
		       , MAX(RRN)                                AS RRN
		  FROM   SJM
		  GROUP BY CO_CD
		)
		, SJALL AS
		(
		  SELECT CO_CD                           AS CO_CD        --회사코드
		     , FN_CM05M01_CD_TO_NM(CO_CD)      AS CO_NM        --회사명
		     , ORDRS_NO                        AS ORDRS_NO     --수주번호
		     , ORDRS_DIV                       AS ORDRS_DIV    --수주구분
		     , FN_CM05M01_CD_TO_NM(ORDRS_DIV)  AS ORDRS_DIV_NM --수주구분명
		     , TO_CHAR(ORDRS_DT, 'YYYY-MM-DD') AS IO_DT        --수주일자
		     , ORDRS_CLNT_CD                   AS CLNT_CD      --고객사
		     , CLNT_NM                         AS CLNT_NM      --고객사명
		     , CLNT_PJT                        AS CLNT_PJT     --고객사PJT
			 , (SELECT FN_CM05M01_CD_TO_NM(CLNT_PJT) FROM DUAL) AS CLNT_PJT_NM --고객사PJT명
		     , CTRT_NM                         AS CTRT_NM   --계약명
		     , ROUND(NVL(ORDRS_AMT, 0) / 1000, 1) AS ORDRS_AMT --수주금액
		     , ROUND(ORDRS_AMT * EXRATE / 1000, 1)        AS EXCHANGE_AMT       --원화금액
		     , EST_NO                          AS EST_NO    --견적번호
		     , EST_DEG                         AS EST_DEG   --견적차수
		     , ''                              AS PID       --PID
		     , CO_CD||'_'||ORDRS_NO            AS ID        --ID
		     , 0                               AS IO_SEQ    --IO_SEQ
		     , ORDRS_NO                        AS SALES_CD  --SalesCode
		     , ''                              AS ORDRS_DTL_DIV10    --입력구분
		     , ''                              AS ORDRS_DTL_DIV10_NM --입력구분명
		     , ''                              AS PRDT_CD            --제품구분
		     , ''                              AS PRDT_NM            --제품구분명
		     , ''                              AS ITEM_DIV           --아이템구분
		     , ''                              AS ITEM_DIV_NM        --아이템구분명
		     , ''                              AS ORDRS_DTL_DIV20    --작업구분
		     , ''                              AS ORDRS_DTL_DIV20_NM --작업구분명
		     , ''                              AS ORDRS_DTL_DIV30    --자체구분
		     , ''                              AS ORDRS_DTL_DIV30_NM --자체구분명
			 , ''                              AS MCTYPE             --기계구분
		     , ''  					   		   AS MCTYPE_NM          --기계구분명
		     , ''                              AS EQP_NM             --설비명
		     , ORDRS_PRC_MACH                  AS ORDRS_PRC_MACH     --수주가-기계파트
		     , ORDRS_PRC_ELCTY                 AS ORDRS_PRC_ELCTY    --수주가-전기파트
		     , ORDRS_PRC                       AS ORDRS_PRC          --수주가
		     , ORDRS_QTY                       AS ORDRS_QTY          --수량 
		     , EST_EPCT_MAT_PRC                AS EST_EPCT_MAT_PRC   --견적예상재료비
		     , TRGT_PCHS_PCOST_MACH            AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		     , TRGT_PCHS_PCOST_ELCTY           AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			 , TRGT_PCHS_PCOST_TOT             AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((TRGT_PCHS_PCOST_TOT / ORDRS_PRC) * 100, 1)
			   END                             AS TRGT_PCHS_PCOST_PER
		     , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN  AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			 , TRGT_PCHS_PCOST_MACH2           AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계
		     
			 , ACT_RGL_MACH                    AS ACT_RGL_MACH        --실행원가-정상-기계
			 , ACT_OBS_MACH                    AS ACT_OBS_MACH        --실행원가-장애-기계
			 , ACT_TOT_MACH                    AS ACT_TOT_MACH        --실행원가-기계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT_MACH / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_PER_MACH
			 , ACT_RGL_ELCTY                   AS ACT_RGL_ELCTY       --실행원가-정상-전기
			 , ACT_OBS_ELCTY                   AS ACT_OBS_ELCTY       --실행원가-장애-전기
			 , ACT_TOT_ELCTY                   AS ACT_TOT_ELCTY       --실행원가-전기
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT_ELCTY / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_PER_ELCTY
			 , ACT_TOT_MACH + ACT_TOT_ELCTY    AS ACT_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ACT_TOT_MACH + ACT_TOT_ELCTY) / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_TOT_PER
			 , CASE WHEN (ACT_TOT_MACH + ACT_TOT_ELCTY) = 0 THEN 0
			                            ELSE ROUND((TRGT_PCHS_PCOST_TOT / (ACT_TOT_MACH + ACT_TOT_ELCTY)) * 100, 1)
			   END                             AS TRGT_ACT_PER
			 , LABOR_COST_MFG_COST             AS LABOR_COST_MFG_COST --노무비및제조경비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((LABOR_COST_MFG_COST / ORDRS_PRC) * 100, 1)
			   END                             AS LABOR_COST_PER
			 , ACT_EXP_COST                    AS ACT_EXP_COST        --실행원가-경비관리비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_EXP_COST / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_EXP_PER
			 , ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST AS WONGA_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) / ORDRS_PRC) * 100, 1)
			   END                            AS WONGA_PER
		     , ORDRS_PRC - (ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) - ACT_EXP_COST AS FIT
		     , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ORDRS_PRC - (ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) - ACT_EXP_COST) / ORDRS_PRC) * 100, 1)
			   END                             AS FIT_PER
		     , CREAT_ID                         AS CREAT_ID     --작성자ID
		     , FN_CM06M01_ID_TO_NM(CREAT_ID)    AS CREAT_ID_NM  --작성자명
		     , TO_CHAR(CREAT_DTTM,'YYYY-MM-DD') AS CREAT_DTTM   --작성일시
		     , UDT_ID                           AS UDT_ID       --수정자ID
		     , FN_CM06M01_ID_TO_NM(UDT_ID)      AS UDT_ID_NM    --수정자명
		     , TO_CHAR(UDT_DTTM, 'YYYY-MM-DD')  AS UDT_DTTM     --수정일시 
		     , FILE_TRGT_KEY                    AS FILE_TRGT_KEY
		     , 0                                AS COLLAPSE
		     , RRN                              AS RRN
			 , MNG_NM
		FROM   SJM
		UNION ALL
		SELECT CO_CD                           AS CO_CD        --회사코드
		     , CO_NM                           AS CO_NM        --회사명
		     , ORDRS_NO                        AS ORDRS_NO     --수주번호
		     , ORDRS_DIV                       AS ORDRS_DIV    --수주구분
		     , ORDRS_DIV_NM                    AS ORDRS_DIV_NM --수주구분명
		     , IO_DT                           AS IO_DT        --수주일자
		     , CLNT_CD                         AS CLNT_CD      --고객사
		     , CLNT_NM                         AS CLNT_NM      --고객사명
		     , CLNT_PJT                        AS CLNT_PJT     --고객사PJT
			 , (SELECT FN_CM05M01_CD_TO_NM(CLNT_PJT) FROM DUAL) AS CLNT_PJT_NM --고객사PJT명
		     , CTRT_NM                         AS CTRT_NM   --계약명
		     , ORDRS_AMT                       AS ORDRS_AMT --수주금액
		     , EXCHANGE_AMT                    AS EXCHANGE_AMT       --원화금액
		     , EST_NO                          AS EST_NO    --견적번호
		     , EST_DEG                         AS EST_DEG   --견적차수
		     , PID                             AS PID       --PID
		     , ID                              AS ID        --ID
		     , IO_SEQ                          AS IO_SEQ    --IO_SEQ
		     , REPLACE(SALES_CD, ' ', '')      AS SALES_CD  --SalesCode
		     , ORDRS_DTL_DIV10                 AS ORDRS_DTL_DIV10    --입력구분
		     , ORDRS_DTL_DIV10_NM              AS ORDRS_DTL_DIV10_NM --입력구분명
		     , PRDT_CD                         AS PRDT_CD            --제품구분
		     , PRDT_NM                         AS PRDT_NM            --제품구분명
		     , ITEM_DIV             AS ITEM_DIV           --아이템구분
		     , ITEM_DIV_NM          AS ITEM_DIV_NM        --아이템구분명
		     , ORDRS_DTL_DIV20      AS ORDRS_DTL_DIV20    --작업구분
		     , ORDRS_DTL_DIV20_NM   AS ORDRS_DTL_DIV20_NM --작업구분명
		     , ORDRS_DTL_DIV30      AS ORDRS_DTL_DIV30    --자체구분
		     , ORDRS_DTL_DIV30_NM   AS ORDRS_DTL_DIV30_NM --자체구분명
			 , MCTYPE               AS MCTYPE             --기계구분
		     , MCTYPE_NM            AS MCTYPE_NM          --기계구분명
		     , EQP_NM               AS EQP_NM             --설비명
			 , ORDRS_PRC_MACH                 AS ORDRS_PRC_MACH     --수주가-기계파트
		     , ORDRS_PRC_ELCTY                AS ORDRS_PRC_ELCTY    --수주가-전기파트
		     , ORDRS_PRC                      AS ORDRS_PRC          --수주가
		     , ORDRS_QTY                      AS ORDRS_QTY          --수량 
		     , EST_EPCT_MAT_PRC               AS EST_EPCT_MAT_PRC   --견적예상재료비
		     , TRGT_PCHS_PCOST_MACH           AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		     , TRGT_PCHS_PCOST_ELCTY          AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			 , TRGT_PCHS_PCOST_TOT            AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((TRGT_PCHS_PCOST_TOT / ORDRS_PRC) * 100, 1)
			   END                             AS TRGT_PCHS_PCOST_PER
		     , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			 , TRGT_PCHS_PCOST_MACH2          AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			 , ACT_RGL_MACH                   AS ACT_RGL_MACH        --실행원가-정상-기계
			 , ACT_OBS_MACH                   AS ACT_OBS_MACH        --실행원가-장애-기계
			 , ACT_TOT_MACH                   AS ACT_TOT_MACH        --실행원가-기계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT_MACH / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_MACH
			 , ACT_RGL_ELCTY                  AS ACT_RGL_ELCTY       --실행원가-정상-전기
			 , ACT_OBS_ELCTY                  AS ACT_OBS_ELCTY       --실행원가-장애-전기
			 , ACT_TOT_ELCTY                  AS ACT_TOT_ELCTY       --실행원가-전기
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT_ELCTY / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_ELCTY
			 , ACT_TOT_MACH + ACT_TOT_ELCTY   AS ACT_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ACT_TOT_MACH + ACT_TOT_ELCTY) / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_TOT_PER
			 , CASE WHEN (ACT_TOT_MACH + ACT_TOT_ELCTY) = 0 THEN 0
			                            ELSE ROUND((TRGT_PCHS_PCOST_TOT / (ACT_TOT_MACH + ACT_TOT_ELCTY)) * 100, 1)
			   END                            AS TRGT_ACT_PER
			 , LABOR_COST_MFG_COST            AS LABOR_COST_MFG_COST --노무비및제조경비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((LABOR_COST_MFG_COST / ORDRS_PRC) * 100, 1)
			   END                            AS LABOR_COST_PER
			 , ACT_EXP_COST                    AS ACT_EXP_COST        --실행원가-경비관리비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_EXP_COST / ORDRS_PRC) * 100, 1)
			   END                             AS ACT_EXP_PER
			 , ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST AS WONGA_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) / ORDRS_PRC) * 100, 1)
			   END                            AS WONGA_PER
		     , ORDRS_PRC - (ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) - ACT_EXP_COST AS FIT
		     , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND(((ORDRS_PRC - (ACT_TOT_MACH + ACT_TOT_ELCTY + LABOR_COST_MFG_COST) - ACT_EXP_COST) / ORDRS_PRC) * 100, 1)
			   END                             AS FIT_PER
		     , CREAT_ID      AS CREAT_ID     --작성자ID
		     , CREAT_ID_NM   AS CREAT_ID_NM  --작성자명
		     , CREAT_DTTM    AS CREAT_DTTM   --작성일시
		     , UDT_ID        AS UDT_ID       --수정자ID
		     , UDT_ID_NM     AS UDT_ID_NM    --수정자명
		     , UDT_DTTM      AS UDT_DTTM     --수정일시 
		     , FILE_TRGT_KEY AS FILE_TRGT_KEY
		     , 1             AS COLLAPSE
		     , RRN           AS RRN
			 , MNG_NM
		FROM   SJD
		UNION ALL
		SELECT CO_CD                          AS CO_CD        --회사코드
			 , ''                             AS CO_NM        --회사명
			 , ''                             AS ORDRS_NO     --수주번호
			 , ''                             AS ORDRS_DIV    --수주구분
			 , ''                             AS ORDRS_DIV_NM --수주구분명
			 , ''                             AS IO_DT        --수주일자
		     , CLNT_CD                        AS CLNT_CD      --고객사
		     , ''                             AS CLNT_NM      --고객사명
		     , ''                             AS CLNT_PJT     --고객사PJT
			 , ''                             AS CLNT_PJT_NM --고객사PJT명
			 , ''                             AS CTRT_NM   --계약명
		     , ORDRS_AMT                      AS ORDRS_AMT --수주금액
		     , EXCHANGE_AMT                    AS EXCHANGE_AMT       --원화금액
			 , ''                             AS EST_NO    --견적번호
			 , ''                             AS EST_DEG   --견적차수
		     , ''                             AS PID       --PID
		     , ''                             AS ID        --ID
			 , ''                             AS IO_SEQ    --IO_SEQ
			 , ' [소계] '                     AS SALES_CD  --SalesCode
			 , ''                             AS ORDRS_DTL_DIV10    --입력구분
			 , ''                             AS ORDRS_DTL_DIV10_NM --입력구분명
			 , ''                             AS PRDT_CD            --제품구분
			 , ''                             AS PRDT_NM            --제품구분명
			 , ''                             AS ITEM_DIV           --아이템구분
			 , ''                             AS ITEM_DIV_NM        --아이템구분명
			 , ''                             AS ORDRS_DTL_DIV20    --작업구분
			 , ''                             AS ORDRS_DTL_DIV20_NM --작업구분명
			 , ''                             AS ORDRS_DTL_DIV30    --자체구분
			 , ''                             AS ORDRS_DTL_DIV30_NM --자체구분명
			 , ''                             AS MCTYPE             --기계구분
		     , ''                             AS MCTYPE_NM          --기계구분명
			 , ''                             AS EQP_NM             --설비명
		     , ORDRS_PRC_MACH                 AS ORDRS_PRC_MACH     --수주가-기계파트
		     , ORDRS_PRC_ELCTY                AS ORDRS_PRC_ELCTY    --수주가-전기파트
		     , ORDRS_PRC                      AS ORDRS_PRC          --수주가
		     , ORDRS_QTY                      AS ORDRS_QTY          --수량 
		     , EST_EPCT_MAT_PRC               AS EST_EPCT_MAT_PRC   --견적예상재료비
		     , TRGT_PCHS_PCOST_MACH           AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		     , TRGT_PCHS_PCOST_ELCTY          AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			 , TRGT_PCHS_PCOST_TOT            AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((TRGT_PCHS_PCOST_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS TRGT_PCHS_PCOST_PER
			 , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			 , TRGT_PCHS_PCOST_MACH2          AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			 , ACT_RGL_MACH                   AS ACT_RGL_MACH        --실행원가-정상-기계
			 , ACT_OBS_MACH                   AS ACT_OBS_MACH        --실행원가-장애-기계
			 , ACT_TOT_MACH                   AS ACT_TOT_MACH        --실행원가-기계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_TOT_MACH / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_MACH
			 , ACT_RGL_ELCTY                  AS ACT_RGL_ELCTY       --실행원가-정상-전기
			 , ACT_OBS_ELCTY                  AS ACT_OBS_ELCTY       --실행원가-장애-전기
			 , ACT_TOT_ELCTY                  AS ACT_TOT_ELCTY       --실행원가-전기
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_TOT_ELCTY / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_ELCTY
			 , ACT_TOT AS ACT_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_TOT_PER
			 , CASE WHEN ACT_TOT = 0 THEN 0
			                         ELSE ROUND((TRGT_PCHS_PCOST_TOT / ACT_TOT) * 100, 1)
			   END                            AS TRGT_ACT_PER
			 , LABOR_COST_MFG_COST            AS LABOR_COST_MFG_COST --노무비및제조경비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((LABOR_COST_MFG_COST / ORDRS_PRC) * 100, 1)
			   END                            AS LABOR_COST_PER
			 , ACT_EXP_COST                   AS ACT_EXP_COST        --실행원가-경비관리비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_EXP_COST / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_EXP_PER
			 , WONGA_TOT AS WONGA_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((WONGA_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS WONGA_PER
		     , FIT AS FIT
		     , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((FIT / ORDRS_PRC) * 100, 1)
			   END                            AS FIT_PER
			 , ''                             AS CREAT_ID     --작성자ID
			 , ''                             AS CREAT_ID_NM  --작성자명
			 , ''                             AS CREAT_DTTM   --작성일시
			 , ''                             AS UDT_ID       --수정자ID
			 , ''                             AS UDT_ID_NM    --수정자명
			 , ''                             AS UDT_DTTM     --수정일시 
		     , FILE_TRGT_KEY                  AS FILE_TRGT_KEY
		     , 2                              AS COLLAPSE
		     , RRN                            AS RRN
			 , '' AS MNG_NM
		FROM   SJG1
		UNION ALL
		SELECT CO_CD                          AS CO_CD        --회사코드
			 , ''                             AS CO_NM        --회사명
			 , ''                             AS ORDRS_NO     --수주번호
			 , ''                             AS ORDRS_DIV    --수주구분
			 , ''                             AS ORDRS_DIV_NM --수주구분명
			 , ''                             AS IO_DT        --수주일자
		     , ''                             AS CLNT_CD      --고객사
		     , '[ 합계 ]'                             AS CLNT_NM      --고객사명
		     , ''                             AS CLNT_PJT     --고객사PJT
			 , ''                             AS CLNT_PJT_NM --고객사PJT명
			 , ''                             AS CTRT_NM   --계약명
		     , ORDRS_AMT                      AS ORDRS_AMT --수주금액
		     , EXCHANGE_AMT                    AS EXCHANGE_AMT       --원화금액
			 , ''                             AS EST_NO    --견적번호
			 , ''                             AS EST_DEG   --견적차수
		     , ''                             AS PID       --PID
		     , ''                             AS ID        --ID
			 , ''                             AS IO_SEQ    --IO_SEQ
			 , ''                             AS SALES_CD  --SalesCode
			 , ''                             AS ORDRS_DTL_DIV10    --입력구분
			 , ''                             AS ORDRS_DTL_DIV10_NM --입력구분명
			 , ''                             AS PRDT_CD            --제품구분
			 , ''                             AS PRDT_NM            --제품구분명
			 , ''                             AS ITEM_DIV           --아이템구분
			 , ''                             AS ITEM_DIV_NM        --아이템구분명
			 , ''                             AS ORDRS_DTL_DIV20    --작업구분
			 , ''                             AS ORDRS_DTL_DIV20_NM --작업구분명
			 , ''                             AS ORDRS_DTL_DIV30    --자체구분
			 , ''                             AS ORDRS_DTL_DIV30_NM --자체구분명
			 , ''                             AS MCTYPE             --기계구분
		     , ''                             AS MCTYPE_NM          --기계구분명
			 , ''                             AS EQP_NM             --설비명
		     , ORDRS_PRC_MACH                 AS ORDRS_PRC_MACH     --수주가-기계파트
		     , ORDRS_PRC_ELCTY                AS ORDRS_PRC_ELCTY    --수주가-전기파트
		     , ORDRS_PRC                      AS ORDRS_PRC          --수주가
		     , ORDRS_QTY                      AS ORDRS_QTY          --수량 
		     , EST_EPCT_MAT_PRC               AS EST_EPCT_MAT_PRC   --견적예상재료비
		     , TRGT_PCHS_PCOST_MACH           AS TRGT_PCHS_PCOST_MACH           --목표구매원가-기계
		     , TRGT_PCHS_PCOST_ELCTY          AS TRGT_PCHS_PCOST_ELCTY          --목표구매원가-전기
			 , TRGT_PCHS_PCOST_TOT            AS TRGT_PCHS_PCOST_TOT            --목표구매원가-합계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((TRGT_PCHS_PCOST_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS TRGT_PCHS_PCOST_PER
			 , TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN --목표구매원가-기자체가공
			 , TRGT_PCHS_PCOST_MACH2          AS TRGT_PCHS_PCOST_MACH2          --목표구매원가-차감 후 기계		     
			 , ACT_RGL_MACH                   AS ACT_RGL_MACH        --실행원가-정상-기계
			 , ACT_OBS_MACH                   AS ACT_OBS_MACH        --실행원가-장애-기계
			 , ACT_TOT_MACH                   AS ACT_TOT_MACH        --실행원가-기계
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_TOT_MACH / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_MACH
			 , ACT_RGL_ELCTY                  AS ACT_RGL_ELCTY       --실행원가-정상-전기
			 , ACT_OBS_ELCTY                  AS ACT_OBS_ELCTY       --실행원가-장애-전기
			 , ACT_TOT_ELCTY                  AS ACT_TOT_ELCTY       --실행원가-전기
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_TOT_ELCTY / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_PER_ELCTY
			 , ACT_TOT AS ACT_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                            ELSE ROUND((ACT_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_TOT_PER
			 , CASE WHEN ACT_TOT = 0 THEN 0
			                         ELSE ROUND((TRGT_PCHS_PCOST_TOT / ACT_TOT) * 100, 1)
			   END                            AS TRGT_ACT_PER
			 , LABOR_COST_MFG_COST            AS LABOR_COST_MFG_COST --노무비및제조경비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((LABOR_COST_MFG_COST / ORDRS_PRC) * 100, 1)
			   END                            AS LABOR_COST_PER
			 , ACT_EXP_COST                   AS ACT_EXP_COST        --실행원가-경비관리비
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((ACT_EXP_COST / ORDRS_PRC) * 100, 1)
			   END                            AS ACT_EXP_PER
			 , WONGA_TOT AS WONGA_TOT
			 , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((WONGA_TOT / ORDRS_PRC) * 100, 1)
			   END                            AS WONGA_PER
		     , FIT AS FIT
		     , CASE WHEN ORDRS_PRC = 0 THEN 0
			                           ELSE ROUND((FIT / ORDRS_PRC) * 100, 1)
			   END                            AS FIT_PER
			 , ''                             AS CREAT_ID     --작성자ID
			 , ''                             AS CREAT_ID_NM  --작성자명
			 , ''                             AS CREAT_DTTM   --작성일시
			 , ''                             AS UDT_ID       --수정자ID
			 , ''                             AS UDT_ID_NM    --수정자명
			 , ''                             AS UDT_DTTM     --수정일시 
		     , FILE_TRGT_KEY                  AS FILE_TRGT_KEY
		     , 3                              AS COLLAPSE
		     , RRN                            AS RRN
			 , '' AS MNG_NM
		FROM   SJG2
		)
		SELECT SJALL.*
		     , ECR2.CURR_CD
		     , FN_CM05M01_CD_TO_NM(ECR2.CURR_CD) AS CURR_NM		      
		     , ECR2.EXRATE
		FROM   SJALL
		       LEFT OUTER JOIN TB_CR02M01 ECR2  ON SJALL.CO_CD    = ECR2.CO_CD
			                                   AND SJALL.ORDRS_NO = ECR2.ORDRS_NO
		ORDER BY CO_CD, RRN, COLLAPSE
	</select>

	<!-- 리스트 with -->
	<sql id="select_ordrs_master">
		WITH BJM AS 
		     ( 
		       SELECT DISTINCT 
		               A.CO_CD                                               AS CO_CD          --회사코드
					, (SELECT FN_CM05M01_CD_TO_NM(A.CO_CD) FROM DUAL)       AS CO_CD_NM	   --회사명
					, A.ORDRG_NO                                             AS ORDRG_NO       --발주번호
					, A.REQ_NO                                               AS REQ_NO         --요인별 요청번호
					, A.SALES_CD                                             AS SALES_CD       --SALES CODE
					, A.PCHS_CLNT_CD                                         AS PCHS_CLNT_CD   --구매처cd
		            , C.CLNT_NM                                              AS PCHS_CLNT_NM   --구매처명
					, TO_CHAR(A.ORDRG_DT, 'YYYY-MM-DD')                      AS ORDRG_DT       --발주일자
					, A.CURR_CD	                                             AS CURR_CD        --통화단위
					, A.EXRATE                                               AS EXRATE         --환율
					, TO_CHAR(A.DUDT_DEQ_DT, 'YYYY-MM-DD')                   AS DUDT_DEQ_DT    --납기요청일
					, A.ORDRG_RMK                                            AS ORDRG_RMK      --비고 
					, A.IN_CMPLET_YN                                         AS IN_CMPLET_YN   --입고완료여부
					, A.ETC_FIELD1                                           AS ETC_FIELD1
					, A.ETC_FIELD2                                           AS ETC_FIELD2
					, A.ETC_FIELD3                                           AS ETC_FIELD3
					, A.CREAT_ID                                             AS CREAT_ID
					, A.CREAT_PGM                                            AS CREAT_PGM
					, A.CREAT_DTTM                                           AS CREAT_DTTM
					, A.UDT_ID                                               AS UDT_ID
					, A.UDT_DTTM                                             AS UDT_DTTM
					, A.FILE_TRGT_KEY                                        AS FILE_TRGT_KEY    
		            , E.ORDRG_QTY                                            AS ORDRG_QTY
		            , E.ORDRG_AMT                                            AS ORDRG_AMT
		            , E.DSGN_NO 											 AS DSGN_NO			/* 도번 MIN */
                FROM TB_SM02M01 A --발주마스터
                	  INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
                      INNER      JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD--거래처마스터   
                      LEFT OUTER JOIN (SELECT CO_CD
		                                     , ORDRG_NO
		                                     , SALES_CD
		                                     , SUM(ORDRG_QTY) ORDRG_QTY
		                                     , SUM(ORDRG_AMT) ORDRG_AMT
		                                     , MIN(DSGN_NO) AS DSGN_NO
		                                 FROM TB_SM02D01 
		                                WHERE CO_CD = #{coCd}
		                                GROUP BY CO_CD
		                                        , ORDRG_NO
		                                        , SALES_CD
		                                        , DSGN_NO
                                      ) AS E ON A.CO_CD = E.CO_CD AND A.SALES_CD = E.SALES_CD AND A.ORDRG_NO = E.ORDRG_NO --발주상세
		       WHERE 1=1
                <if test="coCd != null and !coCd.equals('')">
                 AND A.CO_CD = #{coCd}
                </if>
                <if test="ordrgDtFrom != null and !ordrgDtFrom.equals('') and  ordrgDtTo != null and !ordrgDtTo.equals('')" >
                  AND A.ORDRG_DT BETWEEN TO_DATE( #{ordrgDtFrom},'YYYYMMDD') AND TO_DATE( #{ordrgDtTo},'YYYYMMDD') +1
                </if>
                <if test="salesCd != null and !salesCd.equals('')">
                AND A.SALES_CD LIKE '%' || #{salesCd} || '%'   --조회조건 : SALES_CD
               </if>
               <!-- 사용안함  -->
               <if test="ordrgDiv10 != null and !ordrgDiv10.equals('')">
                AND A.ORDRG_DIV10 = #{ordrgDiv10} --조회조건 : 발주구분  
               </if>
               <if test="pchsClntNm != null and !pchsClntNm.equals('')">
                AND C.CLNT_NM LIKE '%' || #{pchsClntNm} || '%' --조회조건 : 구매처
               </if>    
		     )
		     , SJD AS --수주상세 
		     ( 
              SELECT M.CO_CD                                             AS CO_CD         --회사코드
                    , M.ORDRS_NO                                         AS ORDRS_NO      --수주번호
                    , M.ORDRS_CLNT_CD                                    AS ORDRS_CLNT_CD --고객코드
                    , C.CLNT_NM                                          AS ORDRS_CLNT_NM --고객명
                    , X.SALES_CD                                         AS SALES_CD      --SALES Code
                    , M.CLNT_PJT                                         AS CLNT_PJT      --고객사PJT 
                    , X.PRDT_CD                                          AS PRDT_CD       --제품구분
		            , E.PRDT_NM                                          AS PRDT_NM       --제품구분명
                    , X.EQP_NM                                           AS EQP_NM        --설비명 
		            , X.ITEM_DIV                                         AS ITEM_DIV      --아이템구분
		            , (SELECT FN_CM05M01_CD_TO_NM(X.ITEM_DIV) FROM DUAL) AS ITEM_DIV_NM   --아이템 구분명
		            , C.CLNT_DIV_CD                                      AS CLNT_DIV_CD    --거래처 분류
		            , (SELECT FN_CM05M01_CD_TO_NM(C.CLNT_DIV_CD) FROM DUAL) AS CLNT_DIV_NM  --거래처 분류명
					, FN_CM05M01_CD_TO_NM(M.CLNT_PJT)                    AS CLNT_PJT_NM
                FROM TB_CR02M01  M --수주마스터
                      INNER      JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
                      INNER      JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
                      LEFT OUTER JOIN TB_BM01M01 AS E ON X.PRDT_CD       = E.PRDT_CD --제품마스터
               WHERE 1=1
               <if test="coCd != null and !coCd.equals('')">
                 AND M.CO_CD = #{coCd}	
                </if>
               <if test="salesCd != null and !salesCd.equals('')">
                AND X.SALES_CD = #{salesCd} --조회조건 : SALES_CD
               </if>
               <if test="itemDiv != null and !itemDiv.equals('')">
		        AND X.ITEM_DIV = #{itemDiv}  --조회조건 : 아이템 구분
		       </if>  	
               <if test="prdtNm != null and !prdtNm.equals('')">
		        AND E.PRDT_NM LIKE '%' || #{prdtNm} || '%'  --조회조건 : 제품구분명
		       </if>
		       <if test="clntNm != null and !clntNm.equals('')">
		        AND C.CLNT_NM LIKE '%' || #{clntNm} || '%'  --조회조건 : 제품구분명
		       </if>
		     )
		   , TDO AS --TODO 결재공유
		     (
		      SELECT SALES_CD 
		            , TODO_NO
		            , CASE WHEN (COUNT(TODO_KEY)>0) THEN 'Y'
		                    ELSE 'N'
		               END TODO_YN
		        FROM TB_WB20M03 W20
		       WHERE 1=1 
		       GROUP BY SALES_CD 
		               , TODO_NO     
		     )
	</sql>

	<select id="select_modal_List1_Count" parameterType="Map" resultType="int">
		WITH SJM AS
		(
		 SELECT A.CO_NM
		      , A.EST_NO
			  , A.EST_DEG
			  , A.ORDRS_NO
			  , A.CLNT_NM
			  , A.ORDRS_DT
			  , A.ORDRS_DIV_NM
			  , A.CLNT_PJT_NM
			  , A.CTRT_NM
			  , A.MNG_NM
			  , A.ORDRS_AMT
			  , A.CURR_NM
			  , A.EXRATE
			  , A.PMNT_MTD_NM
			  , A.ORDRGER
			  , A.FWD_EXCH_JOIN_DT
			  , A.CHK_LIST_NM
			  , A.CTRT_DOC_NM
			  , A.ORGN_SALES_CD
			  , A.INPEXP_NM
			  , A.ORDRS_RMK
		 FROM   (
			     SELECT A.FILE_TRGT_KEY     AS FILE_TRGT_KEY
					  , R1.CODE_NM          AS CO_NM
					  , A.EST_NO            AS EST_NO
					  , TO_CHAR(A.EST_DEG)  AS EST_DEG
					  , A.ORDRS_NO          AS ORDRS_NO
					  , S.CLNT_NM           AS CLNT_NM
					  , TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
					  , R2.CODE_NM          AS ORDRS_DIV_NM
					  , R3.CODE_NM          AS CLNT_PJT_NM
					  , A.CTRT_NM           AS CTRT_NM
					  , U.NAME              AS MNG_NM
					  , TO_CHAR(NVL(A.ORDRS_AMT, 0), 'FM999,999,999,999') AS ORDRS_AMT
					  , R4.CODE_NM          AS CURR_NM
					  , TO_CHAR(NVL(A.EXRATE, 1), 'FM999,999,999,999') AS EXRATE
					  , R5.CODE_NM          AS PMNT_MTD_NM
					  , A.ORDRGER           AS ORDRGER
					  , TO_CHAR(A.FWD_EXCH_JOIN_DT, 'YYYY-MM-DD') AS FWD_EXCH_JOIN_DT
					  , CASE WHEN NVL(A.FWD_EXCH_CHK_LIST, 'N') = 'N' THEN 'NO'
					         ELSE 'YES'
						END                 AS CHK_LIST_NM
					  , R6.CODE_NM          AS CTRT_DOC_NM
					  , A.ORGN_SALES_CD     AS ORGN_SALES_CD
					  , R7.CODE_NM          AS INPEXP_NM
					  , A.ORDRS_RMK         AS ORDRS_RMK
				 FROM   TB_CR02M01 AS A
				        --고객사
						LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
						--영업담당자
						LEFT OUTER JOIN TB_CM06M01 AS U ON U.ID = A.MNG_ID
						--회사
						LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.CO_CD
						--수주구분
						LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.ORDRS_DIV
						--고객사PJT
						LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = A.CLNT_PJT
						--통화
						LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = A.CURR_CD
						--결재방법
						LEFT OUTER JOIN TB_CM05M01 AS R5 ON R5.CODE_ID = A.PMNT_MTD
						--계약문서
						LEFT OUTER JOIN TB_CM05M01 AS R6 ON R6.CODE_ID = A.CTRT_DOC
						--국내외구분
						LEFT OUTER JOIN TB_CM05M01 AS R7 ON R7.CODE_ID = A.INPEXP_CD
				 WHERE  1 = 1
				 <if test="coCd != null and !coCd.equals('')">
				 AND    A.CO_CD    = #{coCd}
				 </if>
				 <if test="ordrsNo != null and !ordrsNo.equals('')">
				 AND    A.ORDRS_NO = #{ordrsNo}
				 </if>
				) AS A
		 WHERE  1 = 1
		)
		, SJM_LIST AS
		(
		           SELECT '1.회사'          AS COL_01, CO_NM            AS COLNM_01, '2.수주번호'         AS COL_02, ORDRS_NO    AS COLNM_02 FROM SJM
		 UNION ALL SELECT '3.견적서번호'    AS COL_01, EST_NO           AS COLNM_01, '4.견적차수'         AS COL_02, EST_DEG     AS COLNM_02 FROM SJM
		 UNION ALL SELECT '5.고객사'        AS COL_01, CLNT_NM          AS COLNM_01, '6.고객사PJT'        AS COL_02, CLNT_PJT_NM AS COLNM_02 FROM SJM
		 UNION ALL SELECT '7.수주구분'      AS COL_01, ORDRS_DIV_NM     AS COLNM_01, '8.수주일자'         AS COL_02, ORDRS_DT    AS COLNM_02 FROM SJM
		 UNION ALL SELECT '9.계약명'        AS COL_01, CTRT_NM          AS COLNM_01, '10.비고'            AS COL_02, ORDRS_RMK   AS COLNM_02 FROM SJM
		 UNION ALL SELECT '11.담당자'       AS COL_01, MNG_NM           AS COLNM_01, '12.발주자'          AS COL_02, ORDRGER     AS COLNM_02 FROM SJM
		 UNION ALL SELECT '13.계약문서'     AS COL_01, CTRT_DOC_NM      AS COLNM_01, '14.국내외구분'      AS COL_02, INPEXP_NM   AS COLNM_02 FROM SJM
		 UNION ALL SELECT '15.선물환가입일' AS COL_01, FWD_EXCH_JOIN_DT AS COLNM_01, '16.선물환CheckList' AS COL_02, CHK_LIST_NM AS COLNM_02 FROM SJM
		 UNION ALL SELECT '17.결재방법'     AS COL_01, PMNT_MTD_NM      AS COLNM_01, '18.통화단위'        AS COL_02, CURR_NM     AS COLNM_02 FROM SJM
		 UNION ALL SELECT '19.환율'         AS COL_01, EXRATE           AS COLNM_01, '20.수주금액'        AS COL_02, ORDRS_AMT   AS COLNM_02 FROM SJM
		)
		SELECT COUNT(*)
		FROM   SJM_LIST
		WHERE  1 = 1
    </select>

	<select id="select_modal_List1" parameterType="Map" resultType="camelMap">
		<!-- <include refid="select_ordrs_master"></include> -->
		WITH SJM AS
		(
		 SELECT A.CO_NM
		      , A.EST_NO
			  , A.EST_DEG
			  , A.ORDRS_NO
			  , A.CLNT_NM
			  , A.ORDRS_DT
			  , A.ORDRS_DIV_NM
			  , A.CLNT_PJT_NM
			  , A.CTRT_NM
			  , A.MNG_NM
			  , A.ORDRS_AMT
			  , A.CURR_NM
			  , A.EXRATE
			  , A.PMNT_MTD_NM
			  , A.ORDRGER
			  , A.FWD_EXCH_JOIN_DT
			  , A.CHK_LIST_NM
			  , A.CTRT_DOC_NM
			  , A.ORGN_SALES_CD
			  , A.INPEXP_NM
			  , A.ORDRS_RMK
		 FROM   (
			     SELECT A.FILE_TRGT_KEY     AS FILE_TRGT_KEY
					  , R1.CODE_NM          AS CO_NM
					  , A.EST_NO            AS EST_NO
					  , TO_CHAR(A.EST_DEG)  AS EST_DEG
					  , A.ORDRS_NO          AS ORDRS_NO
					  , S.CLNT_NM           AS CLNT_NM
					  , TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
					  , R2.CODE_NM          AS ORDRS_DIV_NM
					  , R3.CODE_NM          AS CLNT_PJT_NM
					  , A.CTRT_NM           AS CTRT_NM
					  , U.NAME              AS MNG_NM
					  , TO_CHAR(NVL(A.ORDRS_AMT, 0), 'FM999,999,999,999') AS ORDRS_AMT
					  , R4.CODE_NM          AS CURR_NM
					  , TO_CHAR(NVL(A.EXRATE, 1), 'FM999,999,999,999') AS EXRATE
					  , R5.CODE_NM          AS PMNT_MTD_NM
					  , A.ORDRGER           AS ORDRGER
					  , TO_CHAR(A.FWD_EXCH_JOIN_DT, 'YYYY-MM-DD') AS FWD_EXCH_JOIN_DT
					  , CASE WHEN NVL(A.FWD_EXCH_CHK_LIST, 'N') = 'N' THEN 'NO'
					         ELSE 'YES'
						END                 AS CHK_LIST_NM
					  , R6.CODE_NM          AS CTRT_DOC_NM
					  , A.ORGN_SALES_CD     AS ORGN_SALES_CD
					  , R7.CODE_NM          AS INPEXP_NM
					  , A.ORDRS_RMK         AS ORDRS_RMK
				 FROM   TB_CR02M01 AS A
				        --고객사
						LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
						--영업담당자
						LEFT OUTER JOIN TB_CM06M01 AS U ON U.ID = A.MNG_ID
						--회사
						LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.CO_CD
						--수주구분
						LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.ORDRS_DIV
						--고객사PJT
						LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = A.CLNT_PJT
						--통화
						LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = A.CURR_CD
						--결재방법
						LEFT OUTER JOIN TB_CM05M01 AS R5 ON R5.CODE_ID = A.PMNT_MTD
						--계약문서
						LEFT OUTER JOIN TB_CM05M01 AS R6 ON R6.CODE_ID = A.CTRT_DOC
						--국내외구분
						LEFT OUTER JOIN TB_CM05M01 AS R7 ON R7.CODE_ID = A.INPEXP_CD
				 WHERE  1 = 1
				 <if test="coCd != null and !coCd.equals('')">
				 AND    A.CO_CD    = #{coCd}
				 </if>
				 <if test="ordrsNo != null and !ordrsNo.equals('')">
				 AND    A.ORDRS_NO = #{ordrsNo}
				 </if>
				) AS A
		 WHERE  1 = 1
		)
		, SJM_LIST AS
		(
		           SELECT '1.회사'          AS COL_01, CO_NM            AS COLNM_01, '2.수주번호'         AS COL_02, ORDRS_NO    AS COLNM_02 FROM SJM
		 UNION ALL SELECT '3.견적서번호'    AS COL_01, EST_NO           AS COLNM_01, '4.견적차수'         AS COL_02, EST_DEG     AS COLNM_02 FROM SJM
		 UNION ALL SELECT '5.고객사'        AS COL_01, CLNT_NM          AS COLNM_01, '6.고객사PJT'        AS COL_02, CLNT_PJT_NM AS COLNM_02 FROM SJM
		 UNION ALL SELECT '7.수주구분'      AS COL_01, ORDRS_DIV_NM     AS COLNM_01, '8.수주일자'         AS COL_02, ORDRS_DT    AS COLNM_02 FROM SJM
		 UNION ALL SELECT '9.계약명'        AS COL_01, CTRT_NM          AS COLNM_01, '10.비고'            AS COL_02, ORDRS_RMK   AS COLNM_02 FROM SJM
		 UNION ALL SELECT '11.담당자'       AS COL_01, MNG_NM           AS COLNM_01, '12.발주자'          AS COL_02, ORDRGER     AS COLNM_02 FROM SJM
		 UNION ALL SELECT '13.계약문서'     AS COL_01, CTRT_DOC_NM      AS COLNM_01, '14.국내외구분'      AS COL_02, INPEXP_NM   AS COLNM_02 FROM SJM
		 UNION ALL SELECT '15.선물환가입일' AS COL_01, FWD_EXCH_JOIN_DT AS COLNM_01, '16.선물환CheckList' AS COL_02, CHK_LIST_NM AS COLNM_02 FROM SJM
		 UNION ALL SELECT '17.결재방법'     AS COL_01, PMNT_MTD_NM      AS COLNM_01, '18.통화단위'        AS COL_02, CURR_NM     AS COLNM_02 FROM SJM
		 UNION ALL SELECT '19.환율'         AS COL_01, EXRATE           AS COLNM_01, '20.수주금액'        AS COL_02, ORDRS_AMT   AS COLNM_02 FROM SJM
		)
		SELECT *
		FROM   SJM_LIST
		WHERE  1 = 1
    </select>

	<select id="select_modal_List2_Count" parameterType="Map" resultType="int">
		WITH SJM AS
		(
		 SELECT A.FILE_TRGT_KEY     AS FILE_TRGT_KEY
			  , R1.CODE_NM          AS CO_NM
			  , NVL(A.EST_NO, '')   AS EST_NO
			  , TO_CHAR(NVL(A.EST_DEG, ''))  AS EST_DEG
			  , A.ORDRS_NO          AS ORDRS_NO
			  , S.CLNT_NM           AS CLNT_NM
			  , TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
			  , R2.CODE_NM          AS ORDRS_DIV_NM
			  , R3.CODE_NM          AS CLNT_PJT_NM
			  , A.CTRT_NM           AS CTRT_NM
			  , U.NAME              AS MNG_NM
			  , TO_CHAR(NVL(A.ORDRS_AMT, 0), 'FM999,999,999,999') AS ORDRS_AMT
			  , R4.CODE_NM          AS CURR_NM
			  , TO_CHAR(NVL(A.EXRATE, 1), 'FM999,999,999,999') AS EXRATE
			  , R5.CODE_NM          AS PMNT_MTD_NM
			  , A.ORDRGER           AS ORDRGER
			  , TO_CHAR(A.FWD_EXCH_JOIN_DT, 'YYYY-MM-DD') AS FWD_DT
			  , CASE WHEN NVL(A.FWD_EXCH_CHK_LIST, 'N') = 'N' THEN 'NO'
			         ELSE 'YES'
				END                 AS CHK_LIST_NM
			  , R6.CODE_NM          AS CTRT_DOC_NM
			  , NVL(A.ORGN_SALES_CD, '') AS ORGN_SALES_CD
			  , R7.CODE_NM          AS INPEXP_NM
			  , A.ORDRS_RMK         AS ORDRS_RMK
			  , CASE WHEN A.EST_NO = C.EST_NO                       THEN 'Y' ELSE 'N' END AS EST_NO_YN
			  , CASE WHEN A.EST_DEG = C.EST_DEG                     THEN 'Y' ELSE 'N' END AS EST_DEG_YN
			  , CASE WHEN A.ORDRS_CLNT_CD = C.ORDRS_CLNT_CD         THEN 'Y' ELSE 'N' END AS CLNT_CD_YN
			  , CASE WHEN A.ORDRS_DT = C.ORDRS_DT                   THEN 'Y' ELSE 'N' END AS ORDRS_DT_YN
			  , CASE WHEN A.ORDRS_DIV = C.ORDRS_DIV                 THEN 'Y' ELSE 'N' END AS ORDRS_DIV_YN
			  , CASE WHEN A.CLNT_PJT = C.CLNT_PJT                   THEN 'Y' ELSE 'N' END AS CLNT_PJT_YN
			  , CASE WHEN A.CTRT_NM = C.CTRT_NM                     THEN 'Y' ELSE 'N' END AS CTRT_NM_YN
			  , CASE WHEN A.MNG_ID = C.MNG_ID                       THEN 'Y' ELSE 'N' END AS MNG_ID_YN
			  , CASE WHEN A.ORDRS_AMT = C.ORDRS_AMT                 THEN 'Y' ELSE 'N' END AS ORDRS_AMT_YN
			  , CASE WHEN A.CURR_CD = C.CURR_CD                     THEN 'Y' ELSE 'N' END AS CURR_CD_YN
			  , CASE WHEN A.EXRATE = C.EXRATE                       THEN 'Y' ELSE 'N' END AS EXRATE_YN
			  , CASE WHEN A.PMNT_MTD = C.PMNT_MTD                   THEN 'Y' ELSE 'N' END AS PMNT_MTD_YN
			  , CASE WHEN A.ORDRGER = C.ORDRGER                     THEN 'Y' ELSE 'N' END AS ORDRGER_YN
			  , CASE WHEN A.FWD_EXCH_JOIN_DT = C.FWD_EXCH_JOIN_DT   THEN 'Y' ELSE 'N' END AS FWD_DT_YN
			  , CASE WHEN A.FWD_EXCH_CHK_LIST = C.FWD_EXCH_CHK_LIST THEN 'Y' ELSE 'N' END AS CHK_LIST_YN
			  , CASE WHEN A.CTRT_DOC = C.CTRT_DOC                   THEN 'Y' ELSE 'N' END AS CTRT_DOC_YN
			  , CASE WHEN A.ORGN_SALES_CD = C.ORGN_SALES_CD         THEN 'Y' ELSE 'N' END AS ORGN_SALES_CD_YN
			  , CASE WHEN A.INPEXP_CD = C.INPEXP_CD                 THEN 'Y' ELSE 'N' END AS INPEXP_CD_YN
			  , CASE WHEN A.ORDRS_RMK = C.ORDRS_RMK                 THEN 'Y' ELSE 'N' END AS ORDRS_RMK_YN
		 FROM   TB_CR02M01_HIST AS A
		        --수주
				LEFT OUTER JOIN TB_CR02M01 AS C ON C.FILE_TRGT_KEY = A.FILE_TRGT_KEY
		        --고객사
				LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
				--영업담당자
				LEFT OUTER JOIN TB_CM06M01 AS U ON U.ID = A.MNG_ID
				--회사
				LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.CO_CD
				--수주구분
				LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.ORDRS_DIV
				--고객사PJT
				LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = A.CLNT_PJT
				--통화
				LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = A.CURR_CD
				--결재방법
				LEFT OUTER JOIN TB_CM05M01 AS R5 ON R5.CODE_ID = A.PMNT_MTD
				--계약문서
				LEFT OUTER JOIN TB_CM05M01 AS R6 ON R6.CODE_ID = A.CTRT_DOC
				--국내외구분
				LEFT OUTER JOIN TB_CM05M01 AS R7 ON R7.CODE_ID = A.INPEXP_CD
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		 <if test="histNo != null and !histNo.equals('')">
		 AND    A.HIST_NO  = #{histNo}
		 </if>
		)
		, SJM_LIST AS
		(
		           SELECT '1.회사'       AS COL_01, CO_NM        AS COLNM_01, 'Y'          AS CYN_01, '2.수주번호'         AS COL_02, ORDRS_NO    AS COLNM_02, 'Y'          AS CYN_02 FROM SJM
		 UNION ALL SELECT '3.견적서번호'    AS COL_01, EST_NO AS COLNM_01, EST_NO_YN   AS CYN_01, '4.견적차수'          AS COL_02, EST_DEG     AS COLNM_02, EST_DEG_YN   AS CYN_02 FROM SJM
		 UNION ALL SELECT '5.고객사'      AS COL_01, CLNT_NM      AS COLNM_01, CLNT_CD_YN   AS CYN_01, '6.고객사PJT'        AS COL_02, CLNT_PJT_NM AS COLNM_02, CLNT_PJT_YN  AS CYN_02 FROM SJM
		 UNION ALL SELECT '7.수주구분'     AS COL_01, ORDRS_DIV_NM AS COLNM_01, ORDRS_DIV_YN AS CYN_01, '8.수주일자'         AS COL_02, ORDRS_DT    AS COLNM_02, ORDRS_DT_YN  AS CYN_02 FROM SJM
		 UNION ALL SELECT '9.계약명'      AS COL_01, CTRT_NM      AS COLNM_01, CTRT_NM_YN   AS CYN_01, '10.비고'           AS COL_02, ORDRS_RMK   AS COLNM_02, ORDRS_RMK_YN AS CYN_02 FROM SJM
		 UNION ALL SELECT '11.담당자'     AS COL_01, MNG_NM       AS COLNM_01, MNG_ID_YN    AS CYN_01, '12.발주자'          AS COL_02, ORDRGER     AS COLNM_02, ORDRGER_YN   AS CYN_02 FROM SJM
		 UNION ALL SELECT '13.계약문서'    AS COL_01, CTRT_DOC_NM  AS COLNM_01, CTRT_DOC_YN  AS CYN_01, '14.국내외구분'       AS COL_02, INPEXP_NM   AS COLNM_02, INPEXP_CD_YN AS CYN_02 FROM SJM
		 UNION ALL SELECT '15.선물환가입일' AS COL_01, FWD_DT       AS COLNM_01, FWD_DT_YN    AS CYN_01, '16.선물환CheckList' AS COL_02, CHK_LIST_NM AS COLNM_02, CHK_LIST_YN  AS CYN_02 FROM SJM
		 UNION ALL SELECT '17.결재방법'   AS COL_01, PMNT_MTD_NM   AS COLNM_01, PMNT_MTD_YN  AS CYN_01, '18.통화단위'        AS COL_02, CURR_NM     AS COLNM_02, CURR_CD_YN   AS CYN_02 FROM SJM
		 UNION ALL SELECT '19.환율'      AS COL_01, EXRATE       AS COLNM_01, EXRATE_YN    AS CYN_01, '20.수주금액'         AS COL_02, ORDRS_AMT   AS COLNM_02, ORDRS_AMT_YN AS CYN_02 FROM SJM
		)
		SELECT COUNT(*)
		FROM   SJM_LIST
		WHERE  1 = 1
    </select>

	<select id="select_modal_List2" parameterType="Map" resultType="camelMap">
		<!-- <include refid="select_ordrs_master"></include> -->
		WITH SJM AS
		(
		 SELECT A.FILE_TRGT_KEY     AS FILE_TRGT_KEY
			  , R1.CODE_NM          AS CO_NM
			  , NVL(A.EST_NO, '')   AS EST_NO
			  , TO_CHAR(NVL(A.EST_DEG, ''))  AS EST_DEG
			  , A.ORDRS_NO          AS ORDRS_NO
			  , S.CLNT_NM           AS CLNT_NM
			  , TO_CHAR(A.ORDRS_DT, 'YYYY-MM-DD') AS ORDRS_DT
			  , R2.CODE_NM          AS ORDRS_DIV_NM
			  , R3.CODE_NM          AS CLNT_PJT_NM
			  , A.CTRT_NM           AS CTRT_NM
			  , U.NAME              AS MNG_NM
			  , TO_CHAR(NVL(A.ORDRS_AMT, 0), 'FM999,999,999,999') AS ORDRS_AMT
			  , R4.CODE_NM          AS CURR_NM
			  , TO_CHAR(NVL(A.EXRATE, 1), 'FM999,999,999,999') AS EXRATE
			  , R5.CODE_NM          AS PMNT_MTD_NM
			  , A.ORDRGER           AS ORDRGER
			  , TO_CHAR(A.FWD_EXCH_JOIN_DT, 'YYYY-MM-DD') AS FWD_DT
			  , CASE WHEN NVL(A.FWD_EXCH_CHK_LIST, 'N') = 'N' THEN 'NO'
			         ELSE 'YES'
				END                 AS CHK_LIST_NM
			  , R6.CODE_NM          AS CTRT_DOC_NM
			  , NVL(A.ORGN_SALES_CD, '') AS ORGN_SALES_CD
			  , R7.CODE_NM          AS INPEXP_NM
			  , A.ORDRS_RMK         AS ORDRS_RMK
			  , CASE WHEN NVL(A.EST_NO, '.') = NVL(C.EST_NO, '.')   THEN 'Y' ELSE 'N' END AS EST_NO_YN
			  , CASE WHEN NVL(A.EST_DEG, 0) = NVL(C.EST_DEG, 0)     THEN 'Y' ELSE 'N' END AS EST_DEG_YN
			  , CASE WHEN A.ORDRS_CLNT_CD = C.ORDRS_CLNT_CD         THEN 'Y' ELSE 'N' END AS CLNT_CD_YN
			  , CASE WHEN A.ORDRS_DT = C.ORDRS_DT                   THEN 'Y' ELSE 'N' END AS ORDRS_DT_YN
			  , CASE WHEN A.ORDRS_DIV = C.ORDRS_DIV                 THEN 'Y' ELSE 'N' END AS ORDRS_DIV_YN
			  , CASE WHEN A.CLNT_PJT = C.CLNT_PJT                   THEN 'Y' ELSE 'N' END AS CLNT_PJT_YN
			  , CASE WHEN A.CTRT_NM = C.CTRT_NM                     THEN 'Y' ELSE 'N' END AS CTRT_NM_YN
			  , CASE WHEN A.MNG_ID = C.MNG_ID                       THEN 'Y' ELSE 'N' END AS MNG_ID_YN
			  , CASE WHEN A.ORDRS_AMT = C.ORDRS_AMT                 THEN 'Y' ELSE 'N' END AS ORDRS_AMT_YN
			  , CASE WHEN A.CURR_CD = C.CURR_CD                     THEN 'Y' ELSE 'N' END AS CURR_CD_YN
			  , CASE WHEN A.EXRATE = C.EXRATE                       THEN 'Y' ELSE 'N' END AS EXRATE_YN
			  , CASE WHEN A.PMNT_MTD = C.PMNT_MTD                   THEN 'Y' ELSE 'N' END AS PMNT_MTD_YN
			  , CASE WHEN NVL(A.ORDRGER, '.') = NVL(C.ORDRGER, '.') THEN 'Y' ELSE 'N' END AS ORDRGER_YN
			  , CASE WHEN A.FWD_EXCH_JOIN_DT = C.FWD_EXCH_JOIN_DT   THEN 'Y' ELSE 'N' END AS FWD_DT_YN
			  , CASE WHEN A.FWD_EXCH_CHK_LIST = C.FWD_EXCH_CHK_LIST THEN 'Y' ELSE 'N' END AS CHK_LIST_YN
			  , CASE WHEN NVL(A.CTRT_DOC, '.') = NVL(C.CTRT_DOC, '.') THEN 'Y' ELSE 'N' END AS CTRT_DOC_YN
			  , CASE WHEN NVL(A.ORGN_SALES_CD, '.') = NVL(C.ORGN_SALES_CD, '.') THEN 'Y' ELSE 'N' END AS ORGN_SALES_CD_YN
			  , CASE WHEN A.INPEXP_CD = C.INPEXP_CD                 THEN 'Y' ELSE 'N' END AS INPEXP_CD_YN
			  , CASE WHEN NVL(A.ORDRS_RMK, '.') = NVL(C.ORDRS_RMK, '.') THEN 'Y' ELSE 'N' END AS ORDRS_RMK_YN
		 FROM   TB_CR02M01_HIST AS A
		        --수주
				LEFT OUTER JOIN TB_CR02M01 AS C ON C.FILE_TRGT_KEY = A.FILE_TRGT_KEY
		        --고객사
				LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.ORDRS_CLNT_CD
				--영업담당자
				LEFT OUTER JOIN TB_CM06M01 AS U ON U.ID = A.MNG_ID
				--회사
				LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.CO_CD
				--수주구분
				LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.ORDRS_DIV
				--고객사PJT
				LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = A.CLNT_PJT
				--통화
				LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = A.CURR_CD
				--결재방법
				LEFT OUTER JOIN TB_CM05M01 AS R5 ON R5.CODE_ID = A.PMNT_MTD
				--계약문서
				LEFT OUTER JOIN TB_CM05M01 AS R6 ON R6.CODE_ID = A.CTRT_DOC
				--국내외구분
				LEFT OUTER JOIN TB_CM05M01 AS R7 ON R7.CODE_ID = A.INPEXP_CD
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		 <if test="histNo != null and !histNo.equals('')">
		 AND    A.HIST_NO  = #{histNo}
		 </if>
		)
		, SJM_LIST AS
		(
		           SELECT '1.회사'       AS COL_01, CO_NM        AS COLNM_01, 'Y'          AS CYN_01, '2.수주번호'         AS COL_02, ORDRS_NO    AS COLNM_02, 'Y'          AS CYN_02 FROM SJM
		 UNION ALL SELECT '3.견적서번호'    AS COL_01, EST_NO AS COLNM_01, EST_NO_YN   AS CYN_01, '4.견적차수'          AS COL_02, EST_DEG     AS COLNM_02, EST_DEG_YN   AS CYN_02 FROM SJM
		 UNION ALL SELECT '5.고객사'      AS COL_01, CLNT_NM      AS COLNM_01, CLNT_CD_YN   AS CYN_01, '6.고객사PJT'        AS COL_02, CLNT_PJT_NM AS COLNM_02, CLNT_PJT_YN  AS CYN_02 FROM SJM
		 UNION ALL SELECT '7.수주구분'     AS COL_01, ORDRS_DIV_NM AS COLNM_01, ORDRS_DIV_YN AS CYN_01, '8.수주일자'         AS COL_02, ORDRS_DT    AS COLNM_02, ORDRS_DT_YN  AS CYN_02 FROM SJM
		 UNION ALL SELECT '9.계약명'      AS COL_01, CTRT_NM      AS COLNM_01, CTRT_NM_YN   AS CYN_01, '10.비고'           AS COL_02, ORDRS_RMK   AS COLNM_02, ORDRS_RMK_YN AS CYN_02 FROM SJM
		 UNION ALL SELECT '11.담당자'     AS COL_01, MNG_NM       AS COLNM_01, MNG_ID_YN    AS CYN_01, '12.발주자'          AS COL_02, ORDRGER     AS COLNM_02, ORDRGER_YN   AS CYN_02 FROM SJM
		 UNION ALL SELECT '13.계약문서'    AS COL_01, CTRT_DOC_NM  AS COLNM_01, CTRT_DOC_YN  AS CYN_01, '14.국내외구분'       AS COL_02, INPEXP_NM   AS COLNM_02, INPEXP_CD_YN AS CYN_02 FROM SJM
		 UNION ALL SELECT '15.선물환가입일' AS COL_01, FWD_DT       AS COLNM_01, FWD_DT_YN    AS CYN_01, '16.선물환CheckList' AS COL_02, CHK_LIST_NM AS COLNM_02, CHK_LIST_YN  AS CYN_02 FROM SJM
		 UNION ALL SELECT '17.결재방법'   AS COL_01, PMNT_MTD_NM   AS COLNM_01, PMNT_MTD_YN  AS CYN_01, '18.통화단위'        AS COL_02, CURR_NM     AS COLNM_02, CURR_CD_YN   AS CYN_02 FROM SJM
		 UNION ALL SELECT '19.환율'      AS COL_01, EXRATE       AS COLNM_01, EXRATE_YN    AS CYN_01, '20.수주금액'         AS COL_02, ORDRS_AMT   AS COLNM_02, ORDRS_AMT_YN AS CYN_02 FROM SJM
		)
		SELECT *
		FROM   SJM_LIST
		WHERE  1 = 1
    </select>

	<select id="select_modal_List3_Count" parameterType="Map" resultType="int">
		WITH SJM AS
		(
		 SELECT A.CO_CD
		      , A.ORDRS_NO
		      , A.CLMN_PLAN_SEQ
		      , A.CLMN_PLAN_DIV
		      , R1.CODE_NM      AS CLMN_PLAN_DIV_NM
		      , A.CLMN_DIV_SEQ
		      , A.CLMN_RATE
		      , A.CURR_CD
		      , R2.CODE_NM      AS CURR_NM
		      , A.EXRATE
		      , A.CLMN_AMT
		      , TO_CHAR(A.BILL_PBLS_DT, 'YYYY-MM-DD') AS BILL_PBLS_DT
		      , TO_CHAR(A.CLMN_DT, 'YYYY-MM-DD') AS CLMN_DT
		      , A.PMNT_DT_AFTER_BILL
		      , A.CLMN_PLAN_RMK
		      , A.CLMN_MGMT_STATUS
		 FROM   TB_CR02D01 AS A
		        --계획구분
		        LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.CLMN_PLAN_DIV
		        --통화
		        LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		)
		SELECT COUNT(*)
		FROM   SJM
		WHERE  1 = 1
    </select>

	<select id="select_modal_List3" parameterType="Map" resultType="camelMap">
		<!-- <include refid="select_ordrs_master"></include> -->
		WITH SJM AS
		(
		 SELECT A.CO_CD
		      , A.ORDRS_NO
		      , A.CLMN_PLAN_SEQ
		      , A.CLMN_PLAN_DIV
		      , R1.CODE_NM      AS CLMN_PLAN_DIV_NM
		      , A.CLMN_DIV_SEQ
		      , A.CLMN_RATE
		      , A.CURR_CD
		      , R2.CODE_NM      AS CURR_NM
		      , A.EXRATE
		      , A.CLMN_AMT
		      , TO_CHAR(A.BILL_PBLS_DT, 'YYYY-MM-DD') AS BILL_PBLS_DT
		      , TO_CHAR(A.CLMN_DT, 'YYYY-MM-DD') AS CLMN_DT
		      , A.PMNT_DT_AFTER_BILL
		      , A.CLMN_PLAN_RMK
		      , A.CLMN_MGMT_STATUS
		 FROM   TB_CR02D01 AS A
		        --계획구분
		        LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.CLMN_PLAN_DIV
		        --통화
		        LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		)
		SELECT *
		FROM   SJM
		WHERE  1 = 1
    </select>

	<select id="select_modal_List4_Count" parameterType="Map" resultType="int">
		WITH SJM AS
		(
		 SELECT A.CO_CD
		      , A.ORDRS_NO
		      , A.CLMN_PLAN_SEQ
		      , A.CLMN_PLAN_DIV
		      , R1.CODE_NM      AS CLMN_PLAN_DIV_NM
		      , A.CLMN_DIV_SEQ
		      , A.CLMN_RATE
		      , A.CURR_CD
		      , R2.CODE_NM      AS CURR_NM
		      , A.CLMN_AMT
		      , TO_CHAR(A.BILL_PBLS_DT, 'YYYY-MM-DD') AS BILL_PBLS_DT
		      , TO_CHAR(A.CLMN_DT, 'YYYY-MM-DD') AS CLMN_DT
		      , A.PMNT_DT_AFTER_BILL
		      , A.CLMN_MGMT_STATUS		      
		      , CASE WHEN A.CLMN_PLAN_DIV = C.CLMN_PLAN_DIV               THEN 'Y' ELSE 'N' END AS CLMN_PLAN_DIV_YN
		      , CASE WHEN NVL(A.CLMN_DIV_SEQ, 1) = NVL(C.CLMN_DIV_SEQ, 1) THEN 'Y' ELSE 'N' END AS CLMN_DIV_SEQ_YN
		      , CASE WHEN NVL(A.CLMN_RATE, 0) = NVL(C.CLMN_RATE, 0)       THEN 'Y' ELSE 'N' END AS CLMN_RATE_YN
		      , CASE WHEN NVL(A.CLMN_AMT, 0) = NVL(C.CLMN_AMT, 0)         THEN 'Y' ELSE 'N' END AS CLMN_AMT_YN
		      , CASE WHEN A.BILL_PBLS_DT = C.BILL_PBLS_DT                 THEN 'Y' ELSE 'N' END AS BILL_PBLS_DT_YN
		      , CASE WHEN A.CLMN_DT = C.CLMN_DT                           THEN 'Y' ELSE 'N' END AS CLMN_DT_YN
		      , CASE WHEN A.PMNT_DT_AFTER_BILL = C.PMNT_DT_AFTER_BILL     THEN 'Y' ELSE 'N' END AS PMNT_DT_AFTER_BILL_YN
		      , CASE WHEN A.CLMN_MGMT_STATUS = C.CLMN_MGMT_STATUS         THEN 'Y' ELSE 'N' END AS CLMN_MGMT_STATUS_YN
		 FROM   TB_CR02D01_HIST AS A
		        INNER JOIN TB_CR02D01 AS C  ON C.CO_CD         = A.CO_CD
		                                   AND C.ORDRS_NO      = A.ORDRS_NO
		                                   AND C.CLMN_PLAN_SEQ = A.CLMN_PLAN_SEQ
		        --계획구분
		        LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.CLMN_PLAN_DIV
		        --통화
		        LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		 <if test="histNo != null and !histNo.equals('')">
		 AND    A.HIST_NO  = #{histNo}
		 </if>
		)
		SELECT COUNT(*)
		FROM   SJM
		WHERE  1 = 1
    </select>

	<select id="select_modal_List4" parameterType="Map" resultType="camelMap">
		<!-- <include refid="select_ordrs_master"></include> -->
		WITH SJM AS
		(
		 SELECT A.CO_CD
		      , A.ORDRS_NO
		      , A.CLMN_PLAN_SEQ
		      , A.CLMN_PLAN_DIV
		      , R1.CODE_NM      AS CLMN_PLAN_DIV_NM
		      , A.CLMN_DIV_SEQ
		      , A.CLMN_RATE
		      , A.CURR_CD
		      , R2.CODE_NM      AS CURR_NM
		      , A.CLMN_AMT
		      , TO_CHAR(A.BILL_PBLS_DT, 'YYYY-MM-DD') AS BILL_PBLS_DT
		      , TO_CHAR(A.CLMN_DT, 'YYYY-MM-DD') AS CLMN_DT
		      , A.PMNT_DT_AFTER_BILL
		      , A.CLMN_MGMT_STATUS		      
		      , CASE WHEN A.CLMN_PLAN_DIV = C.CLMN_PLAN_DIV               THEN 'Y' ELSE 'N' END AS CLMN_PLAN_DIV_YN
		      , CASE WHEN NVL(A.CLMN_DIV_SEQ, 1) = NVL(C.CLMN_DIV_SEQ, 1) THEN 'Y' ELSE 'N' END AS CLMN_DIV_SEQ_YN
		      , CASE WHEN NVL(A.CLMN_RATE, 0) = NVL(C.CLMN_RATE, 0)       THEN 'Y' ELSE 'N' END AS CLMN_RATE_YN
		      , CASE WHEN NVL(A.CLMN_AMT, 0) = NVL(C.CLMN_AMT, 0)         THEN 'Y' ELSE 'N' END AS CLMN_AMT_YN
		      , CASE WHEN A.BILL_PBLS_DT = C.BILL_PBLS_DT                 THEN 'Y' ELSE 'N' END AS BILL_PBLS_DT_YN
		      , CASE WHEN A.CLMN_DT = C.CLMN_DT                           THEN 'Y' ELSE 'N' END AS CLMN_DT_YN
		      , CASE WHEN A.PMNT_DT_AFTER_BILL = C.PMNT_DT_AFTER_BILL     THEN 'Y' ELSE 'N' END AS PMNT_DT_AFTER_BILL_YN
		      , CASE WHEN NVL(A.CLMN_MGMT_STATUS, '.') = NVL(C.CLMN_MGMT_STATUS, '.') THEN 'Y' ELSE 'N' END AS CLMN_MGMT_STATUS_YN
		 FROM   TB_CR02D01_HIST AS A
		        INNER JOIN TB_CR02D01 AS C  ON C.CO_CD         = A.CO_CD
		                                   AND C.ORDRS_NO      = A.ORDRS_NO
		                                   AND C.CLMN_PLAN_SEQ = A.CLMN_PLAN_SEQ
		        --계획구분
		        LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.CLMN_PLAN_DIV
		        --통화
		        LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.CURR_CD
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		 <if test="histNo != null and !histNo.equals('')">
		 AND    A.HIST_NO  = #{histNo}
		 </if>
		 ORDER BY A.CO_CD, A.ORDRS_NO, A.CLMN_PLAN_SEQ
		)
		SELECT *
		FROM   SJM
		WHERE  1 = 1
    </select>

	<select id="select_modal_List5_Count" parameterType="Map" resultType="int">
		WITH SJM AS
		(
		 SELECT A.ORDRS_DTL_DIV10
		      , R1.CODE_NM        AS ORDRS_DTL_DIV10_NM
		      , A.PRDT_CD
		      , P.PRDT_NM         AS PRDT_NM
		      , A.ITEM_DIV
		      , R2.CODE_NM        AS ITEM_DIV_NM
		      , A.ORDRS_DTL_DIV20
		      , R3.CODE_NM        AS ORDRS_DTL_DIV20_NM
		      , A.ORDRS_DTL_DIV30
		      , R4.CODE_NM        AS ORDRS_DTL_DIV30_NM
		      , A.MCTYPE
		      , R5.CODE_NM        AS MCTYPE_NM
		      , A.EQP_NM
		      , TO_CHAR(A.DUDT_INTEND_DT, 'YYYY-MM-DD') AS DUDT_INTEND_DT
		      , A.ORDRS_PRC_MACH
		      , A.ORDRS_PRC_ELCTY
		      , A.ORDRS_PRC
		      , A.ORDRS_QTY
		      , A.EST_EPCT_MAT_PRC
		      , A.TRGT_PCHS_PCOST_MACH
		      , A.TRGT_PCHS_PCOST_ELCTY
		      , A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN
		      , A.LABOR_COST_MFG_COST
		      , A.DTL_RMK
		      , A.ACT_RGL_MACH
		      , A.ACT_OBS_MACH
		      , A.ACT_RGL_ELCTY
		      , A.ACT_OBS_ELCTY
		      , A.ACT_EXP_COST
		      , A.OUT_QTY
		      , A.DTL_RMK2
		 FROM   TB_CR02D02 AS A
		        --제품구분
		        LEFT OUTER JOIN TB_BM01M01 AS P  ON A.PRDT_CD = P.PRDT_CD
		        --입력구분
		        LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DTL_DIV10
		        --아이템구분
		        LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.ITEM_DIV
		        --작업구분
		        LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = A.ORDRS_DTL_DIV20
		        --자체구분
		        LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = A.ORDRS_DTL_DIV30
		        --기계구분
		        LEFT OUTER JOIN TB_CM05M01 AS R5 ON R5.CODE_ID = A.MCTYPE
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		)
		SELECT COUNT(*)
		FROM   SJM
		WHERE  1 = 1
    </select>

	<select id="select_modal_List5" parameterType="Map" resultType="camelMap">
		<!-- <include refid="select_ordrs_master"></include> -->
		WITH SJM AS
		(
		 SELECT A.ORDRS_DTL_DIV10
		      , R1.CODE_NM        AS ORDRS_DTL_DIV10_NM
		      , A.PRDT_CD
		      , P.PRDT_NM         AS PRDT_NM
		      , A.ITEM_DIV
		      , R2.CODE_NM        AS ITEM_DIV_NM
		      , A.ORDRS_DTL_DIV20
		      , R3.CODE_NM        AS ORDRS_DTL_DIV20_NM
		      , A.ORDRS_DTL_DIV30
		      , R4.CODE_NM        AS ORDRS_DTL_DIV30_NM
		      , A.MCTYPE
		      , R5.CODE_NM        AS MCTYPE_NM
		      , A.EQP_NM
		      , TO_CHAR(A.DUDT_INTEND_DT, 'YYYY-MM-DD') AS DUDT_INTEND_DT
		      , A.ORDRS_PRC_MACH
		      , A.ORDRS_PRC_ELCTY
		      , A.ORDRS_PRC
		      , A.ORDRS_QTY
		      , A.EST_EPCT_MAT_PRC
		      , A.TRGT_PCHS_PCOST_MACH
		      , A.TRGT_PCHS_PCOST_ELCTY
		      , A.TRGT_PCHS_PCOST_MACH + A.TRGT_PCHS_PCOST_ELCTY AS TRGT_PCHS_PCOST_TOT
		      , A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN
		      , A.TRGT_PCHS_PCOST_MACH - A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS TRGT_PCHS_PCOST_MACH2
		      , A.LABOR_COST_MFG_COST
		      , A.DTL_RMK
		      , A.ACT_RGL_MACH
		      , A.ACT_OBS_MACH
		      , A.ACT_RGL_ELCTY
		      , A.ACT_OBS_ELCTY
		      , A.ACT_EXP_COST
		      , A.OUT_QTY
		      , A.DTL_RMK2
		 FROM   TB_CR02D02 AS A
		        --제품구분
		        LEFT OUTER JOIN TB_BM01M01 AS P  ON A.PRDT_CD = P.PRDT_CD
		        --입력구분
		        LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DTL_DIV10
		        --아이템구분
		        LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.ITEM_DIV
		        --작업구분
		        LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = A.ORDRS_DTL_DIV20
		        --자체구분
		        LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = A.ORDRS_DTL_DIV30
		        --기계구분
		        LEFT OUTER JOIN TB_CM05M01 AS R5 ON R5.CODE_ID = A.MCTYPE
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		)
		SELECT *
		FROM   SJM
		WHERE  1 = 1
    </select>

	<select id="select_modal_List6_Count" parameterType="Map" resultType="int">
		WITH SJM AS
		(
		 SELECT A.ORDRS_DTL_DIV10
		      , R1.CODE_NM        AS ORDRS_DTL_DIV10_NM
		      , A.PRDT_CD
		      , P.PRDT_NM         AS PRDT_NM
		      , A.ITEM_DIV
		      , R2.CODE_NM        AS ITEM_DIV_NM
		      , A.ORDRS_DTL_DIV20
		      , R3.CODE_NM        AS ORDRS_DTL_DIV20_NM
		      , A.ORDRS_DTL_DIV30
		      , R4.CODE_NM        AS ORDRS_DTL_DIV30_NM
		      , A.MCTYPE
		      , R5.CODE_NM        AS MCTYPE_NM
		      , A.EQP_NM
		      , TO_CHAR(A.DUDT_INTEND_DT, 'YYYY-MM-DD') AS DUDT_INTEND_DT
		      , A.ORDRS_PRC_MACH
		      , A.ORDRS_PRC_ELCTY
		      , A.ORDRS_PRC
		      , A.ORDRS_QTY
		      , A.EST_EPCT_MAT_PRC
		      , A.TRGT_PCHS_PCOST_MACH
		      , A.TRGT_PCHS_PCOST_ELCTY
		      , A.TRGT_PCHS_PCOST_MACH + A.TRGT_PCHS_PCOST_ELCTY AS TRGT_PCHS_PCOST_TOT
		      , A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN
		      , A.TRGT_PCHS_PCOST_MACH - A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS TRGT_PCHS_PCOST_MACH2
		      , A.LABOR_COST_MFG_COST
		      , A.DTL_RMK
		      , A.ACT_RGL_MACH
		      , A.ACT_OBS_MACH
		      , A.ACT_RGL_ELCTY
		      , A.ACT_OBS_ELCTY
		      , A.ACT_EXP_COST
		      , A.OUT_QTY
		      , A.DTL_RMK2
		      , CASE WHEN A.ORDRS_DTL_DIV10 = C.ORDRS_DTL_DIV10             THEN 'Y' ELSE 'N' END AS ORDRS_DTL_DIV10_YN
		      , CASE WHEN A.PRDT_CD = C.PRDT_CD                             THEN 'Y' ELSE 'N' END AS PRDT_CD_YN
		      , CASE WHEN A.ITEM_DIV = C.ITEM_DIV                           THEN 'Y' ELSE 'N' END AS ITEM_DIV_YN
		      , CASE WHEN A.ORDRS_DTL_DIV20 = C.ORDRS_DTL_DIV20             THEN 'Y' ELSE 'N' END AS ORDRS_DTL_DIV20_YN
		      , CASE WHEN A.ORDRS_DTL_DIV30 = C.ORDRS_DTL_DIV30             THEN 'Y' ELSE 'N' END AS ORDRS_DTL_DIV30_YN
		      , CASE WHEN A.MCTYPE = C.MCTYPE                               THEN 'Y' ELSE 'N' END AS MCTYPE_YN
		      , CASE WHEN A.EQP_NM = C.EQP_NM                               THEN 'Y' ELSE 'N' END AS EQP_NM_YN
		      , CASE WHEN A.DUDT_INTEND_DT = C.DUDT_INTEND_DT               THEN 'Y' ELSE 'N' END AS DUDT_INTEND_DT_YN
		      , CASE WHEN A.ORDRS_PRC_MACH = C.ORDRS_PRC_MACH               THEN 'Y' ELSE 'N' END AS ORDRS_PRC_MACH_YN
		      , CASE WHEN A.ORDRS_PRC_ELCTY = C.ORDRS_PRC_ELCTY             THEN 'Y' ELSE 'N' END AS ORDRS_PRC_ELCTY_YN
		      , CASE WHEN A.ORDRS_PRC = C.ORDRS_PRC                         THEN 'Y' ELSE 'N' END AS ORDRS_PRC_YN
		      , CASE WHEN A.ORDRS_QTY = C.ORDRS_QTY                         THEN 'Y' ELSE 'N' END AS ORDRS_QTY_YN
		      , CASE WHEN A.EST_EPCT_MAT_PRC = C.EST_EPCT_MAT_PRC           THEN 'Y' ELSE 'N' END AS EST_EPCT_MAT_PRC_YN
		      , CASE WHEN A.TRGT_PCHS_PCOST_MACH = C.TRGT_PCHS_PCOST_MACH   THEN 'Y' ELSE 'N' END AS TRGT_PCHS_PCOST_MACH_YN
		      , CASE WHEN A.TRGT_PCHS_PCOST_ELCTY = C.TRGT_PCHS_PCOST_ELCTY THEN 'Y' ELSE 'N' END AS TRGT_PCHS_PCOST_ELCTY_YN
		      , CASE WHEN (A.TRGT_PCHS_PCOST_MACH + A.TRGT_PCHS_PCOST_ELCTY) = (C.TRGT_PCHS_PCOST_MACH + C.TRGT_PCHS_PCOST_ELCTY) THEN 'Y'
		             ELSE 'N' END AS TRGT_PCHS_PCOST_TOT_YN
		      , CASE WHEN A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN = C.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN THEN 'Y' ELSE 'N' END AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN_YN
		      , CASE WHEN (A.TRGT_PCHS_PCOST_MACH - A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN) = (C.TRGT_PCHS_PCOST_MACH - C.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN) THEN 'Y'
		             ELSE 'N' END AS TRGT_PCHS_PCOST_MACH2_YN
		      , CASE WHEN A.LABOR_COST_MFG_COST = C.LABOR_COST_MFG_COST     THEN 'Y' ELSE 'N' END AS LABOR_COST_MFG_COST_YN
		      , CASE WHEN A.DTL_RMK = C.DTL_RMK                             THEN 'Y' ELSE 'N' END AS DTL_RMK_YN
		 FROM   TB_CR02D02_HIST AS A
		        INNER JOIN TB_CR02D02 AS C  ON C.CO_CD     = A.CO_CD
		                                   AND C.ORDRS_NO  = A.ORDRS_NO
		                                   AND C.ORDRS_SEQ = A.ORDRS_SEQ
		        --제품구분
		        LEFT OUTER JOIN TB_BM01M01 AS P  ON A.PRDT_CD = P.PRDT_CD
		        --입력구분
		        LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DTL_DIV10
		        --아이템구분
		        LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.ITEM_DIV
		        --작업구분
		        LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = A.ORDRS_DTL_DIV20
		        --자체구분
		        LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = A.ORDRS_DTL_DIV30
		        --기계구분
		        LEFT OUTER JOIN TB_CM05M01 AS R5 ON R5.CODE_ID = A.MCTYPE
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		 <if test="histNo != null and !histNo.equals('')">
		 AND    A.HIST_NO  = #{histNo}
		 </if>
		)
		SELECT COUNT(*)
		FROM   SJM
		WHERE  1 = 1
    </select>

	<select id="select_modal_List6" parameterType="Map" resultType="camelMap">
		<!-- <include refid="select_ordrs_master"></include> -->
		WITH SJM AS
		(
		 SELECT A.ORDRS_DTL_DIV10
		      , R1.CODE_NM        AS ORDRS_DTL_DIV10_NM
		      , A.PRDT_CD
		      , P.PRDT_NM         AS PRDT_NM
		      , A.ITEM_DIV
		      , R2.CODE_NM        AS ITEM_DIV_NM
		      , A.ORDRS_DTL_DIV20
		      , R3.CODE_NM        AS ORDRS_DTL_DIV20_NM
		      , A.ORDRS_DTL_DIV30
		      , R4.CODE_NM        AS ORDRS_DTL_DIV30_NM
		      , A.MCTYPE
		      , R5.CODE_NM        AS MCTYPE_NM
		      , A.EQP_NM
		      , TO_CHAR(A.DUDT_INTEND_DT, 'YYYY-MM-DD') AS DUDT_INTEND_DT
		      , A.ORDRS_PRC_MACH
		      , A.ORDRS_PRC_ELCTY
		      , A.ORDRS_PRC
		      , A.ORDRS_QTY
		      , A.EST_EPCT_MAT_PRC
		      , A.TRGT_PCHS_PCOST_MACH
		      , A.TRGT_PCHS_PCOST_ELCTY
		      , A.TRGT_PCHS_PCOST_MACH + A.TRGT_PCHS_PCOST_ELCTY AS TRGT_PCHS_PCOST_TOT
		      , A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN
		      , A.TRGT_PCHS_PCOST_MACH - A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN AS TRGT_PCHS_PCOST_MACH2
		      , A.LABOR_COST_MFG_COST
		      , A.DTL_RMK
		      , A.ACT_RGL_MACH
		      , A.ACT_OBS_MACH
		      , A.ACT_RGL_ELCTY
		      , A.ACT_OBS_ELCTY
		      , A.ACT_EXP_COST
		      , A.OUT_QTY
		      , A.DTL_RMK2
		      , CASE WHEN A.ORDRS_DTL_DIV10 = C.ORDRS_DTL_DIV10                     THEN 'Y' ELSE 'N' END AS ORDRS_DTL_DIV10_YN
		      , CASE WHEN NVL(A.PRDT_CD, '.') = NVL(C.PRDT_CD, '.')                 THEN 'Y' ELSE 'N' END AS PRDT_CD_YN
		      , CASE WHEN NVL(A.ITEM_DIV, '.') = NVL(C.ITEM_DIV, '.')               THEN 'Y' ELSE 'N' END AS ITEM_DIV_YN
		      , CASE WHEN NVL(A.ORDRS_DTL_DIV20, '.') = NVL(C.ORDRS_DTL_DIV20, '.') THEN 'Y' ELSE 'N' END AS ORDRS_DTL_DIV20_YN
		      , CASE WHEN NVL(A.ORDRS_DTL_DIV30, '.') = NVL(C.ORDRS_DTL_DIV30, '.') THEN 'Y' ELSE 'N' END AS ORDRS_DTL_DIV30_YN
		      , CASE WHEN NVL(A.MCTYPE, '.') = NVL(C.MCTYPE, '.')                   THEN 'Y' ELSE 'N' END AS MCTYPE_YN
		      , CASE WHEN NVL(A.EQP_NM, '.') = NVL(C.EQP_NM, '.')                   THEN 'Y' ELSE 'N' END AS EQP_NM_YN
		      , CASE WHEN NVL(A.DUDT_INTEND_DT, '') = NVL(C.DUDT_INTEND_DT, '') THEN 'Y' ELSE 'N' END AS DUDT_INTEND_DT_YN
		      , CASE WHEN A.ORDRS_PRC_MACH = C.ORDRS_PRC_MACH               THEN 'Y' ELSE 'N' END AS ORDRS_PRC_MACH_YN
		      , CASE WHEN A.ORDRS_PRC_ELCTY = C.ORDRS_PRC_ELCTY             THEN 'Y' ELSE 'N' END AS ORDRS_PRC_ELCTY_YN
		      , CASE WHEN A.ORDRS_PRC = C.ORDRS_PRC                         THEN 'Y' ELSE 'N' END AS ORDRS_PRC_YN
		      , CASE WHEN A.ORDRS_QTY = C.ORDRS_QTY                         THEN 'Y' ELSE 'N' END AS ORDRS_QTY_YN
		      , CASE WHEN A.EST_EPCT_MAT_PRC = C.EST_EPCT_MAT_PRC           THEN 'Y' ELSE 'N' END AS EST_EPCT_MAT_PRC_YN
		      , CASE WHEN A.TRGT_PCHS_PCOST_MACH = C.TRGT_PCHS_PCOST_MACH   THEN 'Y' ELSE 'N' END AS TRGT_PCHS_PCOST_MACH_YN
		      , CASE WHEN A.TRGT_PCHS_PCOST_ELCTY = C.TRGT_PCHS_PCOST_ELCTY THEN 'Y' ELSE 'N' END AS TRGT_PCHS_PCOST_ELCTY_YN
		      , CASE WHEN (A.TRGT_PCHS_PCOST_MACH + A.TRGT_PCHS_PCOST_ELCTY) = (C.TRGT_PCHS_PCOST_MACH + C.TRGT_PCHS_PCOST_ELCTY) THEN 'Y'
		             ELSE 'N' END AS TRGT_PCHS_PCOST_TOT_YN
		      , CASE WHEN A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN = C.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN THEN 'Y' ELSE 'N' END AS TRGT_PCHS_PCOST_IN_HOUSE_PRCSN_YN
		      , CASE WHEN (A.TRGT_PCHS_PCOST_MACH - A.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN) = (C.TRGT_PCHS_PCOST_MACH - C.TRGT_PCHS_PCOST_IN_HOUSE_PRCSN) THEN 'Y'
		             ELSE 'N' END AS TRGT_PCHS_PCOST_MACH2_YN
		      , CASE WHEN A.LABOR_COST_MFG_COST = C.LABOR_COST_MFG_COST     THEN 'Y' ELSE 'N' END AS LABOR_COST_MFG_COST_YN
		      , CASE WHEN NVL(A.DTL_RMK, '.') = NVL(C.DTL_RMK, '.')         THEN 'Y' ELSE 'N' END AS DTL_RMK_YN
		 FROM   TB_CR02D02_HIST AS A
		        INNER JOIN TB_CR02D02 AS C  ON C.CO_CD     = A.CO_CD
		                                   AND C.ORDRS_NO  = A.ORDRS_NO
		                                   AND C.ORDRS_SEQ = A.ORDRS_SEQ
		        --제품구분
		        LEFT OUTER JOIN TB_BM01M01 AS P  ON A.PRDT_CD = P.PRDT_CD
		        --입력구분
		        LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = A.ORDRS_DTL_DIV10
		        --아이템구분
		        LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = A.ITEM_DIV
		        --작업구분
		        LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = A.ORDRS_DTL_DIV20
		        --자체구분
		        LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = A.ORDRS_DTL_DIV30
		        --기계구분
		        LEFT OUTER JOIN TB_CM05M01 AS R5 ON R5.CODE_ID = A.MCTYPE
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD    = #{coCd}
		 </if>
		 <if test="ordrsNo != null and !ordrsNo.equals('')">
		 AND    A.ORDRS_NO = #{ordrsNo}
		 </if>
		 <if test="histNo != null and !histNo.equals('')">
		 AND    A.HIST_NO  = #{histNo}
		 </if>
		 ORDER BY A.CO_CD, A.ORDRS_NO, A.ORDRS_SEQ
		)
		SELECT *
		FROM   SJM
		WHERE  1 = 1
    </select>

	<!-- 수주버전 -->		
	<select id="select_ordrsHistNo_List" parameterType="Map" resultType="camelMap">
		SELECT HIST_NO
		     , ORDRS_NO || ' Ver.' || HIST_NO AS HIST_NM
		FROM   TB_CR02M01_HIST
		WHERE  1 = 1
		AND    CO_CD    = #{coCd}
		AND    ORDRS_NO = #{ordrsNo}
	</select>
</mapper>