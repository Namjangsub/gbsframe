<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.wb.wb22.mapper.WB22Mapper">
    <select id="selectWbsLeftSalesCodeList" parameterType="Map" resultType="camelMap"> 
         SELECT * FROM (
                  SELECT ROWNUM AS RN, S.* FROM (
                        SELECT DISTINCT  
                               '' PID,
                               #{coCd} ID,
                               #{coCd} CO_CD, -- 회사코드
                               FN_CM05M01_CD_TO_NM(#{coCd}) AS CO_CD_NM,
                               '전체' ORDRS_NO,
                               '전사 현황' AS SALES_CD,
                               '' ORGN_SALES_CD,
                               '' ORDRS_CLNT_CD, -- 고객사
                               '전체' AS ORDRS_CLNT_NM,
                               '' CLNT_PJT,
                               '' ORDRS_DTL_DIV20, -- 신작구분
                               '' AS ORDRS_DTL_DIV20_NM,
                               '', -- 설비명
                               0 PLAN_CNT,
                               'E' WBS_PLAN_OS_YN,
                               'E' PLAN_LOCK_YN,
                               'E' PLAN_CLOSE_YN,
                               0 RSULT_CNT,
                               'E' RSULT_LOCK_YN,
                               'E' RSULT_CLOSE_YN,
                               '' DATA_GBN
                          FROM DUAL
        
                      UNION ALL  --회사명을 Top LEVEL 생성
                        SELECT DISTINCT  
                               X.CO_CD PID,
                               TO_CHAR(Y.ORDRS_CLNT_CD) ID,
                               X.CO_CD, -- 회사코드
                               FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                               A.CLNT_NM,
                               A.CLNT_NM  AS SALES_CD,
                               '' ORGN_SALES_CD,
                               Y.ORDRS_CLNT_CD , -- 고객사
                               A.CLNT_NM  AS ORDRS_CLNT_NM,
                               '' CLNT_PJT,
                               '' ORDRS_DTL_DIV20, -- 신작구분
                               '' AS ORDRS_DTL_DIV20_NM,
                               '', -- 설비명
                               0 PLAN_CNT,
                               'E' WBS_PLAN_OS_YN,
                               'E' PLAN_LOCK_YN,
                               'E' PLAN_CLOSE_YN,
                               0 RSULT_CNT,
                               'E' RSULT_LOCK_YN,
                               'E' RSULT_CLOSE_YN,
                               ''
                          FROM TB_CR02D02 X
                                INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                        AND X.ORDRS_NO = Y.ORDRS_NO
                                LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                        WHERE X.CO_CD = #{coCd}
                       <if test="salesCd != null and !salesCd.equals('')">
                          AND X.SALES_CD LIKE '%${salesCd}%'             
                       </if>
                         
                       UNION ALL --오더번호로 1 LEVEL 생성
                        SELECT DISTINCT  
                               TO_CHAR(Y.ORDRS_CLNT_CD) PID,
                               X.ORDRS_NO ID,
                               X.CO_CD, -- 회사코드
                               FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                               X.ORDRS_NO AS ORDRS_NO,
                               X.ORDRS_NO AS SALES_CD,
                               '',
                               Y.ORDRS_CLNT_CD, -- 고객사
                               A.CLNT_NM  AS ORDRS_CLNT_NM,
                               '',
                               '',
                               '',
                               '', -- 설비명
                               0 PLAN_CNT,
                               'E' WBS_PLAN_OS_YN,
                               'E' PLAN_LOCK_YN,
                               'E' PLAN_CLOSE_YN,
                               0 RSULT_CNT,
                               'E' RSULT_LOCK_YN,
                               'E' RSULT_CLOSE_YN,
                               ''
                          FROM TB_CR02D02 X
                                INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                        AND X.ORDRS_NO = Y.ORDRS_NO
                                LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                         WHERE X.CO_CD = #{coCd}
                       <if test="salesCd != null and !salesCd.equals('')">
                          AND X.SALES_CD = '%${salesCd}%'              
                       </if>
        
                       UNION ALL
                        SELECT   --Sales 코드 추출
                               X.ORDRS_NO PID,
                               X.SALES_CD ID,
                               X.CO_CD, -- 회사코드
                               FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                               X.ORDRS_NO, -- 수주번호
                               X.SALES_CD, -- SALES CODE
                               max(Y.ORGN_SALES_CD), -- 원천 SALES CODE
                               max(Y.ORDRS_CLNT_CD), -- 고객사
                               max(A.CLNT_NM)  AS ORDRS_CLNT_NM,
                               max(Y.CLNT_PJT), -- 고객사 PJT
                               max(X.ORDRS_DTL_DIV20), -- 신작구분
                               FN_CM05M01_CD_TO_NM(max(X.ORDRS_DTL_DIV20)) AS ORDRS_DTL_DIV20_NM,
                               max(X.EQP_NM), -- 설비명
                               COUNT(W.FILE_TRGT_KEY) PLAN_CNT,
                               NVL(max(W.WBS_PLAN_OS_YN),'N') WBS_PLAN_OS_YN,
                               NVL(max(W.LOCK_YN),'N') PLAN_LOCK_YN,
                               NVL(max(W.CLOSE_YN),'N') PLAN_CLOSE_YN,
                               COUNT(Z.FILE_TRGT_KEY) RSULT_CNT,
                               NVL(max(Z.LOCK_YN),'N') RSULT_LOCK_YN,
                               NVL(max(Z.CLOSE_YN),'N') RSULT_CLOSE_YN,
                               'D' DATA_GBN  --원시데이타
                          FROM TB_CR02D02 X
                                INNER JOIN TB_CR02M01 Y  ON X.CO_CD    = Y.CO_CD
                                                        AND X.ORDRS_NO = Y.ORDRS_NO
                                                        AND X.CO_CD = #{coCd}
                                                       <if test="salesCd != null and !salesCd.equals('')">
                                                        AND X.SALES_CD LIKE '%${salesCd}%'              
                                                       </if>
                                CROSS JOIN (
                                                        SELECT 
                                                                 CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
                                                                 CODE_ID,
                                                                 CODE_RPRC,
                                                                 CODE_NM,
                                                                 CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
                                                                 CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
                                                                 CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
                                                                 LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
                                                                 REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
                                                                 CONNECT_BY_ISLEAF AS IS_LEAF,
                                                                 CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
                                                         FROM TB_CM05M01
                                                         START WITH CODE_ID = 'WBSDIV'
                                                         CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
                                        ) CD  
                                LEFT OUTER JOIN TB_WB01M01 W  ON X.CO_CD    = W.CO_CD
                                                             AND X.SALES_CD = w.SALES_CD  
                                                             AND CD.CODE_ID = W.WBS_PLAN_CODE_ID
                                LEFT OUTER JOIN TB_WB02M01 Z  ON X.CO_CD    = Z.CO_CD
                                                             AND X.SALES_CD = Z.SALES_CD  
                                                             AND CD.CODE_ID = Z.WBS_PLAN_CODE_ID
                                LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD                       
                        GROUP BY X.ORDRS_NO, X.SALES_CD, X.CO_CD,Y.ORGN_SALES_CD,Y.ORDRS_CLNT_CD, Y.CLNT_PJT 
                                          
                    )S
                    WHERE CO_CD = #{coCd}
                    AND SALES_CD LIKE '%${salesCd}%' ) X  
                

           </select>    
           
           <select id="selectSjInfo" parameterType="Map"  resultType="camelMap">
            SELECT  X.CO_CD,
                    (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.CO_CD) AS CO_CD_NM,
                    X.SJ_NO,
                    X.SJ_NM,
                    X.VER_NO,
                    X.SALES_CD,
                    X.MKER_DIV,
                    (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.MKER_DIV) AS MKER_DIV_NM,
                    X.MKER_CD,
                    (SELECT T.CLNT_NM FROM TB_BM02M01 T WHERE T.CLNT_CD = X.MKER_CD) AS MKER_NM,
                    X.SMRIZE_ID,
                    (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.SMRIZE_ID) AS SMRIZE_NM,
                    TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD') AS BEGIN_DT,
                    TO_CHAR(X.DE_DT, 'YYYY-MM-DD') AS DE_DT,
                    TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT,
                    X.REQRE_DAYCNT,
                    X.DSGN_DIF_CODE_ID,
                    (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.DSGN_DIF_CODE_ID) AS DSGN_DIF_CODE_NM,
                    X.DSGN_PLAN_HOUR,
                    X.PRDCTN_DIF_CODE_ID,
                    (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.PRDCTN_DIF_CODE_ID) AS PRDCTN_DIF_CODE_NM,
                    X.PRDCTN_PLAN_HOUR,
                    X.SJ_RMK,
                    X.CLOSE_YN,
                    X.CREAT_ID,
                    (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.CREAT_ID) AS CREAT_NM,
                    X.CREAT_PGM,
                    TO_CHAR(CREAT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS CREAT_DTTM,
                    X.UDT_ID,
                    (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.UDT_ID) AS UDT_NM,
                    X.UDT_PGM,
                    TO_CHAR(UDT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS UDT_DTTM,
                    CR.CLNT_CD,
                    CR.CLNT_NM,
                    CR.PRDT_CD,
                    CR.PRDT_NM,
                    CR.CLNT_PJT,
                    (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.CLNT_PJT) AS CLNT_PJT_NM
                    FROM TB_WB21M01 X
                    LEFT OUTER JOIN (
                        SELECT  
                           CR.CO_CD, 
                           CR.ORDRS_NO,
                           CR.SALES_CD, 
                           Y.ORDRS_CLNT_CD AS CLNT_CD, 
                           (SELECT P.CLNT_NM FROM TB_BM02M01 P WHERE P.CLNT_CD = Y.ORDRS_CLNT_CD) AS CLNT_NM,
                           Y.CLNT_PJT, 
                           CR.ORDRS_DTL_DIV20, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
                           CR.PRDT_CD, 
                           (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = CR.PRDT_CD) AS PRDT_NM,
                           CR.ITEM_DIV, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ITEM_DIV) AS ITEM_DIV_NM,
                           CR.EQP_NM
                        FROM TB_CR02D02 CR INNER JOIN TB_CR02M01 Y  ON CR.CO_CD = Y.CO_CD
                                                                 AND CR.ORDRS_NO = Y.ORDRS_NO) CR
                ON CR.CO_CD = X.CO_CD
                AND CR.SALES_CD = X.SALES_CD          
                WHERE X.CO_CD = #{coCd} 
                AND X.SALES_CD = #{salesCd}
                AND X.VER_NO = (SELECT MAX(to_NUMBER(VER_NO)) FROM TB_WB21M01 WHERE CO_CD = #{coCd} AND SALES_CD = #{salesCd})
    </select>
    
    <select id="selectMaxWbsPlanNo" parameterType="Map"  resultType="int">
              SELECT  #{year} || trim(to_char(nvl(SUBSTR(MAX(WBS_PLAN_NO), 5, 4),0) + 1, '0000')) AS WBS_PLAN_NO FROM TB_WB22M01 
              WHERE CO_CD = #{coCd}
    </select>
    
    <select id="selectMaxWbsCode" parameterType="Map"  resultType="int">
             SELECT to_char(NVL(MAX(SUBSTR(WBS_PLAN_CODE_ID, 10, 2)),0) + 1,'00') FROM TB_WB22M01 
             WHERE LENGTH(WBS_PLAN_CODE_ID) > 9
             AND CO_CD = #{coCd}
             AND SALES_CD = #{salesCd}
             AND WBS_PLAN_CODE_KIND = #{wbsPlanCodeKind}
    </select>
    
    <select id="selectWbsSeqNext" parameterType="Map" resultType="int">
        SELECT TB_WB22M01_SQ01.NEXTVAL FROM DUAL
    </select>
    
    <select id="selectWBS1Level" parameterType="Map"  resultType="camelMap">
               SELECT SORT_NO AS RN,
                      X.CODE_ID AS WBS_PLAN_CODE_ID, 
                      X.CODE_NM AS WBS_PLAN_CODE_NM, 
                      X.SORT_NO, 
                      Y.FILE_TRGT_KEY,
                      #{coCd} AS CO_CD,
                      Y.WBS_PLAN_NO,
                      Y.VER_NO,
                      #{salesCd} AS SALES_CD,                                
                      CASE WHEN FILE_TRGT_KEY IS NULL THEN NVL(X.CODE_RPRC, #{userId})
                           ELSE NVL(Y.WBS_PLAN_MNG_ID, '') END AS WBS_PLAN_MNG_ID,
                      CASE WHEN FILE_TRGT_KEY IS NULL  THEN (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = NVL(X.CODE_RPRC, #{userId}))
                           ELSE NVL((SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = Y.WBS_PLAN_MNG_ID), '') END AS WBS_PLAN_MNG_NM,
                       CASE WHEN FILE_TRGT_KEY IS NULL THEN #{beginDt}
                           ELSE NVL(Y.WBS_PLANS_DT, '')  END AS WBS_PLANS_DT,
                       CASE WHEN FILE_TRGT_KEY IS NULL THEN #{acptncDt}
                           ELSE NVL(Y.WBS_PLANE_DT, '')  END AS WBS_PLANE_DT,
                       CASE WHEN FILE_TRGT_KEY IS NULL THEN #{reqreDaycnt}
                           ELSE Y.DAYCNT  END AS DAYCNT,
                      NVL(TO_CHAR(Z.RSLTSS_DT,'YYYY-MM-DD'),'') AS RSLTSS_DT,     --TASK실적시작일
                      NVL(TO_CHAR(Z.RSLTSE_DT,'YYYY-MM-DD'),'') AS RSLTSE_DT,     --TASK실적종료일
                      NVL(RSLT_DAYCNT,'') AS RSLT_DAYCNT, --  TASK실적소요일
                      NVL(Y.WBS_PLAN_STS_CODE_ID, 'WBSPLANSTS10') AS WBS_PLAN_STS_CODE_ID,
                      (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = NVL(Y.WBS_PLAN_STS_CODE_ID, 'WBSPLANSTS10')) AS WBS_PLAN_STS_CODE_ID_NM,
                      Y.LOCK_YN,
                      Y.CLOSE_YN,
                      Y.CREAT_ID,
                      Y.CREAT_PGM,
                      Y.CREAT_DTTM,
                      Y.UDT_ID,
                      Y.UDT_PGM,
                      Y.UDT_DTTM,
                      HZ.LAST_PLAN_MNG 
                      FROM (
		                          SELECT CODE_ID, 
		                                 CODE_NM,
		                                 CODE_RPRC,
		                                 SORT_NO 
		                                 FROM TB_CM05M01 
		                          WHERE CODE_KIND = 'WBSCODE'  
		                          AND USE_YN = 'Y'
		                          ORDER BY SORT_NO ASC ) X
                     LEFT OUTER JOIN 
		                         (SELECT 
		                                FILE_TRGT_KEY,
		                                WBS_PLAN_CODE_ID,
		                                WBS_PLAN_NO,
		                                VER_NO,
		                                WBS_PLAN_MNG_ID,
		                                TO_CHAR(WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT,
		                                TO_CHAR(WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT,
		                                DAYCNT,
		                                WBS_PLAN_STS_CODE_ID,
		                                LOCK_YN,
		                                CLOSE_YN,
		                                CREAT_ID,
		                                CREAT_PGM,
		                                CREAT_DTTM,
		                                UDT_ID,
		                                UDT_PGM,
		                                UDT_DTTM
		                                FROM TB_WB22M01 
		                          WHERE CO_CD = #{coCd}
		                          AND SALES_CD = #{salesCd}) Y  ON X.CODE_ID = Y.WBS_PLAN_CODE_ID
                    LEFT OUTER JOIN (                  
		                        SELECT WR.WBS_PLAN_CODE_KIND  --WBS계획 LVL1
		                             , MIN(WR.WBS_RSLTSS_DT)   AS RSLTSS_DT     --TASK실적시작일
		                             , MAX(WR.WBS_RSLTSE_DT)   AS RSLTSE_DT     --TASK실적종료일 
		                             , SUM(WR.DAYCNT)          AS RSLT_DAYCNT   --TASK실적소요일
		                          FROM TB_WB23M01  WR--WBS실적 정보
		                         WHERE WR.CO_CD = #{coCd}
		                           AND WR.SALES_CD = #{salesCd}
		                         GROUP BY WR.WBS_PLAN_CODE_KIND
		                       ) Z ON X.CODE_ID = Z.WBS_PLAN_CODE_KIND
                    LEFT OUTER JOIN ( --이력정보에서 최종 버전의 담당자와 일정을 추출해서 담당자,일정 변경여부 판단에 사용한다.
							 SELECT WBS_PLAN_CODE_ID, 
							        (WBS_PLAN_MNG_ID || TO_CHAR(WBS_PLANS_DT, 'YYYY-MM-DD') || TO_CHAR(WBS_PLANE_DT, 'YYYY-MM-DD')) AS LAST_PLAN_MNG
							 FROM TB_WB22M01_HIST
							 WHERE CO_CD = #{coCd}
							   AND SALES_CD = #{salesCd}
							   AND VER_NO = (SELECT max(to_number(VER_NO)) 
							                   FROM TB_WB22M01_HIST
										  	  WHERE CO_CD = #{coCd}
											    AND SALES_CD = #{salesCd})                    
                    		) HZ    ON X.CODE_ID = HZ.WBS_PLAN_CODE_ID
                    ORDER BY SORT_NO
    </select>
    
    <select id="selectWBS2Level" parameterType="Map"  resultType="camelMap">
           /* selectWBS2Level */
           SELECT ROWNUM AS RN
                 , X.FILE_TRGT_KEY
                 , X.CO_CD
                 , X.SALES_CD
                 , X.WBS_PLAN_NO
                 , X.WBS_PLAN_CODE_KIND
                 , (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.WBS_PLAN_CODE_KIND) AS WBS_PLAN_CODE_KIND_NM
                 , X.WBS_PLAN_CODE_ID
                 , X.WBS_PLAN_CODE_NM
                 , X.SEQ
                 , X.VER_NO
                 , X.WBS_PLAN_MNG_ID
                 , (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.WBS_PLAN_MNG_ID) AS WBS_PLAN_MNG_NM
                 , TO_CHAR(X.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT
                 , TO_CHAR(X.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT
                 , X.DAYCNT
                 , X.EXPECT_MH
                 , X.WBS_PLAN_STS_CODE_ID
                 , (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.WBS_PLAN_STS_CODE_ID) AS WBS_PLAN_STS_CODE_ID_NM
                 , X.CLOSE_YN
                 , X.CREAT_ID
                 , X.CREAT_PGM
                 , X.CREAT_DTTM
                 , X.UDT_ID
                 , X.UDT_PGM
                 , X.UDT_DTTM
                 , Y.FILE_TRGT_KEY AS RSLTS_FILE_TRGT_KEY
                 , Y.WBS_RSLTS_NO
                 , Y.WBS_RSLTS_ID
                 , (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = Y.WBS_RSLTS_ID) AS WBS_RSLTS_NM
                 , Y.WBS_RSLTS_RATE
                 , Y.WBS_PLAN_MH  AS WBS_RSLTS_PLAN_MH
                 , Y.WBS_RSLTS_MH
                 , Y.WBS_RSLTS_CNTS
                 , TO_CHAR(Y.WBS_RSLTSS_DT, 'YYYY-MM-DD') AS WBS_RSLTSS_DT
                 , TO_CHAR(Y.WBS_RSLTSE_DT, 'YYYY-MM-DD') AS WBS_RSLTSE_DT
                 , Y.DAYCNT AS RSLTS_DAYCNT
                 , NVL(Y.CLOSE_YN,'N') AS RSLTS_CLOSE_YN
                 , P.*
                 , R.*
                FROM TB_WB22M01 X --WBS 계획 
                      LEFT OUTER JOIN TB_WB23M01 Y --WBS 실적 
                      ON  X.CO_CD              = Y.CO_CD
                      AND X.SALES_CD           = Y.SALES_CD
                      AND X.WBS_PLAN_CODE_KIND = Y.WBS_PLAN_CODE_KIND
                      AND X.WBS_PLAN_CODE_ID   = Y.WBS_PLAN_CODE_ID           
                      AND X.WBS_PLAN_NO        = Y.WBS_RSLTS_NO    
                      LEFT OUTER JOIN (
                                       SELECT A1.CO_CD              AS P_CO_CD 
                                             , A1.SALES_CD           AS P_SALES_CD
                                             , A1.WBS_PLAN_CODE_KIND AS P_WBS_PLAN_CODE_KIND
                                             , A1.WBS_PLAN_CODE_ID   AS P_WBS_PLAN_CODE_ID
                                             , COUNT(A1.ISS_NO)      AS P_ISS_CNT 
                                         FROM TB_WB24M02 A1
                                        WHERE A1.WBS_PLAN_NO IS NOT NULL --계획이슈 
                                          AND A1.CO_CD    = #{coCd}
                                          AND A1.SALES_CD = #{salesCd}
                                        GROUP BY A1.CO_CD, A1.SALES_CD, A1.WBS_PLAN_CODE_KIND, A1.WBS_PLAN_CODE_ID
                                      ) P
                                      ON  X.CO_CD              = P.P_CO_CD
                                      AND X.SALES_CD           = P.P_SALES_CD
                                      AND X.WBS_PLAN_CODE_KIND = P.P_WBS_PLAN_CODE_KIND
                                      AND X.WBS_PLAN_CODE_ID   = P.P_WBS_PLAN_CODE_ID
                      LEFT OUTER JOIN (
                                       SELECT A1.CO_CD              AS R_CO_CD
                                             , A1.SALES_CD           AS R_SALES_CD
                                             , A1.WBS_PLAN_CODE_KIND AS R_WBS_PLAN_CODE_KIND
                                             , A1.WBS_PLAN_CODE_ID   AS R_WBS_PLAN_CODE_ID
                                             , COUNT(A1.ISS_NO)      AS R_ISS_CNT  
                                         FROM TB_WB24M02 A1
                                        WHERE A1.WBS_RSLTS_NO IS NOT NULL --실적이슈 
                                          AND A1.CO_CD    = #{coCd}
                                          AND A1.SALES_CD = #{salesCd}
                                        GROUP BY A1.CO_CD, A1.SALES_CD, A1.WBS_PLAN_CODE_KIND, A1.WBS_PLAN_CODE_ID
                                      ) R
                                      ON  Y.CO_CD              = R.R_CO_CD
                                      AND Y.WBS_PLAN_CODE_KIND = R.R_WBS_PLAN_CODE_KIND
                                      AND Y.WBS_PLAN_CODE_ID   = R.R_WBS_PLAN_CODE_ID
                                      AND Y.SALES_CD           = R.R_SALES_CD
               WHERE X.CO_CD              = #{coCd}
                 AND X.SALES_CD           = #{salesCd}
                 AND X.WBS_PLAN_CODE_KIND = #{wbsPlanCodeKind}   
               ORDER BY X.SEQ ASC
    </select>
    
    <insert id="wbsLevel1Insert" parameterType="Map">
                INSERT INTO TB_WB22M01
                (
                    FILE_TRGT_KEY,
                    CO_CD,
                    WBS_PLAN_NO,
                    WBS_PLAN_CODE_KIND,
                    WBS_PLAN_CODE_ID,
                    SALES_CD,
                    VER_NO,
                    SEQ,
                    WBS_PLAN_MNG_ID,
                    WBS_PLANS_DT,
                    WBS_PLANE_DT,
                    DAYCNT,
                    WBS_PLAN_STS_CODE_ID,
                    CREAT_ID,
                    CREAT_PGM,
                    CREAT_DTTM
                ) 
                VALUES
                (
                    #{fileTrgtKey,  jdbcType=VARCHAR},
                    #{coCd,  jdbcType=VARCHAR},
                    #{wbsPlanNo,  jdbcType=VARCHAR},
                    'WBSCODE',
                    #{wbsPlanCodeId,  jdbcType=VARCHAR},
                    #{salesCd,  jdbcType=VARCHAR},
                    #{verNo},
                    #{sortNo},
                    #{wbsPlanMngId,  jdbcType=VARCHAR},
                    #{wbsPlansDt,  jdbcType=VARCHAR},
                    #{wbsPlaneDt,  jdbcType=VARCHAR},
                    #{daycnt,  jdbcType=VARCHAR},
                    #{wbsPlanStsCodeId,  jdbcType=VARCHAR},
                    #{creatId},
                    #{creatPgm},
                    SYSDATE
                )
    </insert>
    
    <update id="wbsLevel1Update" parameterType="Map">
                UPDATE TB_WB22M01
                SET WBS_PLAN_CODE_ID = #{wbsPlanCodeId},
                    WBS_PLAN_MNG_ID = #{wbsPlanMngId,  jdbcType=VARCHAR},
                    WBS_PLANS_DT = #{wbsPlansDt,  jdbcType=VARCHAR},
                    WBS_PLANE_DT = #{wbsPlaneDt,  jdbcType=VARCHAR},
                    DAYCNT = #{daycnt,  jdbcType=VARCHAR},
                    WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId,  jdbcType=VARCHAR},
                    UDT_ID = #{creatId},
                    UDT_PGM = #{creatPgm},
                    UDT_DTTM = SYSDATE
               WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>
    
    <select id="wbsPlanListChk" parameterType="Map" resultType="camelMap">
               SELECT *  FROM TB_WB22M01
                   WHERE CO_CD  = #{coCd}
                         AND SALES_CD  = #{salesCd}
                         AND WBS_PLAN_CODE_KIND  = #{wbsPlanCodeKind}
    </select>
    
    <delete id="deleteWbsPlanlist" parameterType="Map">
               DELETE FROM TB_WB22M01
                   WHERE CO_CD = #{coCd}
                   AND SALES_CD = #{salesCd}
                   AND WBS_PLAN_CODE_KIND = #{wbsPlanCodeKind}
    </delete>
    
    <insert id="wbsLevel2Insert" parameterType="Map">
                INSERT INTO TB_WB22M01
                (
                    FILE_TRGT_KEY,
                    CO_CD,
                    WBS_PLAN_NO,
                    WBS_PLAN_CODE_KIND,
                    WBS_PLAN_CODE_ID,
                    WBS_PLAN_CODE_NM,
                    SALES_CD,
                    VER_NO,
                    SEQ,
                    WBS_PLAN_MNG_ID,
                    WBS_PLANS_DT,
                    WBS_PLANE_DT,
                    DAYCNT,
                    EXPECT_MH,
                    WBS_PLAN_STS_CODE_ID,
                    CREAT_ID,
                    CREAT_PGM,
                    CREAT_DTTM
                ) 
                VALUES
                (
                    #{fileTrgtKey},
                    #{coCd},
                    #{wbsPlanNo},
                    #{wbsPlanCodeKind},
                    #{wbsPlanCodeId},
                    #{wbsPlanCodeNm},
                    #{salesCd},
                    #{verNo},
                    #{seq},
                    #{wbsPlanMngId},
                    #{wbsPlansDt},
                    #{wbsPlaneDt},
                    #{daycnt},
                    #{expectMh, jdbcType=VARCHAR},
                    #{wbsPlanStsCodeId},
                    #{creatId},
                    #{creatPgm},
                    SYSDATE
                )
    </insert>
    
    <update id="wbsLevel2Update" parameterType="Map">
                UPDATE TB_WB22M01
                    SET SEQ = #{seq},
                        WBS_PLAN_CODE_NM = #{wbsPlanCodeNm, jdbcType=VARCHAR},
                        WBS_PLAN_MNG_ID = #{wbsPlanMngId, jdbcType=VARCHAR},
                        WBS_PLANS_DT = #{wbsPlansDt, jdbcType=VARCHAR},
                        WBS_PLANE_DT = #{wbsPlaneDt, jdbcType=VARCHAR},
                        DAYCNT = #{daycnt, jdbcType=VARCHAR},
                        EXPECT_MH = #{expectMh, jdbcType=VARCHAR},
                        WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId},
                        UDT_ID = #{creatId},
                        UDT_PGM = #{creatPgm},
                        UDT_DTTM = SYSDATE 
                    WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>
    
    <delete id="wbsLevel2Delete" parameterType="Map">
        DELETE FROM TB_WB22M01
        WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </delete>
    
    <select id="selectVerNoNext" parameterType="Map" resultType="camelMap">
             SELECT NVL(MAX(TO_NUMBER(VER_NO)), 0) + 1 AS VER_NO FROM TB_WB22M01
               WHERE CO_CD = #{coCd}
               AND SALES_CD = #{salesCd}
    </select>
    
    <update id="wbsVerUpUpdate" parameterType="Map">
                UPDATE TB_WB22M01
                    SET VER_NO = #{newVerNo},
                        CLOSE_YN = 'N'
                WHERE CO_CD = #{coCd}
                AND SALES_CD = #{salesCd}
                AND VER_NO = #{verNo}
    </update>
    
    <insert id="wbsVerUpInsert" parameterType="Map">
                INSERT INTO TB_WB22M01_HIST
                (
                    FILE_TRGT_KEY,
                    CO_CD,
                    WBS_PLAN_NO,
                    WBS_PLAN_CODE_KIND,
                    WBS_PLAN_CODE_ID,
                    SALES_CD,
                    VER_NO,
                    SEQ,
                    WBS_PLAN_MNG_ID,
                    WBS_PLANS_DT,
                    WBS_PLANE_DT,
                    DAYCNT,
                    WBS_PLAN_STS_CODE_ID,
                    CLOSE_YN,
                    CLOSE_ID,
                    CLOSE_DTTM
                ) 
                VALUES
                (
                    #{fileTrgtKey},
                    #{coCd},
                    #{wbsPlanNo},
                    'WBSCODE',
                    #{wbsPlanCodeId},
                    #{salesCd},
                    #{verNo},
                    #{seq},
                    #{wbsPlanMngId, jdbcType=VARCHAR},
                    #{wbsPlansDt, jdbcType=VARCHAR},
                    #{wbsPlaneDt, jdbcType=VARCHAR},
                    #{daycnt},
                    #{wbsPlanStsCodeId},
                    #{closeYn},
                    #{creatId},
                    SYSDATE
                )
    </insert>
    
    <update id="wbsLevel1confirm" parameterType="Map">
                 UPDATE TB_WB22M01
                  SET   WBS_PLAN_MNG_ID = #{wbsPlanMngId, jdbcType=VARCHAR},
                        WBS_PLANS_DT = #{wbsPlansDt, jdbcType=VARCHAR},
                        WBS_PLANE_DT = #{wbsPlaneDt, jdbcType=VARCHAR},
                        DAYCNT = #{daycnt},
                        WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId},
                        CLOSE_YN = #{flag},
                        UDT_ID = #{creatId},
                        UDT_PGM = #{creatPgm},
                        UDT_DTTM = SYSDATE
                 WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>
    
    <update id="wbsLevel2confirm" parameterType="Map">
                UPDATE TB_WB22M01
                    SET WBS_PLAN_CODE_NM = #{wbsPlanCodeNm},
                        WBS_PLAN_MNG_ID = #{wbsPlanMngId},
                        WBS_PLANS_DT = #{wbsPlansDt},
                        WBS_PLANE_DT = #{wbsPlaneDt},
                        DAYCNT = #{daycnt},
                        WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId},
                        CLOSE_YN = #{flag},
                        UDT_ID = #{creatId},
                        UDT_PGM = #{creatPgm},
                        UDT_DTTM = SYSDATE 
                    WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>
    
    <select id="selectRsltsSharngList" parameterType="Map" resultType="camelMap">
               SELECT ROWNUM AS RN,
                      X.SALES_CD, 
                      X.TODO_CODE_ID AS WBS_RSLTS_PLAN_CODE_ID,
                      (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CODE_ID) AS WBS_RSLTS_PLAN_CODE_NM,
                      X.TODO_NO AS WBS_RSLTS_PLAN_NO,
                      X.TODO_CO_CD AS WBS_RSLTS_CO_CD,
                      (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CO_CD) AS WBS_RSLTS_CO_CD_NM,                      
                      Y.ID AS WBS_SHARNG_USER_ID, 
                      Y.EMP_NO,
                      Y.NAME,
                      Y.TEL_NO,
                      Y.EMAIL,
                      TO_CHAR(X.TODO_CF_DT,'YYYY-MM-DD') AS TODO_CF_DT,
                      X.TODO_CF_OPN
                      FROM TB_WB20M03 X
                      INNER JOIN TB_CM06M01 Y
                      ON X.TODO_CO_CD = Y.CO_CD
                      AND X.TODO_ID = Y.ID
                      WHERE X.TODO_CO_CD = '${coCd}'
                      AND X.TODO_CODE_ID = '${codeId}' 
                      AND X.SALES_CD = '${salesCd}'
                      AND X.TODO_DIV2_CODE_ID = 'TODODIV1020'
                      ORDER BY ROWNUM ASC
    </select>
    
    <select id="selectRsltsApprovalList" parameterType="Map" resultType="camelMap">
               SELECT ROWNUM AS RN,
                      X.SALES_CD, 
                      X.TODO_CODE_ID AS WBS_RSLTS_PLAN_CODE_ID,
                      (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CODE_ID) AS WBS_RSLTS_PLAN_CODE_NM,
                      X.TODO_NO AS WBS_RSLTS_PLAN_NO, 
                      X.TODO_CO_CD AS WBS_RSLTS_CO_CD,
                      (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CO_CD) AS WBS_RSLTS_CO_CD_NM,                   
                      Y.ID AS WBS_SHARNG_USER_ID, 
                      Y.EMP_NO,
                      Y.NAME,
                      Y.TEL_NO,
                      Y.EMAIL,
                      TO_CHAR(X.TODO_CF_DT,'YYYY-MM-DD') AS TODO_CF_DT,
                      X.TODO_CF_OPN
                      FROM TB_WB20M03 X
                      INNER JOIN TB_CM06M01 Y
                      ON X.TODO_CO_CD = Y.CO_CD
                      AND X.TODO_ID = Y.ID
                      WHERE X.TODO_CO_CD = '${coCd}'
                      AND X.TODO_CODE_ID = '${codeId}' 
                      AND X.SALES_CD = '${salesCd}'
                      AND X.TODO_DIV2_CODE_ID = 'TODODIV2010'
                      ORDER BY ROWNUM ASC
    </select>
    
    <select id="selectWbsRstlsSeqNext" parameterType="Map" resultType="int">
        SELECT TB_WB23M01_SQ01.NEXTVAL FROM DUAL
    </select>
    
    <insert id="wbsRsltsInsert" parameterType="Map">
                INSERT INTO TB_WB23M01
                (
                        FILE_TRGT_KEY,
                        CO_CD,
                        WBS_RSLTS_NO,
                        WBS_PLAN_CODE_KIND,
                        WBS_PLAN_CODE_ID,
                        SALES_CD,
                        WBS_RSLTS_ID,
                        WBS_RSLTS_RATE,
                        WBS_RSLTS_MH,
                        WBS_RSLTS_CNTS,
                        WBS_RSLTSS_DT,
                        WBS_RSLTSE_DT,
                        DAYCNT,
                        LOCK_YN,
                        CLOSE_YN,
                        CREAT_ID,
                        CREAT_PGM,
                        CREAT_DTTM                 
                ) 
                VALUES
                (       
                        #{rsltsFileTrgtKey},
                        #{coCd},
                        #{wbsRsltsNo},
                        #{wbsPlanCodeKind2_P},
                        #{wbsPlanCodeId2_P},
                        #{salesCd2_P},
                        #{wbsRsltsId},
                        #{wbsRsltsRate},
                        #{wbsRsltsMh},
                        #{wbsRsltsCnts},
                        #{wbsRsltssDt},
                        #{wbsRsltseDt},
                        #{rsltsDaycnt},
                        'N',
                        'N',
                        #{userId},
                        #{pgmId},
                        SYSDATE  
                )
    </insert>
    
    <update id="wbsRsltsUpdate" parameterType="Map">
                UPDATE TB_WB23M01
                    SET WBS_RSLTS_RATE = #{wbsRsltsRate},
                        WBS_RSLTS_MH = #{wbsRsltsMh},
                        WBS_RSLTS_CNTS = #{wbsRsltsCnts},
                        WBS_RSLTSS_DT = #{wbsRsltssDt},
                        WBS_RSLTSE_DT = #{wbsRsltseDt},
                        DAYCNT = #{rsltsDaycnt},
                        UDT_ID = #{userId},
                        UDT_PGM = #{pgmId},
                        UDT_DTTM = SYSDATE     
                    WHERE FILE_TRGT_KEY =  #{rsltsFileTrgtKey}
    </update>
    
    <delete id="wbsRsltsDelete" parameterType="Map">
        DELETE FROM TB_WB23M01
        WHERE (CO_CD, SALES_CD, WBS_PLAN_CODE_KIND, WBS_PLAN_CODE_ID, WBS_RSLTS_NO) = (SELECT CO_CD,SALES_CD,WBS_PLAN_CODE_KIND,WBS_PLAN_CODE_ID,WBS_PLAN_NO FROM TB_WB22M01 WHERE FILE_TRGT_KEY = #{fileTrgtKey});
    </delete>
    
    <update id="wbsRsltsconfirm" parameterType="Map">
                UPDATE TB_WB23M01
                    SET CLOSE_YN = #{flag},
                        UDT_ID = #{userId},
                        UDT_PGM = #{pgmId},
                        UDT_DTTM = SYSDATE     
                    WHERE FILE_TRGT_KEY =  #{rsltsFileTrgtKey}
    </update>
    
    <select id="selectWbsSjListCount" parameterType="Map" resultType="int">
            WITH SUBJ AS --과제정보
                 (
                   SELECT X.FILE_TRGT_KEY
                        , X.CO_CD                                                       AS CO_CD              --회사코드
                        , X.SALES_CD                                                    AS SALES_CD           --SALES Code
                        , X.SJ_NO                                                       AS SJ_NO              --과제번호
                        , X.SJ_NM                                                       AS SJ_NM              --과제명
                        , X.VER_NO                                                      AS VER_NO             --버젼
                        , X.MKER_DIV                                                    AS MKER_DIV           --제작처구분
                        , (SELECT FN_CM05M01_CD_TO_NM(X.MKER_DIV) FROM DUAL)           AS MKER_DIV_NM        --제작처구분명 
                        , X.MKER_CD                                                     AS MKER_CD            --제작처코드
                        , BM.CLNT_NM                                                    AS MKER_NM            --제작처명
                        , X.SMRIZE_ID                                                   AS SMRIZE_ID          --총괄PM ID
                        , (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
                        , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
                        , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
                        , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
                        , TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
                        , X.CLOSE_YN                                                    AS CLOSE_YN           --확정유무
                        , X.DSGN_DIF_CODE_ID                                            AS DSGN_DIF_CODE_ID   --설계난이도
                        , (SELECT FN_CM05M01_CD_TO_NM(X.DSGN_DIF_CODE_ID) FROM DUAL)   AS DSGN_DIF_CODE_NM   --설계난이도
                        , X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
                        , X.PRDCTN_DIF_CODE_ID                                          AS PRDCTN_DIF_CODE_ID --생산난이도
                        , (SELECT FN_CM05M01_CD_TO_NM(X.PRDCTN_DIF_CODE_ID) FROM DUAL) AS PRDCTN_DIF_CODE_NM --생산난이도
                        , X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
                        , X.SJ_RMK                                                      AS SJ_RMK             --비고
                     FROM TB_WB21M01 X
                          LEFT OUTER JOIN TB_BM02M01 AS BM ON X.MKER_CD = BM.CLNT_CD --거래처정보
                    WHERE X.CO_CD = #{coCd}
                       AND X.BEGIN_DT BETWEEN #{beginDt} AND #{deDt}
                       <if test="salesCd != null and !salesCd.equals('')">
                         AND X.SALES_CD LIKE '%${salesCd}%'            
                       </if>
                       <if test="sjNm != null and !sjNm.equals('')">
                         AND X.SJ_NM LIKE '%${sjNm}%' 
                       </if>
                       AND X.CLOSE_YN = 'Y'
                 ) 
               , SJD AS --수주상세 
                 ( 
                  SELECT M.CO_CD                                              AS CO_CD        --회사코드
                        , (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명 
                        , M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
                        , X.SALES_CD                                           AS SALES_CD     --SALES Code
                        , M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
                        , C.CLNT_NM                                            AS CLNT_NM      --고객명
                        , M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트 
                        , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
                        , X.PRDT_CD
                        , (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = X.PRDT_CD) AS PRDT_NM
                     FROM TB_CR02M01  M --수주마스터
                          INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
                          INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
                    WHERE 1=1
                      AND M.CO_CD = #{coCd}
                      AND X.SALES_CD IS NOT NULL --비용제외
                      AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                                    FROM SUBJ P 
                                   WHERE P.CO_CD    = #{coCd}
                                     AND P.CO_CD    = X.CO_CD
                                     AND P.SALES_CD = X.SALES_CD
                                 ) 
                 )
              , PLAN AS --WBS 계획정보 
              (
                SELECT W.CO_CD                   AS CO_CD        --회사코드
                     , W.SALES_CD                AS SALES_CD     --SALSES_CD
                     , W.CLOSE_YN                AS CLOSE_YN     --확정여부 
                     , W.VER_NO                    AS PLAN_VER_NO  --버전
                     , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
                     , 'N' AS HIST_YN -- hist인지 아닌지
                 FROM TB_WB22M01 W--WBS계획
                WHERE W.CO_CD = #{coCd}
                  AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
                   AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                                  FROM SUBJ P 
                                 WHERE P.CO_CD    = #{coCd}
                                   AND P.CO_CD    = W.CO_CD
                                   AND P.SALES_CD = W.SALES_CD
                               ) 
                GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
               UNION ALL
               SELECT W.CO_CD                   AS CO_CD        --회사코드
                     , W.SALES_CD                AS SALES_CD     --SALSES_CD
                     , W.CLOSE_YN                AS CLOSE_YN     --확정여부 
                     , W.VER_NO                  AS PLAN_VER_NO  --버전
                     , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
                     , 'Y' AS HIST_YN -- hist인지 아닌지
                 FROM TB_WB22M01_HIST W--WBS계획이력 
                WHERE W.CO_CD = #{coCd}
                  AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
                   AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                                  FROM SUBJ P 
                                 WHERE P.CO_CD    = #{coCd}
                                   AND P.CO_CD    = W.CO_CD
                                   AND P.SALES_CD = W.SALES_CD
                               ) 
                GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO    
              )
               SELECT COUNT(*) FROM (      
                     SELECT ROWNUM AS RN, T.* FROM (  
                            SELECT T.*                        
                              FROM (
                                    SELECT X.CO_CD                            AS CO_CD       --회사코드
                                         , CR.ORDRS_NO                        AS ORDRS_NO    --수주번호
                                         , CR.CLNT_CD                         AS CLNT_CD     --고객코드
                                         , CR.CLNT_NM                         AS CLNT_NM     --고객명
                                         , CR.CLNT_PJT                        AS CLNT_PJT    --고객사프로젝트 
                                         , CR.CLNT_PJT_NM                     AS CLNT_PJT_NM --고객사프로젝트명
                                         , X.SJ_NO                            AS SJ_NO             --과제번호 
                                         , X.SJ_NM                            AS SJ_NM             --과제명  
                                         , X.VER_NO                           AS VER_NO            --과제버젼    
                                         , X.CLOSE_YN                         AS SJ_CLOSE_YN       --과제확정유무   
                                         , X.SALES_CD                         AS SALES_CD          --SALES Code 
                                         , X.MKER_DIV                         AS MKER_DIV          --제작처구분
                                         , X.MKER_DIV_NM                      AS MKER_DIV_NM       --제작처구분명
                                         , X.MKER_CD                          AS MKER_CD           --제작처코드
                                         , X.MKER_NM                          AS MKER_NM           --제작처명   
                                         , X.SMRIZE_ID                        AS SMRIZE_ID         --총괄PM ID
                                         , X.SMRIZE_NM                        AS SMRIZE_NM         --총괄PM명  
                                         , X.BEGIN_DT                         AS BEGIN_DT          --시작일    
                                         , X.DE_DT                            AS DE_DT             --출고일    
                                         , X.ACPTNC_DT                        AS ACPTNC_DT         --완료검수일 
                                         , X.REQRE_DAYCNT                     AS REQRE_DAYCNT      --소요일수   
                                         , X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID  --설계난이도
                                         , X.DSGN_DIF_CODE_NM                 AS DSGN_DIF_CODE_NM  --설계난이도 
                                         , X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR    --설계계획공수
                                         , X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID--생산난이도 
                                         , X.PRDCTN_DIF_CODE_NM               AS PRDCTN_DIF_CODE_NM--생산난이도 
                                         , X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR  --생산계획공수
                                         , X.SJ_RMK                           AS SJ_RMK            --비고
                                         , X.FILE_TRGT_KEY                    AS FILE_TRGT_KEY     --FILE_TRGT_KEY
                                         , PLN.CLOSE_YN                       AS PLAN_CLOSE_YN     --계획확정여부
                                         , NVL(PLN.HIST_YN,'N')                   AS HIST_YN --이력여부
                                      FROM SUBJ X
                                           INNER JOIN SJD AS CR ON X.CO_CD = CR.CO_CD AND X.SALES_CD = CR.SALES_CD
                                           LEFT OUTER JOIN PLAN AS PLN ON X.CO_CD = PLN.CO_CD AND X.SALES_CD = PLN.SALES_CD
                                     WHERE 1=1
                                     <if test="histYn != null and !histYn.equals('')">
		                             AND NVL(PLN.HIST_YN,'N') = #{histYn}            
		                             </if>
                                   ) T
                              WHERE 1=1
                              <if test="salesCd != null and !salesCd.equals('')">
                              AND T.SALES_CD LIKE '%${salesCd}%'            
                              </if>
                              <if test="sjNm != null and !sjNm.equals('')">
                              AND T.SJ_NM LIKE '%${sjNm}%'              
                              </if>
                              <if test="closeYn != null and !closeYn.equals('')">
                              AND NVL(T.PLAN_CLOSE_YN, 'N') = #{closeYn}           
                              </if>
                              <if test="clntPjt != null and !clntPjt.equals('')">
                              AND T.CLNT_PJT = #{clntPjt}            
                              </if>
                              <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
                              AND T.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'            
                              </if>
                              
                              ) T ) T
    </select>
    
    <select id="selectWbsSjList" parameterType="Map" resultType="camelMap">
         /* selectWbsSjList */
            WITH SUBJ AS --과제정보
                 (
                   SELECT X.FILE_TRGT_KEY
                        , X.CO_CD                                                       AS CO_CD              --회사코드
                        , X.SALES_CD                                                    AS SALES_CD           --SALES Code
                        , X.SJ_NO                                                       AS SJ_NO              --과제번호
                        , X.SJ_NM                                                       AS SJ_NM              --과제명
                        , X.VER_NO                                                      AS VER_NO             --버젼
                        , X.MKER_DIV                                                    AS MKER_DIV           --제작처구분
                        , (SELECT FN_CM05M01_CD_TO_NM(X.MKER_DIV) FROM DUAL)           AS MKER_DIV_NM        --제작처구분명 
                        , X.MKER_CD                                                     AS MKER_CD            --제작처코드
                        , BM.CLNT_NM                                                    AS MKER_NM            --제작처명
                        , X.SMRIZE_ID                                                   AS SMRIZE_ID          --총괄PM ID
                        , (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
                        , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
                        , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
                        , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
                        , TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
                        , X.CLOSE_YN                                                    AS CLOSE_YN           --확정유무
                        , X.DSGN_DIF_CODE_ID                                            AS DSGN_DIF_CODE_ID   --설계난이도
                        , (SELECT FN_CM05M01_CD_TO_NM(X.DSGN_DIF_CODE_ID) FROM DUAL)   AS DSGN_DIF_CODE_NM   --설계난이도
                        , X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
                        , X.PRDCTN_DIF_CODE_ID                                          AS PRDCTN_DIF_CODE_ID --생산난이도
                        , (SELECT FN_CM05M01_CD_TO_NM(X.PRDCTN_DIF_CODE_ID) FROM DUAL) AS PRDCTN_DIF_CODE_NM --생산난이도
                        , X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
                        , X.SJ_RMK                                                      AS SJ_RMK             --비고
                     FROM TB_WB21M01 X
                          LEFT OUTER JOIN TB_BM02M01 AS BM ON X.MKER_CD = BM.CLNT_CD --거래처정보
                    WHERE X.CO_CD = #{coCd}
                       AND X.BEGIN_DT BETWEEN #{beginDt} AND #{deDt}
                       <if test="salesCd != null and !salesCd.equals('')">
                         AND X.SALES_CD LIKE '%${salesCd}%'            
                       </if>
                       <if test="sjNm != null and !sjNm.equals('')">
                         AND X.SJ_NM LIKE '%${sjNm}%' 
                       </if>
                       AND X.CLOSE_YN = 'Y'
                 ) 
               , SJD AS --수주상세 
                 ( 
                  SELECT M.CO_CD                                              AS CO_CD        --회사코드
                        , (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명 
                        , M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
                        , X.SALES_CD                                           AS SALES_CD     --SALES Code
                        , M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
                        , C.CLNT_NM                                            AS CLNT_NM      --고객명
                        , M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트 
                        , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
                        , X.PRDT_CD
                        , (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = X.PRDT_CD) AS PRDT_NM
                     FROM TB_CR02M01  M --수주마스터
                          INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
                          INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
                    WHERE 1=1
                      AND M.CO_CD = #{coCd}
                      AND X.SALES_CD IS NOT NULL --비용제외
                      AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                                    FROM SUBJ P 
                                   WHERE P.CO_CD    = #{coCd}
                                     AND P.CO_CD    = X.CO_CD
                                     AND P.SALES_CD = X.SALES_CD
                                 ) 
                 )
              , PLAN AS --WBS 계획정보 
              (
                SELECT W.CO_CD                   AS CO_CD        --회사코드
                     , W.SALES_CD                AS SALES_CD     --SALSES_CD
                     , W.CLOSE_YN                AS CLOSE_YN     --확정여부 
                     , W.VER_NO                    AS PLAN_VER_NO  --버전
                     , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
                     , 'N' AS HIST_YN -- hist인지 아닌지
                 FROM TB_WB22M01 W--WBS계획
                WHERE W.CO_CD = #{coCd}
                  AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
                   AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                                  FROM SUBJ P 
                                 WHERE P.CO_CD    = #{coCd}
                                   AND P.CO_CD    = W.CO_CD
                                   AND P.SALES_CD = W.SALES_CD
                               ) 
                GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
               UNION ALL
               SELECT W.CO_CD                   AS CO_CD        --회사코드
                     , W.SALES_CD                AS SALES_CD     --SALSES_CD
                     , W.CLOSE_YN                AS CLOSE_YN     --확정여부 
                     , W.VER_NO                  AS PLAN_VER_NO  --버전
                     , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
                     , 'Y' AS HIST_YN -- hist인지 아닌지
                 FROM TB_WB22M01_HIST W--WBS계획이력 
                WHERE W.CO_CD = #{coCd}
                  AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
                   AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                                  FROM SUBJ P 
                                 WHERE P.CO_CD    = #{coCd}
                                   AND P.CO_CD    = W.CO_CD
                                   AND P.SALES_CD = W.SALES_CD
                               ) 
                GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO    
              )
               SELECT * FROM (      
                     SELECT ROWNUM AS RN, T.* FROM (  
                            SELECT T.*                        
                              FROM (
                                    SELECT X.CO_CD                            AS CO_CD       --회사코드
                                         , CR.ORDRS_NO                        AS ORDRS_NO    --수주번호
                                         , CR.CLNT_CD                         AS CLNT_CD     --고객코드
                                         , CR.CLNT_NM                         AS CLNT_NM     --고객명
                                         , CR.CLNT_PJT                        AS CLNT_PJT    --고객사프로젝트 
                                         , CR.CLNT_PJT_NM                     AS CLNT_PJT_NM --고객사프로젝트명
                                         , X.SJ_NO                            AS SJ_NO             --과제번호 
                                         , X.SJ_NM                            AS SJ_NM             --과제명  
                                         , X.VER_NO                           AS VER_NO            --과제버젼    
                                         , X.CLOSE_YN                         AS SJ_CLOSE_YN       --과제확정유무   
                                         , X.SALES_CD                         AS SALES_CD          --SALES Code 
                                         , X.MKER_DIV                         AS MKER_DIV          --제작처구분
                                         , X.MKER_DIV_NM                      AS MKER_DIV_NM       --제작처구분명
                                         , X.MKER_CD                          AS MKER_CD           --제작처코드
                                         , X.MKER_NM                          AS MKER_NM           --제작처명   
                                         , X.SMRIZE_ID                        AS SMRIZE_ID         --총괄PM ID
                                         , X.SMRIZE_NM                        AS SMRIZE_NM         --총괄PM명  
                                         , X.BEGIN_DT                         AS BEGIN_DT          --시작일    
                                         , X.DE_DT                            AS DE_DT             --출고일    
                                         , X.ACPTNC_DT                        AS ACPTNC_DT         --완료검수일 
                                         , X.REQRE_DAYCNT                     AS REQRE_DAYCNT      --소요일수   
                                         , X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID  --설계난이도
                                         , X.DSGN_DIF_CODE_NM                 AS DSGN_DIF_CODE_NM  --설계난이도 
                                         , X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR    --설계계획공수
                                         , X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID--생산난이도 
                                         , X.PRDCTN_DIF_CODE_NM               AS PRDCTN_DIF_CODE_NM--생산난이도 
                                         , X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR  --생산계획공수
                                         , X.SJ_RMK                           AS SJ_RMK            --비고
                                         , X.FILE_TRGT_KEY                    AS FILE_TRGT_KEY     --FILE_TRGT_KEY
                                         , PLN.CLOSE_YN                       AS PLAN_CLOSE_YN     --계획확정여부
                                         , PLN.PLAN_VER_NO                    AS PLAN_VER_NO       --계획버전
                                         , NVL(PLN.HIST_YN,'N')                   AS HIST_YN --이력여부
                                      FROM SUBJ X
                                           INNER JOIN SJD AS CR ON X.CO_CD = CR.CO_CD AND X.SALES_CD = CR.SALES_CD
                                           LEFT OUTER JOIN PLAN AS PLN ON X.CO_CD = PLN.CO_CD AND X.SALES_CD = PLN.SALES_CD
                                     WHERE 1=1
                                     <if test="histYn != null and !histYn.equals('')">
		                             AND NVL(PLN.HIST_YN,'N') = #{histYn}            
		                             </if>
                                   ) T
                              WHERE 1=1
                              <if test="salesCd != null and !salesCd.equals('')">
                              AND T.SALES_CD LIKE '%${salesCd}%'            
                              </if>
                              <if test="sjNm != null and !sjNm.equals('')">
                              AND T.SJ_NM LIKE '%${sjNm}%'              
                              </if>
                              <if test="closeYn != null and !closeYn.equals('')">
                              AND NVL(T.PLAN_CLOSE_YN, 'N') = #{closeYn}           
                              </if>
                              <if test="clntPjt != null and !clntPjt.equals('')">
                              AND T.CLNT_PJT = #{clntPjt}            
                              </if>
                              <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
                              AND T.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'            
                              </if>
                              <if test="histYn != null and !histYn.equals('')">
                              AND T.HIST_YN = #{histYn}            
                              </if>
                              ORDER BY CLNT_NM, ORDRS_NO, SALES_CD, TO_NUMBER(PLAN_VER_NO) DESC
                              ) T ) T

                  WHERE RN BETWEEN #{firstIndex} AND #{lastIndex}
    </select>
    
    <select id="selectTodoRsltsView" parameterType="Map" resultType="camelMap">          
                SELECT   X.FILE_TRGT_KEY AS RSLTS_FILE_TRGT_KEY,
                            X.CO_CD,
                            X.WBS_RSLTS_NO,
                            X.WBS_PLAN_CODE_KIND,
                            X.WBS_PLAN_CODE_ID,
                            X.SALES_CD,
                            X.WBS_RSLTS_ID,
                            (SELECT FN_CM06M01_ID_TO_NM(X.WBS_RSLTS_ID) FROM DUAL) AS WBS_RSLTS_NM, 
                            X.WBS_RSLTS_RATE,
                            X.WBS_PLAN_MH,
                            X.WBS_RSLTS_MH ,
                            X.WBS_RSLTS_CNTS,
                            TO_CHAR(X.WBS_RSLTSS_DT,'YYYY-MM-DD') AS WBS_RSLTSS_DT,
                            TO_CHAR(X.WBS_RSLTSE_DT,'YYYY-MM-DD') AS WBS_RSLTSE_DT,
                            X.DAYCNT AS RSLTS_DAYCNT,
                            
                            Y.FILE_TRGT_KEY AS FILE_TRGT_KEY2,
                            Y.WBS_PLAN_CODE_NM AS WBS_PLAN_CODE_NM2,
                            TO_CHAR(Y.WBS_PLANS_DT,'YYYY-MM-DD') AS WBS_PLANS_DT2,
                            TO_CHAR(Y.WBS_PLANE_DT,'YYYY-MM-DD') AS WBS_PLANE_DT2,
                            Y.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID2,
                            (SELECT FN_CM06M01_ID_TO_NM(Y.WBS_PLAN_MNG_ID) FROM DUAL) AS WBS_PLAN_MNG_NM2,  
                            Y.DAYCNT AS DAYCNT2,
                            
                            Z.FILE_TRGT_KEY AS FILE_TRGT_KEY1,
                            (SELECT FN_CM05M01_CD_TO_NM(Z.WBS_PLAN_CODE_ID) FROM DUAL) AS WBS_PLAN_CODE_NM1,
                            TO_CHAR(Z.WBS_PLANS_DT,'YYYY-MM-DD') AS WBS_PLANS_DT1,
                            TO_CHAR(Z.WBS_PLANE_DT,'YYYY-MM-DD') AS WBS_PLANE_DT1,
                            Z.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID1,
                            (SELECT FN_CM06M01_ID_TO_NM(Z.WBS_PLAN_MNG_ID) FROM DUAL) AS WBS_PLAN_MNG_NM1,  
                            Z.DAYCNT AS DAYCNT1
                            
                            FROM TB_WB23M01 X
                            INNER JOIN  TB_WB22M01 Y
                            ON X.CO_CD = Y.CO_CD
                            AND X.WBS_PLAN_CODE_KIND = Y.WBS_PLAN_CODE_KIND
                            AND X.WBS_PLAN_CODE_ID = Y.WBS_PLAN_CODE_ID
                            AND X.SALES_CD = Y.SALES_CD
                            LEFT OUTER JOIN (
                                SELECT Y.FILE_TRGT_KEY, Y.CO_CD, Y.WBS_PLAN_CODE_KIND, Y.WBS_PLAN_CODE_ID,
                                          Y.WBS_PLAN_CODE_NM, Y.WBS_PLANS_DT, Y.WBS_PLANE_DT,
                                          Y.SALES_CD, Y.VER_NO, Y.WBS_PLAN_MNG_ID, Y.DAYCNT                   
                                          FROM (
                                                SELECT CO_CD, WBS_PLAN_CODE_KIND, WBS_PLAN_CODE_ID, 
                                                          SALES_CD, MAX(TO_NUMBER(VER_NO)) AS VER_NO FROM TB_WB22M01
                                                          WHERE WBS_PLAN_CODE_NM IS NULL
                                                          GROUP BY CO_CD, WBS_PLAN_CODE_KIND, WBS_PLAN_CODE_ID, SALES_CD ) X
                                                INNER JOIN  TB_WB22M01 Y    
                                                ON X.CO_CD = Y.CO_CD
                                                AND X.WBS_PLAN_CODE_KIND = Y.WBS_PLAN_CODE_KIND
                                                AND X.WBS_PLAN_CODE_ID = Y.WBS_PLAN_CODE_ID
                                                AND X.SALES_CD = Y.SALES_CD
                                                AND X.VER_NO = Y.VER_NO ) Z
                            ON Y.CO_CD = Z.CO_CD
                            AND Y.WBS_PLAN_CODE_KIND = Z.WBS_PLAN_CODE_ID
                            AND Y.SALES_CD = Z.SALES_CD         
                            WHERE X.FILE_TRGT_KEY = #{fileTrgtKey}
    </select>
    
    <!-- TODO 미완료 현황 대쉬보드 오른쪽 하단 WBS 계획정보 -->
    <select id="selectIncompleteJob" parameterType="Map" resultType="camelMap">
        --To-Do 미완료 현황 
        SELECT Z.*
          FROM (
                SELECT X.*
                     , ROWNUM AS RN
                  FROM (
                        WITH SJD AS --수주상세 
                             ( 
                               SELECT M.CO_CD                                            AS CO_CD        --회사코드
                                    , M.ORDRS_NO                                         AS ORDRS_NO     --수주번호
                                    , X.SALES_CD                                         AS SALES_CD     --SALES Code
                                    , M.ORDRS_CLNT_CD                                    AS CLNT_CD      --고객코드
                                    , C.CLNT_NM                                          AS CLNT_NM      --고객명
                                    , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT ) FROM DUAL) AS CLNT_PJT_NM      --프로젝트
                                    , M.CTRT_NM                                         AS CTRT_NM      --계약명   
                                    , P.VER_NO                                          AS PLAN_VER_NO --계획ver                        
                                 FROM TB_WB21M01 P 
                                      INNER JOIN TB_CR02D02 AS X ON X.CO_CD = P.CO_CD AND X.SALES_CD = P.SALES_CD--수주상세  
                                      INNER JOIN TB_CR02M01 AS M ON M.CO_CD = P.CO_CD AND M.ORDRS_NO = X.ORDRS_NO--수주마스터 
                                      INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
                               WHERE  1=1 --P.SALES_CD = '23078-01HAFAR'
                                 AND CLOSE_YN = 'Y'
                             )
                        --과제 등록된 내용중 일정계획 수립확정 되니 않은 건 확정건에 대한 계획수립 안한 내역 
                        SELECT SJ.CLNT_NM                           AS CLNT_NM 
                              , SJ.CLNT_PJT_NM                        AS CLNT_PJT_NM
                              , SJ.CTRT_NM                            AS CTRT_NM
                             , P.SALES_CD                            AS SALES_CD
                             , (SELECT FN_CM05M01_CD_TO_NM(P.WBS_PLAN_CODE_KIND) FROM DUAL) AS WBS_PLAN_NM --WBS 계획명 
                             , P.WBS_PLAN_CODE_NM                    AS WBS_TASK_NM --WBS Task NM
                             , TO_CHAR(P.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_STRT_DT --WBS Task 시작일
                             , TO_CHAR(P.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_END_DT  --WBS Task 종료일
                             , NVL(R.WBS_RSLTS_RATE,0)               AS WBS_RATE    --WBS 실적 진행율
                             , (SELECT FN_CM06M01_ID_TO_NM(P.WBS_PLAN_MNG_ID) FROM DUAL)  AS WBS_MNG_NM --담당자명
                             -- 관련코드 참고정보 -----------------------------------------------
                             , SJ.CLNT_CD                       AS CLNT_CD 
                             , P.WBS_PLAN_CODE_KIND             AS WBS_PLAN_CD --WBS 계획CD
                             , P.WBS_PLAN_CODE_ID               AS WBS_TASK_ID --WBS Task ID 
                             , P.WBS_PLAN_MNG_ID                AS WBS_MNG_ID  --담당자ID
                             , ROUND(P.WBS_PLANE_DT - SYSDATE)  AS VARIANCE_DT --종료예정 차이 일수 
                             , P.CO_CD
                             , SJ.PLAN_VER_NO                  AS PLAN_VER_NO --계획ver 
                          FROM TB_WB22M01 AS P --WBS계획
                               INNER JOIN SJD  AS SJ ON P.CO_CD = SJ.CO_CD AND P.SALES_CD = SJ.SALES_CD
                               LEFT OUTER JOIN TB_WB23M01 AS R  ON P.CO_CD              = R.CO_CD 
                                                                AND P.SALES_CD           = R.SALES_CD 
                                                                AND P.WBS_PLAN_CODE_KIND = R.WBS_PLAN_CODE_KIND 
                                                                AND P.WBS_PLAN_CODE_ID   = R.WBS_PLAN_CODE_ID
                         WHERE P.WBS_PLANE_DT  <![CDATA[<]]> ( SYSDATE + 3) --종료일 3일 이전 내역 
                           AND P.WBS_PLAN_MNG_ID    = #{usrId}
                           AND P.WBS_PLAN_CODE_KIND <![CDATA[<>]]> 'WBSCODE'
                           AND P.CO_CD = #{coCd}
                           AND NVL(R.WBS_RSLTS_RATE,0) <![CDATA[<>]]> 100
				 UNION All   --일정계획 확정건에 대한 계획수립 안한 내역 
				         SELECT    SJ.CLNT_NM                            AS CLNT_NM 
				                 , SJ.CLNT_PJT_NM                        AS CLNT_PJT_NM
				                 , SJ.CTRT_NM                            AS CTRT_NM 
				                 , P.SALES_CD                         AS SALES_CD 
				                 , '일정계획수립'                         AS WBS_PLAN_NM
				                 , (SELECT FN_CM05M01_CD_TO_NM(P.WBS_PLAN_CODE_ID) FROM DUAL) || ' 계획등록'    AS WBS_TASK_NM --WBS Task NM 
	                             , TO_CHAR(P.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_STRT_DT --WBS Task 시작일
	                             , TO_CHAR(P.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_END_DT  --WBS Task 종료일
	                             , 0               AS WBS_RATE    --WBS 실적 진행율
	                             , (SELECT FN_CM06M01_ID_TO_NM(P.WBS_PLAN_MNG_ID) FROM DUAL)  AS WBS_MNG_NM --담당자명
	                             -- 관련코드 참고정보 -----------------------------------------------
	                             , SJ.CLNT_CD                       AS CLNT_CD 
	                             , P.WBS_PLAN_CODE_KIND             AS WBS_PLAN_CD --WBS 계획CD
	                             , P.WBS_PLAN_CODE_ID               AS WBS_TASK_ID --WBS Task ID 
	                             , P.WBS_PLAN_MNG_ID                AS WBS_MNG_ID  --담당자ID
	                             , ROUND(P.WBS_PLANE_DT - SYSDATE)  AS VARIANCE_DT --종료예정 차이 일수 
	                             , P.CO_CD
                             	 , SJ.PLAN_VER_NO                  AS PLAN_VER_NO --계획ver
				         FROM TB_WB22M01 P 
				         				LEFT OUTER JOIN TB_WB22M01 R ON R.CO_CD     = P.CO_CD
				         				                               AND R.SALES_CD  =  P.SALES_CD
				         				                               AND R.WBS_PLAN_CODE_KIND = P.WBS_PLAN_CODE_ID
				         				LEFT OUTER JOIN SJD AS SJ  ON P.SALES_CD = SJ.SALES_CD
				         WHERE P.WBS_PLAN_MNG_ID = #{usrId}
				           AND P.WBS_PLAN_CODE_KIND = 'WBSCODE'
				           AND R.FILE_TRGT_KEY IS NULL  
				           AND P.CLOSE_YN = 'Y'                     
                       ) AS X
                 WHERE 1 = 1
                 ORDER BY SALES_CD, WBS_END_DT           
               ) AS Z
         WHERE  1 = 1
         <!-- AND  Z.RN BETWEEN ${firstIndex} AND ${lastIndex} -->
    </select>
    
    <select id="callCopyWbsPlan" statementType="CALLABLE" parameterType="map">
        {call SP_WB22M01_I(
            #{coCd      , mode=IN, jdbcType=VARCHAR},
            #{targetSalesCd   , mode=IN, jdbcType=VARCHAR},
            #{copySalesCd   , mode=IN, jdbcType=VARCHAR},
            #{userId    , mode=IN, jdbcType=VARCHAR},
            #{pgmId     , mode=IN, jdbcType=VARCHAR},
            #{errMsg     , mode=OUT, jdbcType=VARCHAR}
        )}
    </select>
    
    <select id="selectWbsTaskTempletCount" parameterType="Map" resultType="int">
        SELECT COUNT(*)
        FROM   TB_CM05M01
        WHERE  CODE_KIND = #{wbsPlanCodeId}
        AND    USE_YN = 'Y'
    </select>
    
    <select id="selectNewWbsTaskTempletCd" parameterType="Map"  resultType="String">
        SELECT (SELECT #{codeKind} || 'TASK' || (NVL(MAX(SORT_NO),0)+1) FROM TB_CM05M01 WHERE CODE_KIND = #{codeKind})
        FROM   DUAL
    </select>
    
    <select id="selectWbsTaskTempletList" parameterType="Map" resultType="camelMap">
        /* selectWbsTaskTempletList */
        SELECT
            CODE_ID,
            CODE_NM,
            CODE_KIND,
            CODE_DESC,
            CODE_RPRC,
            CODE_ETC,
            SORT_NO,
            USE_YN,
            CREAT_ID,
            TO_CHAR(CREAT_DTTM, 'yyyy-MM-dd') AS CREAT_DTTM,
            CREAT_PGM,
            UDT_ID,
            TO_CHAR(UDT_DTTM, 'yyyy-MM-dd') AS UDT_DTTM,
            UDT_PGM,
            DZ_CODE
        FROM TB_CM05M01
        WHERE CODE_KIND = #{wbsPlanCodeId}
        AND USE_YN = 'Y'
    </select>
    
    <insert id="wbsTaskTempletInsert" parameterType="Map">
        INSERT INTO TB_CM05M01
        (
            CODE_ID,
            CODE_NM,
            CODE_KIND,
            SORT_NO,
            USE_YN,
            CREAT_ID,
            CREAT_PGM,
            CREAT_DTTM
        )
        VALUES(
            #{codeId},
            #{codeNm},
            #{codeKind},
            (SELECT COUNT(*) FROM TB_CM05M01 WHERE CODE_KIND = #{codeKind})+1,
            'Y',
            #{userId},
            #{pgmId},
            SYSDATE
        )
    </insert>
    
    <update id="wbsTaskTempletUpdate" parameterType="Map">
        UPDATE TB_CM05M01
        SET
            CODE_NM = #{codeNm},
            UDT_ID = #{userId},
            UDT_PGM = #{pgmId},
            UDT_DTTM = SYSDATE
        WHERE CODE_ID = #{codeId}
    </update>
    
    <delete id="wbsTaskTempletDelete" parameterType="Map">
        DELETE FROM TB_CM05M01
        WHERE CODE_ID = #{codeId}
    </delete>
    
    <select id="selectHistWBS1Level" parameterType="Map"  resultType="camelMap">
        SELECT SORT_NO AS RN,
	        X.CODE_ID AS WBS_PLAN_CODE_ID, 
	        X.CODE_NM AS WBS_PLAN_CODE_NM, 
	        X.SORT_NO, 
	        Y.FILE_TRGT_KEY,
	        #{coCd} AS CO_CD,
	        Y.WBS_PLAN_NO,
	        Y.VER_NO,
	        #{salesCd} AS SALES_CD,                                
	        NVL(Y.WBS_PLAN_MNG_ID, '') AS WBS_PLAN_MNG_ID,
	        NVL((SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = Y.WBS_PLAN_MNG_ID), '') AS WBS_PLAN_MNG_NM,
	        NVL(Y.WBS_PLANS_DT, '') AS WBS_PLANS_DT,
	        NVL(Y.WBS_PLANE_DT, '') AS WBS_PLANE_DT,
	        Y.DAYCNT,
	        NVL(TO_CHAR(Z.RSLTSS_DT,'YYYY-MM-DD'),'') AS RSLTSS_DT,     --TASK실적시작일
	        NVL(TO_CHAR(Z.RSLTSE_DT,'YYYY-MM-DD'),'') AS RSLTSE_DT,     --TASK실적종료일
	        NVL(RSLT_DAYCNT,'') AS RSLT_DAYCNT, --  TASK실적소요일
	        NVL(Y.WBS_PLAN_STS_CODE_ID, 'WBSPLANSTS10') AS WBS_PLAN_STS_CODE_ID,
	        (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = NVL(Y.WBS_PLAN_STS_CODE_ID, 'WBSPLANSTS10')) AS WBS_PLAN_STS_CODE_ID_NM,
	        Y.LOCK_YN,
	        Y.CLOSE_YN
	   FROM (
		      SELECT CODE_ID, 
		             CODE_NM, 
		             SORT_NO 
		             FROM TB_CM05M01 
		       WHERE CODE_KIND = 'WBSCODE'  
		         AND USE_YN = 'Y'
	           ORDER BY SORT_NO ASC ) X
	          LEFT OUTER JOIN 
	              (SELECT 
			            FILE_TRGT_KEY,
			            WBS_PLAN_CODE_ID,
			            WBS_PLAN_NO,
			            VER_NO,
			            WBS_PLAN_MNG_ID,
			            TO_CHAR(WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT,
			            TO_CHAR(WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT,
			            DAYCNT,
			            WBS_PLAN_STS_CODE_ID,
			            LOCK_YN,
			            CLOSE_YN
			            FROM TB_WB22M01_HIST 
	               WHERE CO_CD = #{coCd}
	                 AND SALES_CD = #{salesCd}
	                 AND VER_NO = #{planVerNo}
	               ) Y
	         ON X.CODE_ID = Y.WBS_PLAN_CODE_ID
			LEFT OUTER JOIN (                  
	                   SELECT WR.WBS_PLAN_CODE_KIND  --WBS계획 LVL1
	                        , MIN(WR.WBS_RSLTSS_DT)   AS RSLTSS_DT     --TASK실적시작일
	                        , MAX(WR.WBS_RSLTSE_DT)   AS RSLTSE_DT     --TASK실적종료일 
	                        , SUM(WR.DAYCNT)          AS RSLT_DAYCNT   --TASK실적소요일
	                     FROM TB_WB23M01  WR--WBS실적 정보
	                    WHERE WR.CO_CD = #{coCd}
	                      AND WR.SALES_CD = #{salesCd}
	                    GROUP BY WR.WBS_PLAN_CODE_KIND
	                  ) Z
	               ON X.CODE_ID = Z.WBS_PLAN_CODE_KIND
    </select>
    
    <select id="ModalwbsPlanconfirmListCount" parameterType="Map" resultType="int">
        WITH SUBJ AS --과제정보
           (
             SELECT X.FILE_TRGT_KEY
                  , X.CO_CD                                                       AS CO_CD              --회사코드
                  , X.SALES_CD                                                    AS SALES_CD           --SALES Code
                  , X.SJ_NO                                                       AS SJ_NO              --과제번호
                  , X.SJ_NM                                                       AS SJ_NM              --과제명
                  , X.VER_NO                                                      AS VER_NO             --버젼
                  , X.MKER_DIV                                                    AS MKER_DIV           --제작처구분
                  , (SELECT FN_CM05M01_CD_TO_NM(X.MKER_DIV) FROM DUAL)           AS MKER_DIV_NM        --제작처구분명 
                  , X.MKER_CD                                                     AS MKER_CD            --제작처코드
                  , BM.CLNT_NM                                                    AS MKER_NM            --제작처명
                  , X.SMRIZE_ID                                                   AS SMRIZE_ID          --총괄PM ID
                  , (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
                  , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
                  , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
                  , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
                  , TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
                  , X.CLOSE_YN                                                    AS CLOSE_YN           --확정유무
                  , X.DSGN_DIF_CODE_ID                                            AS DSGN_DIF_CODE_ID   --설계난이도
                  , (SELECT FN_CM05M01_CD_TO_NM(X.DSGN_DIF_CODE_ID) FROM DUAL)   AS DSGN_DIF_CODE_NM   --설계난이도
                  , X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
                  , X.PRDCTN_DIF_CODE_ID                                          AS PRDCTN_DIF_CODE_ID --생산난이도
                  , (SELECT FN_CM05M01_CD_TO_NM(X.PRDCTN_DIF_CODE_ID) FROM DUAL) AS PRDCTN_DIF_CODE_NM --생산난이도
                  , X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
                  , X.SJ_RMK                                                      AS SJ_RMK             --비고
               FROM TB_WB21M01 X
                    LEFT OUTER JOIN TB_BM02M01 AS BM ON X.MKER_CD = BM.CLNT_CD --거래처정보
              WHERE X.CO_CD = #{coCd}
                 AND X.CLOSE_YN = 'Y'
           ) 
         , SJD AS --수주상세 
           ( 
            SELECT M.CO_CD                                              AS CO_CD        --회사코드
                  , (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명 
                  , M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
                  , X.SALES_CD                                           AS SALES_CD     --SALES Code
                  , M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
                  , C.CLNT_NM                                            AS CLNT_NM      --고객명
                  , M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트 
                  , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
                  , X.PRDT_CD
                  , (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = X.PRDT_CD) AS PRDT_NM
               FROM TB_CR02M01  M --수주마스터
                    INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
                    INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
              WHERE 1=1
                AND M.CO_CD = #{coCd}
                AND X.SALES_CD IS NOT NULL --비용제외
                AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                              FROM SUBJ P 
                             WHERE P.CO_CD    = #{coCd}
                               AND P.CO_CD    = X.CO_CD
                               AND P.SALES_CD = X.SALES_CD
                           ) 
           )
        , PLAN AS --WBS 계획정보 
        (
          SELECT W.CO_CD                   AS CO_CD        --회사코드
               , W.SALES_CD                AS SALES_CD     --SALSES_CD
               , W.CLOSE_YN                AS CLOSE_YN     --확정여부 
               , W.VER_NO                    AS PLAN_VER_NO  --버전
               , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
               , 'N' AS HIST_YN -- hist인지 아닌지
           FROM TB_WB22M01 W--WBS계획
          WHERE W.CO_CD = #{coCd}
            AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
             AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                            FROM SUBJ P 
                           WHERE P.CO_CD    = #{coCd}
                             AND P.CO_CD    = W.CO_CD
                             AND P.SALES_CD = W.SALES_CD
                         ) 
          GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
         UNION ALL
         SELECT W.CO_CD                   AS CO_CD        --회사코드
               , W.SALES_CD                AS SALES_CD     --SALSES_CD
               , W.CLOSE_YN                AS CLOSE_YN     --확정여부 
               , W.VER_NO                  AS PLAN_VER_NO  --버전
               , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
               , 'Y' AS HIST_YN -- hist인지 아닌지
           FROM TB_WB22M01_HIST W--WBS계획이력 
          WHERE W.CO_CD = #{coCd}
            AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
             AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                            FROM SUBJ P 
                           WHERE P.CO_CD    = #{coCd}
                             AND P.CO_CD    = W.CO_CD
                             AND P.SALES_CD = W.SALES_CD
                         ) 
          GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO    
        )
         SELECT COUNT(*) FROM (      
               SELECT ROWNUM AS RN, T.* FROM (  
                      SELECT T.*                        
                        FROM (
                              SELECT X.CO_CD                            AS CO_CD       --회사코드
                                   , CR.ORDRS_NO                        AS ORDRS_NO    --수주번호
                                   , CR.CLNT_CD                         AS CLNT_CD     --고객코드
                                   , CR.CLNT_NM                         AS CLNT_NM     --고객명
                                   , CR.CLNT_PJT                        AS CLNT_PJT    --고객사프로젝트 
                                   , CR.CLNT_PJT_NM                     AS CLNT_PJT_NM --고객사프로젝트명
                                   , X.SJ_NO                            AS SJ_NO             --과제번호 
                                   , X.SJ_NM                            AS SJ_NM             --과제명  
                                   , X.VER_NO                           AS VER_NO            --과제버젼    
                                   , X.CLOSE_YN                         AS SJ_CLOSE_YN       --과제확정유무   
                                   , X.SALES_CD                         AS SALES_CD          --SALES Code 
                                   , X.MKER_DIV                         AS MKER_DIV          --제작처구분
                                   , X.MKER_DIV_NM                      AS MKER_DIV_NM       --제작처구분명
                                   , X.MKER_CD                          AS MKER_CD           --제작처코드
                                   , X.MKER_NM                          AS MKER_NM           --제작처명   
                                   , X.SMRIZE_ID                        AS SMRIZE_ID         --총괄PM ID
                                   , X.SMRIZE_NM                        AS SMRIZE_NM         --총괄PM명  
                                   , X.BEGIN_DT                         AS BEGIN_DT          --시작일    
                                   , X.DE_DT                            AS DE_DT             --출고일    
                                   , X.ACPTNC_DT                        AS ACPTNC_DT         --완료검수일 
                                   , X.REQRE_DAYCNT                     AS REQRE_DAYCNT      --소요일수   
                                   , X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID  --설계난이도
                                   , X.DSGN_DIF_CODE_NM                 AS DSGN_DIF_CODE_NM  --설계난이도 
                                   , X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR    --설계계획공수
                                   , X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID--생산난이도 
                                   , X.PRDCTN_DIF_CODE_NM               AS PRDCTN_DIF_CODE_NM--생산난이도 
                                   , X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR  --생산계획공수
                                   , X.SJ_RMK                           AS SJ_RMK            --비고
                                   , X.FILE_TRGT_KEY                    AS FILE_TRGT_KEY     --FILE_TRGT_KEY
                                   , NVL(PLN.CLOSE_YN,'N')              AS PLAN_CLOSE_YN     --계획확정여부
                                   , NVL(PLN.HIST_YN,'N')                   AS HIST_YN --이력여부
                                FROM SUBJ X
                                     INNER JOIN SJD AS CR ON X.CO_CD = CR.CO_CD AND X.SALES_CD = CR.SALES_CD
                                     LEFT OUTER JOIN PLAN AS PLN ON X.CO_CD = PLN.CO_CD AND X.SALES_CD = PLN.SALES_CD
                               WHERE 1=1
                             ) T
                        WHERE 1=1
						<if test="searchValue != null and !searchValue.equals('') and !searchType.equals('')">
						AND ${searchType} LIKE '%'||#{searchValue}||'%'
						</if>
                        AND SALES_CD != #{salesCd}
                        AND PLAN_CLOSE_YN  = 'N'
                        ) T ) T
    </select>
    
    <select id="ModalwbsPlanconfirmList" parameterType="Map" resultType="camelMap">
        WITH SUBJ AS --과제정보
           (
             SELECT X.FILE_TRGT_KEY
                  , X.CO_CD                                                       AS CO_CD              --회사코드
                  , X.SALES_CD                                                    AS SALES_CD           --SALES Code
                  , X.SJ_NO                                                       AS SJ_NO              --과제번호
                  , X.SJ_NM                                                       AS SJ_NM              --과제명
                  , X.VER_NO                                                      AS VER_NO             --버젼
                  , X.MKER_DIV                                                    AS MKER_DIV           --제작처구분
                  , (SELECT FN_CM05M01_CD_TO_NM(X.MKER_DIV) FROM DUAL)           AS MKER_DIV_NM        --제작처구분명 
                  , X.MKER_CD                                                     AS MKER_CD            --제작처코드
                  , BM.CLNT_NM                                                    AS MKER_NM            --제작처명
                  , X.SMRIZE_ID                                                   AS SMRIZE_ID          --총괄PM ID
                  , (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
                  , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
                  , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
                  , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
                  , TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
                  , X.CLOSE_YN                                                    AS CLOSE_YN           --확정유무
                  , X.DSGN_DIF_CODE_ID                                            AS DSGN_DIF_CODE_ID   --설계난이도
                  , (SELECT FN_CM05M01_CD_TO_NM(X.DSGN_DIF_CODE_ID) FROM DUAL)   AS DSGN_DIF_CODE_NM   --설계난이도
                  , X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
                  , X.PRDCTN_DIF_CODE_ID                                          AS PRDCTN_DIF_CODE_ID --생산난이도
                  , (SELECT FN_CM05M01_CD_TO_NM(X.PRDCTN_DIF_CODE_ID) FROM DUAL) AS PRDCTN_DIF_CODE_NM --생산난이도
                  , X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
                  , X.SJ_RMK                                                      AS SJ_RMK             --비고
               FROM TB_WB21M01 X
                    LEFT OUTER JOIN TB_BM02M01 AS BM ON X.MKER_CD = BM.CLNT_CD --거래처정보
              WHERE X.CO_CD = #{coCd}
                 AND X.CLOSE_YN = 'Y'
           ) 
         , SJD AS --수주상세 
           ( 
            SELECT M.CO_CD                                              AS CO_CD        --회사코드
                  , (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명 
                  , M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
                  , X.SALES_CD                                           AS SALES_CD     --SALES Code
                  , M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
                  , C.CLNT_NM                                            AS CLNT_NM      --고객명
                  , M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트 
                  , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
                  , X.PRDT_CD
                  , (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = X.PRDT_CD) AS PRDT_NM
               FROM TB_CR02M01  M --수주마스터
                    INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
                    INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
              WHERE 1=1
                AND M.CO_CD = #{coCd}
                AND X.SALES_CD IS NOT NULL --비용제외
                AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                              FROM SUBJ P 
                             WHERE P.CO_CD    = #{coCd}
                               AND P.CO_CD    = X.CO_CD
                               AND P.SALES_CD = X.SALES_CD
                           ) 
           )
        , PLAN AS --WBS 계획정보 
        (
          SELECT W.CO_CD                   AS CO_CD        --회사코드
               , W.SALES_CD                AS SALES_CD     --SALSES_CD
               , W.CLOSE_YN                AS CLOSE_YN     --확정여부 
               , W.VER_NO                    AS PLAN_VER_NO  --버전
               , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
               , 'N' AS HIST_YN -- hist인지 아닌지
           FROM TB_WB22M01 W--WBS계획
          WHERE W.CO_CD = #{coCd}
            AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
             AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                            FROM SUBJ P 
                           WHERE P.CO_CD    = #{coCd}
                             AND P.CO_CD    = W.CO_CD
                             AND P.SALES_CD = W.SALES_CD
                         ) 
          GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
         UNION ALL
         SELECT W.CO_CD                   AS CO_CD        --회사코드
               , W.SALES_CD                AS SALES_CD     --SALSES_CD
               , W.CLOSE_YN                AS CLOSE_YN     --확정여부 
               , W.VER_NO                  AS PLAN_VER_NO  --버전
               , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
               , 'Y' AS HIST_YN -- hist인지 아닌지
           FROM TB_WB22M01_HIST W--WBS계획이력 
          WHERE W.CO_CD = #{coCd}
            AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
             AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
                            FROM SUBJ P 
                           WHERE P.CO_CD    = #{coCd}
                             AND P.CO_CD    = W.CO_CD
                             AND P.SALES_CD = W.SALES_CD
                         ) 
          GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO    
        )
         SELECT * FROM (      
               SELECT ROWNUM AS RN, T.* FROM (  
                      SELECT T.*                        
                        FROM (
                              SELECT X.CO_CD                            AS CO_CD       --회사코드
                                   , CR.ORDRS_NO                        AS ORDRS_NO    --수주번호
                                   , CR.CLNT_CD                         AS CLNT_CD     --고객코드
                                   , CR.CLNT_NM                         AS CLNT_NM     --고객명
                                   , CR.CLNT_PJT                        AS CLNT_PJT    --고객사프로젝트 
                                   , CR.CLNT_PJT_NM                     AS CLNT_PJT_NM --고객사프로젝트명
                                   , X.SJ_NO                            AS SJ_NO             --과제번호 
                                   , X.SJ_NM                            AS SJ_NM             --과제명  
                                   , X.VER_NO                           AS VER_NO            --과제버젼    
                                   , X.CLOSE_YN                         AS SJ_CLOSE_YN       --과제확정유무   
                                   , X.SALES_CD                         AS SALES_CD          --SALES Code 
                                   , X.MKER_DIV                         AS MKER_DIV          --제작처구분
                                   , X.MKER_DIV_NM                      AS MKER_DIV_NM       --제작처구분명
                                   , X.MKER_CD                          AS MKER_CD           --제작처코드
                                   , X.MKER_NM                          AS MKER_NM           --제작처명   
                                   , X.SMRIZE_ID                        AS SMRIZE_ID         --총괄PM ID
                                   , X.SMRIZE_NM                        AS SMRIZE_NM         --총괄PM명  
                                   , X.BEGIN_DT                         AS BEGIN_DT          --시작일    
                                   , X.DE_DT                            AS DE_DT             --출고일    
                                   , X.ACPTNC_DT                        AS ACPTNC_DT         --완료검수일 
                                   , X.REQRE_DAYCNT                     AS REQRE_DAYCNT      --소요일수   
                                   , X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID  --설계난이도
                                   , X.DSGN_DIF_CODE_NM                 AS DSGN_DIF_CODE_NM  --설계난이도 
                                   , X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR    --설계계획공수
                                   , X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID--생산난이도 
                                   , X.PRDCTN_DIF_CODE_NM               AS PRDCTN_DIF_CODE_NM--생산난이도 
                                   , X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR  --생산계획공수
                                   , X.SJ_RMK                           AS SJ_RMK            --비고
                                   , X.FILE_TRGT_KEY                    AS FILE_TRGT_KEY     --FILE_TRGT_KEY
                                   , NVL(PLN.CLOSE_YN,'N')              AS PLAN_CLOSE_YN     --계획확정여부
                                   , PLN.PLAN_VER_NO                    AS PLAN_VER_NO       --계획버전
                                   , NVL(PLN.HIST_YN,'N')                   AS HIST_YN --이력여부
                                FROM SUBJ X
                                     INNER JOIN SJD AS CR ON X.CO_CD = CR.CO_CD AND X.SALES_CD = CR.SALES_CD
                                     LEFT OUTER JOIN PLAN AS PLN ON X.CO_CD = PLN.CO_CD AND X.SALES_CD = PLN.SALES_CD
                               WHERE 1=1
                             ) T
                        WHERE 1=1
						<if test="searchValue != null and !searchValue.equals('') and !searchType.equals('')">
						AND ${searchType} LIKE '%'||#{searchValue}||'%'
						</if>
                        AND SALES_CD != #{salesCd}
                        AND PLAN_CLOSE_YN  = 'N'
                        ORDER BY CLNT_NM, ORDRS_NO, SALES_CD, PLAN_VER_NO DESC
                        ) T ) T

    </select>
    
    <select id="selectWbcPlan" parameterType="Map" resultType="camelMap">
        SELECT FILE_TRGT_KEY,
               CO_CD,
               WBS_PLAN_NO,
               WBS_PLAN_CODE_KIND,
               WBS_PLAN_CODE_ID,
               SALES_CD,
               VER_NO,
               SEQ,
               WBS_PLAN_MNG_ID,
               TO_CHAR(WBS_PLANS_DT, 'YYYYMMDD') AS WBS_PLANS_DT,
               TO_CHAR(WBS_PLANE_DT, 'YYYYMMDD') AS WBS_PLANE_DT,
               DAYCNT,
               WBS_PLAN_STS_CODE_ID,
               CREAT_ID,
               CREAT_PGM,
               CREAT_DTTM
		   FROM TB_WB22M01 
		  WHERE CO_CD = #{coCd}
            AND SALES_CD = #{salesCd}
            AND WBS_PLAN_CODE_KIND = 'WBSCODE'
          ORDER BY WBS_PLAN_NO
    </select>
    
    <update id="updateWbcPlan" parameterType="Map">
           UPDATE TB_WB22M01
           SET WBS_PLAN_MNG_ID = #{wbsPlanMngId,  jdbcType=VARCHAR},
               WBS_PLANS_DT = #{wbsPlansDt,  jdbcType=VARCHAR},
               WBS_PLANE_DT = #{wbsPlaneDt,  jdbcType=VARCHAR},
               DAYCNT = #{daycnt,  jdbcType=VARCHAR},
               WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId,  jdbcType=VARCHAR},
               UDT_ID = #{creatId},
               UDT_PGM = #{creatPgm},
               UDT_DTTM = SYSDATE
		  WHERE CO_CD = #{coCd}
            AND SALES_CD = #{salesCd}
       <if test="wbsPlanCodeId != null and !wbsPlanCodeId.equals('')">
            AND WBS_PLAN_CODE_ID = #{wbsPlanCodeId}
       </if>
            AND WBS_PLAN_CODE_KIND = 'WBSCODE'
    </update>
    
    <select id="selectWbcPlanTodoList" parameterType="Map" resultType="camelMap">
        SELECT X.FILE_TRGT_KEY,
		       X.CO_CD, 
		       X.SALES_CD, 
		       'TODODIV10' AS TODO_DIV1_CODE_ID,
		       'TODODIV1015' AS TODO_DIV2_CODE_ID,
		       X.WBS_PLAN_MNG_ID AS TODO_ID,
		       Y.CO_CD AS TODO_CO_CD,
		       Y.EMP_NO,
		       Y.NAME,
		       Y.TEL_NO,
		       Y.EMAIL,
		       #{histYn} AS HIST_YN,
		       X.WBS_PLAN_CODE_KIND,
		       X.WBS_PLAN_CODE_ID,
		       (SELECT FN_CM05M01_CD_TO_NM(X.WBS_PLAN_CODE_ID) FROM DUAL) AS WBS_PLAN_CODE_NM,
		       X.WBS_PLAN_NO,
		       'N' AS SANCTN_STTUS
		FROM TB_WB22M01 X
				LEFT OUTER JOIN TB_CM06M01 Y  ON X.WBS_PLAN_MNG_ID = Y.ID
		WHERE X.CO_CD = #{coCd}
		  AND X.SALES_CD = #{salesCd}
		  AND X.VER_NO = #{verNo}
		  AND X.WBS_PLAN_MNG_ID IS NOT NULL
		  AND X.WBS_PLAN_MNG_ID != #{userId}
		  AND X.WBS_PLAN_CODE_KIND = 'WBSCODE'
    </select>
    
    
    <select id="selectWbcPlanUpdteTodoList" parameterType="Map" resultType="camelMap">
        SELECT FILE_TRGT_KEY,
               CO_CD1 AS CO_CD, 
               SALES_CD1 AS SALES_CD, 
               'TODODIV10' AS TODO_DIV1_CODE_ID,
               'TODODIV1015' AS TODO_DIV2_CODE_ID,
               WBS_PLAN_MNG_ID1 AS TODO_ID,
               TODO_CO_CD,
               EMP_NO,
               NAME,
               TEL_NO,
               EMAIL,
               #{histYn} AS HIST_YN,
               WBS_PLAN_CODE_KIND1,
               WBS_PLAN_CODE_ID1,
               (SELECT FN_CM05M01_CD_TO_NM(WBS_PLAN_CODE_ID1) FROM DUAL) AS WBS_PLAN_CODE_NM,
               WBS_PLAN_NO1 AS WBS_PLAN_NO,
               'N' AS SANCTN_STTUS
               FROM (
                   SELECT 
                          FILE_TRGT_KEY ,
                          CO_CD1,
                          CO_CD2,
                          WBS_PLAN_NO1,
                          WBS_PLAN_NO2,
                          WBS_PLAN_CODE_KIND1,
                          WBS_PLAN_CODE_KIND2,
                          WBS_PLAN_CODE_ID1,
                          WBS_PLAN_CODE_ID2,
                          SALES_CD1,
                          SALES_CD2,
                          SEQ1,
                          SEQ2,
                          WBS_PLAN_MNG_ID1,
                          WBS_PLAN_MNG_ID2,
                          WBS_PLANS_DT1,
                          WBS_PLANS_DT2,
                          WBS_PLANE_DT1,
                          WBS_PLANE_DT2,
                          M.CO_CD AS TODO_CO_CD,
                          M.EMP_NO,
                          M.NAME,
                          M.TEL_NO,
                          M.EMAIL,
                          CHK
                        FROM (
	                            SELECT    X.FILE_TRGT_KEY,
	                                      X.CO_CD AS CO_CD1,
	                                      Y.CO_CD AS CO_CD2,
	                                      X.WBS_PLAN_NO AS WBS_PLAN_NO1,
	                                      Y.WBS_PLAN_NO AS WBS_PLAN_NO2,
	                                      X.WBS_PLAN_CODE_KIND AS WBS_PLAN_CODE_KIND1,
	                                      Y.WBS_PLAN_CODE_KIND AS WBS_PLAN_CODE_KIND2,
	                                      X.WBS_PLAN_CODE_ID AS WBS_PLAN_CODE_ID1,
	                                      Y.WBS_PLAN_CODE_ID AS WBS_PLAN_CODE_ID2,
	                                      --X.VER_NO,
	                                      --Y.VER_NO,
	                                      X.SALES_CD AS SALES_CD1,
	                                      Y.SALES_CD AS SALES_CD2,
	                                      X.SEQ AS SEQ1,
	                                      Y.SEQ AS SEQ2,
	                                      X.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID1,
	                                      Y.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID2,
	                                      X.WBS_PLANS_DT AS WBS_PLANS_DT1,
	                                      Y.WBS_PLANS_DT AS WBS_PLANS_DT2,
	                                      X.WBS_PLANE_DT AS WBS_PLANE_DT1,
	                                      Y.WBS_PLANE_DT AS WBS_PLANE_DT2,
	                                      CASE WHEN (X.WBS_PLAN_MNG_ID||X.WBS_PLANS_DT||X.WBS_PLANE_DT) != NVL(Y.WBS_PLAN_MNG_ID||Y.WBS_PLANS_DT||Y.WBS_PLANE_DT, '..') 
	                                                THEN 1 END AS CHK 
	                                FROM TB_WB22M01 X
			                                 LEFT OUTER JOIN 
			                                          ( SELECT CO_CD, 
			                                                     WBS_PLAN_NO,
			                                                     WBS_PLAN_CODE_KIND,
			                                                     WBS_PLAN_CODE_ID,
			                                                     SALES_CD,
			                                                     VER_NO,
			                                                     SEQ,
			                                                     WBS_PLAN_MNG_ID,
			                                                     WBS_PLANS_DT,
			                                                     WBS_PLANE_DT
				                                            FROM TB_WB22M01_HIST
				                                           WHERE CO_CD = #{coCd}
				                                             AND SALES_CD = #{salesCd} 
				                                             AND VER_NO = (SELECT MAX(TO_NUMBER(VER_NO)) 
					                                           				 FROM TB_WB22M01_HIST 
					                                           			    WHERE CO_CD = #{coCd} 
					                                           			      AND SALES_CD = #{salesCd}
			                                           			           )
			                                          ) Y
						                                    ON X.CO_CD = Y.CO_CD
						                                   AND X.SALES_CD = Y.SALES_CD
						                                   AND X.WBS_PLAN_NO = Y.WBS_PLAN_NO
						                                   AND X.SEQ = Y.SEQ
						                                   AND X.WBS_PLAN_CODE_KIND = Y.WBS_PLAN_CODE_KIND
						                                   AND X.WBS_PLAN_CODE_ID = Y.WBS_PLAN_CODE_ID                    
	                            WHERE X.CO_CD = #{coCd} 
	                              AND X.SALES_CD = #{salesCd}
	                              AND X.WBS_PLAN_CODE_KIND = 'WBSCODE' 
	                              AND X.WBS_PLAN_MNG_ID IS NOT NULL
		                          AND X.WBS_PLAN_MNG_ID != #{userId}
                            ) Z
                            LEFT OUTER JOIN TB_CM06M01 M  ON Z.WBS_PLAN_MNG_ID1 = M.ID 
                      WHERE CHK = 1) X
    </select>
    
    

    <select id="Modalwb22noconfirmListCount" parameterType="Map"  resultType="int">
        WITH SUBJ AS  --과제정보
        (
         SELECT DISTINCT X.*
              , BM.CLNT_NM AS MKER_NM    --제작처명
              , U.NAME     AS SMRIZE_NM  --총괄PM명
         FROM   TB_WB21M01 AS X
                LEFT OUTER JOIN TB_BM02M01 AS BM  ON X.MKER_CD = BM.CLNT_CD  --거래처정보
                LEFT OUTER JOIN TB_CM06M01 AS U  ON U.ID = X.SMRIZE_ID
         WHERE  1 = 1
         AND    X.CLOSE_YN = 'Y'
        )
        , SJD AS  --수주상세
        (
         SELECT DISTINCT M.*
              , M.ORDRS_CLNT_CD AS CLNT_CD  --고객코드
              , X.SALES_CD
              , X.PRDT_CD
              , X.ORDRS_DTL_DIV20
              , X.ORDRS_DTL_DIV30
              , X.MCTYPE
         FROM   TB_CR02M01 AS M  --수주마스터
                INNER JOIN TB_CR02D02 AS X  ON X.CO_CD    = M.CO_CD
                                           AND X.ORDRS_NO = M.ORDRS_NO  --수주상세
         WHERE  1 = 1
         AND    EXISTS (
                        SELECT 'X'  --과제등록된 SALES_CD 만
                        FROM   SUBJ AS P
                        WHERE  P.CO_CD    = X.CO_CD
                        AND    P.SALES_CD = X.SALES_CD
                       )
         AND    X.SALES_CD IS NOT NULL  --비용제외
        )
        , PLAN AS  --WBS 계획정보
        (
         SELECT DISTINCT W.CO_CD          AS CO_CD          --회사코드
              , W.SALES_CD                AS SALES_CD       --SALSES_CD
              , W.CLOSE_YN                AS CLOSE_YN       --확정여부 
              , W.VER_NO                  AS PLAN_VER_NO    --버전
              , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT  --계획LVL1 수
         FROM   TB_WB22M01 AS W  --WBS계획
         WHERE  1 = 1
         AND    EXISTS (
                        SELECT 'X'  --과제등록된 SALES_CD 만
                        FROM   SUBJ AS P
                        WHERE  P.CO_CD    = W.CO_CD
                        AND    P.SALES_CD = W.SALES_CD
                       )
         AND    W.WBS_PLAN_CODE_KIND = 'WBSCODE'
         GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
        )
        SELECT COUNT(*)
        FROM   (
                SELECT ROWNUM AS RN
                     , T.*
                FROM   (
                        SELECT T.*
                             , R1.CODE_NM AS CO_NM
                             , C.CLNT_NM
                             , R2.CODE_NM AS CLNT_PJT_NM
                             , R3.CODE_NM AS MKER_DIV_NM
                             , R4.CODE_NM AS DSGN_DIF_CODE_NM
                             , R5.CODE_NM AS PRDCTN_DIF_CODE_NM
                             , R6.CODE_NM AS NEW_GBN_NM
                             , R7.CODE_NM AS IN_PROD_GBN_NM
                             , R8.CODE_NM AS MCTYPE_NM
                        FROM   (
                                SELECT DISTINCT X.FILE_TRGT_KEY           AS FILE_TRGT_KEY       --FILE_TRGT_KEY
                                     , X.CO_CD                            AS CO_CD               --회사코드
                                     , CR.ORDRS_NO                        AS ORDRS_NO            --수주번호
                                     , CR.CLNT_CD                         AS CLNT_CD             --고객코드
                                     , CR.CLNT_PJT                        AS CLNT_PJT            --고객사프로젝트
                                     , CR.ORDRS_DTL_DIV20                 AS ORDRS_DTL_DIV20     --신작구분
                                     , CR.ORDRS_DTL_DIV30                 AS ORDRS_DTL_DIV30     --자체구분
                                     , CR.MCTYPE                          AS MCTYPE              --머신구분
                                     , X.SJ_NO                            AS SJ_NO               --과제번호 
                                     , X.SJ_NM                            AS SJ_NM               --과제명  
                                     , X.VER_NO                           AS VER_NO              --과제버젼    
                                     , X.CLOSE_YN                         AS SJ_CLOSE_YN         --과제확정유무   
                                     , X.SALES_CD                         AS SALES_CD            --SALES Code
                                     , PLN.CLOSE_YN                       AS PLAN_CLOSE_YN       --계획확정여부
                                     , PLN.PLAN_VER_NO                    AS PLAN_VER_NO         --계획버전
                                     , X.MKER_DIV                         AS MKER_DIV            --제작처구분
                                     , X.MKER_CD                          AS MKER_CD             --제작처코드
                                     , X.MKER_NM                          AS MKER_NM             --제작처명   
                                     , X.SMRIZE_ID                        AS SMRIZE_ID           --총괄PM ID
                                     , X.SMRIZE_NM                        AS SMRIZE_NM           --총괄PM명  
                                     , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')  AS BEGIN_DT            --시작일    
                                     , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')     AS DE_DT               --출고일    
                                     , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT           --완료검수일 
                                     , X.REQRE_DAYCNT                     AS REQRE_DAYCNT        --소요일수   
                                     , X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID    --설계난이도
                                     , X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR      --설계계획공수
                                     , X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID  --생산난이도 
                                     , X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR    --생산계획공수
                                     , X.SJ_RMK                           AS SJ_RMK              --비고
                                FROM   SUBJ AS X
                                       INNER JOIN SJD AS CR  ON X.CO_CD    = CR.CO_CD
                                                            AND X.SALES_CD = CR.SALES_CD
                                       LEFT OUTER JOIN PLAN AS PLN  ON X.CO_CD    = PLN.CO_CD
                                                                   AND X.SALES_CD = PLN.SALES_CD
                                WHERE  1 = 1
                                AND    X.CO_CD = #{coCd}
                                AND    PLN.CLOSE_YN = 'N'
                                <if test="searchValue != null and !searchValue.equals('') and searchType.equals('SMRIZE_NM')">
                                AND    X.SMRIZE_NM LIKE '%'||#{searchValue}||'%'
                                </if>
                               ) AS T
                               LEFT OUTER JOIN TB_BM02M01 AS C   ON C.CLNT_CD = T.CLNT_CD
                               LEFT OUTER JOIN TB_CM05M01 AS R1  ON R1.CODE_ID = T.CO_CD
                               LEFT OUTER JOIN TB_CM05M01 AS R2  ON R2.CODE_ID = T.CLNT_PJT
                               LEFT OUTER JOIN TB_CM05M01 AS R3  ON R3.CODE_ID = T.MKER_DIV
                               LEFT OUTER JOIN TB_CM05M01 AS R4  ON R4.CODE_ID = T.DSGN_DIF_CODE_ID
                               LEFT OUTER JOIN TB_CM05M01 AS R5  ON R5.CODE_ID = T.PRDCTN_DIF_CODE_ID
                               LEFT OUTER JOIN TB_CM05M01 AS R6  ON R6.CODE_ID = T.ORDRS_DTL_DIV20
                               LEFT OUTER JOIN TB_CM05M01 AS R7  ON R7.CODE_ID = T.ORDRS_DTL_DIV30
                               LEFT OUTER JOIN TB_CM05M01 AS R8  ON R8.CODE_ID = T.MCTYPE
                        WHERE  1 = 1
                        ORDER BY C.CLNT_NM, T.ORDRS_NO, T.SALES_CD, T.PLAN_VER_NO DESC
                       ) AS T
               ) AS T
        WHERE  1 = 1
    </select>
    
    <select id="Modalwb22noconfirmList" parameterType="Map"  resultType="camelMap">
        WITH SUBJ AS  --과제정보
        (
         SELECT DISTINCT X.*
              , BM.CLNT_NM AS MKER_NM    --제작처명
              , U.NAME     AS SMRIZE_NM  --총괄PM명
         FROM   TB_WB21M01 AS X
                LEFT OUTER JOIN TB_BM02M01 AS BM  ON X.MKER_CD = BM.CLNT_CD  --거래처정보
                LEFT OUTER JOIN TB_CM06M01 AS U  ON U.ID = X.SMRIZE_ID
         WHERE  1 = 1
         AND    X.CLOSE_YN = 'Y'
        )
        , SJD AS  --수주상세
        (
         SELECT DISTINCT M.*
              , M.ORDRS_CLNT_CD AS CLNT_CD  --고객코드
              , X.SALES_CD
              , X.PRDT_CD
              , X.ORDRS_DTL_DIV20
              , X.ORDRS_DTL_DIV30
              , X.MCTYPE
         FROM   TB_CR02M01 AS M  --수주마스터
                INNER JOIN TB_CR02D02 AS X  ON X.CO_CD    = M.CO_CD
                                           AND X.ORDRS_NO = M.ORDRS_NO  --수주상세
         WHERE  1 = 1
         AND    EXISTS (
                        SELECT 'X'  --과제등록된 SALES_CD 만
                        FROM   SUBJ AS P
                        WHERE  P.CO_CD    = X.CO_CD
                        AND    P.SALES_CD = X.SALES_CD
                       )
         AND    X.SALES_CD IS NOT NULL  --비용제외
        )
        , PLAN AS  --WBS 계획정보
        (
         SELECT DISTINCT W.CO_CD          AS CO_CD          --회사코드
              , W.SALES_CD                AS SALES_CD       --SALSES_CD
              , W.CLOSE_YN                AS CLOSE_YN       --확정여부 
              , W.VER_NO                  AS PLAN_VER_NO    --버전
              , COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT  --계획LVL1 수
         FROM   TB_WB22M01 AS W  --WBS계획
         WHERE  1 = 1
         AND    EXISTS (
                        SELECT 'X'  --과제등록된 SALES_CD 만
                        FROM   SUBJ AS P
                        WHERE  P.CO_CD    = W.CO_CD
                        AND    P.SALES_CD = W.SALES_CD
                       )
         AND    W.WBS_PLAN_CODE_KIND = 'WBSCODE'
         GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
        )
        SELECT *
        FROM   (
                SELECT ROWNUM AS RN
                     , T.*
                FROM   (
                        SELECT T.*
                             , R1.CODE_NM AS CO_NM
                             , C.CLNT_NM
                             , R2.CODE_NM AS CLNT_PJT_NM
                             , R3.CODE_NM AS MKER_DIV_NM
                             , R4.CODE_NM AS DSGN_DIF_CODE_NM
                             , R5.CODE_NM AS PRDCTN_DIF_CODE_NM
                             , R6.CODE_NM AS NEW_GBN_NM
                             , R7.CODE_NM AS IN_PROD_GBN_NM
                             , R8.CODE_NM AS MCTYPE_NM
                        FROM   (
                                SELECT DISTINCT X.FILE_TRGT_KEY           AS FILE_TRGT_KEY       --FILE_TRGT_KEY
                                     , X.CO_CD                            AS CO_CD               --회사코드
                                     , CR.ORDRS_NO                        AS ORDRS_NO            --수주번호
                                     , CR.CLNT_CD                         AS CLNT_CD             --고객코드
                                     , CR.CLNT_PJT                        AS CLNT_PJT            --고객사프로젝트
                                     , CR.ORDRS_DTL_DIV20                 AS ORDRS_DTL_DIV20     --신작구분
                                     , CR.ORDRS_DTL_DIV30                 AS ORDRS_DTL_DIV30     --자체구분
                                     , CR.MCTYPE                          AS MCTYPE              --머신구분
                                     , X.SJ_NO                            AS SJ_NO               --과제번호 
                                     , X.SJ_NM                            AS SJ_NM               --과제명  
                                     , X.VER_NO                           AS VER_NO              --과제버젼    
                                     , X.CLOSE_YN                         AS SJ_CLOSE_YN         --과제확정유무   
                                     , X.SALES_CD                         AS SALES_CD            --SALES Code
                                     , PLN.CLOSE_YN                       AS PLAN_CLOSE_YN       --계획확정여부
                                     , PLN.PLAN_VER_NO                    AS PLAN_VER_NO         --계획버전
                                     , X.MKER_DIV                         AS MKER_DIV            --제작처구분
                                     , X.MKER_CD                          AS MKER_CD             --제작처코드
                                     , X.MKER_NM                          AS MKER_NM             --제작처명   
                                     , X.SMRIZE_ID                        AS SMRIZE_ID           --총괄PM ID
                                     , X.SMRIZE_NM                        AS SMRIZE_NM           --총괄PM명  
                                     , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')  AS BEGIN_DT            --시작일    
                                     , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')     AS DE_DT               --출고일    
                                     , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT           --완료검수일 
                                     , X.REQRE_DAYCNT                     AS REQRE_DAYCNT        --소요일수   
                                     , X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID    --설계난이도
                                     , X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR      --설계계획공수
                                     , X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID  --생산난이도 
                                     , X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR    --생산계획공수
                                     , X.SJ_RMK                           AS SJ_RMK              --비고
                                FROM   SUBJ AS X
                                       INNER JOIN SJD AS CR  ON X.CO_CD    = CR.CO_CD
                                                            AND X.SALES_CD = CR.SALES_CD
                                       LEFT OUTER JOIN PLAN AS PLN  ON X.CO_CD    = PLN.CO_CD
                                                                   AND X.SALES_CD = PLN.SALES_CD
                                WHERE  1 = 1
                                AND    X.CO_CD = #{coCd}
                                AND    PLN.CLOSE_YN = 'N'
                                <if test="searchValue != null and !searchValue.equals('') and searchType.equals('SMRIZE_NM')">
                                AND    X.SMRIZE_NM LIKE '%'||#{searchValue}||'%'
                                </if>
                               ) AS T
                               LEFT OUTER JOIN TB_BM02M01 AS C   ON C.CLNT_CD = T.CLNT_CD
                               LEFT OUTER JOIN TB_CM05M01 AS R1  ON R1.CODE_ID = T.CO_CD
                               LEFT OUTER JOIN TB_CM05M01 AS R2  ON R2.CODE_ID = T.CLNT_PJT
                               LEFT OUTER JOIN TB_CM05M01 AS R3  ON R3.CODE_ID = T.MKER_DIV
                               LEFT OUTER JOIN TB_CM05M01 AS R4  ON R4.CODE_ID = T.DSGN_DIF_CODE_ID
                               LEFT OUTER JOIN TB_CM05M01 AS R5  ON R5.CODE_ID = T.PRDCTN_DIF_CODE_ID
                               LEFT OUTER JOIN TB_CM05M01 AS R6  ON R6.CODE_ID = T.ORDRS_DTL_DIV20
                               LEFT OUTER JOIN TB_CM05M01 AS R7  ON R7.CODE_ID = T.ORDRS_DTL_DIV30
                               LEFT OUTER JOIN TB_CM05M01 AS R8  ON R8.CODE_ID = T.MCTYPE
                        WHERE  1 = 1
                        ORDER BY C.CLNT_NM, T.ORDRS_NO, T.SALES_CD, T.PLAN_VER_NO DESC
                       ) AS T
               ) AS T
        WHERE  1 = 1
        AND    T.RN BETWEEN ${firstIndex} AND ${lastIndex}
    </select>

    <!-- 일괄확정 -->
    <update id="confirm_wb22" parameterType="map">
        UPDATE TB_WB22M01
        SET    CLOSE_YN = 'Y'
             , UDT_ID   = #{userId}
             , UDT_PGM  = #{pgmId,  jdbcType=VARCHAR}
             , UDT_DTTM = SYSDATE
        WHERE  CO_CD    = #{coCd}
        AND    SALES_CD = #{salesCd}
        AND    VER_NO   = #{planVerNo}
    </update>
    
</mapper>
