<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.wb.wb22.mapper.WB22Mapper">
	<select id="selectWbsLeftSalesCodeList" parameterType="Map" resultType="camelMap">
		SELECT * FROM (
				SELECT ROWNUM AS RN, S.* FROM (
						SELECT DISTINCT
							'' PID,
							#{coCd} ID,
							#{coCd} CO_CD, -- 회사코드
							FN_CM05M01_CD_TO_NM(#{coCd}) AS CO_CD_NM,
							'전체' ORDRS_NO,
							'전사 현황' AS SALES_CD,
							'' ORGN_SALES_CD,
							'' ORDRS_CLNT_CD, -- 고객사
							'전체' AS ORDRS_CLNT_NM,
							'' CLNT_PJT,
							'' ORDRS_DTL_DIV20, -- 신작구분
							'' AS ORDRS_DTL_DIV20_NM,
							'', -- 설비명
							0 PLAN_CNT,
							'E' WBS_PLAN_OS_YN,
							'E' PLAN_LOCK_YN,
							'E' PLAN_CLOSE_YN,
							0 RSULT_CNT,
							'E' RSULT_LOCK_YN,
							'E' RSULT_CLOSE_YN,
							'' DATA_GBN
						FROM DUAL

					UNION ALL  --회사명을 Top LEVEL 생성
						SELECT DISTINCT
							X.CO_CD PID,
							TO_CHAR(Y.ORDRS_CLNT_CD) ID,
							X.CO_CD, -- 회사코드
							FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
							A.CLNT_NM,
							A.CLNT_NM  AS SALES_CD,
							'' ORGN_SALES_CD,
							Y.ORDRS_CLNT_CD , -- 고객사
							A.CLNT_NM  AS ORDRS_CLNT_NM,
							'' CLNT_PJT,
							'' ORDRS_DTL_DIV20, -- 신작구분
							'' AS ORDRS_DTL_DIV20_NM,
							'', -- 설비명
							0 PLAN_CNT,
							'E' WBS_PLAN_OS_YN,
							'E' PLAN_LOCK_YN,
							'E' PLAN_CLOSE_YN,
							0 RSULT_CNT,
							'E' RSULT_LOCK_YN,
							'E' RSULT_CLOSE_YN,
							''
						FROM TB_CR02D02 X
								INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
														AND X.ORDRS_NO = Y.ORDRS_NO
								LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
						WHERE X.CO_CD = #{coCd}
					<if test="salesCd != null and !salesCd.equals('')">
						AND X.SALES_CD LIKE '%${salesCd}%'
					</if>

					UNION ALL --오더번호로 1 LEVEL 생성
						SELECT DISTINCT
							TO_CHAR(Y.ORDRS_CLNT_CD) PID,
							X.ORDRS_NO ID,
							X.CO_CD, -- 회사코드
							FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
							X.ORDRS_NO AS ORDRS_NO,
							X.ORDRS_NO AS SALES_CD,
							'',
							Y.ORDRS_CLNT_CD, -- 고객사
							A.CLNT_NM  AS ORDRS_CLNT_NM,
							'',
							'',
							'',
							'', -- 설비명
							0 PLAN_CNT,
							'E' WBS_PLAN_OS_YN,
							'E' PLAN_LOCK_YN,
							'E' PLAN_CLOSE_YN,
							0 RSULT_CNT,
							'E' RSULT_LOCK_YN,
							'E' RSULT_CLOSE_YN,
							''
						FROM TB_CR02D02 X
								INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
														AND X.ORDRS_NO = Y.ORDRS_NO
								LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
						WHERE X.CO_CD = #{coCd}
					<if test="salesCd != null and !salesCd.equals('')">
						AND X.SALES_CD = '%${salesCd}%'
					</if>

					UNION ALL
						SELECT   --Sales 코드 추출
							X.ORDRS_NO PID,
							X.SALES_CD ID,
							X.CO_CD, -- 회사코드
							FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
							X.ORDRS_NO, -- 수주번호
							X.SALES_CD, -- SALES CODE
							max(Y.ORGN_SALES_CD), -- 원천 SALES CODE
							max(Y.ORDRS_CLNT_CD), -- 고객사
							max(A.CLNT_NM)  AS ORDRS_CLNT_NM,
							max(Y.CLNT_PJT), -- 고객사 PJT
							max(X.ORDRS_DTL_DIV20), -- 신작구분
							FN_CM05M01_CD_TO_NM(max(X.ORDRS_DTL_DIV20)) AS ORDRS_DTL_DIV20_NM,
							max(X.EQP_NM), -- 설비명
							COUNT(W.FILE_TRGT_KEY) PLAN_CNT,
							NVL(max(W.WBS_PLAN_OS_YN),'N') WBS_PLAN_OS_YN,
							NVL(max(W.LOCK_YN),'N') PLAN_LOCK_YN,
							NVL(max(W.CLOSE_YN),'N') PLAN_CLOSE_YN,
							COUNT(Z.FILE_TRGT_KEY) RSULT_CNT,
							NVL(max(Z.LOCK_YN),'N') RSULT_LOCK_YN,
							NVL(max(Z.CLOSE_YN),'N') RSULT_CLOSE_YN,
							'D' DATA_GBN  --원시데이타
						FROM TB_CR02D02 X
								INNER JOIN TB_CR02M01 Y  ON X.CO_CD    = Y.CO_CD
														AND X.ORDRS_NO = Y.ORDRS_NO
														AND X.CO_CD = #{coCd}
													<if test="salesCd != null and !salesCd.equals('')">
														AND X.SALES_CD LIKE '%${salesCd}%'
													</if>
								CROSS JOIN (
														SELECT
																CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
																CODE_ID,
																CODE_RPRC,
																CODE_NM,
																CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
																CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
																CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
																LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
																REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
																CONNECT_BY_ISLEAF AS IS_LEAF,
																CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
														FROM TB_CM05M01
														START WITH CODE_ID = 'WBSDIV'
														CONNECT BY PRIOR CODE_ID  =  CODE_KIND
										) CD
								LEFT OUTER JOIN TB_WB01M01 W  ON X.CO_CD    = W.CO_CD
															AND X.SALES_CD = w.SALES_CD
															AND CD.CODE_ID = W.WBS_PLAN_CODE_ID
								LEFT OUTER JOIN TB_WB02M01 Z  ON X.CO_CD    = Z.CO_CD
															AND X.SALES_CD = Z.SALES_CD
															AND CD.CODE_ID = Z.WBS_PLAN_CODE_ID
								LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD
						GROUP BY X.ORDRS_NO, X.SALES_CD, X.CO_CD,Y.ORGN_SALES_CD,Y.ORDRS_CLNT_CD, Y.CLNT_PJT

					)S
					WHERE CO_CD = #{coCd}
					AND SALES_CD LIKE '%${salesCd}%' ) X


		</select>

		<select id="selectSjInfo" parameterType="Map"  resultType="camelMap">
			SELECT  X.CO_CD,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.CO_CD) AS CO_CD_NM,
					X.SJ_NO,
					X.SJ_NM,
					X.VER_NO,
					X.SALES_CD,
					X.MKER_DIV,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.MKER_DIV) AS MKER_DIV_NM,
					X.MKER_CD,
					(SELECT T.CLNT_NM FROM TB_BM02M01 T WHERE T.CLNT_CD = X.MKER_CD) AS MKER_NM,
					X.SMRIZE_ID,
					(SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.SMRIZE_ID) AS SMRIZE_NM,
					TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD') AS BEGIN_DT,
					TO_CHAR(X.DE_DT, 'YYYY-MM-DD') AS DE_DT,
					TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT,
					X.REQRE_DAYCNT,
					X.DSGN_DIF_CODE_ID,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.DSGN_DIF_CODE_ID) AS DSGN_DIF_CODE_NM,
					X.DSGN_PLAN_HOUR,
					X.PRDCTN_DIF_CODE_ID,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.PRDCTN_DIF_CODE_ID) AS PRDCTN_DIF_CODE_NM,
					X.PRDCTN_PLAN_HOUR,
					X.SJ_RMK,
					X.CLOSE_YN,
					X.CREAT_ID,
					(SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.CREAT_ID) AS CREAT_NM,
					X.CREAT_PGM,
					TO_CHAR(CREAT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS CREAT_DTTM,
					X.UDT_ID,
					(SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.UDT_ID) AS UDT_NM,
					X.UDT_PGM,
					TO_CHAR(UDT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS UDT_DTTM,
					CR.ORDRS_NO,
					CR.CLNT_CD,
					CR.CLNT_NM,
					CR.PRDT_CD,
					CR.PRDT_NM,
					CR.CLNT_PJT,
					CR.ORDRS_DIV,
					CR.ORDRS_DIV_NM,
					EXPECT_MH,
					PLAN_EXCEPT,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = PLAN_EXCEPT) AS PLAN_EXCEPT_NM,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.CLNT_PJT) AS CLNT_PJT_NM,
					X.FILE_TRGT_KEY
				FROM TB_WB21M01 X
					LEFT OUTER JOIN (
									SELECT
										CR.CO_CD,
										CR.ORDRS_NO,
										CR.SALES_CD,
										Y.ORDRS_CLNT_CD AS CLNT_CD,
										(SELECT P.CLNT_NM FROM TB_BM02M01 P WHERE P.CLNT_CD = Y.ORDRS_CLNT_CD) AS CLNT_NM,
										Y.CLNT_PJT,
										CR.ORDRS_DTL_DIV20,
										(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
										CR.PRDT_CD,
										(SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = CR.PRDT_CD) AS PRDT_NM,
										CR.ITEM_DIV,
										(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ITEM_DIV) AS ITEM_DIV_NM,
										CR.EQP_NM,
										Y.ORDRS_DIV,
										(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = Y.ORDRS_DIV) AS ORDRS_DIV_NM
									FROM TB_CR02D02 CR INNER JOIN TB_CR02M01 Y  ON CR.CO_CD = Y.CO_CD
																				AND CR.ORDRS_NO = Y.ORDRS_NO
									WHERE CR.SALES_CD = #{salesCd}
									) CR   ON CR.CO_CD = X.CO_CD
										AND CR.SALES_CD = X.SALES_CD
				WHERE X.CO_CD = #{coCd}
				AND X.SALES_CD = #{salesCd}
				AND X.VER_NO = (SELECT MAX(to_NUMBER(VER_NO)) FROM TB_WB21M01 WHERE CO_CD = #{coCd} AND SALES_CD = #{salesCd})
	</select>

	<select id="selectMaxWbsPlanNo" parameterType="Map"  resultType="String">
			SELECT  #{year} || trim(to_char(nvl(SUBSTR(MAX(TO_NUMBER(WBS_PLAN_NO)), 5, 7),0) + 1, '0000000')) AS WBS_PLAN_NO FROM TB_WB22M01
			WHERE CO_CD = #{coCd}
				AND WBS_PLAN_NO LIKE #{year}||'%'
	</select>

	<select id="selectMaxWbsCode" parameterType="Map"  resultType="int">
			SELECT to_char(NVL(MAX(SUBSTR(WBS_PLAN_CODE_ID, 10, 2)),0) + 1,'00') FROM TB_WB22M01
			WHERE LENGTH(WBS_PLAN_CODE_ID) > 9
			AND CO_CD = #{coCd}
			AND SALES_CD = #{salesCd}
			AND WBS_PLAN_CODE_KIND = #{wbsPlanCodeKind}
	</select>

	<select id="selectWbsSeqNext" parameterType="Map" resultType="String">
		SELECT TB_WB22M01_SQ01.NEXTVAL FROM DUAL
	</select>

	<select id="selectWBS1Level" parameterType="Map"  resultType="camelMap">
			SELECT SORT_NO AS RN,
					X.CODE_ID AS WBS_PLAN_CODE_ID,
					X.CODE_NM AS WBS_PLAN_CODE_NM,
					X.SORT_NO,
					Y.FILE_TRGT_KEY,
					#{coCd} AS CO_CD,
					Y.WBS_PLAN_NO,
					Y.VER_NO,
					#{salesCd} AS SALES_CD,
					CASE WHEN xx.UPD_MODE = 'C'  THEN NVL(X.CODE_RPRC, #{userId})
						ELSE NVL(Y.WBS_PLAN_MNG_ID, '') END AS WBS_PLAN_MNG_ID,
					CASE WHEN xx.UPD_MODE = 'C'   THEN (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = NVL(X.CODE_RPRC, #{userId}))
						ELSE NVL((SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = Y.WBS_PLAN_MNG_ID), '') END AS WBS_PLAN_MNG_NM,
					CASE WHEN xx.UPD_MODE = 'C'  THEN #{beginDt}
						ELSE NVL(Y.WBS_PLANS_DT, '')  END AS WBS_PLANS_DT,
					CASE WHEN xx.UPD_MODE = 'C'  THEN #{acptncDt}
						ELSE NVL(Y.WBS_PLANE_DT, '')  END AS WBS_PLANE_DT,
					CASE WHEN xx.UPD_MODE = 'C'  THEN #{reqreDaycnt}
						ELSE Y.DAYCNT  END AS DAYCNT,
					NVL(TO_CHAR(Z.RSLTSS_DT,'YYYY-MM-DD'),'') AS RSLTSS_DT,     --TASK실적시작일
					NVL(TO_CHAR(Z.RSLTSE_DT,'YYYY-MM-DD'),'') AS RSLTSE_DT,     --TASK실적종료일
					NVL(RSLT_DAYCNT,'') AS RSLT_DAYCNT, --  TASK실적소요일
					NVL(Y.WBS_PLAN_STS_CODE_ID, 'WBSPLANSTS10') AS WBS_PLAN_STS_CODE_ID,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = NVL(Y.WBS_PLAN_STS_CODE_ID, 'WBSPLANSTS10')) AS WBS_PLAN_STS_CODE_ID_NM,
--                      Y.LOCK_YN,
--                      Y.CLOSE_YN,
					Y.CREAT_ID,
					Y.CREAT_PGM,
					Y.CREAT_DTTM,
					Y.UDT_ID,
					Y.UDT_PGM,
					Y.UDT_DTTM,
					HZ.LAST_PLAN_MNG,
					XX.UPD_MODE,
					NVL(XX.LOCK_YN,'N') AS LOCK_YN,
					NVL(XX.CLOSE_YN,'N') AS CLOSE_YN,
					Y.CHG_REASON,
					Y.VER_UP_REASON,
					M.DEPT_ID
					FROM (
								SELECT CODE_ID,
										CODE_NM,
										CODE_RPRC,
										SORT_NO
										FROM TB_CM05M01
								WHERE CODE_KIND = 'WBSCODE'
									AND USE_YN = 'Y'
							) X
					
					LEFT OUTER JOIN
								(SELECT
										FILE_TRGT_KEY,
										WBS_PLAN_CODE_ID,
										WBS_PLAN_NO,
										VER_NO,
										WBS_PLAN_MNG_ID,
										TO_CHAR(WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT,
										TO_CHAR(WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT,
										DAYCNT,
										WBS_PLAN_STS_CODE_ID,
										LOCK_YN,
										CLOSE_YN,
										CREAT_ID,
										CREAT_PGM,
										CREAT_DTTM,
										UDT_ID,
										UDT_PGM,
										UDT_DTTM,
										CHG_REASON,
										VER_UP_REASON
										FROM TB_WB22M01
								WHERE CO_CD = #{coCd}
								AND SALES_CD = #{salesCd}) Y  ON X.CODE_ID = Y.WBS_PLAN_CODE_ID
					LEFT OUTER JOIN TB_CM06M01 M ON Y.WBS_PLAN_MNG_ID = M.ID
					LEFT OUTER JOIN (
								WITH CD_Data AS (
									SELECT 
										WR.WBS_PLAN_CODE_KIND  --WBS계획 LVL1
										, MIN(WR.WBS_RSLTSS_DT)   AS RSLTSS_DT     --TASK실적시작일
										, MAX(WR.WBS_RSLTSE_DT)   AS RSLTSE_DT     --TASK실적종료일
										, SUM(WR.DAYCNT)          AS RSLT_DAYCNT   --TASK실적소요일
										, COUNT(*) 				  AS TOTAL_COUNT
										, COUNT(CASE WHEN (WR.CLOSE_YN = 'Y' OR WR.WBS_RSLTS_RATE = 100) THEN 1 END) AS CLOSE_YN_Y_COUNT
									FROM TB_WB23M01  WR--WBS실적 정보
									WHERE WR.CO_CD = #{coCd}
									AND WR.SALES_CD = #{salesCd}
									GROUP BY WR.WBS_PLAN_CODE_KIND          
								)
								SELECT 
									WBS_PLAN_CODE_KIND,
									RSLTSS_DT,
									CASE WHEN (TOTAL_COUNT = CLOSE_YN_Y_COUNT) THEN RSLTSE_DT ELSE '' END RSLTSE_DT,	--100 또는 확정 완료일경우만 종료일자있음
									RSLT_DAYCNT
								FROM CD_Data
							) Z ON X.CODE_ID = Z.WBS_PLAN_CODE_KIND
					LEFT OUTER JOIN ( --이력정보에서 최종 버전의 담당자와 일정을 추출해서 담당자,일정 변경여부 판단에 사용한다.
							SELECT WBS_PLAN_CODE_ID,
									(WBS_PLAN_MNG_ID || TO_CHAR(WBS_PLANS_DT, 'YYYY-MM-DD') || TO_CHAR(WBS_PLANE_DT, 'YYYY-MM-DD')) AS LAST_PLAN_MNG
							FROM TB_WB22M01_HIST
							WHERE CO_CD = #{coCd}
							AND SALES_CD = #{salesCd}
							AND VER_NO = (SELECT max(to_number(VER_NO))
											FROM TB_WB22M01_HIST
												WHERE CO_CD = #{coCd}
												AND SALES_CD = #{salesCd})
							) HZ    ON X.CODE_ID = HZ.WBS_PLAN_CODE_ID,
					( --SalesCode별 등록여부를 체크하기 위함..최초 등록은 C,  수정은 U임
							SELECT CASE WHEN count(NVL(SALES_CD,0)) > 0 THEN 'U' ELSE 'C' END AS UPD_MODE,
									max(LOCK_YN) AS LOCK_YN,
									max(CLOSE_YN) AS CLOSE_YN
							FROM TB_WB22M01
							WHERE CO_CD = #{coCd}
								AND SALES_CD = #{salesCd}
						) xx
					ORDER BY SORT_NO
	</select>

	<select id="selectWBS2Level" parameterType="Map"  resultType="camelMap">
		/* selectWBS2Level */
		SELECT ROWNUM AS RN
				, X.FILE_TRGT_KEY
				, X.CO_CD
				, X.SALES_CD
				, X.WBS_PLAN_NO
				, X.WBS_PLAN_CODE_KIND
				, (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.WBS_PLAN_CODE_KIND) AS WBS_PLAN_CODE_KIND_NM
				, X.WBS_PLAN_CODE_ID
				, X.WBS_PLAN_CODE_NM
				, X.SEQ
				, X.VER_NO
				, X.WBS_PLAN_MNG_ID
				, (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.WBS_PLAN_MNG_ID) AS WBS_PLAN_MNG_NM
				, TO_CHAR(X.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT
				, TO_CHAR(X.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT
				, X.DAYCNT
				, X.EXPECT_MH
				, X.WBS_PLAN_STS_CODE_ID
				, (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.WBS_PLAN_STS_CODE_ID) AS WBS_PLAN_STS_CODE_ID_NM
				, X.CLOSE_YN
				, X.CREAT_ID
				, X.CREAT_PGM
				, X.CREAT_DTTM
				, X.UDT_ID
				, X.UDT_PGM
				, X.UDT_DTTM
				, Y.FILE_TRGT_KEY AS RSLTS_FILE_TRGT_KEY
				, Y.WBS_RSLTS_NO
				, Y.WBS_RSLTS_ID
				, (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = Y.WBS_RSLTS_ID) AS WBS_RSLTS_NM
				, Y.WBS_RSLTS_RATE
				, Y.WBS_PLAN_MH  AS WBS_RSLTS_PLAN_MH
				, Y.WBS_RSLTS_MH
				, Y.WBS_RSLTS_CNTS
				, TO_CHAR(Y.WBS_RSLTSS_DT, 'YYYY-MM-DD') AS WBS_RSLTSS_DT
				, TO_CHAR(Y.WBS_RSLTSE_DT, 'YYYY-MM-DD') AS WBS_RSLTSE_DT
				, Y.DAYCNT AS RSLTS_DAYCNT
				, NVL(Y.CLOSE_YN,'N') AS RSLTS_CLOSE_YN
				, P.*
				, R.*
				FROM TB_WB22M01 X --WBS 계획
					LEFT OUTER JOIN TB_WB23M01 Y --WBS 실적
					ON  X.CO_CD              = Y.CO_CD
					AND X.SALES_CD           = Y.SALES_CD
					AND X.WBS_PLAN_CODE_KIND = Y.WBS_PLAN_CODE_KIND
					AND X.WBS_PLAN_CODE_ID   = Y.WBS_PLAN_CODE_ID
					AND X.WBS_PLAN_NO        = Y.WBS_RSLTS_NO
					LEFT OUTER JOIN (
									SELECT A1.CO_CD              AS P_CO_CD
											, A1.SALES_CD           AS P_SALES_CD
											, A1.WBS_PLAN_CODE_KIND AS P_WBS_PLAN_CODE_KIND
											, A1.WBS_PLAN_CODE_ID   AS P_WBS_PLAN_CODE_ID
											, COUNT(A1.ISS_NO)      AS P_ISS_CNT
										FROM TB_WB24M02 A1
										WHERE A1.WBS_PLAN_NO IS NOT NULL --계획이슈
										AND A1.CO_CD    = #{coCd}
										AND A1.SALES_CD = #{salesCd}
										GROUP BY A1.CO_CD, A1.SALES_CD, A1.WBS_PLAN_CODE_KIND, A1.WBS_PLAN_CODE_ID
									) P
									ON  X.CO_CD              = P.P_CO_CD
									AND X.SALES_CD           = P.P_SALES_CD
									AND X.WBS_PLAN_CODE_KIND = P.P_WBS_PLAN_CODE_KIND
									AND X.WBS_PLAN_CODE_ID   = P.P_WBS_PLAN_CODE_ID
					LEFT OUTER JOIN (
									SELECT A1.CO_CD              AS R_CO_CD
											, A1.SALES_CD           AS R_SALES_CD
											, A1.WBS_PLAN_CODE_KIND AS R_WBS_PLAN_CODE_KIND
											, A1.WBS_PLAN_CODE_ID   AS R_WBS_PLAN_CODE_ID
											, COUNT(A1.ISS_NO)      AS R_ISS_CNT
										FROM TB_WB24M02 A1
										WHERE A1.WBS_RSLTS_NO IS NOT NULL --실적이슈
										AND A1.CO_CD    = #{coCd}
										AND A1.SALES_CD = #{salesCd}
										GROUP BY A1.CO_CD, A1.SALES_CD, A1.WBS_PLAN_CODE_KIND, A1.WBS_PLAN_CODE_ID
									) R
									ON  Y.CO_CD              = R.R_CO_CD
									AND Y.WBS_PLAN_CODE_KIND = R.R_WBS_PLAN_CODE_KIND
									AND Y.WBS_PLAN_CODE_ID   = R.R_WBS_PLAN_CODE_ID
									AND Y.SALES_CD           = R.R_SALES_CD
			WHERE X.CO_CD              = #{coCd}
				AND X.SALES_CD           = #{salesCd}
				AND X.WBS_PLAN_CODE_KIND = #{wbsPlanCodeKind}
			ORDER BY X.SEQ ASC
	</select>

	<insert id="wbsLevel1Insert" parameterType="Map">
				INSERT INTO TB_WB22M01
				(
					FILE_TRGT_KEY,
					CO_CD,
					WBS_PLAN_NO,
					WBS_PLAN_CODE_KIND,
					WBS_PLAN_CODE_ID,
					SALES_CD,
					VER_NO,
					SEQ,
					WBS_PLAN_MNG_ID,
					WBS_PLANS_DT,
					WBS_PLANE_DT,
					DAYCNT,
					WBS_PLAN_STS_CODE_ID,
					CREAT_ID,
					CREAT_PGM,
					CREAT_DTTM,
                    CHG_REASON
				)
				VALUES
				(
					#{fileTrgtKey,  jdbcType=VARCHAR},
					#{coCd,  jdbcType=VARCHAR},
					#{wbsPlanNo,  jdbcType=VARCHAR},
					'WBSCODE',
					#{wbsPlanCodeId,  jdbcType=VARCHAR},
					#{salesCd,  jdbcType=VARCHAR},
					#{verNo},
					#{sortNo},
					#{wbsPlanMngId,  jdbcType=VARCHAR},
					#{wbsPlansDt,  jdbcType=VARCHAR},
					#{wbsPlaneDt,  jdbcType=VARCHAR},
					#{daycnt,  jdbcType=VARCHAR},
					#{wbsPlanStsCodeId,  jdbcType=VARCHAR},
					#{creatId},
					#{creatPgm},
					SYSDATE,
                    #{chgReason,  jdbcType=VARCHAR}
				)
	</insert>

	<update id="wbsLevel1Update" parameterType="Map">
				UPDATE TB_WB22M01
				SET 
					  WBS_PLAN_CODE_ID = #{wbsPlanCodeId}
					, WBS_PLAN_MNG_ID = #{wbsPlanMngId,  jdbcType=VARCHAR}
					, WBS_PLANS_DT = #{wbsPlansDt,  jdbcType=VARCHAR}
					,WBS_PLANE_DT = #{wbsPlaneDt,  jdbcType=VARCHAR}
					, DAYCNT = #{daycnt,  jdbcType=VARCHAR}
					, WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId,  jdbcType=VARCHAR}
					, UDT_ID = #{creatId}
					, UDT_PGM = #{creatPgm}
					, UDT_DTTM = SYSDATE
                    , CHG_REASON         = #{chgReason, jdbcType=VARCHAR}
			WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</update>

	<select id="wbsPlanListChk" parameterType="Map" resultType="camelMap">
			SELECT *  FROM TB_WB22M01
				WHERE CO_CD  = #{coCd}
						AND SALES_CD  = #{salesCd}
						AND WBS_PLAN_CODE_KIND  = #{wbsPlanCodeKind}
	</select>

	<delete id="deleteWbsPlanlist" parameterType="Map">
			DELETE FROM TB_WB22M01
				WHERE CO_CD = #{coCd}
				AND SALES_CD = #{salesCd}
				AND WBS_PLAN_CODE_KIND = #{wbsPlanCodeKind}
	</delete>


	<update id="wbsLevel2MngIdUpdate" parameterType="Map">
				UPDATE TB_WB22M01
				SET
					WBS_PLAN_MNG_ID = #{wbsPlanMngId}
				WHERE CO_CD = #{coCd}
				  AND SALES_CD	 			= #{salesCd}
				  AND WBS_PLAN_CODE_KIND 	= #{wbsPlanCodeKind}
	</update>

	<update id="wbsRsltsMngIdUpdate" parameterType="Map">
				UPDATE TB_WB23M01
				SET
					WBS_RSLTS_ID = #{wbsPlanMngId}
				WHERE CO_CD = #{coCd}
				AND SALES_CD 			= #{salesCd}
				AND WBS_PLAN_CODE_KIND 	= #{wbsPlanCodeKind}
	</update>

	<insert id="wbsLevel2Insert" parameterType="Map">
				INSERT INTO TB_WB22M01
				(
					FILE_TRGT_KEY,
					CO_CD,
					WBS_PLAN_NO,
					WBS_PLAN_CODE_KIND,
					WBS_PLAN_CODE_ID,
					WBS_PLAN_CODE_NM,
					SALES_CD,
					VER_NO,
					SEQ,
					WBS_PLAN_MNG_ID,
					WBS_PLANS_DT,
					WBS_PLANE_DT,
					DAYCNT,
					EXPECT_MH,
					WBS_PLAN_STS_CODE_ID,
					CREAT_ID,
					CREAT_PGM,
					CREAT_DTTM,
					VER_UP_REASON
				)
				VALUES
				(
					#{fileTrgtKey},
					#{coCd},
					#{wbsPlanNo},
					#{wbsPlanCodeKind},
					#{wbsPlanCodeId},
					#{wbsPlanCodeNm},
					#{salesCd},
					#{verNo},
					#{seq},
					#{wbsPlanMngId},
					#{wbsPlansDt},
					#{wbsPlaneDt},
					#{daycnt},
					#{expectMh, jdbcType=VARCHAR},
					#{wbsPlanStsCodeId},
					#{creatId},
					#{creatPgm},
					SYSDATE,
					#{verUpReason, jdbcType=VARCHAR}
				)
	</insert>

	<update id="wbsLevel2Update" parameterType="Map">
				UPDATE TB_WB22M01
					SET SEQ = #{seq},
						WBS_PLAN_CODE_NM = #{wbsPlanCodeNm, jdbcType=VARCHAR},
						WBS_PLAN_MNG_ID = #{wbsPlanMngId, jdbcType=VARCHAR},
						WBS_PLANS_DT = #{wbsPlansDt, jdbcType=VARCHAR},
						WBS_PLANE_DT = #{wbsPlaneDt, jdbcType=VARCHAR},
						DAYCNT = #{daycnt, jdbcType=VARCHAR},
						EXPECT_MH = #{expectMh, jdbcType=VARCHAR},
						WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId},
						UDT_ID = #{creatId},
						UDT_PGM = #{creatPgm},
						UDT_DTTM = SYSDATE,
						VER_UP_REASON = #{verUpReason, jdbcType=VARCHAR}
					WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</update>

	<delete id="wbsLevel2Delete" parameterType="Map">
		DELETE FROM TB_WB22M01
		WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>

	<select id="selectVerNoNext" parameterType="Map" resultType="camelMap">
			SELECT NVL(MAX(TO_NUMBER(VER_NO)), 0) + 1 AS VER_NO FROM TB_WB22M01
			WHERE CO_CD = #{coCd}
			AND SALES_CD = #{salesCd}
	</select>

	<update id="wbsVerUpUpdate" parameterType="Map">
				UPDATE TB_WB22M01
					SET VER_NO = #{newVerNo},
						CLOSE_YN = 'N',
						VER_UP_REASON = #{verUpReason}
				WHERE CO_CD = #{coCd}
				AND SALES_CD = #{salesCd}
				AND VER_NO = #{verNo}
	</update>

	<insert id="wbsVerUpInsert" parameterType="Map">
				INSERT INTO TB_WB22M01_HIST
				(
					FILE_TRGT_KEY,
					CO_CD,
					WBS_PLAN_NO,
					WBS_PLAN_CODE_KIND,
					WBS_PLAN_CODE_ID,
					SALES_CD,
					VER_NO,
					SEQ,
					WBS_PLAN_MNG_ID,
					WBS_PLANS_DT,
					WBS_PLANE_DT,
					DAYCNT,
					WBS_PLAN_STS_CODE_ID,
					CLOSE_YN,
					CLOSE_ID,
					CLOSE_DTTM,
					VER_UP_REASON
				)
				VALUES
				(
					#{fileTrgtKey},
					#{coCd},
					#{wbsPlanNo},
					'WBSCODE',
					#{wbsPlanCodeId},
					#{salesCd},
					#{verNo},
					#{seq},
					#{wbsPlanMngId, jdbcType=VARCHAR},
					#{wbsPlansDt, jdbcType=VARCHAR},
					#{wbsPlaneDt, jdbcType=VARCHAR},
					#{daycnt},
					#{wbsPlanStsCodeId},
					#{closeYn},
					#{creatId},
					SYSDATE,
					#{verUpReason}
				)
	</insert>

	<!-- 확정시 변경한 값을 다시 저장하기-->
	<update id="wbsLevel1confirm" parameterType="Map">
				UPDATE TB_WB22M01
				SET   WBS_PLAN_MNG_ID = #{wbsPlanMngId, jdbcType=VARCHAR},
						WBS_PLANS_DT = #{wbsPlansDt, jdbcType=VARCHAR},
						WBS_PLANE_DT = #{wbsPlaneDt, jdbcType=VARCHAR},
						DAYCNT = #{daycnt},
						WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId},
						CLOSE_YN = #{flag},
						UDT_ID = #{creatId},
						UDT_PGM = #{creatPgm},
						UDT_DTTM = SYSDATE
				WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</update>

	<!-- 확정시  동일한 salesCd에 해당하는 1레벨은 일괄 적용 건별 수정에서는 추가된 코드나 삭제된 코드는 적용되지 않음(코드 추가 삭제로 인한 처리 추가)-->
	<update id="wbsLevel1confirmAll" parameterType="Map">
				UPDATE TB_WB22M01
				SET   CLOSE_YN = #{flag},
						UDT_ID = #{creatId},
						UDT_PGM = #{creatPgm},
						UDT_DTTM = SYSDATE
				WHERE SALES_CD = #{salesCd}
				AND CO_CD = #{coCd}
				AND WBS_PLAN_CODE_KIND = 'WBSCODE'
	</update>

	<update id="wbsLevel2confirm" parameterType="Map">
				UPDATE TB_WB22M01
					SET WBS_PLAN_CODE_NM = #{wbsPlanCodeNm},
						WBS_PLAN_MNG_ID = #{wbsPlanMngId},
						WBS_PLANS_DT = #{wbsPlansDt},
						WBS_PLANE_DT = #{wbsPlaneDt},
						DAYCNT = #{daycnt},
						WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId},
						CLOSE_YN = #{flag},
						UDT_ID = #{creatId},
						UDT_PGM = #{creatPgm},
						UDT_DTTM = SYSDATE
					WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</update>

	<select id="selectRsltsSharngList" parameterType="Map" resultType="camelMap">
			SELECT ROWNUM AS RN,
					X.SALES_CD,
					X.TODO_CODE_ID AS WBS_RSLTS_PLAN_CODE_ID,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CODE_ID) AS WBS_RSLTS_PLAN_CODE_NM,
					X.TODO_NO AS WBS_RSLTS_PLAN_NO,
					X.TODO_CO_CD AS WBS_RSLTS_CO_CD,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CO_CD) AS WBS_RSLTS_CO_CD_NM,
					Y.ID AS WBS_SHARNG_USER_ID,
					Y.EMP_NO,
					Y.NAME,
					Y.TEL_NO,
					Y.EMAIL,
					TO_CHAR(X.TODO_CF_DT,'YYYY-MM-DD') AS TODO_CF_DT,
					X.TODO_CF_OPN
					FROM TB_WB20M03 X
					INNER JOIN TB_CM06M01 Y
					ON X.TODO_CO_CD = Y.CO_CD
					AND X.TODO_ID = Y.ID
					WHERE X.TODO_CO_CD = '${coCd}'
					AND X.TODO_CODE_ID = '${codeId}'
					AND X.SALES_CD = '${salesCd}'
					AND X.TODO_DIV2_CODE_ID = 'TODODIV1020'
					ORDER BY ROWNUM ASC
	</select>

	<select id="selectRsltsApprovalList" parameterType="Map" resultType="camelMap">
			SELECT ROWNUM AS RN,
					X.SALES_CD,
					X.TODO_CODE_ID AS WBS_RSLTS_PLAN_CODE_ID,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CODE_ID) AS WBS_RSLTS_PLAN_CODE_NM,
					X.TODO_NO AS WBS_RSLTS_PLAN_NO,
					X.TODO_CO_CD AS WBS_RSLTS_CO_CD,
					(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CO_CD) AS WBS_RSLTS_CO_CD_NM,
					Y.ID AS WBS_SHARNG_USER_ID,
					Y.EMP_NO,
					Y.NAME,
					Y.TEL_NO,
					Y.EMAIL,
					TO_CHAR(X.TODO_CF_DT,'YYYY-MM-DD') AS TODO_CF_DT,
					X.TODO_CF_OPN
					FROM TB_WB20M03 X
					INNER JOIN TB_CM06M01 Y
					ON X.TODO_CO_CD = Y.CO_CD
					AND X.TODO_ID = Y.ID
					WHERE X.TODO_CO_CD = '${coCd}'
					AND X.TODO_CODE_ID = '${codeId}'
					AND X.SALES_CD = '${salesCd}'
					AND X.TODO_DIV2_CODE_ID = 'TODODIV2010'
					ORDER BY ROWNUM ASC
	</select>

	<select id="selectWbsRstlsSeqNext" parameterType="Map" resultType="int">
		SELECT TB_WB23M01_SQ01.NEXTVAL FROM DUAL
	</select>

	<insert id="wbsRsltsInsert" parameterType="Map">
				INSERT INTO TB_WB23M01
				(
						FILE_TRGT_KEY,
						CO_CD,
						WBS_RSLTS_NO,
						WBS_PLAN_CODE_KIND,
						WBS_PLAN_CODE_ID,
						SALES_CD,
						WBS_RSLTS_ID,
						WBS_RSLTS_RATE,
						WBS_RSLTS_MH,
						WBS_RSLTS_CNTS,
						WBS_RSLTSS_DT,
						WBS_RSLTSE_DT,
						DAYCNT,
						LOCK_YN,
						CLOSE_YN,
						CREAT_ID,
						CREAT_PGM,
						CREAT_DTTM
				)
				VALUES
				(
						#{rsltsFileTrgtKey},
						#{coCd},
						#{wbsRsltsNo},
						#{wbsPlanCodeKind2_P},
						#{wbsPlanCodeId2_P},
						#{salesCd2_P},
						#{wbsRsltsId},
						#{wbsRsltsRate},
						#{wbsRsltsMh},
						#{wbsRsltsCnts},
						#{wbsRsltssDt},
						#{wbsRsltseDt},
						#{rsltsDaycnt},
						'N',
						'N',
						#{userId},
						#{pgmId},
						SYSDATE
				)
	</insert>

	<update id="wbsRsltsUpdate" parameterType="Map">
				UPDATE TB_WB23M01
					SET WBS_RSLTS_RATE = #{wbsRsltsRate},
						WBS_RSLTS_MH = #{wbsRsltsMh},
						WBS_RSLTS_CNTS = #{wbsRsltsCnts},
						WBS_RSLTSS_DT = #{wbsRsltssDt},
						WBS_RSLTSE_DT = #{wbsRsltseDt},
						DAYCNT = #{rsltsDaycnt},
						UDT_ID = #{userId},
						UDT_PGM = #{pgmId},
						UDT_DTTM = SYSDATE
					WHERE FILE_TRGT_KEY =  #{rsltsFileTrgtKey}
	</update>

	<delete id="wbsRsltsDelete" parameterType="Map">
		DELETE FROM TB_WB23M01
		WHERE (CO_CD, SALES_CD, WBS_PLAN_CODE_KIND, WBS_PLAN_CODE_ID, WBS_RSLTS_NO) = (SELECT CO_CD,SALES_CD,WBS_PLAN_CODE_KIND,WBS_PLAN_CODE_ID,WBS_PLAN_NO FROM TB_WB22M01 WHERE FILE_TRGT_KEY = #{fileTrgtKey});
	</delete>

	<update id="wbsRsltsconfirm" parameterType="Map">
				UPDATE TB_WB23M01
					SET CLOSE_YN = #{flag},
						UDT_ID = #{userId},
						UDT_PGM = #{pgmId},
						UDT_DTTM = SYSDATE
					WHERE FILE_TRGT_KEY =  #{rsltsFileTrgtKey}
	</update>

	<select id="selectWbsSjListCount" parameterType="Map" resultType="int">
			WITH SUBJ AS --과제정보
				(
				SELECT X.FILE_TRGT_KEY
						, X.CO_CD                                                       AS CO_CD              --회사코드
						, X.SALES_CD                                                    AS SALES_CD           --SALES Code
						, X.SJ_NO                                                       AS SJ_NO              --과제번호
						, X.SJ_NM                                                       AS SJ_NM              --과제명
						, X.VER_NO                                                      AS VER_NO             --버젼
						, X.MKER_DIV                                                    AS MKER_DIV           --제작처구분
						, (SELECT FN_CM05M01_CD_TO_NM(X.MKER_DIV) FROM DUAL)           AS MKER_DIV_NM        --제작처구분명
						, X.MKER_CD                                                     AS MKER_CD            --제작처코드
						, BM.CLNT_NM                                                    AS MKER_NM            --제작처명
						, X.SMRIZE_ID                                                   AS SMRIZE_ID          --총괄PM ID
						, (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
						, TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
						, TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
						, TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
						, TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
						, X.CLOSE_YN                                                    AS CLOSE_YN           --확정유무
						, X.DSGN_DIF_CODE_ID                                            AS DSGN_DIF_CODE_ID   --설계난이도
						, (SELECT FN_CM05M01_CD_TO_NM(X.DSGN_DIF_CODE_ID) FROM DUAL)   AS DSGN_DIF_CODE_NM   --설계난이도
						, X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
						, X.PRDCTN_DIF_CODE_ID                                          AS PRDCTN_DIF_CODE_ID --생산난이도
						, (SELECT FN_CM05M01_CD_TO_NM(X.PRDCTN_DIF_CODE_ID) FROM DUAL) AS PRDCTN_DIF_CODE_NM --생산난이도
						, X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
						, X.SJ_RMK                                                      AS SJ_RMK             --비고
					FROM TB_WB21M01 X
						LEFT OUTER JOIN TB_BM02M01 AS BM ON X.MKER_CD = BM.CLNT_CD --거래처정보
					WHERE X.CO_CD = #{coCd}
					AND TO_NUMBER(X.VER_NO) = (
    SELECT MAX(TO_NUMBER(XS.VER_NO))
     FROM TB_WB21M01 XS WHERE XS.CO_CD = X.CO_CD AND XS.SALES_CD = X.SALES_CD )
					<if test="salesCd == null or salesCd.equals('')">
						AND X.BEGIN_DT BETWEEN #{beginDt} AND #{deDt}
					</if>
					<if test="salesCd != null and !salesCd.equals('')">
						AND X.SALES_CD LIKE '%${salesCd}%'
					</if>
					<if test="sjNm != null and !sjNm.equals('')">
						AND X.SJ_NM LIKE '%${sjNm}%'
					</if>
					AND X.CLOSE_YN = 'Y'
				)
			, SJD AS --수주상세
				(
				SELECT M.CO_CD                                              AS CO_CD        --회사코드
						, (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명
						, M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
						, X.SALES_CD                                           AS SALES_CD     --SALES Code
						, M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
						, C.CLNT_NM                                            AS CLNT_NM      --고객명
						, M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트
						, (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
						, X.PRDT_CD
						, (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = X.PRDT_CD) AS PRDT_NM
					FROM TB_CR02M01  M --수주마스터
						INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세
						INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
					WHERE 1=1
					AND M.CO_CD = #{coCd}
					AND X.SALES_CD IS NOT NULL --비용제외
					AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
									FROM SUBJ P
								WHERE P.CO_CD    = #{coCd}
									AND P.CO_CD    = X.CO_CD
									AND P.SALES_CD = X.SALES_CD
								)
				)
			, PLAN AS --WBS 계획정보
			(
				SELECT W.CO_CD                   AS CO_CD        --회사코드
					, W.SALES_CD                AS SALES_CD     --SALSES_CD
					, W.CLOSE_YN                AS CLOSE_YN     --확정여부
					, W.VER_NO                    AS PLAN_VER_NO  --버전
					, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
					, 'N' AS HIST_YN -- hist인지 아닌지
				FROM TB_WB22M01 W--WBS계획
				WHERE W.CO_CD = #{coCd}
				AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
				AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
								FROM SUBJ P
								WHERE P.CO_CD    = #{coCd}
								AND P.CO_CD    = W.CO_CD
								AND P.SALES_CD = W.SALES_CD
							)
				GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
			UNION ALL
			SELECT W.CO_CD                   AS CO_CD        --회사코드
					, W.SALES_CD                AS SALES_CD     --SALSES_CD
					, W.CLOSE_YN                AS CLOSE_YN     --확정여부
					, W.VER_NO                  AS PLAN_VER_NO  --버전
					, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
					, 'Y' AS HIST_YN -- hist인지 아닌지
				FROM TB_WB22M01_HIST W--WBS계획이력
				WHERE W.CO_CD = #{coCd}
				AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
				AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
								FROM SUBJ P
								WHERE P.CO_CD    = #{coCd}
								AND P.CO_CD    = W.CO_CD
								AND P.SALES_CD = W.SALES_CD
							)
				GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
			)
			SELECT COUNT(*) FROM (
					SELECT ROWNUM AS RN, T.* FROM (
							SELECT T.*
							FROM (
									SELECT X.CO_CD                            AS CO_CD       --회사코드
										, CR.ORDRS_NO                        AS ORDRS_NO    --수주번호
										, CR.CLNT_CD                         AS CLNT_CD     --고객코드
										, CR.CLNT_NM                         AS CLNT_NM     --고객명
										, CR.CLNT_PJT                        AS CLNT_PJT    --고객사프로젝트
										, CR.CLNT_PJT_NM                     AS CLNT_PJT_NM --고객사프로젝트명
										, X.SJ_NO                            AS SJ_NO             --과제번호
										, X.SJ_NM                            AS SJ_NM             --과제명
										, X.VER_NO                           AS VER_NO            --과제버젼
										, X.CLOSE_YN                         AS SJ_CLOSE_YN       --과제확정유무
										, X.SALES_CD                         AS SALES_CD          --SALES Code
										, X.MKER_DIV                         AS MKER_DIV          --제작처구분
										, X.MKER_DIV_NM                      AS MKER_DIV_NM       --제작처구분명
										, X.MKER_CD                          AS MKER_CD           --제작처코드
										, X.MKER_NM                          AS MKER_NM           --제작처명
										, X.SMRIZE_ID                        AS SMRIZE_ID         --총괄PM ID
										, X.SMRIZE_NM                        AS SMRIZE_NM         --총괄PM명
										, X.BEGIN_DT                         AS BEGIN_DT          --시작일
										, X.DE_DT                            AS DE_DT             --출고일
										, X.ACPTNC_DT                        AS ACPTNC_DT         --완료검수일
										, X.REQRE_DAYCNT                     AS REQRE_DAYCNT      --소요일수
										, X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID  --설계난이도
										, X.DSGN_DIF_CODE_NM                 AS DSGN_DIF_CODE_NM  --설계난이도
										, X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR    --설계계획공수
										, X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID--생산난이도
										, X.PRDCTN_DIF_CODE_NM               AS PRDCTN_DIF_CODE_NM--생산난이도
										, X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR  --생산계획공수
										, X.SJ_RMK                           AS SJ_RMK            --비고
										, X.FILE_TRGT_KEY                    AS FILE_TRGT_KEY     --FILE_TRGT_KEY
										, PLN.CLOSE_YN                       AS PLAN_CLOSE_YN     --계획확정여부
										, NVL(PLN.HIST_YN,'N')                   AS HIST_YN --이력여부
									FROM SUBJ X
										INNER JOIN SJD AS CR ON X.CO_CD = CR.CO_CD AND X.SALES_CD = CR.SALES_CD
										LEFT OUTER JOIN PLAN AS PLN ON X.CO_CD = PLN.CO_CD AND X.SALES_CD = PLN.SALES_CD
									WHERE 1=1
									<if test="histYn != null and !histYn.equals('')">
									AND NVL(PLN.HIST_YN,'N') = #{histYn}
									</if>
								) T
							WHERE 1=1
							<if test="sjNm != null and !sjNm.equals('')">
							AND T.SJ_NM LIKE '%${sjNm}%'
							</if>
							<if test="closeYn != null and !closeYn.equals('')">
							AND NVL(T.PLAN_CLOSE_YN, 'N') = #{closeYn}
							</if>
							<if test="clntPjt != null and !clntPjt.equals('')">
							AND T.CLNT_PJT = #{clntPjt}
							</if>
							<if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
							AND T.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
							</if>

							) T ) T
	</select>

	<select id="selectWbsSjList" parameterType="Map" resultType="camelMap">
		/* selectWbsSjList */
			WITH SUBJ AS --과제정보
				(
				SELECT X.FILE_TRGT_KEY
						, X.CO_CD                                                       AS CO_CD              --회사코드
						, X.SALES_CD                                                    AS SALES_CD           --SALES Code
						, X.SJ_NO                                                       AS SJ_NO              --과제번호
						, X.SJ_NM                                                       AS SJ_NM              --과제명
						, X.VER_NO                                                      AS VER_NO             --버젼
						, X.MKER_DIV                                                    AS MKER_DIV           --제작처구분
						, (SELECT FN_CM05M01_CD_TO_NM(X.MKER_DIV) FROM DUAL)           AS MKER_DIV_NM        --제작처구분명
						, X.MKER_CD                                                     AS MKER_CD            --제작처코드
						, BM.CLNT_NM                                                    AS MKER_NM            --제작처명
						, X.SMRIZE_ID                                                   AS SMRIZE_ID          --총괄PM ID
						, (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
						, TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
						, TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
						, TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
						, TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
						, X.CLOSE_YN                                                    AS CLOSE_YN           --확정유무
						, X.DSGN_DIF_CODE_ID                                            AS DSGN_DIF_CODE_ID   --설계난이도
						, (SELECT FN_CM05M01_CD_TO_NM(X.DSGN_DIF_CODE_ID) FROM DUAL)   AS DSGN_DIF_CODE_NM   --설계난이도
						, X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
						, X.PRDCTN_DIF_CODE_ID                                          AS PRDCTN_DIF_CODE_ID --생산난이도
						, (SELECT FN_CM05M01_CD_TO_NM(X.PRDCTN_DIF_CODE_ID) FROM DUAL) AS PRDCTN_DIF_CODE_NM --생산난이도
						, X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
						, X.SJ_RMK                                                      AS SJ_RMK             --비고
					FROM TB_WB21M01 X
						LEFT OUTER JOIN TB_BM02M01 AS BM ON X.MKER_CD = BM.CLNT_CD --거래처정보
					WHERE X.CO_CD = #{coCd}
					AND TO_NUMBER(X.VER_NO) = (
												SELECT MAX(TO_NUMBER(XS.VER_NO))
												FROM TB_WB21M01 XS WHERE XS.CO_CD = X.CO_CD AND XS.SALES_CD = X.SALES_CD )
					<if test="salesCd == null or salesCd.equals('')">
						AND X.BEGIN_DT BETWEEN #{beginDt} AND #{deDt}
					</if>
					<if test="salesCd != null and !salesCd.equals('')">
						AND X.SALES_CD LIKE '%${salesCd}%'
					</if>
					<if test="sjNm != null and !sjNm.equals('')">
					AND X.SJ_NM LIKE '%'|| #{sjNm} ||'%'
					</if>
					AND X.CLOSE_YN = 'Y'
				)
			, SCD AS --일정계획
				(
					SELECT *
					FROM (
							SELECT  S.CO_CD              --회사코드
								, '1.일정계획'               AS GUBUN
								, S.SALES_CD           --SALES Code
								, S.PLAN_CD_NM         --계획 LVL1 명
								, S.PLANS_DT           --계획종료일
								, S.PLANE_DT  --계획종료일
								, S.PLANS_DT || '/' || S.PLANE_DT  AS PLANE_DT_SE
								, S.PLAN_VER_NO		--계획버전
								, S.VER_UP_REASON 	--Ver.Up사유
								, S.INSERT_UPDATE_ID	--등록/수정 담당자
								, S.INSERT_UPDATE_DTTM	--등록/수정 일자
							FROM
									(
										SELECT 	W.CO_CD
												, W.SALES_CD                                                 AS SALES_CD           --SALES Code
												, W.WBS_PLAN_CODE_ID   --계획 LVL1 Code
												, (SELECT FN_CM05M01_CD_TO_NM(W.WBS_PLAN_CODE_ID) FROM DUAL) AS PLAN_CD_NM        --계획 LVL1 명
												, TO_CHAR(W.WBS_PLANS_DT, 'YYYY-MM-DD') 					   AS PLANS_DT           --계획시작일
												, TO_CHAR(W.WBS_PLANE_DT, 'YYYY-MM-DD') 					   AS PLANE_DT           --계획종료일
												, W.VER_NO												  AS PLAN_VER_NO		--계획버전번호
												, W.VER_UP_REASON												AS VER_UP_REASON  -- Ver.Up사유
												, COALESCE(W.UDT_ID, W.CREAT_ID, '') 							AS INSERT_UPDATE_ID  	-- 등록/수정 담당자
												, TO_CHAR(COALESCE(W.UDT_DTTM, W.CREAT_DTTM), 'YYYY-MM-DD') 	AS INSERT_UPDATE_DTTM	-- 등록/수정 일자
											FROM TB_WB22M01 AS W
											WHERE 1=1
											AND W.CO_CD = #{coCd}
											AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
											AND EXISTS (SELECT 1
															FROM SUBJ P
														WHERE P.CO_CD    = #{coCd}
															AND P.CO_CD    = W.CO_CD
															AND P.SALES_CD = W.SALES_CD
														)
										UNION ALL
										SELECT   	W.CO_CD
													, W.SALES_CD                                                 AS SALES_CD           --SALES Code
												, W.WBS_PLAN_CODE_ID   --계획 LVL1 Code
												, (SELECT FN_CM05M01_CD_TO_NM(W.WBS_PLAN_CODE_ID) FROM DUAL) AS PLAN_CD_NM        --계획 LVL1 명
												, TO_CHAR(W.WBS_PLANS_DT, 'YYYY-MM-DD') 					   AS PLANS_DT           --계획시작일
												, TO_CHAR(W.WBS_PLANE_DT, 'YYYY-MM-DD') 					   AS PLANE_DT           --계획종료일
												, W.VER_NO												  AS PLAN_VER_NO		--계획버전번호
												, W.VER_UP_REASON												AS VER_UP_REASON  -- Ver.Up사유
												, W.CLOSE_ID													AS INSERT_UPDATE_ID  	-- 등록/수정 담당자
												, TO_CHAR(W.CLOSE_DTTM, 'YYYY-MM-DD') 							AS INSERT_UPDATE_DTTM	-- 등록/수정 일자
											FROM TB_WB22M01_HIST W
											WHERE 1=1
											AND W.CO_CD = #{coCd}
											AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
											AND EXISTS (SELECT 1
															FROM SUBJ P
														WHERE P.CO_CD    = #{coCd}
															AND P.CO_CD    = W.CO_CD
															AND P.SALES_CD = W.SALES_CD
														)
									) S
							WHERE 1=1
						)
				PIVOT ( MAX(PLANS_DT) AS S, MAX(PLANE_DT) AS E, MAX(PLANE_DT_SE)
					FOR PLAN_CD_NM
					IN (	 '수주확정' 		AS WBSCODE01,	'목표원가/PFU배포' 		AS WBSCODE02
							,'설계완료' 		AS WBSCODE03,	'모델링완료' 			AS WBSCODE17
							,'구매완료' 		AS WBSCODE04,	'제품(샘플)공급완료' 	AS WBSCODE18
							,'기계조립완료' 	AS WBSCODE05,	'전기완료' 			AS WBSCODE06
							,'자체시운전완료' 	AS WBSCODE07,	'외부제작검수' 			AS WBSCODE16
							,'고객검수' 		AS WBSCODE09,	'포장' 				AS WBSCODE10
							,'출고' 			AS WBSCODE11,	'도착' 				AS WBSCODE12
							,'설치시운전(출발일)' AS WBSCODE13,	'설치시운전(복귀일)' 	AS WBSCODE14
							,'조건작업완료'		AS WBSCODE08) )
				)
			, SJD AS --수주상세
				(
				SELECT M.CO_CD                                              AS CO_CD        --회사코드
						, (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명
						, M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
						, X.SALES_CD                                           AS SALES_CD     --SALES Code
						, M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
						, C.CLNT_NM                                            AS CLNT_NM      --고객명
						, M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트
						, (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
						, X.PRDT_CD
						, (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = X.PRDT_CD) AS PRDT_NM
						, X.ORDRS_QTY	--수주수량
						, M.ORDRS_DIV
					FROM TB_CR02M01  M --수주마스터
						INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세
						INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
					WHERE 1=1
					AND M.CO_CD = #{coCd}
					AND X.SALES_CD IS NOT NULL --비용제외
					AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
									FROM SUBJ P
								WHERE P.CO_CD    = #{coCd}
									AND P.CO_CD    = X.CO_CD
									AND P.SALES_CD = X.SALES_CD
								)
				)
			, PLAN AS --WBS 계획정보
			(
				SELECT W.CO_CD                   AS CO_CD        --회사코드
					, W.SALES_CD                AS SALES_CD     --SALSES_CD
					, W.CLOSE_YN                AS CLOSE_YN     --확정여부
					, W.VER_NO                    AS PLAN_VER_NO  --버전
					, W.VER_UP_REASON
					, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
					, 'N' AS HIST_YN -- hist인지 아닌지
				FROM TB_WB22M01 W--WBS계획
				WHERE W.CO_CD = #{coCd}
				AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
				AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
								FROM SUBJ P
								WHERE P.CO_CD    = #{coCd}
								AND P.CO_CD    = W.CO_CD
								AND P.SALES_CD = W.SALES_CD
							)
				GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO, W.VER_UP_REASON
			UNION ALL
			SELECT W.CO_CD                   AS CO_CD        --회사코드
					, W.SALES_CD                AS SALES_CD     --SALSES_CD
					, W.CLOSE_YN                AS CLOSE_YN     --확정여부
					, W.VER_NO                  AS PLAN_VER_NO  --버전
					, W.VER_UP_REASON
					, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
					, 'Y' AS HIST_YN -- hist인지 아닌지
				FROM TB_WB22M01_HIST W--WBS계획이력
				WHERE W.CO_CD = #{coCd}
				AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
				AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
								FROM SUBJ P
								WHERE P.CO_CD    = #{coCd}
								AND P.CO_CD    = W.CO_CD
								AND P.SALES_CD = W.SALES_CD
							)
				GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO, W.VER_UP_REASON
			)
			SELECT * FROM (
					SELECT ROWNUM AS RN, T.* FROM (
							SELECT T.*
							FROM (
									SELECT X.CO_CD                            AS CO_CD       --회사코드
										, CR.ORDRS_NO                        AS ORDRS_NO    --수주번호
										, CR.CLNT_CD                         AS CLNT_CD     --고객코드
										, CR.CLNT_NM                         AS CLNT_NM     --고객명
										, CR.CLNT_PJT                        AS CLNT_PJT    --고객사프로젝트
										, CR.CLNT_PJT_NM                     AS CLNT_PJT_NM --고객사프로젝트명
										, CR.ORDRS_DIV                       AS SJ_NO       --수주구분
										, (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ORDRS_DIV) AS ORDRS_DIV_NM
										, X.SJ_NO                            AS SJ_NO             --과제번호
										, X.SJ_NM                            AS SJ_NM             --과제명
										, X.VER_NO                           AS VER_NO            --과제버젼
										, X.CLOSE_YN                         AS SJ_CLOSE_YN       --과제확정유무
										, X.SALES_CD                         AS SALES_CD          --SALES Code
										, X.MKER_DIV                         AS MKER_DIV          --제작처구분
										, X.MKER_DIV_NM                      AS MKER_DIV_NM       --제작처구분명
										, X.MKER_CD                          AS MKER_CD           --제작처코드
										, X.MKER_NM                          AS MKER_NM           --제작처명
										, X.SMRIZE_ID                        AS SMRIZE_ID         --총괄PM ID
										, X.SMRIZE_NM                        AS SMRIZE_NM         --총괄PM명
										, X.BEGIN_DT                         AS BEGIN_DT          --시작일
										, X.DE_DT                            AS DE_DT             --출고일
										, X.ACPTNC_DT                        AS ACPTNC_DT         --완료검수일
										, X.REQRE_DAYCNT                     AS REQRE_DAYCNT      --소요일수
										, X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID  --설계난이도
										, X.DSGN_DIF_CODE_NM                 AS DSGN_DIF_CODE_NM  --설계난이도
										, X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR    --설계계획공수
										, X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID--생산난이도
										, X.PRDCTN_DIF_CODE_NM               AS PRDCTN_DIF_CODE_NM--생산난이도
										, X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR  --생산계획공수
										, X.SJ_RMK                           AS SJ_RMK            --비고
										, X.FILE_TRGT_KEY                    AS FILE_TRGT_KEY     --FILE_TRGT_KEY
										, PLN.CLOSE_YN                       AS PLAN_CLOSE_YN     --계획확정여부
										, PLN.PLAN_VER_NO                    AS PLAN_VER_NO       --계획버전
										, PLN.VER_UP_REASON					 AS VER_UP_REASON     --계획버전업사유
										, NVL(PLN.HIST_YN,'N')                   AS HIST_YN --이력여부
										, CR.ORDRS_QTY					--수주수량
										, SCD.INSERT_UPDATE_ID				 			AS INSERT_UPDATE_ID		-- 등록/수정 담당자Id
										, FN_CM06M01_ID_TO_NM(SCD.INSERT_UPDATE_ID) 	AS INSERT_UPDATE_NM		-- 등록/수정 담당자명
										, SCD.INSERT_UPDATE_DTTM						AS INSERT_UPDATE_DTTM	-- 등록/수정 일자
										, SCD.WBSCODE01_E
										, SCD.WBSCODE01
										, SCD.WBSCODE02_S
										, SCD.WBSCODE02_E
										, SCD.WBSCODE02
										, SCD.WBSCODE03_S
										, SCD.WBSCODE03_E
										, SCD.WBSCODE03
										, SCD.WBSCODE17_S
										, SCD.WBSCODE17_E
										, SCD.WBSCODE17
										, SCD.WBSCODE04_S
										, SCD.WBSCODE04_E
										, SCD.WBSCODE04
										, SCD.WBSCODE05_S
										, SCD.WBSCODE05_E
										, SCD.WBSCODE05
										, SCD.WBSCODE06_S
										, SCD.WBSCODE06_E
										, SCD.WBSCODE06
										, SCD.WBSCODE07_S
										, SCD.WBSCODE07_E
										, SCD.WBSCODE07
										, SCD.WBSCODE08_S
										, SCD.WBSCODE08_E
										, SCD.WBSCODE08
										, SCD.WBSCODE16_S
										, SCD.WBSCODE16_E
										, SCD.WBSCODE16
										, SCD.WBSCODE09_S
										, SCD.WBSCODE09_E
										, SCD.WBSCODE09
										, SCD.WBSCODE10_S
										, SCD.WBSCODE10_E
										, SCD.WBSCODE10
										, SCD.WBSCODE11_S
										, SCD.WBSCODE11_E
										, SCD.WBSCODE11
										, SCD.WBSCODE12_S
										, SCD.WBSCODE12_E
										, SCD.WBSCODE12
										, SCD.WBSCODE13_S
										, SCD.WBSCODE13_E
										, SCD.WBSCODE13
										, SCD.WBSCODE14_S
										, SCD.WBSCODE14_E
										, SCD.WBSCODE14
									FROM SUBJ X
										INNER JOIN SJD AS CR ON X.CO_CD = CR.CO_CD AND X.SALES_CD = CR.SALES_CD
										LEFT OUTER JOIN PLAN AS PLN ON X.CO_CD = PLN.CO_CD AND X.SALES_CD = PLN.SALES_CD
										LEFT OUTER JOIN SCD  ON X.CO_CD = SCD.CO_CD AND X.SALES_CD = SCD.SALES_CD AND PLN.PLAN_VER_NO = SCD.PLAN_VER_NO
									WHERE 1=1
									<if test="histYn != null and !histYn.equals('')">
									AND NVL(PLN.HIST_YN,'N') = #{histYn}
									</if>
								) T
							WHERE 1=1
							<if test="sjNm != null and !sjNm.equals('')">
							AND T.SJ_NM LIKE '%'|| #{sjNm} ||'%'
							</if>
							<if test="closeYn != null and !closeYn.equals('')">
							AND NVL(T.PLAN_CLOSE_YN, 'N') = #{closeYn}
							</if>
							<if test="clntPjt != null and !clntPjt.equals('')">
							AND T.CLNT_PJT = #{clntPjt}
							</if>
							<if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
							AND T.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'
							</if>
							ORDER BY CLNT_NM, ORDRS_NO, SALES_CD, TO_NUMBER(PLAN_VER_NO) DESC
							) T ) T

				WHERE RN BETWEEN #{firstIndex} AND #{lastIndex}
	</select>

	<select id="selectTodoRsltsView" parameterType="Map" resultType="camelMap">
				SELECT   X.FILE_TRGT_KEY AS RSLTS_FILE_TRGT_KEY,
							X.CO_CD,
							X.WBS_RSLTS_NO,
							X.WBS_PLAN_CODE_KIND,
							X.WBS_PLAN_CODE_ID,
							X.SALES_CD,
							X.WBS_RSLTS_ID,
							(SELECT FN_CM06M01_ID_TO_NM(X.WBS_RSLTS_ID) FROM DUAL) AS WBS_RSLTS_NM,
							X.WBS_RSLTS_RATE,
							X.WBS_PLAN_MH,
							X.WBS_RSLTS_MH ,
							X.WBS_RSLTS_CNTS,
							TO_CHAR(X.WBS_RSLTSS_DT,'YYYY-MM-DD') AS WBS_RSLTSS_DT,
							TO_CHAR(X.WBS_RSLTSE_DT,'YYYY-MM-DD') AS WBS_RSLTSE_DT,
							X.DAYCNT AS RSLTS_DAYCNT,

							Y.FILE_TRGT_KEY AS FILE_TRGT_KEY2,
							Y.WBS_PLAN_CODE_NM AS WBS_PLAN_CODE_NM2,
							TO_CHAR(Y.WBS_PLANS_DT,'YYYY-MM-DD') AS WBS_PLANS_DT2,
							TO_CHAR(Y.WBS_PLANE_DT,'YYYY-MM-DD') AS WBS_PLANE_DT2,
							Y.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID2,
							(SELECT FN_CM06M01_ID_TO_NM(Y.WBS_PLAN_MNG_ID) FROM DUAL) AS WBS_PLAN_MNG_NM2,
							Y.DAYCNT AS DAYCNT2,

							Z.FILE_TRGT_KEY AS FILE_TRGT_KEY1,
							(SELECT FN_CM05M01_CD_TO_NM(Z.WBS_PLAN_CODE_ID) FROM DUAL) AS WBS_PLAN_CODE_NM1,
							TO_CHAR(Z.WBS_PLANS_DT,'YYYY-MM-DD') AS WBS_PLANS_DT1,
							TO_CHAR(Z.WBS_PLANE_DT,'YYYY-MM-DD') AS WBS_PLANE_DT1,
							Z.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID1,
							(SELECT FN_CM06M01_ID_TO_NM(Z.WBS_PLAN_MNG_ID) FROM DUAL) AS WBS_PLAN_MNG_NM1,
							Z.DAYCNT AS DAYCNT1

							FROM TB_WB23M01 X
							INNER JOIN  TB_WB22M01 Y
							ON X.CO_CD = Y.CO_CD
							AND X.WBS_PLAN_CODE_KIND = Y.WBS_PLAN_CODE_KIND
							AND X.WBS_PLAN_CODE_ID = Y.WBS_PLAN_CODE_ID
							AND X.SALES_CD = Y.SALES_CD
							LEFT OUTER JOIN (
								SELECT Y.FILE_TRGT_KEY, Y.CO_CD, Y.WBS_PLAN_CODE_KIND, Y.WBS_PLAN_CODE_ID,
										Y.WBS_PLAN_CODE_NM, Y.WBS_PLANS_DT, Y.WBS_PLANE_DT,
										Y.SALES_CD, Y.VER_NO, Y.WBS_PLAN_MNG_ID, Y.DAYCNT
										FROM (
												SELECT CO_CD, WBS_PLAN_CODE_KIND, WBS_PLAN_CODE_ID,
														SALES_CD, MAX(TO_NUMBER(VER_NO)) AS VER_NO FROM TB_WB22M01
														WHERE WBS_PLAN_CODE_NM IS NULL
														GROUP BY CO_CD, WBS_PLAN_CODE_KIND, WBS_PLAN_CODE_ID, SALES_CD ) X
												INNER JOIN  TB_WB22M01 Y
												ON X.CO_CD = Y.CO_CD
												AND X.WBS_PLAN_CODE_KIND = Y.WBS_PLAN_CODE_KIND
												AND X.WBS_PLAN_CODE_ID = Y.WBS_PLAN_CODE_ID
												AND X.SALES_CD = Y.SALES_CD
												AND X.VER_NO = Y.VER_NO ) Z
							ON Y.CO_CD = Z.CO_CD
							AND Y.WBS_PLAN_CODE_KIND = Z.WBS_PLAN_CODE_ID
							AND Y.SALES_CD = Z.SALES_CD
							WHERE X.FILE_TRGT_KEY = #{fileTrgtKey}
	</select>

	<!-- TODO 미완료 현황 대쉬보드 오른쪽 하단 WBS 계획정보 -->
	<select id="selectIncompleteJob" parameterType="Map" resultType="camelMap">
		--To-Do 미완료 현황
		SELECT Z.*
		FROM (
				SELECT X.*
					, ROWNUM AS RN
				FROM (
						WITH SJD AS --수주상세
							(
							SELECT M.CO_CD                                            AS CO_CD        --회사코드
									, M.ORDRS_NO                                         AS ORDRS_NO     --수주번호
									, X.SALES_CD                                         AS SALES_CD     --SALES Code
									, M.ORDRS_CLNT_CD                                    AS CLNT_CD      --고객코드
									, C.CLNT_NM                                          AS CLNT_NM      --고객명
									, (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT ) FROM DUAL) AS CLNT_PJT_NM      --프로젝트
									, M.CTRT_NM                                         AS CTRT_NM      --계약명
									, P.VER_NO                                          AS PLAN_VER_NO --계획ver
								FROM TB_WB21M01 P
									INNER JOIN TB_CR02D02 AS X ON X.CO_CD = P.CO_CD AND X.SALES_CD = P.SALES_CD--수주상세
									INNER JOIN TB_CR02M01 AS M ON M.CO_CD = P.CO_CD AND M.ORDRS_NO = X.ORDRS_NO--수주마스터
									INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
							WHERE  1=1 --P.SALES_CD = '23078-01HAFAR'
								AND CLOSE_YN = 'Y'
								AND P.VER_NO  = (SELECT MAX(TO_NUMBER(VER_NO)) FROM TB_WB21M01 P1 WHERE P1.SJ_NO = P.SJ_NO)
							)
						--과제 등록된 내용중 일정계획 수립확정 되니 않은 건 확정건에 대한 계획수립 안한 내역
						SELECT SJ.CLNT_NM                           AS CLNT_NM
							, SJ.CLNT_PJT_NM                        AS CLNT_PJT_NM
							, SJ.CTRT_NM                            AS CTRT_NM
							, P.SALES_CD                            AS SALES_CD
							, (SELECT FN_CM05M01_CD_TO_NM(P.WBS_PLAN_CODE_KIND) FROM DUAL) AS WBS_PLAN_NM --WBS 계획명
							, P.WBS_PLAN_CODE_NM                    AS WBS_TASK_NM --WBS Task NM
							, TO_CHAR(P.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_STRT_DT --WBS Task 시작일
							, TO_CHAR(P.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_END_DT  --WBS Task 종료일
							, NVL(R.WBS_RSLTS_RATE,0)               AS WBS_RATE    --WBS 실적 진행율
							, (SELECT FN_CM06M01_ID_TO_NM(P.WBS_PLAN_MNG_ID) FROM DUAL)  AS WBS_MNG_NM --담당자명
							-- 관련코드 참고정보 -----------------------------------------------
							, SJ.CLNT_CD                       AS CLNT_CD
							, P.WBS_PLAN_CODE_KIND             AS WBS_PLAN_CD --WBS 계획CD
							, P.WBS_PLAN_CODE_ID               AS WBS_TASK_ID --WBS Task ID
							, P.WBS_PLAN_MNG_ID                AS WBS_MNG_ID  --담당자ID
							, ROUND(P.WBS_PLANE_DT - SYSDATE)  AS VARIANCE_DT --종료예정 차이 일수
							, P.CO_CD
							, SJ.PLAN_VER_NO                  AS PLAN_VER_NO --계획ver
                            , ''       	   	   				  AS RSLT_FILE_TRGT_KEY
						FROM TB_WB22M01 AS P --WBS계획
							INNER JOIN SJD  AS SJ ON P.CO_CD = SJ.CO_CD AND P.SALES_CD = SJ.SALES_CD
							LEFT OUTER JOIN TB_WB23M01 AS R  ON P.CO_CD              = R.CO_CD
																AND P.SALES_CD           = R.SALES_CD
																AND P.WBS_PLAN_CODE_KIND = R.WBS_PLAN_CODE_KIND
																AND P.WBS_PLAN_CODE_ID   = R.WBS_PLAN_CODE_ID
						WHERE  1 = 1
						AND    P.WBS_PLANS_DT  <![CDATA[ <= ]]> ( SYSDATE ) --현재일 이전 시작일 기준
						<!-- AND P.WBS_PLAN_MNG_ID    = #{userId} -->
						AND P.WBS_PLAN_CODE_KIND <![CDATA[<>]]> 'WBSCODE'
						<if test="coCd != null and !coCd.equals('')">
						AND P.CO_CD = #{coCd}
						</if>
						<!-- AND NVL(R.WBS_RSLTS_RATE,0) <![CDATA[<>]]> 100 -->
						AND NVL(R.CLOSE_YN, 'N') = 'N'
				UNION All   --일정계획 확정건에 대한 계획수립 안한 내역
						SELECT    SJ.CLNT_NM                            AS CLNT_NM
								, SJ.CLNT_PJT_NM                        AS CLNT_PJT_NM
								, SJ.CTRT_NM                            AS CTRT_NM
								, P.SALES_CD                         AS SALES_CD
								, '일정계획수립'                         AS WBS_PLAN_NM
								, (SELECT FN_CM05M01_CD_TO_NM(P.WBS_PLAN_CODE_ID) FROM DUAL) || ' 계획등록'    AS WBS_TASK_NM --WBS Task NM
								, TO_CHAR(P.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_STRT_DT --WBS Task 시작일
								, TO_CHAR(P.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_END_DT  --WBS Task 종료일
								, 0               AS WBS_RATE    --WBS 실적 진행율
								, (SELECT FN_CM06M01_ID_TO_NM(P.WBS_PLAN_MNG_ID) FROM DUAL)  AS WBS_MNG_NM --담당자명
								-- 관련코드 참고정보 -----------------------------------------------
								, SJ.CLNT_CD                       AS CLNT_CD
								, P.WBS_PLAN_CODE_KIND             AS WBS_PLAN_CD --WBS 계획CD
								, P.WBS_PLAN_CODE_ID               AS WBS_TASK_ID --WBS Task ID
								, P.WBS_PLAN_MNG_ID                AS WBS_MNG_ID  --담당자ID
								, ROUND(P.WBS_PLANE_DT - SYSDATE)  AS VARIANCE_DT --종료예정 차이 일수
								, P.CO_CD
								, SJ.PLAN_VER_NO                  AS PLAN_VER_NO --계획ver
                                , ''       	   	   				  AS RSLT_FILE_TRGT_KEY
						FROM TB_WB22M01 P
										LEFT OUTER JOIN TB_WB22M01 R ON R.CO_CD     = P.CO_CD
																		AND R.SALES_CD  =  P.SALES_CD
																		AND R.WBS_PLAN_CODE_KIND = P.WBS_PLAN_CODE_ID
										LEFT OUTER JOIN SJD AS SJ  ON P.SALES_CD = SJ.SALES_CD
						<!-- WHERE P.WBS_PLAN_MNG_ID    = #{userId} -->
						WHERE 1 = 1
						AND P.WBS_PLAN_CODE_KIND = 'WBSCODE' 
						AND P.WBS_PLANS_DT IS NOT NULL 
						AND P.WBS_PLAN_MNG_ID IS NOT NULL
						AND R.FILE_TRGT_KEY IS NULL
						AND P.CLOSE_YN = 'Y'
						AND SJ.SALES_CD IS NOT NULL
				 UNION All   --과제별  매뉴얼 작성 대상인경우 기계매뉴얼 체크  						     	 
                        SELECT SJ.CLNT_NM                            AS CLNT_NM
                             , SJ.CLNT_PJT_NM                        AS CLNT_PJT_NM
                             , SJ.CTRT_NM                            AS CTRT_NM
                             , P.SALES_CD                            AS SALES_CD
                             , '매뉴얼등록' 							 AS WBS_PLAN_NM --WBS 계획명
                             , '기계매뉴얼등록'                     	 AS WBS_TASK_NM --WBS Task NM
						     , TO_CHAR(R.WBS_PLANS_DT, 'YYYY-MM-DD') AS PLAN_STRT_DT --WBS Task 시작일
						     , TO_CHAR(R.WBS_PLANE_DT, 'YYYY-MM-DD') AS PLAN_END_DT  --WBS Task 종료일
                             , 0					                  AS RSLT_RATE    --WBS 실적 진행율
                             , (SELECT FN_CM06M01_ID_TO_NM(R.WBS_PLAN_MNG_ID) FROM DUAL)  AS WBS_MNG_NM --담당자명
                             -- 관련코드 참고정보 -----------------------------------------------
                             , SJ.CLNT_CD                      	AS CLNT_CD 
						     , 'MANUAL'                       	AS WBS_PLAN_CD --WBS 계획CD
						     , 'MANUALMC'   				   	AS WBS_TASK_ID --WBS Task ID 
                             , R.WBS_PLAN_MNG_ID               	AS WBS_MNG_ID  --담당자ID
                             , ROUND(R.WBS_PLANE_DT - SYSDATE) 	AS VARIANCE_DT --종료예정 차이 일수 
                             , P.CO_CD
                             , SJ.PLAN_VER_NO                  AS PLAN_VER_NO --계획ver
                             , P.FILE_TRGT_KEY       	   	   AS RSLT_FILE_TRGT_KEY
						FROM TB_WB21M01 P
								LEFT OUTER JOIN TB_WB21D02 AS WD ON WD.SALES_CD = P.SALES_CD
								LEFT OUTER JOIN SJD        AS SJ ON SJ.SALES_CD = P.SALES_CD
								INNER JOIN TB_WB22M01 AS R  ON R.CO_CD     = P.CO_CD
								                                AND R.SALES_CD  =  P.SALES_CD
								                                AND R.WBS_PLAN_CODE_ID = 'WBSCODE03'
								                                <!-- AND R.WBS_PLAN_MNG_ID = #{userId} -->
						WHERE P.MANUAL_YN = 'Y'
						  AND P.CLOSE_YN = 'Y'
						  AND R.WBS_PLANE_DT   <![CDATA[<]]>  ( SYSDATE + 7) --종료일 7일 이전 내역
						  AND P.VER_NO  = (SELECT MAX(TO_NUMBER(VER_NO)) FROM TB_WB21M01 P1 WHERE P1.SJ_NO = P.SJ_NO)
						  AND WD.MANUAL_MC IS NULL   --WD.MANUAL_ELEC
				 UNION All   --과제별  매뉴얼 작성 대상인경우 전기매뉴얼 체크  				     	 
                        SELECT SJ.CLNT_NM                            AS CLNT_NM
                             , SJ.CLNT_PJT_NM                        AS CLNT_PJT_NM
                             , SJ.CTRT_NM                            AS CTRT_NM
                             , P.SALES_CD                            AS SALES_CD
                             , '매뉴얼등록' 							 AS WBS_PLAN_NM --WBS 계획명
                             , '전기매뉴얼등록'                     	 AS WBS_TASK_NM --WBS Task NM
						     , TO_CHAR(R.WBS_PLANS_DT, 'YYYY-MM-DD') AS PLAN_STRT_DT --WBS Task 시작일
						     , TO_CHAR(R.WBS_PLANE_DT, 'YYYY-MM-DD') AS PLAN_END_DT  --WBS Task 종료일
                             , 0					                  AS RSLT_RATE    --WBS 실적 진행율
                             , (SELECT FN_CM06M01_ID_TO_NM(R.WBS_PLAN_MNG_ID) FROM DUAL)  AS WBS_MNG_NM --담당자명
                             -- 관련코드 참고정보 -----------------------------------------------
                             , SJ.CLNT_CD                      	AS CLNT_CD 
						     , 'MANUAL'                       	AS WBS_PLAN_CD --WBS 계획CD
						     , 'MANUALELEC'   				   	AS WBS_TASK_ID --WBS Task ID 
                             , R.WBS_PLAN_MNG_ID               	AS WBS_MNG_ID  --담당자ID
                             , ROUND(R.WBS_PLANE_DT - SYSDATE) 	AS VARIANCE_DT --종료예정 차이 일수 
                             , P.CO_CD
                             , SJ.PLAN_VER_NO                  AS PLAN_VER_NO --계획ver
                             , P.FILE_TRGT_KEY       	   	   AS RSLT_FILE_TRGT_KEY
						FROM TB_WB21M01 P
								LEFT OUTER JOIN TB_WB21D02 AS WD ON WD.SALES_CD = P.SALES_CD
								LEFT OUTER JOIN SJD        AS SJ ON SJ.SALES_CD = P.SALES_CD
								INNER JOIN TB_WB22M01 AS R  ON R.CO_CD     = P.CO_CD
								                                AND R.SALES_CD  =  P.SALES_CD
								                                AND R.WBS_PLAN_CODE_ID = 'WBSCODE06'
								                                <!-- AND R.WBS_PLAN_MNG_ID = #{userId} -->
						WHERE P.MANUAL_YN = 'Y'
						  AND P.CLOSE_YN = 'Y'
						  AND R.WBS_PLANE_DT   <![CDATA[<]]>  ( SYSDATE + 7) --종료일 7일 이전 내역
						  AND P.VER_NO  = (SELECT MAX(TO_NUMBER(VER_NO)) FROM TB_WB21M01 P1 WHERE P1.SJ_NO = P.SJ_NO)
						  AND WD.MANUAL_ELEC IS NULL   --WD.MANUAL_ELEC
					) AS X
				WHERE 1 = 1
				ORDER BY SALES_CD, WBS_END_DT
			) AS Z
		WHERE  1 = 1
		<!-- AND  Z.RN BETWEEN ${firstIndex} AND ${lastIndex} -->
		  AND (Z.WBS_MNG_ID = #{userId} 
		  OR
			-- 팀장(TEAM01)이면 팀원 전체 포함
			(
				EXISTS (
					SELECT 1
					FROM TB_CM06M01 C
					WHERE C.ID                   = #{userId}
					AND NVL(C.TEAM_MANAGER,'NNN') = 'TEAM01'
					AND SUBSTR(C.DEPT_ID,1,5) = #{deptId}
				)
				AND Z.WBS_MNG_ID IN (
					SELECT M.ID
					FROM TB_CM06M01 M
					WHERE SUBSTR(M.DEPT_ID,1,5) = #{deptId}
				)
			)
		  )
	</select>

	<select id="callCopyWbsPlan" statementType="CALLABLE" parameterType="map">
		{call SP_WB22M01_I(
			#{coCd      , mode=IN, jdbcType=VARCHAR},
			#{targetSalesCd   , mode=IN, jdbcType=VARCHAR},
			#{copySalesCd   , mode=IN, jdbcType=VARCHAR},
			#{userId    , mode=IN, jdbcType=VARCHAR},
			#{pgmId     , mode=IN, jdbcType=VARCHAR},
			#{errMsg     , mode=OUT, jdbcType=VARCHAR}
		)}
	</select>

	<select id="selectWbsTaskTempletCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		FROM   TB_CM05M01
		WHERE  CODE_KIND = #{wbsPlanCodeId}
		AND    USE_YN = 'Y'
	</select>

	<select id="selectNewWbsTaskTempletCd" parameterType="Map"  resultType="String">
		SELECT (SELECT #{codeKind} || 'TASK' || (NVL(MAX(SORT_NO),0)+1) FROM TB_CM05M01 WHERE CODE_KIND = #{codeKind})
		FROM   DUAL
	</select>

	<select id="selectWbsTaskTempletList" parameterType="Map" resultType="camelMap">
		/* selectWbsTaskTempletList */
		SELECT
			  T.SORT_NO  AS RN
			, T.CODE_ID
			, T.CODE_NM
			, T.CODE_KIND
			, T.CODE_DESC
			, T.CODE_RPRC
			, T.CODE_ETC
			, T.USE_YN
			, T.CREAT_ID
			, TO_CHAR(T.CREAT_DTTM, 'yyyy-MM-dd') AS CREAT_DTTM
			, T.CREAT_PGM
			, T.UDT_ID
			, TO_CHAR(T.UDT_DTTM, 'yyyy-MM-dd') AS UDT_DTTM
			, T.UDT_PGM
			, T.DZ_CODE
			, CASE WHEN EXISTS (
								SELECT 1
								FROM TB_CM06M01 A
								WHERE A.ID = #{userId}
								AND A.TEAM_MANAGER = 'TEAM01'
							)
				THEN 'Y' ELSE 'N'
			  END AS TEAM_MANAGER
		FROM TB_CM05M01 AS T
		WHERE CODE_KIND = #{wbsPlanCodeId}
		AND USE_YN = 'Y'
		ORDER BY SORT_NO, CODE_ID
	</select>

	<insert id="wbsTaskTempletInsert" parameterType="Map">
	<selectKey keyProperty="maxWbsTaskNo" resultType="String" order="BEFORE">
	SELECT max(to_number(NVL(substr(CODE_ID,14,4),0)))+1 FROM TB_CM05M01 WHERE CODE_KIND = #{codeKind}
	</selectKey>
		INSERT INTO TB_CM05M01
		(
			CODE_ID,
			CODE_NM,
			CODE_KIND,
			SORT_NO,
			USE_YN,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM
		)
		VALUES(
			#{codeKind} || 'TASK' || #{maxWbsTaskNo}, --{codeId}
			#{codeNm},
			#{codeKind},
			#{maxWbsTaskNo},
			'Y',
			#{userId},
			#{pgmId},
			SYSDATE
		)
	</insert>

	<update id="wbsTaskTempletUpdate" parameterType="Map">
		UPDATE TB_CM05M01
		SET
			CODE_NM = #{codeNm},
			UDT_ID = #{userId},
			UDT_PGM = #{pgmId},
			UDT_DTTM = SYSDATE
		WHERE CODE_ID = #{codeId}
	</update>

	<delete id="wbsTaskTempletDelete" parameterType="Map">
		DELETE FROM TB_CM05M01
		WHERE CODE_ID = #{codeId}
	</delete>
	<!--================================================= user 템플릿 관리 start=================================================-->
	<select id="selectWbsUserTaskTempletCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		FROM   TB_WB22M02
		WHERE  CODE_KIND = #{wbsPlanCodeId}
		AND  USER_ID = #{userId}
	</select>

	<select id="selectWbsUserTaskTempletList" parameterType="Map" resultType="camelMap">
		/* selectWbsUserTaskTempletList */
		SELECT
			USER_ID
			, CODE_KIND
			, CODE_ID
			, CODE_NM
			, CODE_DESC
			, SORT_NO
			, CREAT_ID
			, TO_CHAR(CREAT_DTTM, 'yyyy-MM-dd') AS CREAT_DTTM
			, CREAT_PGM
			, UDT_ID
			, TO_CHAR(UDT_DTTM, 'yyyy-MM-dd') AS UDT_DTTM
			, UDT_PGM
		FROM TB_WB22M02
		WHERE CODE_KIND = #{wbsPlanCodeId}
		AND USER_ID = #{userId}
		ORDER BY SORT_NO, CODE_ID
	</select>

	<insert id="wbsUserTaskTempletInsert" parameterType="Map">
	<selectKey keyProperty="maxWbsUserTaskNo" resultType="String" order="BEFORE">
	SELECT NVL(MAX(TO_NUMBER(SORT_NO)), 0) + 1 FROM TB_WB22M02 WHERE CODE_KIND = #{codeKind}
	</selectKey>
		INSERT INTO TB_WB22M02
		(
			USER_ID
			, CODE_KIND
			, CODE_DESC
			, CODE_ID
			, CODE_NM
			, SORT_NO
			, CREAT_ID
			, CREAT_DTTM
			, CREAT_PGM
		)
		VALUES(
			#{userId}
			, #{codeKind}
			, #{codeDesc}
			, #{codeKind} || 'TASK' || #{maxWbsUserTaskNo}
			, #{codeNm}
			, #{maxWbsUserTaskNo}
			, #{userId}
			, SYSDATE
			, #{pgmId}
		)
	</insert>

	<update id="wbsUserTaskTempletUpdate_Old" parameterType="Map">
		UPDATE TB_WB22M02
		SET
			CODE_NM = #{codeNm}
			, UDT_ID = #{userId}
			, UDT_DTTM = SYSDATE
			, UDT_PGM = #{pgmId}
		WHERE USER_ID = #{userId}
		AND CODE_KIND = #{codeKind}
		AND CODE_ID = #{codeId}
	</update>


	<insert id="wbsUserTaskTempletUpdate" parameterType="Map">
	<selectKey keyProperty="maxWbsUserTaskNo" resultType="String" order="BEFORE">
	SELECT NVL(MAX(TO_NUMBER(SORT_NO)), 0) + 1 FROM TB_WB22M02 WHERE CODE_KIND = #{codeKind}
	</selectKey>
		INSERT INTO TB_WB22M02
		(
			USER_ID
			, CODE_KIND
			, CODE_DESC
			, CODE_ID
			, CODE_NM
			, SORT_NO
			, CREAT_ID
			, CREAT_DTTM
			, CREAT_PGM
			, UDT_ID
			, UDT_DTTM
			, UDT_PGM
		)
		VALUES(
			#{userId}
			, #{codeKind}
			, #{codeDesc}
			, #{codeKind} || 'TASK' || #{maxWbsUserTaskNo}
			, #{codeNm}
			, #{maxWbsUserTaskNo}
			, #{creatId}
			, #{creatDttm}
			, #{creatPgm}
			, #{userId}
			, SYSDATE
			, #{pgmId}
		)
	</insert>


	<delete id="wbsUserTaskTempletDelete" parameterType="Map">
		DELETE FROM TB_WB22M02
		WHERE USER_ID = #{userId}
		AND CODE_KIND = #{codeKind}	--해당 코드의 하위 정보 전체 삭제 처리함.
	</delete>
	<!--================================================= user 템플릿 관리 end==================================================-->

	<select id="selectHistWBS1Level" parameterType="Map"  resultType="camelMap">
		SELECT SORT_NO AS RN,
			X.CODE_ID AS WBS_PLAN_CODE_ID,
			X.CODE_NM AS WBS_PLAN_CODE_NM,
			X.SORT_NO,
			Y.FILE_TRGT_KEY,
			#{coCd} AS CO_CD,
			Y.WBS_PLAN_NO,
			Y.VER_NO,
			#{salesCd} AS SALES_CD,
			NVL(Y.WBS_PLAN_MNG_ID, '') AS WBS_PLAN_MNG_ID,
			NVL((SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = Y.WBS_PLAN_MNG_ID), '') AS WBS_PLAN_MNG_NM,
			NVL(Y.WBS_PLANS_DT, '') AS WBS_PLANS_DT,
			NVL(Y.WBS_PLANE_DT, '') AS WBS_PLANE_DT,
			Y.DAYCNT,
			NVL(TO_CHAR(Z.RSLTSS_DT,'YYYY-MM-DD'),'') AS RSLTSS_DT,     --TASK실적시작일
			NVL(TO_CHAR(Z.RSLTSE_DT,'YYYY-MM-DD'),'') AS RSLTSE_DT,     --TASK실적종료일
			NVL(RSLT_DAYCNT,'') AS RSLT_DAYCNT, --  TASK실적소요일
			NVL(Y.WBS_PLAN_STS_CODE_ID, 'WBSPLANSTS10') AS WBS_PLAN_STS_CODE_ID,
			(SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = NVL(Y.WBS_PLAN_STS_CODE_ID, 'WBSPLANSTS10')) AS WBS_PLAN_STS_CODE_ID_NM,
			Y.LOCK_YN,
			Y.CLOSE_YN
	FROM (
			SELECT CODE_ID,
					CODE_NM,
					SORT_NO
					FROM TB_CM05M01
			WHERE CODE_KIND = 'WBSCODE'
				AND USE_YN = 'Y'
			ORDER BY SORT_NO ASC ) X
			LEFT OUTER JOIN
				(SELECT
						FILE_TRGT_KEY,
						WBS_PLAN_CODE_ID,
						WBS_PLAN_NO,
						VER_NO,
						WBS_PLAN_MNG_ID,
						TO_CHAR(WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT,
						TO_CHAR(WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT,
						DAYCNT,
						WBS_PLAN_STS_CODE_ID,
						LOCK_YN,
						CLOSE_YN
						FROM TB_WB22M01_HIST
				WHERE CO_CD = #{coCd}
					AND SALES_CD = #{salesCd}
					AND VER_NO = #{planVerNo}
				) Y
			ON X.CODE_ID = Y.WBS_PLAN_CODE_ID
			LEFT OUTER JOIN (
					SELECT WR.WBS_PLAN_CODE_KIND  --WBS계획 LVL1
							, MIN(WR.WBS_RSLTSS_DT)   AS RSLTSS_DT     --TASK실적시작일
							, MAX(WR.WBS_RSLTSE_DT)   AS RSLTSE_DT     --TASK실적종료일
							, SUM(WR.DAYCNT)          AS RSLT_DAYCNT   --TASK실적소요일
						FROM TB_WB23M01  WR--WBS실적 정보
						WHERE WR.CO_CD = #{coCd}
						AND WR.SALES_CD = #{salesCd}
						GROUP BY WR.WBS_PLAN_CODE_KIND
					) Z
				ON X.CODE_ID = Z.WBS_PLAN_CODE_KIND
		ORDER BY SORT_NO
	</select>

	<select id="ModalwbsPlanconfirmListCount" parameterType="Map" resultType="int">
		WITH SUBJ AS --과제정보
		(
			SELECT X.FILE_TRGT_KEY
				, X.CO_CD                                                       AS CO_CD              --회사코드
				, X.SALES_CD                                                    AS SALES_CD           --SALES Code
				, X.SJ_NO                                                       AS SJ_NO              --과제번호
				, X.SJ_NM                                                       AS SJ_NM              --과제명
				, X.VER_NO                                                      AS VER_NO             --버젼
				, X.MKER_DIV                                                    AS MKER_DIV           --제작처구분
				, (SELECT FN_CM05M01_CD_TO_NM(X.MKER_DIV) FROM DUAL)           AS MKER_DIV_NM        --제작처구분명
				, X.MKER_CD                                                     AS MKER_CD            --제작처코드
				, BM.CLNT_NM                                                    AS MKER_NM            --제작처명
				, X.SMRIZE_ID                                                   AS SMRIZE_ID          --총괄PM ID
				, (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
				, TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
				, TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
				, TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
				, TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
				, X.CLOSE_YN                                                    AS CLOSE_YN           --확정유무
				, X.DSGN_DIF_CODE_ID                                            AS DSGN_DIF_CODE_ID   --설계난이도
				, (SELECT FN_CM05M01_CD_TO_NM(X.DSGN_DIF_CODE_ID) FROM DUAL)   AS DSGN_DIF_CODE_NM   --설계난이도
				, X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
				, X.PRDCTN_DIF_CODE_ID                                          AS PRDCTN_DIF_CODE_ID --생산난이도
				, (SELECT FN_CM05M01_CD_TO_NM(X.PRDCTN_DIF_CODE_ID) FROM DUAL) AS PRDCTN_DIF_CODE_NM --생산난이도
				, X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
				, X.SJ_RMK                                                      AS SJ_RMK             --비고
			FROM TB_WB21M01 X
					LEFT OUTER JOIN TB_BM02M01 AS BM ON X.MKER_CD = BM.CLNT_CD --거래처정보
			WHERE X.CO_CD = #{coCd}
				AND X.CLOSE_YN = 'Y'
		)
		, SJD AS --수주상세
		(
			SELECT M.CO_CD                                              AS CO_CD        --회사코드
				, (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명
				, M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
				, X.SALES_CD                                           AS SALES_CD     --SALES Code
				, M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
				, C.CLNT_NM                                            AS CLNT_NM      --고객명
				, M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트
				, (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
				, X.PRDT_CD
				, (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = X.PRDT_CD) AS PRDT_NM
			FROM TB_CR02M01  M --수주마스터
					INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세
					INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
			WHERE 1=1
				AND M.CO_CD = #{coCd}
				AND X.SALES_CD IS NOT NULL --비용제외
				AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
							FROM SUBJ P
							WHERE P.CO_CD    = #{coCd}
							AND P.CO_CD    = X.CO_CD
							AND P.SALES_CD = X.SALES_CD
						)
		)
		, PLAN AS --WBS 계획정보
		(
		SELECT W.CO_CD                   AS CO_CD        --회사코드
			, W.SALES_CD                AS SALES_CD     --SALSES_CD
			, W.CLOSE_YN                AS CLOSE_YN     --확정여부
			, W.VER_NO                    AS PLAN_VER_NO  --버전
			, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
			, 'N' AS HIST_YN -- hist인지 아닌지
		FROM TB_WB22M01 W--WBS계획
		WHERE W.CO_CD = #{coCd}
			AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
			AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
							FROM SUBJ P
						WHERE P.CO_CD    = #{coCd}
							AND P.CO_CD    = W.CO_CD
							AND P.SALES_CD = W.SALES_CD
						)
		GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
		UNION ALL
		SELECT W.CO_CD                   AS CO_CD        --회사코드
			, W.SALES_CD                AS SALES_CD     --SALSES_CD
			, W.CLOSE_YN                AS CLOSE_YN     --확정여부
			, W.VER_NO                  AS PLAN_VER_NO  --버전
			, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
			, 'Y' AS HIST_YN -- hist인지 아닌지
		FROM TB_WB22M01_HIST W--WBS계획이력
		WHERE W.CO_CD = #{coCd}
			AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
			AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
							FROM SUBJ P
						WHERE P.CO_CD    = #{coCd}
							AND P.CO_CD    = W.CO_CD
							AND P.SALES_CD = W.SALES_CD
						)
		GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
		)
		SELECT COUNT(*) FROM (
			SELECT ROWNUM AS RN, T.* FROM (
					SELECT T.*
						FROM (
							SELECT X.CO_CD                            AS CO_CD       --회사코드
								, CR.ORDRS_NO                        AS ORDRS_NO    --수주번호
								, CR.CLNT_CD                         AS CLNT_CD     --고객코드
								, CR.CLNT_NM                         AS CLNT_NM     --고객명
								, CR.CLNT_PJT                        AS CLNT_PJT    --고객사프로젝트
								, CR.CLNT_PJT_NM                     AS CLNT_PJT_NM --고객사프로젝트명
								, X.SJ_NO                            AS SJ_NO             --과제번호
								, X.SJ_NM                            AS SJ_NM             --과제명
								, X.VER_NO                           AS VER_NO            --과제버젼
								, X.CLOSE_YN                         AS SJ_CLOSE_YN       --과제확정유무
								, X.SALES_CD                         AS SALES_CD          --SALES Code
								, X.MKER_DIV                         AS MKER_DIV          --제작처구분
								, X.MKER_DIV_NM                      AS MKER_DIV_NM       --제작처구분명
								, X.MKER_CD                          AS MKER_CD           --제작처코드
								, X.MKER_NM                          AS MKER_NM           --제작처명
								, X.SMRIZE_ID                        AS SMRIZE_ID         --총괄PM ID
								, X.SMRIZE_NM                        AS SMRIZE_NM         --총괄PM명
								, X.BEGIN_DT                         AS BEGIN_DT          --시작일
								, X.DE_DT                            AS DE_DT             --출고일
								, X.ACPTNC_DT                        AS ACPTNC_DT         --완료검수일
								, X.REQRE_DAYCNT                     AS REQRE_DAYCNT      --소요일수
								, X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID  --설계난이도
								, X.DSGN_DIF_CODE_NM                 AS DSGN_DIF_CODE_NM  --설계난이도
								, X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR    --설계계획공수
								, X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID--생산난이도
								, X.PRDCTN_DIF_CODE_NM               AS PRDCTN_DIF_CODE_NM--생산난이도
								, X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR  --생산계획공수
								, X.SJ_RMK                           AS SJ_RMK            --비고
								, X.FILE_TRGT_KEY                    AS FILE_TRGT_KEY     --FILE_TRGT_KEY
								, NVL(PLN.CLOSE_YN,'N')              AS PLAN_CLOSE_YN     --계획확정여부
								, NVL(PLN.HIST_YN,'N')                   AS HIST_YN --이력여부
								FROM SUBJ X
									INNER JOIN SJD AS CR ON X.CO_CD = CR.CO_CD AND X.SALES_CD = CR.SALES_CD
									LEFT OUTER JOIN PLAN AS PLN ON X.CO_CD = PLN.CO_CD AND X.SALES_CD = PLN.SALES_CD
							WHERE 1=1
							) T
						WHERE 1=1
						<if test="searchValue != null and !searchValue.equals('') and !searchType.equals('')">
						AND ${searchType} LIKE '%'||#{searchValue}||'%'
						</if>
						AND SALES_CD != #{salesCd}
						AND PLAN_CLOSE_YN  = 'N'
						) T ) T
	</select>

	<select id="ModalwbsPlanconfirmList" parameterType="Map" resultType="camelMap">
		WITH SUBJ AS --과제정보
		(
			SELECT X.FILE_TRGT_KEY
				, X.CO_CD                                                       AS CO_CD              --회사코드
				, X.SALES_CD                                                    AS SALES_CD           --SALES Code
				, X.SJ_NO                                                       AS SJ_NO              --과제번호
				, X.SJ_NM                                                       AS SJ_NM              --과제명
				, X.VER_NO                                                      AS VER_NO             --버젼
				, X.MKER_DIV                                                    AS MKER_DIV           --제작처구분
				, (SELECT FN_CM05M01_CD_TO_NM(X.MKER_DIV) FROM DUAL)           AS MKER_DIV_NM        --제작처구분명
				, X.MKER_CD                                                     AS MKER_CD            --제작처코드
				, BM.CLNT_NM                                                    AS MKER_NM            --제작처명
				, X.SMRIZE_ID                                                   AS SMRIZE_ID          --총괄PM ID
				, (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
				, TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
				, TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
				, TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
				, TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
				, X.CLOSE_YN                                                    AS CLOSE_YN           --확정유무
				, X.DSGN_DIF_CODE_ID                                            AS DSGN_DIF_CODE_ID   --설계난이도
				, (SELECT FN_CM05M01_CD_TO_NM(X.DSGN_DIF_CODE_ID) FROM DUAL)   AS DSGN_DIF_CODE_NM   --설계난이도
				, X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
				, X.PRDCTN_DIF_CODE_ID                                          AS PRDCTN_DIF_CODE_ID --생산난이도
				, (SELECT FN_CM05M01_CD_TO_NM(X.PRDCTN_DIF_CODE_ID) FROM DUAL) AS PRDCTN_DIF_CODE_NM --생산난이도
				, X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
				, X.SJ_RMK                                                      AS SJ_RMK             --비고
			FROM TB_WB21M01 X
					LEFT OUTER JOIN TB_BM02M01 AS BM ON X.MKER_CD = BM.CLNT_CD --거래처정보
			WHERE X.CO_CD = #{coCd}
				AND X.CLOSE_YN = 'Y'
		)
		, SJD AS --수주상세
		(
			SELECT M.CO_CD                                              AS CO_CD        --회사코드
				, (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명
				, M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
				, X.SALES_CD                                           AS SALES_CD     --SALES Code
				, M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
				, C.CLNT_NM                                            AS CLNT_NM      --고객명
				, M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트
				, (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
				, X.PRDT_CD
				, (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = X.PRDT_CD) AS PRDT_NM
			FROM TB_CR02M01  M --수주마스터
					INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세
					INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
			WHERE 1=1
				AND M.CO_CD = #{coCd}
				AND X.SALES_CD IS NOT NULL --비용제외
				AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
							FROM SUBJ P
							WHERE P.CO_CD    = #{coCd}
							AND P.CO_CD    = X.CO_CD
							AND P.SALES_CD = X.SALES_CD
						)
		)
		, PLAN AS --WBS 계획정보
		(
		SELECT W.CO_CD                   AS CO_CD        --회사코드
			, W.SALES_CD                AS SALES_CD     --SALSES_CD
			, W.CLOSE_YN                AS CLOSE_YN     --확정여부
			, W.VER_NO                    AS PLAN_VER_NO  --버전
			, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
			, 'N' AS HIST_YN -- hist인지 아닌지
		FROM TB_WB22M01 W--WBS계획
		WHERE W.CO_CD = #{coCd}
			AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
			AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
							FROM SUBJ P
						WHERE P.CO_CD    = #{coCd}
							AND P.CO_CD    = W.CO_CD
							AND P.SALES_CD = W.SALES_CD
						)
		GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
		UNION ALL
		SELECT W.CO_CD                   AS CO_CD        --회사코드
			, W.SALES_CD                AS SALES_CD     --SALSES_CD
			, W.CLOSE_YN                AS CLOSE_YN     --확정여부
			, W.VER_NO                  AS PLAN_VER_NO  --버전
			, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT--계획LVL1 수
			, 'Y' AS HIST_YN -- hist인지 아닌지
		FROM TB_WB22M01_HIST W--WBS계획이력
		WHERE W.CO_CD = #{coCd}
			AND W.WBS_PLAN_CODE_KIND = 'WBSCODE'
			AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만
							FROM SUBJ P
						WHERE P.CO_CD    = #{coCd}
							AND P.CO_CD    = W.CO_CD
							AND P.SALES_CD = W.SALES_CD
						)
		GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
		)
		SELECT * FROM (
			SELECT ROWNUM AS RN, T.* FROM (
					SELECT T.*
						FROM (
							SELECT X.CO_CD                            AS CO_CD       --회사코드
								, CR.ORDRS_NO                        AS ORDRS_NO    --수주번호
								, CR.CLNT_CD                         AS CLNT_CD     --고객코드
								, CR.CLNT_NM                         AS CLNT_NM     --고객명
								, CR.CLNT_PJT                        AS CLNT_PJT    --고객사프로젝트
								, CR.CLNT_PJT_NM                     AS CLNT_PJT_NM --고객사프로젝트명
								, X.SJ_NO                            AS SJ_NO             --과제번호
								, X.SJ_NM                            AS SJ_NM             --과제명
								, X.VER_NO                           AS VER_NO            --과제버젼
								, X.CLOSE_YN                         AS SJ_CLOSE_YN       --과제확정유무
								, X.SALES_CD                         AS SALES_CD          --SALES Code
								, X.MKER_DIV                         AS MKER_DIV          --제작처구분
								, X.MKER_DIV_NM                      AS MKER_DIV_NM       --제작처구분명
								, X.MKER_CD                          AS MKER_CD           --제작처코드
								, X.MKER_NM                          AS MKER_NM           --제작처명
								, X.SMRIZE_ID                        AS SMRIZE_ID         --총괄PM ID
								, X.SMRIZE_NM                        AS SMRIZE_NM         --총괄PM명
								, X.BEGIN_DT                         AS BEGIN_DT          --시작일
								, X.DE_DT                            AS DE_DT             --출고일
								, X.ACPTNC_DT                        AS ACPTNC_DT         --완료검수일
								, X.REQRE_DAYCNT                     AS REQRE_DAYCNT      --소요일수
								, X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID  --설계난이도
								, X.DSGN_DIF_CODE_NM                 AS DSGN_DIF_CODE_NM  --설계난이도
								, X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR    --설계계획공수
								, X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID--생산난이도
								, X.PRDCTN_DIF_CODE_NM               AS PRDCTN_DIF_CODE_NM--생산난이도
								, X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR  --생산계획공수
								, X.SJ_RMK                           AS SJ_RMK            --비고
								, X.FILE_TRGT_KEY                    AS FILE_TRGT_KEY     --FILE_TRGT_KEY
								, NVL(PLN.CLOSE_YN,'N')              AS PLAN_CLOSE_YN     --계획확정여부
								, PLN.PLAN_VER_NO                    AS PLAN_VER_NO       --계획버전
								, NVL(PLN.HIST_YN,'N')                   AS HIST_YN --이력여부
								FROM SUBJ X
									INNER JOIN SJD AS CR ON X.CO_CD = CR.CO_CD AND X.SALES_CD = CR.SALES_CD
									LEFT OUTER JOIN PLAN AS PLN ON X.CO_CD = PLN.CO_CD AND X.SALES_CD = PLN.SALES_CD
							WHERE 1=1
							) T
						WHERE 1=1
						<if test="searchValue != null and !searchValue.equals('') and !searchType.equals('')">
						AND ${searchType} LIKE '%'||#{searchValue}||'%'
						</if>
						AND SALES_CD != #{salesCd}
						AND PLAN_CLOSE_YN  = 'N'
						ORDER BY CLNT_NM, ORDRS_NO, SALES_CD, PLAN_VER_NO DESC
						) T ) T

	</select>

	<select id="selectWbcPlan" parameterType="Map" resultType="camelMap">
		SELECT FILE_TRGT_KEY,
			CO_CD,
			WBS_PLAN_NO,
			WBS_PLAN_CODE_KIND,
			WBS_PLAN_CODE_ID,
			SALES_CD,
			VER_NO,
			SEQ,
			WBS_PLAN_MNG_ID,
			TO_CHAR(WBS_PLANS_DT, 'YYYYMMDD') AS WBS_PLANS_DT,
			TO_CHAR(WBS_PLANE_DT, 'YYYYMMDD') AS WBS_PLANE_DT,
			DAYCNT,
			WBS_PLAN_STS_CODE_ID,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM
		FROM TB_WB22M01
		WHERE CO_CD = #{coCd}
			AND SALES_CD = #{salesCd}
			AND WBS_PLAN_CODE_KIND = 'WBSCODE'
		ORDER BY WBS_PLAN_NO
	</select>

	<update id="updateWbcPlan" parameterType="Map">
		UPDATE TB_WB22M01
		SET WBS_PLAN_MNG_ID = #{wbsPlanMngId,  jdbcType=VARCHAR},
			WBS_PLANS_DT = #{wbsPlansDt,  jdbcType=VARCHAR},
			WBS_PLANE_DT = #{wbsPlaneDt,  jdbcType=VARCHAR},
			DAYCNT = #{daycnt,  jdbcType=VARCHAR},
			WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId,  jdbcType=VARCHAR},
			UDT_ID = #{creatId},
			UDT_PGM = #{creatPgm},
			UDT_DTTM = SYSDATE
		WHERE CO_CD = #{coCd}
			AND SALES_CD = #{salesCd}
	<if test="wbsPlanCodeId != null and !wbsPlanCodeId.equals('')">
			AND WBS_PLAN_CODE_ID = #{wbsPlanCodeId}
	</if>
			AND WBS_PLAN_CODE_KIND = 'WBSCODE'
	</update>

	<select id="selectWbcPlanTodoList" parameterType="Map" resultType="camelMap">
		SELECT X.FILE_TRGT_KEY,
			X.CO_CD,
			X.SALES_CD,
			'TODODIV10' AS TODO_DIV1_CODE_ID,
			'TODODIV1015' AS TODO_DIV2_CODE_ID,
			X.WBS_PLAN_MNG_ID AS TODO_ID,
			Y.CO_CD AS TODO_CO_CD,
			Y.EMP_NO,
			Y.NAME,
			Y.TEL_NO,
			Y.EMAIL,
			#{histYn} AS HIST_YN,
			X.WBS_PLAN_CODE_KIND,
			X.WBS_PLAN_CODE_ID,
			(SELECT FN_CM05M01_CD_TO_NM(X.WBS_PLAN_CODE_ID) FROM DUAL) AS WBS_PLAN_CODE_NM,
			X.WBS_PLAN_NO,
			'N' AS SANCTN_STTUS,
			LEVEL_CNT	--같은 장비에서 담당가 처리해야할 일정 건수 합계
		FROM
				(SELECT min(X.FILE_TRGT_KEY) AS FILE_TRGT_KEY,
							max(X.CO_CD) AS CO_CD,
							max(X.SALES_CD) AS SALES_CD,
							X.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID,
							'Y' AS HIST_YN,
							max(X.WBS_PLAN_CODE_KIND) AS WBS_PLAN_CODE_KIND,
							max(X.WBS_PLAN_CODE_ID) AS WBS_PLAN_CODE_ID,
							min(X.WBS_PLAN_NO) AS WBS_PLAN_NO,
							'N' AS SANCTN_STTUS,
							count(X.FILE_TRGT_KEY) AS LEVEL_CNT 	--같은 장비에서 담당가 처리해야할 일정 건수 합계
						FROM TB_WB22M01 X
						WHERE X.CO_CD = #{coCd}
						AND X.SALES_CD = #{salesCd}
						AND X.VER_NO = #{verNo}
						AND X.WBS_PLAN_MNG_ID IS NOT NULL
						AND X.WBS_PLAN_MNG_ID != #{userId}
						AND X.WBS_PLAN_CODE_KIND = 'WBSCODE'
						GROUP BY X.WBS_PLAN_MNG_ID
					) X
				LEFT OUTER JOIN TB_CM06M01 Y  ON X.WBS_PLAN_MNG_ID = Y.ID
	</select>


	<select id="selectWbcPlanUpdteTodoList" parameterType="Map" resultType="camelMap">
		SELECT FILE_TRGT_KEY,
			CO_CD1 AS CO_CD,
			SALES_CD1 AS SALES_CD,
			'TODODIV10' AS TODO_DIV1_CODE_ID,
			'TODODIV1015' AS TODO_DIV2_CODE_ID,
			WBS_PLAN_MNG_ID1 AS TODO_ID,
			TODO_CO_CD,
			EMP_NO,
			NAME,
			TEL_NO,
			EMAIL,
			#{histYn} AS HIST_YN,
			WBS_PLAN_CODE_KIND1,
			WBS_PLAN_CODE_ID1,
			(SELECT FN_CM05M01_CD_TO_NM(WBS_PLAN_CODE_ID1) FROM DUAL) AS WBS_PLAN_CODE_NM,
			WBS_PLAN_NO1 AS WBS_PLAN_NO,
			'N' AS SANCTN_STTUS,
			LEVEL_CNT
			FROM (
				SELECT
						FILE_TRGT_KEY ,
						CO_CD1,
						CO_CD2,
						WBS_PLAN_NO1,
						WBS_PLAN_NO2,
						WBS_PLAN_CODE_KIND1,
						WBS_PLAN_CODE_KIND2,
						WBS_PLAN_CODE_ID1,
						WBS_PLAN_CODE_ID2,
						SALES_CD1,
						SALES_CD2,
						SEQ1,
						SEQ2,
						WBS_PLAN_MNG_ID1,
						WBS_PLAN_MNG_ID2,
						WBS_PLANS_DT1,
						WBS_PLANS_DT2,
						WBS_PLANE_DT1,
						WBS_PLANE_DT2,
						M.CO_CD AS TODO_CO_CD,
						M.EMP_NO,
						M.NAME,
						M.TEL_NO,
						M.EMAIL,
						LEVEL_CNT,
						CHK
						FROM (
								SELECT    min(X.FILE_TRGT_KEY) AS FILE_TRGT_KEY,
										max(X.CO_CD1) AS CO_CD1,
										max(X.CO_CD2) AS CO_CD2,
										min(X.WBS_PLAN_NO1) AS WBS_PLAN_NO1,
										min(X.WBS_PLAN_NO2) AS WBS_PLAN_NO2,
										max(X.WBS_PLAN_CODE_KIND1) AS WBS_PLAN_CODE_KIND1,
										max(X.WBS_PLAN_CODE_KIND2) AS WBS_PLAN_CODE_KIND2,
										min(X.WBS_PLAN_CODE_ID1) AS WBS_PLAN_CODE_ID1,
										min(X.WBS_PLAN_CODE_ID2) AS WBS_PLAN_CODE_ID2,
										--X.VER_NO,
										--Y.VER_NO,
										max(X.SALES_CD1) AS SALES_CD1,
										max(X.SALES_CD2) AS SALES_CD2,
										min(X.SEQ1) AS SEQ1,
										min(X.SEQ2) AS SEQ2,
										X.WBS_PLAN_MNG_ID1 AS WBS_PLAN_MNG_ID1,
										max(X.WBS_PLAN_MNG_ID2) AS WBS_PLAN_MNG_ID2,
										min(X.WBS_PLANS_DT1) AS WBS_PLANS_DT1,
										max(X.WBS_PLANS_DT2) AS WBS_PLANS_DT2,
										min(X.WBS_PLANE_DT1) AS WBS_PLANE_DT1,
										max(X.WBS_PLANE_DT2) AS WBS_PLANE_DT2,
										count(X.FILE_TRGT_KEY) AS LEVEL_CNT,
										max(X.CHK) AS  CHK
									FROM (
											SELECT    X.FILE_TRGT_KEY,
													X.CO_CD AS CO_CD1,
													Y.CO_CD AS CO_CD2,
													X.WBS_PLAN_NO AS WBS_PLAN_NO1,
													Y.WBS_PLAN_NO AS WBS_PLAN_NO2,
													X.WBS_PLAN_CODE_KIND AS WBS_PLAN_CODE_KIND1,
													Y.WBS_PLAN_CODE_KIND AS WBS_PLAN_CODE_KIND2,
													X.WBS_PLAN_CODE_ID AS WBS_PLAN_CODE_ID1,
													Y.WBS_PLAN_CODE_ID AS WBS_PLAN_CODE_ID2,
													--X.VER_NO,
													--Y.VER_NO,
													X.SALES_CD AS SALES_CD1,
													Y.SALES_CD AS SALES_CD2,
													X.SEQ AS SEQ1,
													Y.SEQ AS SEQ2,
													X.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID1,
													Y.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID2,
													X.WBS_PLANS_DT AS WBS_PLANS_DT1,
													Y.WBS_PLANS_DT AS WBS_PLANS_DT2,
													X.WBS_PLANE_DT AS WBS_PLANE_DT1,
													Y.WBS_PLANE_DT AS WBS_PLANE_DT2,
													CASE WHEN (X.WBS_PLAN_MNG_ID||X.WBS_PLANS_DT||X.WBS_PLANE_DT) != NVL(Y.WBS_PLAN_MNG_ID||Y.WBS_PLANS_DT||Y.WBS_PLANE_DT, '..')
															THEN 1 END AS CHK
											FROM TB_WB22M01 X
											LEFT OUTER JOIN
													( SELECT CO_CD,
																WBS_PLAN_NO,
																WBS_PLAN_CODE_KIND,
																WBS_PLAN_CODE_ID,
																SALES_CD,
																VER_NO,
																SEQ,
																WBS_PLAN_MNG_ID,
																WBS_PLANS_DT,
																WBS_PLANE_DT
															FROM TB_WB22M01_HIST
														WHERE CO_CD = #{coCd}
															AND SALES_CD = #{salesCd}
															AND VER_NO = (SELECT MAX(TO_NUMBER(VER_NO))
																				FROM TB_WB22M01_HIST
																			WHERE CO_CD = #{coCd}
																				AND SALES_CD = #{salesCd}
																			)
													) Y
															ON X.CO_CD = Y.CO_CD
														AND X.SALES_CD = Y.SALES_CD
														AND X.WBS_PLAN_NO = Y.WBS_PLAN_NO
														AND X.SEQ = Y.SEQ
														AND X.WBS_PLAN_CODE_KIND = Y.WBS_PLAN_CODE_KIND
														AND X.WBS_PLAN_CODE_ID = Y.WBS_PLAN_CODE_ID
												WHERE X.CO_CD = #{coCd}
												AND X.SALES_CD = #{salesCd}
												AND X.WBS_PLAN_CODE_KIND = 'WBSCODE'
												AND X.WBS_PLAN_MNG_ID IS NOT NULL
												AND X.WBS_PLAN_MNG_ID != #{userId}
										) X
								WHERE CHK = 1
								GROUP BY X.WBS_PLAN_MNG_ID1
							) Z
							LEFT OUTER JOIN TB_CM06M01 M  ON Z.WBS_PLAN_MNG_ID1 = M.ID
					) X
	</select>



	<select id="Modalwb22noconfirmListCount" parameterType="Map"  resultType="int">
		WITH SUBJ AS  --과제정보
		(
		SELECT DISTINCT X.*
			, BM.CLNT_NM AS MKER_NM    --제작처명
			, U.NAME     AS SMRIZE_NM  --총괄PM명
		FROM   TB_WB21M01 AS X
				LEFT OUTER JOIN TB_BM02M01 AS BM  ON X.MKER_CD = BM.CLNT_CD  --거래처정보
				LEFT OUTER JOIN TB_CM06M01 AS U  ON U.ID = X.SMRIZE_ID
		WHERE  1 = 1
		AND    X.CLOSE_YN = 'Y'
		AND    X.VER_NO = (
					      SELECT MAX(T.VER_NO)
					        FROM TB_WB21M01 T
					       WHERE T.SJ_NO = X.SJ_NO
			 			)
		)
		, SJD AS  --수주상세
		(
		SELECT DISTINCT M.*
			, M.ORDRS_CLNT_CD AS CLNT_CD  --고객코드
			, X.SALES_CD
			, X.PRDT_CD
			, X.ORDRS_DTL_DIV20
			, X.ORDRS_DTL_DIV30
			, X.MCTYPE
		FROM   TB_CR02M01 AS M  --수주마스터
				INNER JOIN TB_CR02D02 AS X  ON X.CO_CD    = M.CO_CD
										AND X.ORDRS_NO = M.ORDRS_NO  --수주상세
		WHERE  1 = 1
		AND    EXISTS (
						SELECT 'X'  --과제등록된 SALES_CD 만
						FROM   SUBJ AS P
						WHERE  P.CO_CD    = X.CO_CD
						AND    P.SALES_CD = X.SALES_CD
					)
		AND    X.SALES_CD IS NOT NULL  --비용제외
		)
		, PLAN AS  --WBS 계획정보
		(
		SELECT DISTINCT W.CO_CD          AS CO_CD          --회사코드
			, W.SALES_CD                AS SALES_CD       --SALSES_CD
			, W.CLOSE_YN                AS CLOSE_YN       --확정여부
			, W.VER_NO                  AS PLAN_VER_NO    --버전
			, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT  --계획LVL1 수
		FROM   TB_WB22M01 AS W  --WBS계획
		WHERE  1 = 1
		AND    EXISTS (
						SELECT 'X'  --과제등록된 SALES_CD 만
						FROM   SUBJ AS P
						WHERE  P.CO_CD    = W.CO_CD
						AND    P.SALES_CD = W.SALES_CD
					)
		AND    W.WBS_PLAN_CODE_KIND = 'WBSCODE'
		GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
		)
		SELECT COUNT(*)
		FROM   (
				SELECT ROWNUM AS RN
					, T.*
				FROM   (
						SELECT T.*
							, R1.CODE_NM AS CO_NM
							, C.CLNT_NM
							, R2.CODE_NM AS CLNT_PJT_NM
							, R3.CODE_NM AS MKER_DIV_NM
							, R4.CODE_NM AS DSGN_DIF_CODE_NM
							, R5.CODE_NM AS PRDCTN_DIF_CODE_NM
							, R6.CODE_NM AS NEW_GBN_NM
							, R7.CODE_NM AS IN_PROD_GBN_NM
							, R8.CODE_NM AS MCTYPE_NM
						FROM   (
								SELECT DISTINCT X.FILE_TRGT_KEY           AS FILE_TRGT_KEY       --FILE_TRGT_KEY
									, X.CO_CD                            AS CO_CD               --회사코드
									, CR.ORDRS_NO                        AS ORDRS_NO            --수주번호
									, CR.CLNT_CD                         AS CLNT_CD             --고객코드
									, CR.CLNT_PJT                        AS CLNT_PJT            --고객사프로젝트
									, CR.ORDRS_DTL_DIV20                 AS ORDRS_DTL_DIV20     --신작구분
									, CR.ORDRS_DTL_DIV30                 AS ORDRS_DTL_DIV30     --자체구분
									, CR.MCTYPE                          AS MCTYPE              --머신구분
									, X.SJ_NO                            AS SJ_NO               --과제번호
									, X.SJ_NM                            AS SJ_NM               --과제명
									, X.VER_NO                           AS VER_NO              --과제버젼
									, X.CLOSE_YN                         AS SJ_CLOSE_YN         --과제확정유무
									, X.SALES_CD                         AS SALES_CD            --SALES Code
									, PLN.CLOSE_YN                       AS PLAN_CLOSE_YN       --계획확정여부
									, PLN.PLAN_VER_NO                    AS PLAN_VER_NO         --계획버전
									, X.MKER_DIV                         AS MKER_DIV            --제작처구분
									, X.MKER_CD                          AS MKER_CD             --제작처코드
									, X.MKER_NM                          AS MKER_NM             --제작처명
									, X.SMRIZE_ID                        AS SMRIZE_ID           --총괄PM ID
									, X.SMRIZE_NM                        AS SMRIZE_NM           --총괄PM명
									, TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')  AS BEGIN_DT            --시작일
									, TO_CHAR(X.DE_DT, 'YYYY-MM-DD')     AS DE_DT               --출고일
									, TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT           --완료검수일
									, X.REQRE_DAYCNT                     AS REQRE_DAYCNT        --소요일수
									, X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID    --설계난이도
									, X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR      --설계계획공수
									, X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID  --생산난이도
									, X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR    --생산계획공수
									, X.SJ_RMK                           AS SJ_RMK              --비고
								FROM   SUBJ AS X
									INNER JOIN SJD AS CR  ON X.CO_CD    = CR.CO_CD
															AND X.SALES_CD = CR.SALES_CD
									LEFT OUTER JOIN PLAN AS PLN  ON X.CO_CD    = PLN.CO_CD
																AND X.SALES_CD = PLN.SALES_CD
								WHERE  1 = 1
								AND    X.CO_CD = #{coCd}
								AND    PLN.CLOSE_YN = 'N'
								<if test="searchValue != null and !searchValue.equals('') and searchType.equals('SMRIZE_NM')">
								AND    X.SMRIZE_NM LIKE '%'||#{searchValue}||'%'
								</if>
							) AS T
							LEFT OUTER JOIN TB_BM02M01 AS C   ON C.CLNT_CD = T.CLNT_CD
							LEFT OUTER JOIN TB_CM05M01 AS R1  ON R1.CODE_ID = T.CO_CD
							LEFT OUTER JOIN TB_CM05M01 AS R2  ON R2.CODE_ID = T.CLNT_PJT
							LEFT OUTER JOIN TB_CM05M01 AS R3  ON R3.CODE_ID = T.MKER_DIV
							LEFT OUTER JOIN TB_CM05M01 AS R4  ON R4.CODE_ID = T.DSGN_DIF_CODE_ID
							LEFT OUTER JOIN TB_CM05M01 AS R5  ON R5.CODE_ID = T.PRDCTN_DIF_CODE_ID
							LEFT OUTER JOIN TB_CM05M01 AS R6  ON R6.CODE_ID = T.ORDRS_DTL_DIV20
							LEFT OUTER JOIN TB_CM05M01 AS R7  ON R7.CODE_ID = T.ORDRS_DTL_DIV30
							LEFT OUTER JOIN TB_CM05M01 AS R8  ON R8.CODE_ID = T.MCTYPE
						WHERE  1 = 1
						ORDER BY C.CLNT_NM, T.ORDRS_NO, T.SALES_CD, T.PLAN_VER_NO DESC
					) AS T
			) AS T
		WHERE  1 = 1
	</select>

	<select id="Modalwb22noconfirmList" parameterType="Map"  resultType="camelMap">
		WITH SUBJ AS  --과제정보
		(
		SELECT DISTINCT X.*
			, BM.CLNT_NM AS MKER_NM    --제작처명
			, U.NAME     AS SMRIZE_NM  --총괄PM명
		FROM   TB_WB21M01 AS X
				LEFT OUTER JOIN TB_BM02M01 AS BM  ON X.MKER_CD = BM.CLNT_CD  --거래처정보
				LEFT OUTER JOIN TB_CM06M01 AS U  ON U.ID = X.SMRIZE_ID
		WHERE  1 = 1
		AND    X.CLOSE_YN = 'Y'
		AND    X.VER_NO = (
					      SELECT MAX(T.VER_NO)
					        FROM TB_WB21M01 T
					       WHERE T.SJ_NO = X.SJ_NO
			 			)
		)
		, SJD AS  --수주상세
		(
		SELECT DISTINCT M.*
			, M.ORDRS_CLNT_CD AS CLNT_CD  --고객코드
			, X.SALES_CD
			, X.PRDT_CD
			, X.ORDRS_DTL_DIV20
			, X.ORDRS_DTL_DIV30
			, X.MCTYPE
		FROM   TB_CR02M01 AS M  --수주마스터
				INNER JOIN TB_CR02D02 AS X  ON X.CO_CD    = M.CO_CD
										AND X.ORDRS_NO = M.ORDRS_NO  --수주상세
		WHERE  1 = 1
		AND    EXISTS (
						SELECT 'X'  --과제등록된 SALES_CD 만
						FROM   SUBJ AS P
						WHERE  P.CO_CD    = X.CO_CD
						AND    P.SALES_CD = X.SALES_CD
					)
		AND    X.SALES_CD IS NOT NULL  --비용제외
		)
		, PLAN AS  --WBS 계획정보
		(
		SELECT DISTINCT W.CO_CD          AS CO_CD          --회사코드
			, W.SALES_CD                AS SALES_CD       --SALSES_CD
			, W.CLOSE_YN                AS CLOSE_YN       --확정여부
			, W.VER_NO                  AS PLAN_VER_NO    --버전
			, COUNT(W.WBS_PLAN_CODE_ID) AS PLAN_CODE_CNT  --계획LVL1 수
		FROM   TB_WB22M01 AS W  --WBS계획
		WHERE  1 = 1
		AND    EXISTS (
						SELECT 'X'  --과제등록된 SALES_CD 만
						FROM   SUBJ AS P
						WHERE  P.CO_CD    = W.CO_CD
						AND    P.SALES_CD = W.SALES_CD
					)
		AND    W.WBS_PLAN_CODE_KIND = 'WBSCODE'
		GROUP BY W.CO_CD, W.SALES_CD, W.CLOSE_YN, W.VER_NO
		)
		SELECT *
		FROM   (
				SELECT ROWNUM AS RN
					, T.*
				FROM   (
						SELECT T.*
							, R1.CODE_NM AS CO_NM
							, C.CLNT_NM
							, R2.CODE_NM AS CLNT_PJT_NM
							, R3.CODE_NM AS MKER_DIV_NM
							, R4.CODE_NM AS DSGN_DIF_CODE_NM
							, R5.CODE_NM AS PRDCTN_DIF_CODE_NM
							, R6.CODE_NM AS NEW_GBN_NM
							, R7.CODE_NM AS IN_PROD_GBN_NM
							, R8.CODE_NM AS MCTYPE_NM
						FROM   (
								SELECT DISTINCT X.FILE_TRGT_KEY           AS FILE_TRGT_KEY       --FILE_TRGT_KEY
									, X.CO_CD                            AS CO_CD               --회사코드
									, CR.ORDRS_NO                        AS ORDRS_NO            --수주번호
									, CR.CLNT_CD                         AS CLNT_CD             --고객코드
									, CR.CLNT_PJT                        AS CLNT_PJT            --고객사프로젝트
									, CR.ORDRS_DTL_DIV20                 AS ORDRS_DTL_DIV20     --신작구분
									, CR.ORDRS_DTL_DIV30                 AS ORDRS_DTL_DIV30     --자체구분
									, CR.MCTYPE                          AS MCTYPE              --머신구분
									, X.SJ_NO                            AS SJ_NO               --과제번호
									, X.SJ_NM                            AS SJ_NM               --과제명
									, X.VER_NO                           AS VER_NO              --과제버젼
									, X.CLOSE_YN                         AS SJ_CLOSE_YN         --과제확정유무
									, X.SALES_CD                         AS SALES_CD            --SALES Code
									, PLN.CLOSE_YN                       AS PLAN_CLOSE_YN       --계획확정여부
									, PLN.PLAN_VER_NO                    AS PLAN_VER_NO         --계획버전
									, X.MKER_DIV                         AS MKER_DIV            --제작처구분
									, X.MKER_CD                          AS MKER_CD             --제작처코드
									, X.MKER_NM                          AS MKER_NM             --제작처명
									, X.SMRIZE_ID                        AS SMRIZE_ID           --총괄PM ID
									, X.SMRIZE_NM                        AS SMRIZE_NM           --총괄PM명
									, TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')  AS BEGIN_DT            --시작일
									, TO_CHAR(X.DE_DT, 'YYYY-MM-DD')     AS DE_DT               --출고일
									, TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD') AS ACPTNC_DT           --완료검수일
									, X.REQRE_DAYCNT                     AS REQRE_DAYCNT        --소요일수
									, X.DSGN_DIF_CODE_ID                 AS DSGN_DIF_CODE_ID    --설계난이도
									, X.DSGN_PLAN_HOUR                   AS DSGN_PLAN_HOUR      --설계계획공수
									, X.PRDCTN_DIF_CODE_ID               AS PRDCTN_DIF_CODE_ID  --생산난이도
									, X.PRDCTN_PLAN_HOUR                 AS PRDCTN_PLAN_HOUR    --생산계획공수
									, X.SJ_RMK                           AS SJ_RMK              --비고
								FROM   SUBJ AS X
									INNER JOIN SJD AS CR  ON X.CO_CD    = CR.CO_CD
															AND X.SALES_CD = CR.SALES_CD
									LEFT OUTER JOIN PLAN AS PLN  ON X.CO_CD    = PLN.CO_CD
																AND X.SALES_CD = PLN.SALES_CD
								WHERE  1 = 1
								AND    X.CO_CD = #{coCd}
								AND    PLN.CLOSE_YN = 'N'
								<if test="searchValue != null and !searchValue.equals('') and searchType.equals('SMRIZE_NM')">
								AND    X.SMRIZE_NM LIKE '%'||#{searchValue}||'%'
								</if>
							) AS T
							LEFT OUTER JOIN TB_BM02M01 AS C   ON C.CLNT_CD = T.CLNT_CD
							LEFT OUTER JOIN TB_CM05M01 AS R1  ON R1.CODE_ID = T.CO_CD
							LEFT OUTER JOIN TB_CM05M01 AS R2  ON R2.CODE_ID = T.CLNT_PJT
							LEFT OUTER JOIN TB_CM05M01 AS R3  ON R3.CODE_ID = T.MKER_DIV
							LEFT OUTER JOIN TB_CM05M01 AS R4  ON R4.CODE_ID = T.DSGN_DIF_CODE_ID
							LEFT OUTER JOIN TB_CM05M01 AS R5  ON R5.CODE_ID = T.PRDCTN_DIF_CODE_ID
							LEFT OUTER JOIN TB_CM05M01 AS R6  ON R6.CODE_ID = T.ORDRS_DTL_DIV20
							LEFT OUTER JOIN TB_CM05M01 AS R7  ON R7.CODE_ID = T.ORDRS_DTL_DIV30
							LEFT OUTER JOIN TB_CM05M01 AS R8  ON R8.CODE_ID = T.MCTYPE
						WHERE  1 = 1
						ORDER BY C.CLNT_NM, T.ORDRS_NO, T.SALES_CD, T.PLAN_VER_NO DESC
					) AS T
			) AS T
		WHERE  1 = 1
		AND    T.RN BETWEEN ${firstIndex} AND ${lastIndex}
	</select>

	<!-- 일괄확정 -->
	<update id="confirm_wb22" parameterType="map">
		UPDATE TB_WB22M01
		SET    CLOSE_YN = 'Y'
			, UDT_ID   = #{userId}
			, UDT_PGM  = #{pgmId,  jdbcType=VARCHAR}
			, UDT_DTTM = SYSDATE
		WHERE  CO_CD    = #{coCd}
		AND    SALES_CD = #{salesCd}
		AND    VER_NO   = #{planVerNo}
	</update>


	<select id="wbsResultLastVerNoSearch" parameterType="Map"  resultType="camelMap">
		SELECT NVL(MAX(TO_NUMBER(WR.VER_NO)),0) AS VER_NO
			FROM TB_WB22M01 WR
		WHERE WR.CO_CD	 =  #{coCd}
			AND WR.SALES_CD =  #{salesCd}
	</select>

	<update id="updateWbsChanges" parameterType="Map">
      UPDATE TB_WB22M01
      SET    
			CHG_REASON        = #{chgReason}
      WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
      AND SALES_CD = #{salesCd}
    </update>

	<select id="wbsVerUpInsertChk" parameterType="Map" resultType="camelMap">
		SELECT * 
			FROM TB_WB22M01
		WHERE SALES_CD = #{salesCd}
			AND CO_CD = #{coCd}
			AND VER_NO = #{verNo}
			AND CLOSE_YN = 'Y'
	</select>
	
	
	<!-- 	간트차트에서 일정 Update 처리하는 쿼리 -->
	<update id="wbsLevel1GantUpdate" parameterType="Map">
				UPDATE TB_WB22M01
					SET WBS_PLAN_CODE_NM 	= #{wbsPlanCodeNm},
						WBS_PLAN_CODE_KIND  = #{wbsPlanCodeKind},
						WBS_PLAN_CODE_ID 	= #{wbsPlanCodeId},
						WBS_PLAN_MNG_ID 	= #{wbsPlanMngId},
						WBS_PLANS_DT 		= #{wbsPlansDt},
						WBS_PLANE_DT 		= #{wbsPlaneDt},
						DAYCNT 				= #{daycnt},
						EXPECT_MH 			= #{expectMh},
						CLOSE_YN 			= #{flag},
						UDT_ID 				= #{creatId},
						UDT_PGM 			= #{creatPgm},
						UDT_DTTM 			= SYSDATE
					WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</update>
	
	

	<delete id="wbsRsltsGantDelete" parameterType="Map">
		DELETE FROM TB_WB23M01
		WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>
	
	

	<select id="wbsRsltsGantDeleteChk" parameterType="Map" resultType="int">
		SELECT count(*)
		  FROM TB_WB23M01
	 	 WHERE SALES_CD 		 = #{salesCd}
		   AND CO_CD    		 = #{coCd}
		   AND WBS_PLAN_CODE_ID  = #{wbsPlanCodeId}
		   AND WBS_RSLTS_NO      = #{wbsRsltsNo}
	</select>

	<select id="wbsLevel2InsertChk" parameterType="Map"  resultType="int">
		SELECT count(*)
		FROM TB_WB22M01 T
						LEFT JOIN (
										SELECT SALES_CD, MAX(VER_NO) AS VER_NO
										  FROM TB_WB21M01
										 WHERE CLOSE_YN = 'Y'
										   AND SALES_CD = #{salesCd}
										GROUP BY SALES_CD
									) A ON T.SALES_CD = A.SALES_CD
										AND A.VER_NO = #{sjVerNo}
		WHERE T.SALES_CD = #{salesCd}
		AND WBS_PLAN_CODE_ID = #{wbsPlanCodeKind}
		AND T.VER_NO = #{verNo}
		AND T.CLOSE_YN = 'Y'
		AND T.WBS_PLAN_MNG_ID IS NOT NULL

	</select>
</mapper>
