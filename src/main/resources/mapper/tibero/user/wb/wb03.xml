<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.wb.wb03.mapper.WB03Mapper">

	<sql id="selectWbsIssueList">
        SELECT  
                    T.*,
                    FN_CM05M01_CD_TO_NM(T.CO_CD) AS CO_CD_NM,
                    CASE WHEN W01.FILE_TRGT_KEY  IS NULL  THEN 'N' ELSE 'Y' END WBS_PLAN_CHK_YN,
                    CASE WHEN W02.FILE_TRGT_KEY  IS NULL  THEN 'N' ELSE 'Y' END WBS_RSLTS_CHK_YN,
                    TO_CHAR(W01.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT, -- 계획시작일자
                    TO_CHAR(W01.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT, -- 계획종료일자
                    TO_CHAR(W02.WBS_RSLTSS_DT, 'YYYY-MM-DD') AS WBS_RSLTSS_DT, -- 실적시작일자
                    TO_CHAR(W02.WBS_RSLTSE_DT, 'YYYY-MM-DD') AS WBS_RSLTSE_DT, -- 실적종료일자
                    W01.WBS_PLAN_ID,
                    TO_CHAR(W01.WBS_PLAN_DT, 'YYYY-MM-DD') AS  WBS_PLAN_DT,
                    FN_CM06M01_ID_TO_NM(W01.WBS_PLAN_ID) WBS_PLAN_NM,
                    FN_CM06M01_ID_TO_NM(W01.CREAT_ID)  CREAT_ID,
                    TO_CHAR(W01.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM,
                    FN_CM06M01_ID_TO_NM(W01.UDT_ID)  UDT_ID,
                    TO_CHAR(W01.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM,
                    W02.WBS_PLAN_MH,        --계획공수
                    W02.WBS_RSLTS_MH,       --실적공수
                    W01.FILE_TRGT_KEY,
                    W01.WBS_PLAN_NO,
                    W01.WBS_PLAN_CNTS,
                    W01.WBS_PLAN_RMK,
                    W01.WBS_PLAN_STS_CODE_ID,
                    W01.WBS_PLAN_OS_YN,
                    DSGN_DIF_CODE_ID,
                    DSGN_PLAN_HOUR,
                    PRDCTN_DIF_CODE_ID,
                    PRDCTN_PLAN_HOUR,    
                    WBS_PLAN_MNG_ID,
                    FN_CM06M01_ID_TO_NM(W01.WBS_PLAN_MNG_ID) WBS_PLAN_MNG_NM,
                    W02.FILE_TRGT_KEY AS RSLTS_FILE_TRGT_KEY,
                    W02.WBS_PLAN_NO   AS RSLTS_WBS_PLAN_NO,
                    W02.WBS_RSLTS_RATE,
                    W02.LOCK_YN  AS RSLTS_LOCK_YN,
                    W02.CLOSE_YN AS RSLTS_CLOSE_YN,
                    W02.WBS_RSLTS_CNTS,
                    W02.WBS_RSLTS_RMK,
                    TO_CHAR(W02.WBS_RSLTS_DT, 'YYYY-MM-DD') AS WBS_RSLTS_DT,
                    FN_CM06M01_ID_TO_NM(W02.WBS_RSLTS_ID)  AS WBS_RSLTS_ID,
                    W02.*
               FROM         
                    (SELECT  
                           CR.CO_CD, 
                           CR.ORDRS_NO,
                           CR.SALES_CD, 
                           Y.ORDRS_CLNT_CD, 
                           (SELECT P.CLNT_NM FROM TB_BM02M01 P WHERE P.CLNT_CD = Y.ORDRS_CLNT_CD) AS ORDRS_CLNT_NM,
                           Y.CLNT_PJT, 
                           CR.ORDRS_DTL_DIV20, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
                           CR.PRDT_CD, 
                           (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = CR.PRDT_CD) AS PRDT_CD_NM,
                           CR.ITEM_DIV, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ITEM_DIV) AS ITEM_DIV_NM,
                           CR.EQP_NM ,
                           CD.*
                      FROM TB_CR02D02 CR INNER JOIN TB_CR02M01 Y  ON CR.CO_CD = Y.CO_CD
                                                                 AND CR.ORDRS_NO = Y.ORDRS_NO
                           , (
                                                SELECT 
                                                         CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
                                                         CODE_ID,
                                                         CODE_RPRC,
                                                         CODE_NM,
                                                         CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
                                                         CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
                                                         CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
                                                         LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
                                                         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
                                                         CONNECT_BY_ISLEAF AS IS_LEAF,
                                                         CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
                                                 FROM TB_CM05M01
                                                 START WITH CODE_ID = 'WBSDIV'
                                                 CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
                                )  CD 
                       WHERE CR.CO_CD = 'GUN'
                         AND CR.SALES_CD LIKE '%%' 
                      ORDER BY  CR.SALES_CD, PATH                 
                     ) AS T
                     LEFT OUTER JOIN TB_WB01M01 W01 ON T.CO_CD    = W01.CO_CD
                                                          AND T.SALES_CD = W01.SALES_CD
                                                          AND T.CODE_ID  = W01.WBS_PLAN_CODE_ID
                            LEFT OUTER JOIN TB_WB02M01 W02 ON T.CO_CD    = W02.CO_CD
                                                          AND T.SALES_CD = W02.SALES_CD
                                                          AND T.CODE_ID  = W02.WBS_PLAN_CODE_ID
	</sql>
	<select id="selectWbsIssuePagingCount" parameterType="Map" resultType="int">
        SELECT
        COUNT(*)
        FROM (
        	<include refid="selectWbsIssueList"></include>
        )
	</select>

	<select id="selectWbsIssuePageList" parameterType="Map" resultType="CamelMap">
        SELECT
        *
        FROM(
        SELECT
        ROWNUM AS RNUM, A.*
        FROM
        (
        <include refid="selectWbsIssueList"></include>
        ) AS a
        ) A
        WHERE RNUM BETWEEN #{firstIndex} AND #{lastIndex}

	</select>
	
	<select id="selectBomDetailList" parameterType="Map" resultType="camelMap">
        SELECT T.FILE_TRGT_KEY
        , T.LVL
        , T.CO_CD
        , FN_CM05M01_CD_TO_NM(T.CO_CD) CO_NM
		, T.SALES_CD
		, T.PART_NO
		, T.UNIT_NO
		, T.REV_NO
		, T.DSGN_NO
		, T.UPPER_CD AS OLD_UPPER_CD
		, T.LOWER_CD AS OLD_LOWER_CD
		, T.UPPER_CD
		, T.LOWER_CD
		, D.MATR_SEQ
		, D.ORDRG_DIV_10
		, D.ORDRG_DIV_20
		, D.NEXT_PRCSN_NM
		, D.DLVPLC_NM
		, D.BOM_QTY
		, D.MATR_CD
		, D.MATR_NM
		, D.GOODS_DIV
		, D.MATR_CLNT_DIV
		, D.MATR_DIV
		, D.MATR_GRP
		, D.MATR_MAT
		, D.MATR_SIZE
		, D.MATR_SPEC
		, D.MATR_MAKR_NM
		, D.MATR_MNO
		, D.MATR_WT
		, D.MATR_UNIT
		, D.ORIGIN_NM
		, D.MATR_DRW_NO
		, D.MATR_TEST_DIV
		, D.DLVR_RQM_DAY
		, D.MATR_PURC_DIV
		, D.MIN_ORDRG_QTY
		, D.MATR_SAFT_QTY
		, D.MATR_STOCK_CD
		, D.DSGN_2D_MD
		, D.AVRG_2D_MD
		, D.DSGN_3D_MD
		, D.AVRG_3D_MD
		, D.PRDCTN_RQM_MD
		, D.PRDCTN_AVRG_MD
		, D.USE_YN
		, D.MATR_PART_NO
		, D.PCHS_CLNT_CD1
		, D.PCHS_CLNT_PCT1
		, D.PCHS_CLNT_CD2
		, D.PCHS_CLNT_PCT2
		, D.PCHS_CLNT_CD3
		, D.PCHS_CLNT_PCT3
		, D.MATR_UPR
		, D.MATR_AVRG_UPR
		, D.MATR_RMK
		, TO_CHAR(D.MATR_LAST_TRST_DT, 'YYYY-MM-DD') AS MATR_LAST_TRST_DT
		, D.MATR_ATNT_CD
		, D.MATR_NO
		, T.ETC_FIELD1
		, T.ETC_FIELD2
		, T.ETC_FIELD3
        , T.CREAT_ID
        , (SELECT NAME FROM TB_CM06M01 WHERE ID = T.CREAT_ID) AS CREAT_NM
        , TO_CHAR(T.CREAT_DTTM,'YYYY-MM-DD HH24:MM:SS') AS CREAT_DTTM
        , T.UDT_ID
        , (SELECT NAME FROM TB_CM06M01 WHERE ID = T.UDT_ID) AS UDT_NM
        , TO_CHAR(T.UDT_DTTM,'YYYY-MM-DD HH24:MM:SS') AS UDT_DTTM
        FROM
  		( SELECT X1.*, LEVEL AS LVL FROM TB_SM01M01 X1
           START WITH X1.UPPER_CD = '.' AND X1.SALES_CD = #{salesCd}
          CONNECT BY PRIOR X1.LOWER_CD = X1.UPPER_CD
        ) T
        LEFT OUTER JOIN TB_SM01D01 D
		ON T.CO_CD = D.CO_CD AND T.SALES_CD = D.SALES_CD AND T.UPPER_CD = D.UPPER_CD AND T.LOWER_CD = D.LOWER_CD
        LEFT OUTER JOIN
        ( SELECT T1.CO_CD
		        , T2.SALES_CD
		        , T2.PRDT_CD
		        , (SELECT X.PRDT_NM FROM TB_BM01M01 X WHERE X.PRDT_CD = T2.PRDT_CD) AS PRDT_NM
		        , T2.ITEM_DIV
		        , FN_CM05M01_CD_TO_NM(T2.ITEM_DIV) AS ITEM_DIV_NM
		        , T1.CLNT_PJT
		        , T2.EQP_NM
		        , T3.CLNT_NM
		        FROM TB_CR02M01 AS T1
		        JOIN TB_CR02D02 AS T2 ON T1.CO_CD = T2.CO_CD AND T1.ORDRS_NO = T2.ORDRS_NO
		        LEFT JOIN TB_BM02M01 AS T3 ON T3.CLNT_CD = T1.ORDRS_CLNT_CD
        ) A
        ON T.CO_CD = A.CO_CD AND T.SALES_CD = A.SALES_CD
		WHERE 1=1
		ORDER BY T.CO_CD, NVL(T.PART_NO,'0'), NVL(T.UNIT_NO,'0'), NVL(T.REV_NO,'0'),T.LOWER_CD, T.UPPER_CD
		         , D.MATR_SEQ
	</select>

	<!-- 구매 BOM 조회 -->
	<select id="selectBuyBomList" resultType="CamelMap">
		SELECT LEVEL - 1 AS LVL
			, T.FILE_TRGT_KEY
			, T.CO_CD
			, T.SALES_CD
			, T.PART_NO
			, T.UNIT_NO
			, T.REV_NO
			, T.DSGN_NO
			, T.UPPER_CD
			, T.LOWER_CD
			, T.PART_NO AS OLD_PART_NO
			, T.UNIT_NO AS OLD_UNIT_NO
			, T.REV_NO AS OLD_REV_NO
			, T.LOWER_CD AS OLD_LOWER_CD
		FROM TB_SM01M01 T
		START WITH T.UPPER_CD = '.' AND T.SALES_CD = #{salesCd}
		CONNECT BY PRIOR T.LOWER_CD = T.UPPER_CD
		ORDER BY T.CO_CD, NVL(T.PART_NO,'0'), NVL(T.UNIT_NO,'0'), NVL(T.REV_NO,'0'),T.LOWER_CD, T.UPPER_CD
	</select>

	<!-- BOM 자재정보 조회 -->
	<select id="selectBomMatrList" resultType="CamelMap">
		SELECT CO_CD
			, SALES_CD
			, UPPER_CD
			, LOWER_CD
			, UPPER_CD AS OLD_UPPER_CD
			, LOWER_CD AS OLD_LOWER_CD
			, LOWER_CD AS DSGN_NO
			, MATR_SEQ
			, ORDRG_DIV_10
			, ORDRG_DIV_20
			, NEXT_PRCSN_NM
			, DLVPLC_NM
			, BOM_QTY
			, MATR_CD
			, MATR_NM
			, GOODS_DIV
			, MATR_CLNT_DIV
			, MATR_DIV
			, MATR_GRP
			, MATR_MAT
			, MATR_SIZE
			, MATR_SPEC
			, MATR_MAKR_NM
			, MATR_MNO
			, MATR_WT
			, MATR_UNIT
			, ORIGIN_NM
			, MATR_DRW_NO
			, MATR_TEST_DIV
			, DLVR_RQM_DAY
			, MATR_PURC_DIV
			, MIN_ORDRG_QTY
			, MATR_SAFT_QTY
			, MATR_STOCK_CD
			, DSGN_2D_MD
			, AVRG_2D_MD
			, DSGN_3D_MD
			, AVRG_3D_MD
			, PRDCTN_RQM_MD
			, PRDCTN_AVRG_MD
			, USE_YN
			, MATR_PART_NO
			, PCHS_CLNT_CD1
			, PCHS_CLNT_PCT1
			, PCHS_CLNT_CD2
			, PCHS_CLNT_PCT2
			, PCHS_CLNT_CD3
			, PCHS_CLNT_PCT3
			, MATR_UPR
			, MATR_AVRG_UPR
			, MATR_RMK
			, TO_CHAR(T.MATR_LAST_TRST_DT, 'YYYY-MM-DD') AS MATR_LAST_TRST_DT
			, MATR_ATNT_CD
		FROM TB_SM01D01 T
		WHERE CO_CD = #{coCd}
		  AND SALES_CD = #{salesCd}
		ORDER BY T.CO_CD, T.LOWER_CD, T.UPPER_CD, T.MATR_SEQ
	</select>

    <insert id="insertBom" parameterType="Map">
        <selectKey keyProperty="fileTrgtKey" resultType="String" order="BEFORE">
            SELECT MAX(TO_NUMBER(FILE_TRGT_KEY)) + 1 FROM TB_SM01M01
        </selectKey>
        INSERT INTO TB_SM01M01
        ( FILE_TRGT_KEY
		, CO_CD
		, SALES_CD
		, PART_NO
		, UNIT_NO
		, REV_NO
		, DSGN_NO
		, UPPER_CD
		, LOWER_CD
        , ETC_FIELD1
        , ETC_FIELD2
        , ETC_FIELD3
        , CREAT_ID
        , CREAT_PGM
        , CREAT_DTTM
        )
        VALUES
        ( #{fileTrgtKey}
		, #{coCd}
		, #{salesCd}
		, #{partNo, jdbcType=VARCHAR}
		, #{unitNo, jdbcType=VARCHAR}
		, #{revNo, jdbcType=VARCHAR}
		, #{dsgnNo}
		, #{upperCd}
		, #{lowerCd}
        , #{etcField1, jdbcType=VARCHAR}
        , #{etcField2, jdbcType=VARCHAR}
        , #{etcField3, jdbcType=VARCHAR}
        , #{userId}
        , #{pgmId}
        , SYSDATE
        )
    </insert>

    <update id="updateBom" parameterType="Map">
        UPDATE TB_SM01M01
        SET   CO_CD 		= #{coCd}
			, SALES_CD 		= #{salesCd}
			, PART_NO 		= #{partNo, jdbcType=VARCHAR}
			, UNIT_NO 		= #{unitNo, jdbcType=VARCHAR}
			, REV_NO 		= #{revNo, jdbcType=VARCHAR}
			, DSGN_NO 		= #{dsgnNo}
			, UPPER_CD 		= #{upperCd}
			, LOWER_CD 		= #{lowerCd}
            , ETC_FIELD1    = #{etcField1, jdbcType=VARCHAR}
            , ETC_FIELD2    = #{etcField2, jdbcType=VARCHAR}
            , ETC_FIELD3    = #{etcField3, jdbcType=VARCHAR}
            , UDT_ID        = #{userId}
            , UDT_PGM       = #{pgmId}
            , UDT_DTTM      = SYSDATE
        WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>

	<delete id="deleteBom" parameterType="Map">
	  DELETE TB_SM01M01
	   WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>
	
	<delete id="deleteBomMatrAll" parameterType="Map">
	  DELETE TB_SM01D01
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	</delete>
	
	<delete id="deleteBomAll" parameterType="Map">
	  DELETE TB_SM01M01
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	</delete>

    <insert id="insertBomMatr" parameterType="Map">
        <selectKey keyProperty="matrSeq" resultType="String" order="BEFORE">
			SELECT NVL(MAX(MATR_SEQ), 0) + 1 FROM TB_SM01D01
			 WHERE CO_CD = #{coCd}
			   AND SALES_CD = #{salesCd}
			   AND UPPER_CD = #{upperCd}
			   AND LOWER_CD = #{lowerCd}
        </selectKey>
        INSERT INTO TB_SM01D01
        ( CO_CD
		, SALES_CD
		, MATR_SEQ
		, UPPER_CD
		, LOWER_CD
		, ORDRG_DIV_10
		, ORDRG_DIV_20
		, NEXT_PRCSN_NM
		, DLVPLC_NM
		, BOM_QTY
		, MATR_CD
		, MATR_NM
		, GOODS_DIV
		, MATR_CLNT_DIV
		, MATR_DIV
		, MATR_GRP
		, MATR_MAT
		, MATR_SIZE
		, MATR_SPEC
		, MATR_MAKR_NM
		, MATR_MNO
		, MATR_WT
		, MATR_UNIT
		, ORIGIN_NM
		, MATR_DRW_NO
		, MATR_TEST_DIV
		, DLVR_RQM_DAY
		, MATR_PURC_DIV
		, MIN_ORDRG_QTY
		, MATR_SAFT_QTY
		, MATR_STOCK_CD
		, DSGN_2D_MD
		, AVRG_2D_MD
		, DSGN_3D_MD
		, AVRG_3D_MD
		, PRDCTN_RQM_MD
		, PRDCTN_AVRG_MD
		, USE_YN
		, MATR_PART_NO
		, PCHS_CLNT_CD1
		, PCHS_CLNT_PCT1
		, PCHS_CLNT_CD2
		, PCHS_CLNT_PCT2
		, PCHS_CLNT_CD3
		, PCHS_CLNT_PCT3
		, MATR_UPR
		, MATR_AVRG_UPR
		, MATR_RMK
		, MATR_LAST_TRST_DT
		, MATR_ATNT_CD
        , ETC_FIELD1
        , ETC_FIELD2
        , ETC_FIELD3
        , CREAT_ID
        , CREAT_PGM
        , CREAT_DTTM
        )
        VALUES
        ( #{coCd}
		, #{salesCd}
		, #{matrSeq}
		, #{upperCd}
		, #{lowerCd}
		, #{ordrgDiv10, jdbcType=VARCHAR}
		, #{ordrgDiv20, jdbcType=VARCHAR}
		, #{nextPrcsnNm, jdbcType=VARCHAR}
		, #{dlvplcNm, jdbcType=VARCHAR}
		, #{bomQty, jdbcType=VARCHAR}
		, #{matrCd, jdbcType=VARCHAR}
		, #{matrNm, jdbcType=VARCHAR}
		, #{goodsDiv, jdbcType=VARCHAR}
		, #{matrClntDiv, jdbcType=VARCHAR}
		, #{matrDiv, jdbcType=VARCHAR}
		, #{matrGrp, jdbcType=VARCHAR}
		, #{matrMat, jdbcType=VARCHAR}
		, #{matrSize, jdbcType=VARCHAR}
		, #{matrSpec, jdbcType=VARCHAR}
		, #{matrMakrNm, jdbcType=VARCHAR}
		, #{matrMno, jdbcType=VARCHAR}
		, #{matrWt, jdbcType=VARCHAR}
		, #{matrUnit, jdbcType=VARCHAR}
		, #{originNm, jdbcType=VARCHAR}
		, #{matrDrwNo, jdbcType=VARCHAR}
		, #{matrTestDiv, jdbcType=VARCHAR}
		, #{dlvrRqmDay, jdbcType=VARCHAR}
		, #{matrPurcDiv, jdbcType=VARCHAR}
		, #{minOrdrgQty, jdbcType=VARCHAR}
		, #{matrSaftQty, jdbcType=VARCHAR}
		, #{matrStockCd, jdbcType=VARCHAR}
		, #{dsgn2DMd, jdbcType=VARCHAR}
		, #{avrg2DMd, jdbcType=VARCHAR}
		, #{dsgn3DMd, jdbcType=VARCHAR}
		, #{avrg3DMd, jdbcType=VARCHAR}
		, #{prdctnRqmMd, jdbcType=VARCHAR}
		, #{prdctnAvrgMd, jdbcType=VARCHAR}
		, #{useYn, jdbcType=VARCHAR}
		, #{matrPartNo, jdbcType=VARCHAR}
		, #{pchsClntCd1, jdbcType=VARCHAR}
		, #{pchsClntPct1, jdbcType=VARCHAR}
		, #{pchsClntCd2, jdbcType=VARCHAR}
		, #{pchsClntPct2, jdbcType=VARCHAR}
		, #{pchsClntCd3, jdbcType=VARCHAR}
		, #{pchsClntPct3, jdbcType=VARCHAR}
		, #{matrUpr, jdbcType=VARCHAR}
		, #{matrAvrgUpr, jdbcType=VARCHAR}
		, #{matrRmk, jdbcType=VARCHAR}
		, #{matrLastTrstDt, jdbcType=VARCHAR}
		, #{matrAtntCd, jdbcType=VARCHAR}
        , #{etcField1, jdbcType=VARCHAR}
        , #{etcField2, jdbcType=VARCHAR}
        , #{etcField3, jdbcType=VARCHAR}
        , #{userId}
        , #{pgmId}
        , SYSDATE
        )
    </insert>
	
    <update id="updateBomMatr" parameterType="Map">
        UPDATE TB_SM01D01
        SET   UPPER_CD 			= #{upperCd, jdbcType=VARCHAR}
			, LOWER_CD 			= #{lowerCd, jdbcType=VARCHAR}
			, ORDRG_DIV_10 		= #{ordrgDiv10, jdbcType=VARCHAR}
			, ORDRG_DIV_20 		= #{ordrgDiv20, jdbcType=VARCHAR}
			, NEXT_PRCSN_NM 	= #{nextPrcsnNm, jdbcType=VARCHAR}
			, DLVPLC_NM 		= #{dlvplcNm, jdbcType=VARCHAR}
			, BOM_QTY 			= #{bomQty, jdbcType=VARCHAR}
			, MATR_CD 			= #{matrCd, jdbcType=VARCHAR}
			, MATR_NM 			= #{matrNm, jdbcType=VARCHAR}
			, GOODS_DIV 		= #{goodsDiv, jdbcType=VARCHAR}
			, MATR_CLNT_DIV 	= #{matrClntDiv, jdbcType=VARCHAR}
			, MATR_DIV 			= #{matrDiv, jdbcType=VARCHAR}
			, MATR_GRP 			= #{matrGrp, jdbcType=VARCHAR}
			, MATR_MAT 			= #{matrMat, jdbcType=VARCHAR}
			, MATR_SIZE 		= #{matrSize, jdbcType=VARCHAR}
			, MATR_SPEC 		= #{matrSpec, jdbcType=VARCHAR}
			, MATR_MAKR_NM 		= #{matrMakrNm, jdbcType=VARCHAR}
			, MATR_MNO 			= #{matrMno, jdbcType=VARCHAR}
			, MATR_WT 			= #{matrWt, jdbcType=VARCHAR}
			, MATR_UNIT 		= #{matrUnit, jdbcType=VARCHAR}
			, ORIGIN_NM 		= #{originNm, jdbcType=VARCHAR}
			, MATR_DRW_NO 		= #{matrDrwNo, jdbcType=VARCHAR}
			, MATR_TEST_DIV 	= #{matrTestDiv, jdbcType=VARCHAR}
			, DLVR_RQM_DAY 		= #{dlvrRqmDay, jdbcType=VARCHAR}
			, MATR_PURC_DIV 	= #{matrPurcDiv, jdbcType=VARCHAR}
			, MIN_ORDRG_QTY 	= #{minOrdrgQty, jdbcType=VARCHAR}
			, MATR_SAFT_QTY 	= #{matrSaftQty, jdbcType=VARCHAR}
			, MATR_STOCK_CD 	= #{matrStockCd, jdbcType=VARCHAR}
			, DSGN_2D_MD 		= #{dsgn2DMd, jdbcType=VARCHAR}
			, AVRG_2D_MD 		= #{avrg2DMd, jdbcType=VARCHAR}
			, DSGN_3D_MD 		= #{dsgn3DMd, jdbcType=VARCHAR}
			, AVRG_3D_MD 		= #{avrg3DMd, jdbcType=VARCHAR}
			, PRDCTN_RQM_MD 	= #{prdctnRqmMd, jdbcType=VARCHAR}
			, PRDCTN_AVRG_MD 	= #{prdctnAvrgMd, jdbcType=VARCHAR}
			, USE_YN 			= #{useYn, jdbcType=VARCHAR}
			, MATR_PART_NO 		= #{matrPartNo, jdbcType=VARCHAR}
			, PCHS_CLNT_CD1 	= #{pchsClntCd1, jdbcType=VARCHAR}
			, PCHS_CLNT_PCT1 	= #{pchsClntPct1, jdbcType=VARCHAR}
			, PCHS_CLNT_CD2 	= #{pchsClntCd2, jdbcType=VARCHAR}
			, PCHS_CLNT_PCT2 	= #{pchsClntPct2, jdbcType=VARCHAR}
			, PCHS_CLNT_CD3 	= #{pchsClntCd3, jdbcType=VARCHAR}
			, PCHS_CLNT_PCT3 	= #{pchsClntPct3, jdbcType=VARCHAR}
			, MATR_UPR 			= #{matrUpr, jdbcType=VARCHAR}
			, MATR_AVRG_UPR 	= #{matrAvrgUpr, jdbcType=VARCHAR}
			, MATR_RMK 			= #{matrRmk, jdbcType=VARCHAR}
			, MATR_LAST_TRST_DT = #{matrLastTrstDt, jdbcType=VARCHAR}
			, MATR_ATNT_CD 		= #{matrAtntCd, jdbcType=VARCHAR}
			, MATR_NO 		    = #{matrNo, jdbcType=VARCHAR}
            , ETC_FIELD1        = #{etcField1, jdbcType=VARCHAR}
            , ETC_FIELD2        = #{etcField2, jdbcType=VARCHAR}
            , ETC_FIELD3        = #{etcField3, jdbcType=VARCHAR}
            , UDT_ID        = #{userId}
            , UDT_PGM       = #{pgmId}
            , UDT_DTTM      = SYSDATE
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	    AND MATR_SEQ = #{matrSeq}
	    AND UPPER_CD = #{oldUpperCd}
	    AND LOWER_CD = #{oldLowerCd}
	    <!-- 
	    UPPER_CD, LOWER_CD 가 Key 수정을 MultiLine 으로 작업시 에러발생.
	     -->
    </update>

	<delete id="deleteBomMatr" parameterType="Map">
	  DELETE TB_SM01D01
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	    AND MATR_SEQ = #{matrSeq}
	    AND UPPER_CD = #{upperCd}
	    AND LOWER_CD = #{lowerCd}
	</delete>

	<!--
	<resultMap id="resultInfoMap" type="CamelMap">
		<collection select="selectBomMatrList" property="BOM_MATR_LIST" column="{matrSeq=MATR_SEQ}" ofType="CamelMap"/>
	</resultMap>
		<select id="selectBomMatrInfo" resultMap="resultInfoMap">
	 -->
	<select id="selectBomMatrInfo" resultType="camelMap">
		SELECT CO_CD
			, SALES_CD
			, MATR_SEQ
			, UPPER_CD
			, LOWER_CD
			, ORDRG_DIV_10
			, ORDRG_DIV_20
			, NEXT_PRCSN_NM
			, DLVPLC_NM
			, BOM_QTY
			, MATR_CD
			, MATR_NM
			, GOODS_DIV
			, MATR_CLNT_DIV
			, MATR_DIV
			, MATR_GRP
			, MATR_MAT
			, MATR_SIZE
			, MATR_SPEC
			, MATR_MAKR_NM
			, MATR_MNO
			, MATR_WT
			, MATR_UNIT
			, ORIGIN_NM
			, MATR_DRW_NO
			, MATR_TEST_DIV
			, DLVR_RQM_DAY
			, MATR_PURC_DIV
			, MIN_ORDRG_QTY
			, MATR_SAFT_QTY
			, MATR_STOCK_CD
			, DSGN_2D_MD
			, AVRG_2D_MD
			, DSGN_3D_MD
			, AVRG_3D_MD
			, PRDCTN_RQM_MD
			, PRDCTN_AVRG_MD
			, USE_YN
			, MATR_PART_NO
			, PCHS_CLNT_CD1
			, PCHS_CLNT_PCT1
			, PCHS_CLNT_CD2
			, PCHS_CLNT_PCT2
			, PCHS_CLNT_CD3
			, PCHS_CLNT_PCT3
			, MATR_UPR
			, MATR_AVRG_UPR
			, MATR_RMK
			, TO_CHAR(T.MATR_LAST_TRST_DT, 'YYYY-MM-DD') AS MATR_LAST_TRST_DT
			, MATR_ATNT_CD
		FROM TB_SM01D01 T
	  WHERE CO_CD = #{coCd}
	    AND SALES_CD = #{salesCd}
	    AND MATR_SEQ = #{matrSeq}
	    AND UPPER_CD = #{upperCd}
	    AND LOWER_CD = #{lowerCd}
  </select>

  
</mapper>
