<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.wb.wb25.mapper.WB25Mapper">

     <select id="selectWbsTaskEvlCount" parameterType="Map" resultType="int">
         WITH SUBJ AS --확정된 과제정보   
                 (
                  SELECT X.CO_CD                                                      AS CO_CD              --회사코드
                       , X.SALES_CD                                                    AS SALES_CD           --SALES Code
                       , X.SJ_NM                                                       AS SJ_NM              --과제명
                       , X.VER_NO                                                      AS VER_NO             --버젼
                       , (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
                       , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
                       , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
                       , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
                       , TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
                       , X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
                       , X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
                       , X.FILE_TRGT_KEY
                    FROM TB_WB21M01 X
                   WHERE X.CO_CD = #{coCd}
                     AND X.BEGIN_DT BETWEEN #{beginDt} AND #{deDt} --조회조건 : 과제시작일
                     AND X.CLOSE_YN = 'Y'
                     <if test="salesCd != null and !salesCd.equals('')">
                       AND X.SALES_CD = #{salesCd}            
                     </if>
                 )  
               , SJD AS --수주상세 
                 ( 
                  SELECT M.CO_CD                                              AS CO_CD        --회사코드
                        , (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명 
                        , M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
                        , X.SALES_CD                                           AS SALES_CD     --SALES Code
                        , M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
                        , C.CLNT_NM                                            AS CLNT_NM      --고객명
                        , M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트 
                        , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
                        , X.ORDRS_PRC_MACH                                     AS ORDRS_PRC_MACH --수주가-기계파트
                        , X.TRGT_PCHS_PCOST_MACH                               AS TRGT_PCOST_MACH--목표구매원가-기계파트
                     FROM TB_CR02M01  M --수주마스터
                          INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
                          INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보 
                    WHERE 1=1
                      AND M.CO_CD = #{coCd}
                      AND X.SALES_CD IS NOT NULL --비용제외
                      AND EXISTS (SELECT 'X'    --조회된 과제의 SALES_CD 만 
                                     FROM SUBJ P 
                                    WHERE P.CO_CD    = #{coCd}
                                      AND P.CO_CD    = X.CO_CD
                                      AND P.SALES_CD = X.SALES_CD
                                  ) 
                 )
               , EVAL AS --WBS 평가정보 
                 (
                  SELECT W.CO_CD                                           AS CO_CD     --회사코드
                        , W.SALES_CD                                        AS SALES_CD  --SALSES_CD
                        , TO_CHAR(W.EVL_DT, 'YYYY-MM-DD')                   AS EVL_DT    --평가일자 
                        , W.EVL_ID                                          AS EVL_ID    --평가자ID
                        , (SELECT FN_CM06M01_ID_TO_NM(W.EVL_ID) FROM DUAL) AS EVL_NM    --평가자명 
                        , W.CLOSE_YN                                        AS CLOSE_YN  --확정여부 
                        , W.EVL_CNTS                                        AS EVL_CNTS  --평가내용
                        , W.FILE_TRGT_KEY                                   AS FILE_TRGT_KEY
                     FROM TB_WB25M01 W--WBS평가
                    WHERE W.CO_CD = #{coCd}
                      AND EXISTS (SELECT 'X'    --조회된 과제의 SALES_CD 만 
                                     FROM SUBJ P 
                                    WHERE P.CO_CD    = #{coCd}
                                      AND P.CO_CD    = W.CO_CD
                                      AND P.SALES_CD = W.SALES_CD
                                  ) 
                 )
               , RSLT AS --WBS 실적정보
                 (              
                  SELECT WR.CO_CD                AS CO_CD--회사코드
                        , WR.SALES_CD             AS SALES_CD--SALES Code 
                        , MIN(WR.WBS_RSLTSS_DT)  AS RSLTSS_DT     --TASK실적시작일
                        , MAX(WR.WBS_RSLTSE_DT)  AS RSLTSE_DT     --TASK실적종료일 
                        , SUM(WR.DAYCNT)         AS RSLT_DAYCNT   --TASK실적소요일
                        , SUM(WR.WBS_RSLTS_MH)   AS RSLTS_MH      --WBS실적 공수                    
                        , MAX(CASE WHEN WR.WBS_PLAN_CODE_KIND = 'WBSCODE14' AND WR.WBS_RSLTS_RATE = 100 THEN 'Y'
                                    ELSE 'N'
                              END)               AS WBS_CLOSE_YN --평가대상 유무 : 설치시운전(복귀일) 실적(WBSCODE14) = 100% --완료검수 실적(WBSCODE15) = 100%
                     FROM TB_WB23M01  WR--WBS실적 정보
                    WHERE WR.CO_CD    = #{coCd}
                      AND EXISTS (SELECT 'X'    --조회된 과제의 SALES_CD 만 
                                     FROM SUBJ P 
                                    WHERE P.CO_CD    = #{coCd}
                                      AND P.CO_CD    = WR.CO_CD
                                      AND P.SALES_CD = WR.SALES_CD
                                  ) 
                    GROUP BY WR.CO_CD, WR.SALES_CD
                 )
               , ISU  AS --WBS 이슈정보
                 (
                  SELECT ISU.CO_CD            --회사코드
                        , ISU.SALES_CD         --SALES Code 
                        , SUM(CASE WHEN ISU.WBS_PLAN_NO  IS NOT NULL THEN 1 ELSE 0 END ) AS PLAN_CNT --계획 이슈
                        , SUM(CASE WHEN ISU.WBS_RSLTS_NO IS NOT NULL THEN 1 ELSE 0 END ) AS RSLT_CNT --실적 이슈
                     FROM TB_WB24M02  AS ISU  --WBS이슈 정보
                    WHERE CO_CD = #{coCd}
                      AND EXISTS (SELECT 'X' --조회된 과제의 SALES_CD 만 
                                     FROM SUBJ P 
                                    WHERE P.CO_CD    = #{coCd}
                                      AND P.CO_CD    = ISU.CO_CD
                                      AND P.SALES_CD = ISU.SALES_CD
                                  ) 
                   GROUP BY CO_CD, SALES_CD
                 )
            SELECT COUNT(*)
              FROM (
                    SELECT X.CO_CD                  AS CO_CD         --회사코드
                         , CR.ORDRS_NO              AS ORDRS_NO      --수주번호
                         , CR.CLNT_CD               AS CLNT_CD       --고객코드
                         , CR.CLNT_NM               AS CLNT_NM       --고객명
                         , CR.CLNT_PJT              AS CLNT_PJT      --고객사프로젝트 
                         , CR.CLNT_PJT_NM           AS CLNT_PJT_NM   --고객사프로젝트명
                         , X.SJ_NM                  AS SJ_NM         --과제명  
                         , X.VER_NO                 AS VER_NO        --과제버젼    
                         , X.SALES_CD               AS SALES_CD      --SALES Code 
                         , X.SMRIZE_NM              AS SMRIZE_NM     --총괄PM명  
                         , X.BEGIN_DT               AS BEGIN_DT      --과제시작일    
                         , X.DE_DT                  AS DE_DT         --출고일    
                         , X.ACPTNC_DT              AS ACPTNC_DT     --완료검수일 
                         , X.REQRE_DAYCNT           AS REQRE_DAYCNT  --소요일수   
                         , RS.RSLTSS_DT             AS RSLTSS_DT     --TASK실적시작일
                         , RS.RSLTSE_DT             AS RSLTSE_DT     --TASK실적종료일 
                         , RS.RSLT_DAYCNT           AS RSLT_DAYCNT   --TASK실적소요일
                         , RS.RSLTS_MH              AS RSLTS_MH      --TASK실적 공수 
                         , ISU.PLAN_CNT             AS PLAN_CNT      --계획 이슈
                         , ISU.RSLT_CNT             AS RSLT_CNT      --실적 이슈
                         , NVL(RS.WBS_CLOSE_YN,'N') AS WBS_CLOSE_YN  --평가대상
                         , EV.EVL_DT                AS EVL_DT        --평가일자 
                         , EV.EVL_NM                AS EVL_NM        --평가자명
                         , EV.CLOSE_YN              AS PLAN_CLOSE_YN --계획확정여부 
                         , EV.EVL_CNTS              AS EVL_CNTS      --평가내용
                         , EV.FILE_TRGT_KEY         AS FILE_TRGT_KEY --FILE_TRGT_KEY
                      FROM SUBJ X
                           INNER      JOIN SJD  AS CR  ON X.CO_CD = CR.CO_CD  AND X.SALES_CD = CR.SALES_CD 
                           LEFT OUTER JOIN EVAL AS EV  ON X.CO_CD = EV.CO_CD  AND X.SALES_CD = EV.SALES_CD 
                           LEFT OUTER JOIN RSLT AS RS  ON X.CO_CD = RS.CO_CD  AND X.SALES_CD = RS.SALES_CD 
                           LEFT OUTER JOIN ISU  AS ISU ON X.CO_CD = ISU.CO_CD AND X.SALES_CD = ISU.SALES_CD 
                     WHERE 1=1
                   ) T
              WHERE 1=1
              AND T.CO_CD = #{coCd}      
                 <if test="salesCd != null and !salesCd.equals('')">
                 AND T.SALES_CD = #{salesCd}        
                 </if>
                 <if test="closeYn != null and closeYn != ''">
				 AND T.PLAN_CLOSE_YN = #{closeYn}
				 </if>
                 <if test="wbsCloseYn != null and !wbsCloseYn.equals('')">
                 AND T.WBS_CLOSE_YN = #{wbsCloseYn}            
                 </if>
                 <if test="clntPjt != null and !clntPjt.equals('')">
                 AND T.CLNT_PJT = #{clntPjt}            
                 </if>
                 <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
                 AND T.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'            
                 </if>
                 AND T.BEGIN_DT BETWEEN #{beginDt} AND #{deDt}    
        
     </select>


     <select id="selectWbsTaskEvlList" parameterType="Map" resultType="camelMap">
     /* selectWbsTaskEvlList */
         WITH SUBJ AS --확정된 과제정보
                 (
                  SELECT X.CO_CD                                                      AS CO_CD              --회사코드
                       , X.SALES_CD                                                    AS SALES_CD           --SALES Code
                       , X.SJ_NM                                                       AS SJ_NM              --과제명
                       , X.VER_NO                                                      AS VER_NO             --버젼
                       , (SELECT FN_CM06M01_ID_TO_NM(X.SMRIZE_ID) FROM DUAL)          AS SMRIZE_NM          --총괄PM명
                       , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')                             AS BEGIN_DT           --시작일
                       , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')                                AS DE_DT              --출고일
                       , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')                            AS ACPTNC_DT          --완료검수일
                       , TO_CHAR(X.REQRE_DAYCNT)                                       AS REQRE_DAYCNT       --소요일수
                       , X.DSGN_PLAN_HOUR                                              AS DSGN_PLAN_HOUR     --설계계획공수
                       , X.PRDCTN_PLAN_HOUR                                            AS PRDCTN_PLAN_HOUR   --생산계획공수
                       , X.FILE_TRGT_KEY
                    FROM TB_WB21M01 X
                   WHERE X.CO_CD = #{coCd}
                     AND X.BEGIN_DT BETWEEN #{beginDt} AND #{deDt} --조회조건 : 과제시작일
                     AND X.CLOSE_YN = 'Y'
                 )  
               , SJD AS --수주상세 
                 ( 
                  SELECT M.CO_CD                                              AS CO_CD        --회사코드
                        , (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)     AS CO_NM        --회사명 
                        , M.ORDRS_NO                                           AS ORDRS_NO     --수주번호
                        , X.SALES_CD                                           AS SALES_CD     --SALES Code
                        , M.ORDRS_CLNT_CD                                      AS CLNT_CD      --고객코드
                        , C.CLNT_NM                                            AS CLNT_NM      --고객명
                        , M.CLNT_PJT                                           AS CLNT_PJT     --고객사프로젝트 
                        , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)  AS CLNT_PJT_NM  --고객사프로젝트명
                        , X.ORDRS_PRC_MACH                                     AS ORDRS_PRC_MACH --수주가-기계파트
                        , X.TRGT_PCHS_PCOST_MACH                               AS TRGT_PCOST_MACH--목표구매원가-기계파트
                     FROM TB_CR02M01  M --수주마스터
                          INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
                          INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보 
                    WHERE 1=1
                      AND M.CO_CD = #{coCd}
                      AND X.SALES_CD IS NOT NULL --비용제외
                      AND EXISTS (SELECT 'X'    --조회된 과제의 SALES_CD 만 
                                     FROM SUBJ P 
                                    WHERE P.CO_CD    = #{coCd}
                                      AND P.CO_CD    = X.CO_CD
                                      AND P.SALES_CD = X.SALES_CD
                                  ) 
                 )
               , EVAL AS --WBS 평가정보 
                 (
                  SELECT W.CO_CD                                           AS CO_CD     --회사코드
                        , W.SALES_CD                                        AS SALES_CD  --SALSES_CD
                        , TO_CHAR(W.EVL_DT, 'YYYY-MM-DD')                   AS EVL_DT    --평가일자 
                        , W.EVL_ID                                          AS EVL_ID    --평가자ID
                        , (SELECT FN_CM06M01_ID_TO_NM(W.EVL_ID) FROM DUAL) AS EVL_NM    --평가자명 
                        , W.CLOSE_YN                                        AS CLOSE_YN  --확정여부 
                        , W.EVL_CNTS                                        AS EVL_CNTS  --평가내용
                        , W.FILE_TRGT_KEY                                   AS FILE_TRGT_KEY
                     FROM TB_WB25M01 W--WBS평가
                    WHERE W.CO_CD = #{coCd}
                      AND EXISTS (SELECT 'X'    --조회된 과제의 SALES_CD 만 
                                     FROM SUBJ P 
                                    WHERE P.CO_CD    = #{coCd}
                                      AND P.CO_CD    = W.CO_CD
                                      AND P.SALES_CD = W.SALES_CD
                                  ) 
                 )
               , RSLT AS --WBS 실적정보
                 (              
                  SELECT WR.CO_CD                AS CO_CD--회사코드
                        , WR.SALES_CD             AS SALES_CD--SALES Code 
                        , MIN(WR.WBS_RSLTSS_DT)  AS RSLTSS_DT     --TASK실적시작일
                        , MAX(WR.WBS_RSLTSE_DT)  AS RSLTSE_DT     --TASK실적종료일 
                        , SUM(WR.DAYCNT)         AS RSLT_DAYCNT   --TASK실적소요일
                        , SUM(WR.WBS_RSLTS_MH)   AS RSLTS_MH      --WBS실적 공수                    
                        <!-- , CASE WHEN EXISTS (
												SELECT 1
												FROM TB_WB23M01 WR2
																JOIN TB_WB22M01 WP ON WP.SALES_CD = WR2.SALES_CD
																				AND WP.WBS_PLAN_CODE_KIND = WR2.WBS_PLAN_CODE_KIND
												WHERE WR2.CO_CD    = WR.CO_CD
												AND WR2.SALES_CD = WR.SALES_CD
												AND NVL(WR2.WBS_RSLTS_RATE, 0) = 100              
											) THEN 'Y'
							ELSE 'N'
						  END                      AS WBS_CLOSE_YN -->
						, CASE
							WHEN
							EXISTS (
								SELECT 1
								FROM TB_WB22M01 WP
								WHERE WP.CO_CD  = WR.CO_CD
								AND WP.SALES_CD = WR.SALES_CD
								AND WP.WBS_PLAN_CODE_KIND IN (
										'WBSCODE01','WBSCODE02', 'WBSCODE03', 'WBSCODE04', 'WBSCODE05', 'WBSCODE06','WBSCODE07','WBSCODE09','WBSCODE10',
										'WBSCODE11','WBSCODE12','WBSCODE13','WBSCODE14','WBSCODE16','WBSCODE17','WBSCODE18'
								)
							)
							AND
							NOT EXISTS (
								SELECT 1
								FROM TB_WB22M01 WP
								WHERE WP.CO_CD  = WR.CO_CD
								AND WP.SALES_CD = WR.SALES_CD
								AND WP.WBS_PLAN_CODE_KIND IN (
										'WBSCODE01','WBSCODE02', 'WBSCODE03', 'WBSCODE04', 'WBSCODE05', 'WBSCODE06','WBSCODE07','WBSCODE09','WBSCODE10',
										'WBSCODE11','WBSCODE12','WBSCODE13','WBSCODE14','WBSCODE16','WBSCODE17','WBSCODE18'
								)
								AND NOT EXISTS (
										SELECT 1
										FROM TB_WB23M01 WR2
										WHERE WR2.CO_CD  = WR.CO_CD
											AND WR2.SALES_CD = WR.SALES_CD
											AND WR2.WBS_PLAN_CODE_KIND = WP.WBS_PLAN_CODE_KIND
											AND WR2.WBS_PLAN_CODE_ID   = WP.WBS_PLAN_CODE_ID
											AND NVL(WR2.WBS_RSLTS_RATE, 0) = 100
								)
							)
							THEN 'Y'
							ELSE 'N'
						END AS WBS_CLOSE_YN
                     FROM TB_WB23M01  WR--WBS실적 정보
                    WHERE WR.CO_CD    = #{coCd}
                      AND EXISTS (SELECT 'X'    --조회된 과제의 SALES_CD 만 
                                     FROM SUBJ P 
                                    WHERE P.CO_CD    = #{coCd}
                                      AND P.CO_CD    = WR.CO_CD
                                      AND P.SALES_CD = WR.SALES_CD
                                  ) 
                    GROUP BY WR.CO_CD, WR.SALES_CD
                 )
               , ISU  AS --WBS 이슈정보
                 (
                  SELECT ISU.CO_CD            --회사코드
                        , ISU.SALES_CD         --SALES Code 
                        , SUM(CASE WHEN ISU.WBS_PLAN_NO  IS NOT NULL THEN 1 ELSE 0 END ) AS PLAN_CNT --계획 이슈
                        , SUM(CASE WHEN ISU.WBS_RSLTS_NO IS NOT NULL THEN 1 ELSE 0 END ) AS RSLT_CNT --실적 이슈
                     FROM TB_WB24M02  AS ISU  --WBS이슈 정보
                    WHERE CO_CD = #{coCd}
                      AND EXISTS (SELECT 'X' --조회된 과제의 SALES_CD 만 
                                     FROM SUBJ P 
                                    WHERE P.CO_CD    = #{coCd}
                                      AND P.CO_CD    = ISU.CO_CD
                                      AND P.SALES_CD = ISU.SALES_CD
                                  ) 
                   GROUP BY CO_CD, SALES_CD
                 )
                 
                 SELECT * FROM ( 
                    SELECT ROWNUM AS RN, T.*
                      FROM (
                            SELECT X.CO_CD                  AS CO_CD         --회사코드
                                 , CR.ORDRS_NO              AS ORDRS_NO      --수주번호
                                 , CR.CLNT_CD               AS CLNT_CD       --고객코드
                                 , CR.CLNT_NM               AS CLNT_NM       --고객명
                                 , CR.CLNT_PJT              AS CLNT_PJT      --고객사프로젝트 
                                 , CR.CLNT_PJT_NM           AS CLNT_PJT_NM   --고객사프로젝트명
                                 , X.SJ_NM                  AS SJ_NM         --과제명  
                                 , X.VER_NO                 AS VER_NO        --과제버젼    
                                 , X.SALES_CD               AS SALES_CD      --SALES Code 
                                 , X.SMRIZE_NM              AS SMRIZE_NM     --총괄PM명  
                                 , X.BEGIN_DT               AS BEGIN_DT      --과제시작일    
                                 , X.DE_DT                  AS DE_DT         --출고일    
                                 , X.ACPTNC_DT              AS ACPTNC_DT     --완료검수일 
                                 , X.REQRE_DAYCNT           AS REQRE_DAYCNT  --소요일수   
                                 , TO_CHAR(RS.RSLTSS_DT, 'YYYY-MM-DD') AS RSLTSS_DT      --TASK실적시작일
                                 , TO_CHAR(RS.RSLTSE_DT, 'YYYY-MM-DD') AS RSLTSE_DT     --TASK실적종료일 
                                 , RS.RSLT_DAYCNT           AS RSLT_DAYCNT   --TASK실적소요일
                                 , RS.RSLTS_MH              AS RSLTS_MH      --TASK실적 공수 
                                 , ISU.PLAN_CNT             AS PLAN_CNT      --계획 이슈
                                 , ISU.RSLT_CNT             AS RSLT_CNT      --실적 이슈
								 , CASE WHEN TO_NUMBER(X.VER_NO) = MAX(TO_NUMBER(X.VER_NO)) OVER (PARTITION BY X.CO_CD, X.SALES_CD)
										THEN NVL(RS.WBS_CLOSE_YN,'N')
										ELSE 'N'
								   END 						AS WBS_CLOSE_YN  --평가대상
                                 , EV.EVL_DT                AS EVL_DT        --평가일자 
                                 , EV.EVL_ID                AS EVL_ID        --평가자ID
                                 , EV.EVL_NM                AS EVL_NM        --평가자명
                                 , NVL(EV.CLOSE_YN,'N')     AS PLAN_CLOSE_YN --계획확정여부 
                                 , EV.EVL_CNTS              AS EVL_CNTS      --평가내용
                                 , EV.FILE_TRGT_KEY         AS FILE_TRGT_KEY --FILE_TRGT_KEY
                                 , X.FILE_TRGT_KEY AS SJ_FILE_TRGT_KEY
                              FROM SUBJ X
                                   INNER      JOIN SJD  AS CR  ON X.CO_CD = CR.CO_CD  AND X.SALES_CD = CR.SALES_CD 
                                   LEFT OUTER JOIN EVAL AS EV  ON X.CO_CD = EV.CO_CD  AND X.SALES_CD = EV.SALES_CD 
                                   LEFT OUTER JOIN RSLT AS RS  ON X.CO_CD = RS.CO_CD  AND X.SALES_CD = RS.SALES_CD 
                                   LEFT OUTER JOIN ISU  AS ISU ON X.CO_CD = ISU.CO_CD AND X.SALES_CD = ISU.SALES_CD 
                             WHERE 1=1
                           ) T
                      WHERE 1=1
                      AND T.CO_CD = #{coCd}      
                         <if test="salesCd != null and !salesCd.equals('')">
                         AND T.SALES_CD = #{salesCd}           
                         </if>
                         <if test="closeYn != null and closeYn != ''">
						 AND T.PLAN_CLOSE_YN = #{closeYn}
						 </if>
                         <if test="wbsCloseYn != null and !wbsCloseYn.equals('')">
                         AND T.WBS_CLOSE_YN = #{wbsCloseYn}            
                         </if>
                         <if test="clntPjt != null and !clntPjt.equals('')">
                         AND T.CLNT_PJT = #{clntPjt}            
                         </if>
                         <if test="ordrsClntNm != null and !ordrsClntNm.equals('')">
                         AND T.CLNT_NM LIKE '%' || #{ordrsClntNm} || '%'            
                         </if>
                         AND T.BEGIN_DT BETWEEN #{beginDt} AND #{deDt}         
                         ORDER BY CLNT_CD, ORDRS_NO) W
                         WHERE RN BETWEEN #{firstIndex} AND #{lastIndex}  

     </select>
          
     <select id="selectTaskEvlSeqNext" parameterType="Map" resultType="int">
             SELECT TB_WB26M01_SQ01.NEXTVAL FROM DUAL
     </select>
        
    <insert id="wbsTaskEvlInsert" parameterType="Map">
          INSERT INTO TB_WB25M01
          (
              FILE_TRGT_KEY,
              CO_CD,
              SALES_CD,
              EVL_ID,
              EVL_DT,
              EVL_CNTS,
              CREAT_ID,
              CREAT_PGM,
              CREAT_DTTM
          ) 
          VALUES
          (
              #{fileTrgtKey},
              #{coCd},
              #{salesCd},
              #{evlId},
              TO_CHAR(SYSDATE, 'YYYYMMDD'),
              #{evlCnts},
              #{userId},
              #{pgmId},
              SYSDATE
          )
      </insert>
      
       <update id="wbsTaskEvlUpdate" parameterType="Map">
           UPDATE TB_WB25M01
           SET EVL_CNTS = #{evlCnts},
               EVL_DT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
               EVL_ID = #{evlId},
               UDT_ID = #{userId},
               UDT_PGM = #{pgmId},
               UDT_DTTM = SYSDATE     
         WHERE FILE_TRGT_KEY =  #{fileTrgtKey}  
      </update>   
                 
                 
     <update id="wbsTaskEvlCloseYnConfirm" parameterType="Map">
           UPDATE TB_WB25M01
           SET CLOSE_YN = #{state},
               UDT_ID = #{userId},
               UDT_PGM = #{pgmId},
               UDT_DTTM = SYSDATE     
         WHERE FILE_TRGT_KEY =  #{fileTrgtKey}  
      </update>                
      
      
      <select id="selectWbsTaskEvlResultList" parameterType="Map" resultType="camelMap">      
		/* selectWbsTaskEvlResultList */
		WITH SUBJ AS --확정된 과제정보
		     (
		      SELECT X.CO_CD                            AS CO_CD             --회사코드
		           , X.SALES_CD                          AS SALES_CD          --SALES Code
		           , X.SJ_NM                             AS SJ_NM             --과제명
		           , X.VER_NO                            AS VER_NO            --버젼
		           , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')   AS SUBJ_SDT          --시작일
		           , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')      AS DE_DT             --출고일
		           , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')  AS SUBJ_EDT          --완료검수일
		           , TO_CHAR(X.REQRE_DAYCNT)             AS REQRE_DAYCNT      --소요일수
		           , X.DSGN_PLAN_HOUR                    AS DSGN_PLAN_HOUR    --설계계획공수
		           , X.PRDCTN_PLAN_HOUR                  AS PRDCTN_PLAN_HOUR  --생산계획공수
		           , X.FILE_TRGT_KEY AS SJ_FILE_TRGT_KEY
		        FROM TB_WB21M01 X
		       WHERE X.CO_CD    = #{coCd}
		         AND X.SALES_CD = #{salesCd}
		         AND X.CLOSE_YN = 'Y' --확정된 과제
				 AND X.VER_NO = #{verNo}
		     )
		   , SJD AS --수주상세 
		     ( 
		      SELECT M.CO_CD                                                               AS CO_CD    --회사코드
		            , M.ORDRS_NO                                                            AS ORDRS_NO --수주번호
		            , X.SALES_CD                                                            AS SALES_CD --SALES Code
		            , M.ORDRS_CLNT_CD                                                       AS CLNT_CD  --고객코드
		            , C.CLNT_NM                                                             AS CLNT_NM  --고객명
		            , (SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL)                   AS CLNT_PJT_NM  --고객사프로젝트명
		            
		            , X.EST_EPCT_MAT_PRC                                                    AS EST_PRC  --견적원가 : 예상재료비
		            , X.TRGT_PCHS_PCOST_MACH +  X.TRGT_PCHS_PCOST_ELCTY                     AS TRGT_PRC --목표원가 : 기계전기합계 
		            --, (X.ACT_RGL_MACH + X.ACT_OBS_MACH)+(X.ACT_RGL_ELCTY + X.ACT_OBS_ELCTY) AS ACT_PRC  --실행원가 : 구매/외주 합계
					, B.STD_AMT																AS ACT_PRC -- 실행원가 : 구매/외주 합계
					, ROUND( (B.STD_AMT / X.EST_EPCT_MAT_PRC) * 100, 2) 					AS TRGT_RATE -- 견적대비 실적율
		            , ROUND( (B.STD_AMT / (NVL(X.TRGT_PCHS_PCOST_MACH,0) + NVL(X.TRGT_PCHS_PCOST_ELCTY,0))) * 100, 2) AS ACT_RATE--목표대비 실적율
		         FROM TB_CR02M01  M --수주마스터
		              INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
		              INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
					  LEFT OUTER JOIN BOM_TEMP B ON B.SALES_CD = X.SALES_CD
					      						 AND B.ORDRS_NO = M.ORDRS_NO
					    						 AND B.UPPER_CD = 'top'
		        WHERE 1=1
		          AND M.CO_CD    = #{coCd}
		          AND X.SALES_CD = #{salesCd}
		          AND X.SALES_CD IS NOT NULL --비용제외
		     )
		   , T_PLAN AS -- WBS계획 LVL1
		     ( 
		       SELECT P.CO_CD
		             , P.SALES_CD
		             , MIN(TO_CHAR(P.WBS_PLANS_DT, 'YYYY-MM-DD'))  AS WBS_PLANS_DT --계획 시작일
		             , MAX(TO_CHAR(P.WBS_PLANE_DT, 'YYYY-MM-DD'))  AS WBS_PLANE_DT --계획 종료일 
		             , SUM(P.DAYCNT)                               AS DAYCNT       --소요일 합계
		             , K.DSGN_EXP_MH                               AS DSGN_EXP_MH  --설계계획공수
		             , K.PRD_EXP_MH                                AS PRD_EXP_MH   --생산계획공수
		          FROM TB_WB22M01 AS P --WBS계획 정보
		               LEFT OUTER JOIN ( SELECT CO_CD
		                                       , SALES_CD
		                                       , SUM(CASE WHEN WBS_PLAN_CODE_KIND = 'WBSCODE03' THEN TO_NUMBER(DAYCNT) --TASK 설계완료 계획공수											 
		                                                   ELSE 0
		                                             END )         AS DSGN_EXP_MH --설계계획공수 
		                                     , SUM(CASE WHEN WBS_PLAN_CODE_KIND IN ('WBSCODE05', 'WBSCODE06', 'WBSCODE07', 'WBSCODE08', 'WBSCODE09',                --TASK 기계조립완료, 전기완료, 자체시운전완료, 조건작업완료, 고객검수,
		                                                                            'WBSCODE10', 'WBSCODE11', 'WBSCODE12', 'WBSCODE13', 'WBSCODE14') THEN TO_NUMBER(DAYCNT) --TASK 포장, 출고, 도착, 설치시운전(출발일), 설치시운전(복귀일) 계획공수
		                                    
		                                                   ELSE 0
		                                             END )         AS PRD_EXP_MH --생산계획공수 
		                                   FROM TB_WB22M01 --WBS계획 정보
		                                  WHERE WBS_PLAN_CODE_KIND != 'WBSCODE' --LEVEL2
		                                    AND CO_CD    = #{coCd}
		                                    AND SALES_CD = #{salesCd}
		                                  GROUP BY CO_CD, SALES_CD
		                               ) AS K ON P.CO_CD = K.CO_CD AND P.SALES_CD = K.SALES_CD
		         WHERE P.CLOSE_YN = 'Y'
		           AND P.CO_CD    = #{coCd}
		           AND P.SALES_CD = #{salesCd}
		           AND P.WBS_PLAN_CODE_NM IS NULL   --LVL1 : 계획
		         GROUP BY P.CO_CD, P.SALES_CD, K.DSGN_EXP_MH, K.PRD_EXP_MH
		     )
		   , REQ AS --요인별 발주 and 출장요청
		     (
		      SELECT Q.CO_CD                      --회사코드
		            , Q.SALES_CD                   --SALES CODE
		            , COUNT(Q.REQ_NO) AS REQ_CNT  --장애건수
		            , SUM(M.PCHS_AMT) AS PCHS_AMT --매입확정금액
		        FROM TB_QM01M01 Q --요인별 발주and출장요청
		              LEFT OUTER JOIN ( 
		                               SELECT E.CO_CD                       --회사코드
		                                    , E.SALES_CD                     --SALES CODE
		                                    , B.REQ_NO                       --요인별 요청번호
		                                    , SUM(E.ORDRG_AMT) AS ORDRG_AMT --발주금액
		                                    , SUM(D.PCHS_AMT)  AS  PCHS_AMT --매입확정금액
		                                 FROM TB_SM02D01 E    --발주상세
		                                      INNER      JOIN TB_SM02M01 B   ON(E.CO_CD = B.CO_CD AND E.ORDRG_NO = B.ORDRG_NO AND E.SALES_CD=B.SALES_CD) --발주마스터 
		                                      LEFT OUTER JOIN TB_SM12D01 D   ON(D.ORDRG_NO = E.ORDRG_NO AND D.ORDRG_SEQ = E.ORDRG_SEQ)                   --매입확정상세
		                                      LEFT OUTER JOIN TB_SM12M01 M12 ON(D.CO_CD = M12.CO_CD AND D.PCHS_NO = M12.PCHS_NO)                         --매입확정마스터
		                                <!-- WHERE E.CO_CD       = #{coCd} -->
		                                WHERE E.CO_CD       = 'TRN'
		                                  AND M12.CMPLET_YN = 'Y' --매입확정
										  AND E.SALES_CD = #{salesCd}
		                                GROUP BY E.CO_CD, E.SALES_CD, B.REQ_NO
		                              ) AS M  --발주 시 요인별 요청번호 매칭된 매입마감자료의 금액 집계
		                              <!-- ON Q.REQ_NO = M.REQ_NO AND Q.SALES_CD = M.SALES_CD AND Q.CO_CD = M.CO_CD -->
		                              ON Q.REQ_NO = M.REQ_NO AND Q.SALES_CD = M.SALES_CD
		       WHERE Q.CO_CD    = #{coCd}
		         AND Q.SALES_CD = #{salesCd}
				 AND Q.PART_CD  = 'COBTP03' --장애
		       GROUP BY Q.CO_CD, Q.SALES_CD
		     )
		   , RSLT AS --WBS 실적정보
		     (              
		      SELECT WR.CO_CD                AS CO_CD--회사코드
		            , WR.SALES_CD             AS SALES_CD--SALES Code 
		            , MIN(WR.WBS_RSLTSS_DT)  AS RSLTSS_DT     --TASK실적시작일
		            , MAX(WR.WBS_RSLTSE_DT)  AS RSLTSE_DT     --TASK실적종료일 
		            , SUM(WR.DAYCNT)         AS RSLT_DAYCNT   --TASK실적소요일
		         	, SUM(CASE WHEN WR.WBS_PLAN_CODE_KIND = 'WBSCODE03' THEN WR.WBS_RSLTS_MH
		                        ELSE 0
		                  END )              AS DSGN_RSLT_MH --설계실적공수 
		         	, SUM(CASE WHEN WR.WBS_PLAN_CODE_KIND IN ('WBSCODE05', 'WBSCODE06', 'WBSCODE07', 'WBSCODE08', 'WBSCODE09',                      --TASK 기계조립완료, 전기완료, 자체시운전완료, 조건작업완료, 고객검수,
		                                                      'WBSCODE10', 'WBSCODE11', 'WBSCODE12', 'WBSCODE13', 'WBSCODE14') THEN WR.WBS_RSLTS_MH --TASK 포장, 출고, 도착, 설치시운전(출발일), 설치시운전(복귀일) 실적공수
		                        ELSE 0
		                  END )              AS PRDCTN_RSLT_MH --생산실적공수 
		         FROM TB_WB23M01  WR--WBS실적 정보                
		        WHERE WR.CO_CD    = #{coCd}
		          AND WR.SALES_CD = #{salesCd}
		        GROUP BY WR.CO_CD, WR.SALES_CD
		     )
		   , EVAL AS --WBS 평가정보 
		     (
		      SELECT W.CO_CD                                           AS CO_CD     --회사코드
		            , W.SALES_CD                                        AS SALES_CD  --SALSES_CD
		            , TO_CHAR(W.EVL_DT, 'YYYY-MM-DD')                   AS EVL_DT    --평가일자 
		            , W.CLOSE_YN                                        AS CLOSE_YN  --확정여부 
		            , W.EVL_CNTS                                        AS EVL_CNTS  --평가내용
		         FROM TB_WB25M01 W--WBS평가
		        WHERE W.CO_CD = #{coCd}
		          AND W.SALES_CD = #{salesCd}
		     )
		SELECT J.CO_CD
              -----------------------------------------------------------------------------수주정보 Grouping : 화면상단1에 표기
              , S.CLNT_NM           --고객명
              , S.CLNT_PJT_NM       --고객사프로젝트명
              , S.ORDRS_NO          --수주번호
              , J.SALES_CD          --Sales Code
              -----------------------------------------------------------------------------과제정보 Grouping : 화면상단2에 표기
              , J.SJ_NM             --과제명
              , J.VER_NO            --버젼
              , J.SUBJ_SDT          --과제시작일
              , J.SUBJ_EDT          --과제종료일
              , J.REQRE_DAYCNT      --소요일수
              -----------------------------------------------------------------------------1.계획vs실적 정보 Grouping
              , P.WBS_PLANS_DT      --계획시작일 : LVL1
              , P.WBS_PLANE_DT      --계획종료일 : LVL1
              , P.DAYCNT            --계획소요일 : LVL1
              , TO_CHAR(R.RSLTSS_DT, 'YYYY-MM-DD')  AS RSLTSS_DT   --TASK실적시작일
              , TO_CHAR(R.RSLTSE_DT, 'YYYY-MM-DD')  AS RSLTSE_DT   --TASK실적종료일 
              , R.RSLT_DAYCNT                       AS RSLT_DAYCNT --TASK실적소요일
              , CASE WHEN NVL(P.DAYCNT,0) = 0 THEN 0
                     <!-- ELSE ROUND( (R.RSLT_DAYCNT / P.DAYCNT) * 100, 2) -->
                     ELSE ROUND( (P.DAYCNT / R.RSLT_DAYCNT) * 100, 2)
                END  AS DAY_RATE   --계획대비 실적율         
              -----------------------------------------------------------------------------2.원가정보 Grouping : 화면상단에 표기
              , S.EST_PRC           --견적원가
              , S.TRGT_PRC          --목표원가
              , S.ACT_PRC           --실행원가
              , S.TRGT_RATE         --견적대비 실적율
              , S.ACT_RATE          --목표대비 실적율
              -----------------------------------------------------------------------------3.공수정보 Grouping : 화면상단에 표기
              , P.DSGN_EXP_MH       --설계계획공수
              , R.DSGN_RSLT_MH      --설계실적공수 
              , CASE WHEN NVL(P.DSGN_EXP_MH,0) = 0 THEN 0
                     ELSE ROUND( (R.DSGN_RSLT_MH / P.DSGN_EXP_MH) * 100, 2)
                END  AS DSGN_DAY_RATE   --계획대비 설계공수 실적율               
              , P.PRD_EXP_MH        --생산계획공수
              , R.PRDCTN_RSLT_MH    --생산실적공수 
              , CASE WHEN NVL(P.PRD_EXP_MH,0) = 0 THEN 0
                     ELSE ROUND( (R.PRDCTN_RSLT_MH / P.PRD_EXP_MH) * 100, 2)
                END  AS PRDCTN_DAY_RATE   --계획대비 생산공수 실적율               
              -----------------------------------------------------------------------------4.품질 장애 and 이슈 Grouping
              , Q.REQ_CNT  --장애건수
              , Q.PCHS_AMT --매입확정금액
              -- 이슈유형
              -- 계획 이슈
              -- 실적 이슈
              -----------------------------------------------------------------------------5.평가정보
              , E.EVL_DT    --평가일자
              , E.CLOSE_YN  --확정여부 
              , E.EVL_CNTS  --평가내용
              , J.SJ_FILE_TRGT_KEY
          FROM SUBJ AS J
               INNER      JOIN T_PLAN AS P ON J.CO_CD = P.CO_CD AND J.SALES_CD = P.SALES_CD 
               INNER      JOIN SJD    AS S ON J.CO_CD = S.CO_CD AND J.SALES_CD = S.SALES_CD 
               LEFT OUTER JOIN REQ    AS Q ON J.CO_CD = Q.CO_CD AND J.SALES_CD = Q.SALES_CD 
               LEFT OUTER JOIN RSLT   AS R ON J.CO_CD = R.CO_CD AND J.SALES_CD = R.SALES_CD 
               LEFT OUTER JOIN EVAL   AS E ON J.CO_CD = E.CO_CD AND J.SALES_CD = E.SALES_CD 
         WHERE 1=1
        </select>        
     
         <select id="selectWbsTaskEvlIssList" parameterType="Map" resultType="camelMap">  
             WITH ISU  AS 
             (
              SELECT ISU.CO_CD            --회사코드
                    , ISU.SALES_CD         --SALES Code 
                    , ISU.ISS_DIV          --이슈유형 
                    , SUM(CASE WHEN ISU.WBS_PLAN_NO  IS NOT NULL THEN 1 ELSE 0 END ) AS PLAN_CNT --계획 이슈
                    , SUM(CASE WHEN ISU.WBS_RSLTS_NO IS NOT NULL THEN 1 ELSE 0 END ) AS RSLT_CNT --실적 이슈
                 FROM TB_WB24M02  AS ISU  --WBS이슈 정보
                WHERE CO_CD    = #{coCd}
                  AND SALES_CD = #{salesCd}
               GROUP BY CO_CD, SALES_CD, ISU.ISS_DIV
             )
            SELECT CO_CD
                  , SALES_CD
                  , (SELECT FN_CM05M01_CD_TO_NM(ISS_DIV) FROM DUAL) AS ISS_DIV_NM  --이슈유형명
                  , PLAN_CNT --계획 이슈
                  , RSLT_CNT --실적 이슈
              FROM ISU
             WHERE 1=1 
          </select>    
          
          
          <select id="selectEvlCloseChk" parameterType="Map"  resultType="camelMap">
             SELECT F_EVAL_CLOSE(#{coCd}, #{salesCd}) AS CLOSE_CHK FROM DUAL 
          </select>
          
          
         
</mapper>
