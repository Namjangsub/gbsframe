<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.wb.wb01.mapper.WB01Mapper">

         <select id="selectWbsLeftSalesCodeListCount" parameterType="Map" resultType="int">      
           SELECT COUNT(*) FROM (      
                SELECT DISTINCT 
                       '' PID,
                       #{coCd} ID,
                       #{coCd} CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(#{coCd}) AS CO_CD_NM,
                       '전체' ORDRS_NO,
                       '전사 현황' AS SALES_CD,
                       '' ORGN_SALES_CD,
                       '' ORDRS_CLNT_CD, -- 고객사
                       '전체' AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' DATA_GBN
                  FROM DUAL

              UNION ALL  --회사명을 Top LEVEL 생성
                SELECT DISTINCT  
                       X.CO_CD PID,
                       TO_CHAR(Y.ORDRS_CLNT_CD) ID,
                       X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       A.CLNT_NM,
                       A.CLNT_NM  AS SALES_CD,
                       '' ORGN_SALES_CD,
                       Y.ORDRS_CLNT_CD , -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       ''
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD LIKE '%${salesCd}%'               
               </if>
                 
               UNION ALL --오더번호로 1 LEVEL 생성
                SELECT DISTINCT  
                       TO_CHAR(Y.ORDRS_CLNT_CD) PID,
                       X.ORDRS_NO ID,
                       X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO AS ORDRS_NO,
                       X.ORDRS_NO AS SALES_CD,
                       '',
                       Y.ORDRS_CLNT_CD, -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '',
                       '',
                       '',
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       ''
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                 WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD LIKE '%${salesCd}%'              
               </if>

               UNION ALL
                SELECT   --Sales 코드 추출
                       X.ORDRS_NO PID,
                       X.SALES_CD ID,
                       X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO, -- 수주번호
                       X.SALES_CD, -- SALES CODE
                       max(Y.ORGN_SALES_CD), -- 원천 SALES CODE
                       max(Y.ORDRS_CLNT_CD), -- 고객사
                       max(A.CLNT_NM)  AS ORDRS_CLNT_NM,
                       max(Y.CLNT_PJT), -- 고객사 PJT
                       max(X.ORDRS_DTL_DIV20), -- 신작구분
                       FN_CM05M01_CD_TO_NM(max(X.ORDRS_DTL_DIV20)) AS ORDRS_DTL_DIV20_NM,
                       max(X.EQP_NM), -- 설비명
                       COUNT(W.FILE_TRGT_KEY) PLAN_CNT,
                       NVL(max(W.WBS_PLAN_OS_YN),'N') WBS_PLAN_OS_YN,
                       NVL(max(W.LOCK_YN),'N') PLAN_LOCK_YN,
                       NVL(max(W.CLOSE_YN),'N') PLAN_CLOSE_YN,
                       COUNT(Z.FILE_TRGT_KEY) RSULT_CNT,
                       NVL(max(Z.LOCK_YN),'N') RSULT_LOCK_YN,
                       NVL(max(Z.CLOSE_YN),'N') RSULT_CLOSE_YN,
                       'D' DATA_GBN  --원시데이타
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD    = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                                                AND X.CO_CD = #{coCd}
                                               <if test="salesCd != null and !salesCd.equals('')">
                                                AND X.SALES_CD LIKE '%${salesCd}%'            
                                               </if>
                        CROSS JOIN (
                                                SELECT 
                                                         CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
                                                         CODE_ID,
                                                         CODE_RPRC,
                                                         CODE_NM,
                                                         CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
                                                         CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
                                                         CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
                                                         LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
                                                         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
                                                         CONNECT_BY_ISLEAF AS IS_LEAF,
                                                         CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
                                                 FROM TB_CM05M01
                                                 START WITH CODE_ID = 'WBSDIV'
                                                 CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
                                ) CD  
                        LEFT OUTER JOIN TB_WB01M01 W  ON X.CO_CD    = W.CO_CD
                                                     AND X.SALES_CD = w.SALES_CD  
                                                     AND CD.CODE_ID = W.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_WB02M01 Z  ON X.CO_CD    = Z.CO_CD
                                                     AND X.SALES_CD = Z.SALES_CD  
                                                     AND CD.CODE_ID = Z.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD                       
                GROUP BY X.ORDRS_NO, X.SALES_CD, X.CO_CD,Y.ORGN_SALES_CD,Y.ORDRS_CLNT_CD, Y.CLNT_PJT ) S
                WHERE CO_CD = #{coCd}
                AND SALES_CD LIKE '%${salesCd}%'                    

           </select>    


       <select id="selectWbsLeftSalesCodeList" parameterType="Map" resultType="camelMap"> 
         SELECT * FROM (
                  SELECT ROWNUM AS RN, S.* FROM (           
                        SELECT DISTINCT  
                               '' PID,
                               #{coCd} ID,
                               #{coCd} CO_CD, -- 회사코드
                               FN_CM05M01_CD_TO_NM(#{coCd}) AS CO_CD_NM,
                               '전체' ORDRS_NO,
                               '전사 현황' AS SALES_CD,
                               '' ORGN_SALES_CD,
                               '' ORDRS_CLNT_CD, -- 고객사
                               '전체' AS ORDRS_CLNT_NM,
                               '' CLNT_PJT,
                               '' ORDRS_DTL_DIV20, -- 신작구분
                               '' AS ORDRS_DTL_DIV20_NM,
                               '', -- 설비명
                               0 PLAN_CNT,
                               'E' WBS_PLAN_OS_YN,
                               'E' PLAN_LOCK_YN,
                               'E' PLAN_CLOSE_YN,
                               0 RSULT_CNT,
                               'E' RSULT_LOCK_YN,
                               'E' RSULT_CLOSE_YN,
                               '' DATA_GBN
                          FROM DUAL
        
                      UNION ALL  --회사명을 Top LEVEL 생성
                        SELECT DISTINCT  
                               X.CO_CD PID,
                               TO_CHAR(Y.ORDRS_CLNT_CD) ID,
                               X.CO_CD, -- 회사코드
                               FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                               A.CLNT_NM,
                               A.CLNT_NM  AS SALES_CD,
                               '' ORGN_SALES_CD,
                               Y.ORDRS_CLNT_CD , -- 고객사
                               A.CLNT_NM  AS ORDRS_CLNT_NM,
                               '' CLNT_PJT,
                               '' ORDRS_DTL_DIV20, -- 신작구분
                               '' AS ORDRS_DTL_DIV20_NM,
                               '', -- 설비명
                               0 PLAN_CNT,
                               'E' WBS_PLAN_OS_YN,
                               'E' PLAN_LOCK_YN,
                               'E' PLAN_CLOSE_YN,
                               0 RSULT_CNT,
                               'E' RSULT_LOCK_YN,
                               'E' RSULT_CLOSE_YN,
                               ''
                          FROM TB_CR02D02 X
                                INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                        AND X.ORDRS_NO = Y.ORDRS_NO
                                LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                        WHERE X.CO_CD = #{coCd}
                       <if test="salesCd != null and !salesCd.equals('')">
                          AND X.SALES_CD LIKE '%${salesCd}%'             
                       </if>
                         
                       UNION ALL --오더번호로 1 LEVEL 생성
                        SELECT DISTINCT  
                               TO_CHAR(Y.ORDRS_CLNT_CD) PID,
                               X.ORDRS_NO ID,
                               X.CO_CD, -- 회사코드
                               FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                               X.ORDRS_NO AS ORDRS_NO,
                               X.ORDRS_NO AS SALES_CD,
                               '',
                               Y.ORDRS_CLNT_CD, -- 고객사
                               A.CLNT_NM  AS ORDRS_CLNT_NM,
                               '',
                               '',
                               '',
                               '', -- 설비명
                               0 PLAN_CNT,
                               'E' WBS_PLAN_OS_YN,
                               'E' PLAN_LOCK_YN,
                               'E' PLAN_CLOSE_YN,
                               0 RSULT_CNT,
                               'E' RSULT_LOCK_YN,
                               'E' RSULT_CLOSE_YN,
                               ''
                          FROM TB_CR02D02 X
                                INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                        AND X.ORDRS_NO = Y.ORDRS_NO
                                LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                         WHERE X.CO_CD = #{coCd}
                       <if test="salesCd != null and !salesCd.equals('')">
                          AND X.SALES_CD LIKE '%${salesCd}%'              
                       </if>
        
                       UNION ALL
                        SELECT   --Sales 코드 추출
                               X.ORDRS_NO PID,
                               X.SALES_CD ID,
                               X.CO_CD, -- 회사코드
                               FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                               X.ORDRS_NO, -- 수주번호
                               X.SALES_CD, -- SALES CODE
                               max(Y.ORGN_SALES_CD), -- 원천 SALES CODE
                               max(Y.ORDRS_CLNT_CD), -- 고객사
                               max(A.CLNT_NM)  AS ORDRS_CLNT_NM,
                               max(Y.CLNT_PJT), -- 고객사 PJT
                               max(X.ORDRS_DTL_DIV20), -- 신작구분
                               FN_CM05M01_CD_TO_NM(max(X.ORDRS_DTL_DIV20)) AS ORDRS_DTL_DIV20_NM,
                               max(X.EQP_NM), -- 설비명
                               COUNT(W.FILE_TRGT_KEY) PLAN_CNT,
                               NVL(max(W.WBS_PLAN_OS_YN),'N') WBS_PLAN_OS_YN,
                               NVL(max(W.LOCK_YN),'N') PLAN_LOCK_YN,
                               NVL(max(W.CLOSE_YN),'N') PLAN_CLOSE_YN,
                               COUNT(Z.FILE_TRGT_KEY) RSULT_CNT,
                               NVL(max(Z.LOCK_YN),'N') RSULT_LOCK_YN,
                               NVL(max(Z.CLOSE_YN),'N') RSULT_CLOSE_YN,
                               'D' DATA_GBN  --원시데이타
                          FROM TB_CR02D02 X
                                INNER JOIN TB_CR02M01 Y  ON X.CO_CD    = Y.CO_CD
                                                        AND X.ORDRS_NO = Y.ORDRS_NO
                                                        AND X.CO_CD = #{coCd}
                                                       <if test="salesCd != null and !salesCd.equals('')">
                                                        AND X.SALES_CD LIKE '%${salesCd}%'              
                                                       </if>
                                CROSS JOIN (
                                                        SELECT 
                                                                 CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
                                                                 CODE_ID,
                                                                 CODE_RPRC,
                                                                 CODE_NM,
                                                                 CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
                                                                 CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
                                                                 CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
                                                                 LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
                                                                 REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
                                                                 CONNECT_BY_ISLEAF AS IS_LEAF,
                                                                 CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
                                                         FROM TB_CM05M01
                                                         START WITH CODE_ID = 'WBSDIV'
                                                         CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
                                        ) CD  
                                LEFT OUTER JOIN TB_WB01M01 W  ON X.CO_CD    = W.CO_CD
                                                             AND X.SALES_CD = w.SALES_CD  
                                                             AND CD.CODE_ID = W.WBS_PLAN_CODE_ID
                                LEFT OUTER JOIN TB_WB02M01 Z  ON X.CO_CD    = Z.CO_CD
                                                             AND X.SALES_CD = Z.SALES_CD  
                                                             AND CD.CODE_ID = Z.WBS_PLAN_CODE_ID
                                LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD                       
                        GROUP BY X.ORDRS_NO, X.SALES_CD, X.CO_CD,Y.ORGN_SALES_CD,Y.ORDRS_CLNT_CD, Y.CLNT_PJT 
                                          
                    )S
                    WHERE CO_CD = #{coCd}
                    AND SALES_CD LIKE '%${salesCd}%' ) X  
                WHERE RN BETWEEN ${firstIndex} AND ${lastIndex}
                

           </select>    


           <select id="selectNewWbsPlanTreeList" parameterType="Map" resultType="CamelMap">
            SELECT  
                    T.*,
                    FN_CM05M01_CD_TO_NM(T.CO_CD) AS CO_CD_NM,
                    CASE WHEN W01.FILE_TRGT_KEY  IS NULL  THEN 'N' ELSE 'Y' END WBS_PLAN_CHK_YN,
                    CASE WHEN W02.FILE_TRGT_KEY  IS NULL  THEN 'N' ELSE 'Y' END WBS_RSLTS_CHK_YN,
                    TO_CHAR(W01.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT,
                    TO_CHAR(W01.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT,
                    TO_CHAR(W02.WBS_RSLTSS_DT, 'YYYY-MM-DD') AS WBS_RSLTSS_DT,
                    TO_CHAR(W02.WBS_RSLTSE_DT, 'YYYY-MM-DD') AS WBS_RSLTSE_DT,
                    W01.WBS_PLAN_ID,
                    TO_CHAR(W01.WBS_PLAN_DT, 'YYYY-MM-DD') AS  WBS_PLAN_DT,
                    FN_CM06M01_ID_TO_NM(W01.WBS_PLAN_ID) WBS_PLAN_NM,
                    FN_CM06M01_ID_TO_NM(W01.CREAT_ID)  CREAT_ID,
                    TO_CHAR(W01.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM,
                    FN_CM06M01_ID_TO_NM(W01.UDT_ID)  UDT_ID,
                    TO_CHAR(W01.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM,
                    W02.WBS_PLAN_MH,
                    W02.WBS_RSLTS_MH,
                    W01.FILE_TRGT_KEY,
                    W01.WBS_PLAN_NO,
                    W01.WBS_PLAN_CNTS,
                    W01.WBS_PLAN_RMK,
                    W01.WBS_PLAN_STS_CODE_ID,
                    W01.WBS_PLAN_OS_YN,
                    W01.LOCK_YN,
                    W01.CLOSE_YN,
                    DSGN_DIF_CODE_ID,
                    DSGN_PLAN_HOUR,
                    PRDCTN_DIF_CODE_ID,
                    PRDCTN_PLAN_HOUR,    
                    WBS_PLAN_MNG_ID,
                    FN_CM06M01_ID_TO_NM(W01.WBS_PLAN_MNG_ID) WBS_PLAN_MNG_NM,
                    W02.FILE_TRGT_KEY AS RSLTS_FILE_TRGT_KEY,
                    W02.WBS_PLAN_NO   AS RSLTS_WBS_PLAN_NO,
                    W02.WBS_RSLTS_RATE,
                    W02.LOCK_YN  AS RSLTS_LOCK_YN,
                    W02.CLOSE_YN AS RSLTS_CLOSE_YN,
                    W02.WBS_RSLTS_CNTS,
                    W02.WBS_RSLTS_RMK,
                    TO_CHAR(W02.WBS_RSLTS_DT, 'YYYY-MM-DD') AS WBS_RSLTS_DT,
                    FN_CM06M01_ID_TO_NM(W02.WBS_RSLTS_ID)  AS WBS_RSLTS_ID,
                    W02.*,
                    D1.TODO_CF_DT AS P_TODO_CF_DT,
                    D2.TODO_CF_DT AS R_TODO_CF_DT,
                    0 AS CHK 
               FROM         
                    (SELECT  
                           CR.CO_CD, 
                           CR.ORDRS_NO,
                           CR.SALES_CD, 
                           Y.ORDRS_CLNT_CD, 
                           (SELECT P.CLNT_NM FROM TB_BM02M01 P WHERE P.CLNT_CD = Y.ORDRS_CLNT_CD) AS ORDRS_CLNT_NM,
                           Y.CLNT_PJT, 
                           CR.ORDRS_DTL_DIV20, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
                           CR.PRDT_CD, 
                           (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = CR.PRDT_CD) AS PRDT_CD_NM,
                           CR.ITEM_DIV, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ITEM_DIV) AS ITEM_DIV_NM,
                           CR.EQP_NM ,
                           CD.*
                      FROM TB_CR02D02 CR INNER JOIN TB_CR02M01 Y  ON CR.CO_CD = Y.CO_CD
                                                                 AND CR.ORDRS_NO = Y.ORDRS_NO
                           , (
                                                SELECT 
                                                         CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
                                                         CODE_ID,
                                                         CODE_RPRC,
                                                         CODE_NM,
                                                         CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
                                                         CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
                                                         CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
                                                         LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
                                                         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
                                                         CONNECT_BY_ISLEAF AS IS_LEAF,
                                                         CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
                                                 FROM TB_CM05M01
                                                 START WITH CODE_ID = 'WBSDIV'
                                                 CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
                                )  CD 
                       WHERE CR.CO_CD = #{coCd}
                         AND CR.SALES_CD = #{salesCd} 
                      ORDER BY  CR.SALES_CD, PATH                 
                     ) AS T LEFT OUTER JOIN TB_WB01M01 W01 ON T.CO_CD    = W01.CO_CD
                                                          AND T.SALES_CD = W01.SALES_CD
                                                          AND T.CODE_ID  = W01.WBS_PLAN_CODE_ID
                            LEFT OUTER JOIN TB_WB02M01 W02 ON T.CO_CD    = W02.CO_CD
                                                          AND T.SALES_CD = W02.SALES_CD
                                                          AND T.CODE_ID  = W02.WBS_PLAN_CODE_ID
                            LEFT OUTER JOIN 
                            (SELECT CO_CD, SALES_CD, TODO_CODE_ID, MAX(TODO_CF_DT) AS TODO_CF_DT 
                             FROM TB_WB20M03 GROUP BY CO_CD, SALES_CD, TODO_CODE_ID) D1
                            ON W01.CO_CD = D1.CO_CD
                            AND W01.SALES_CD = D1.SALES_CD
                            AND W01.WBS_PLAN_CODE_ID = D1.TODO_CODE_ID
                            
                            LEFT OUTER JOIN 
                            (SELECT CO_CD, SALES_CD, TODO_CODE_ID, MAX(TODO_CF_DT) AS TODO_CF_DT
                             FROM TB_WB20M03 GROUP BY CO_CD, SALES_CD, TODO_CODE_ID) D2
                            ON W02.CO_CD = D2.CO_CD
                            AND W02.SALES_CD = D2.SALES_CD
                            AND W02.WBS_PLAN_CODE_ID = D2.TODO_CODE_ID
                             
        </select>        
        
        <select id="selectNewWbsPlanTreeListSelect" parameterType="Map" resultType="CamelMap">
				SELECT X.CODE_KIND, 
                       X.CODE_ID, 
                       X.CODE_NM, 
                       X.LVL, 
                       X.TYPE, 
                       X.PATH,
                       CASE WHEN W01.FILE_TRGT_KEY  IS NULL  THEN 'N' ELSE 'Y' END WBS_PLAN_CHK_YN,    
                       W01.FILE_TRGT_KEY,
                       W01_LIST.CO_CD, 
                       FN_CM05M01_CD_TO_NM(W01.CO_CD) AS CO_CD_NM,
                       W01.WBS_PLAN_NO,
                       W01_LIST.SALES_CD,
                       W01_LIST.WBS_PLAN_CODE_KIND, 
                       W01_LIST.WBS_PLAN_CODE_ID, 
                       TO_CHAR(W01.WBS_PLAN_DT, 'YYYY-MM-DD') AS WBS_PLAN_DT,
                       W01.WBS_PLAN_ID,
                       FN_CM06M01_ID_TO_NM(W01.WBS_PLAN_ID)  AS WBS_PLAN_NM,
                       W01.WBS_PLAN_MNG_ID,
                       FN_CM06M01_ID_TO_NM(W01.WBS_PLAN_MNG_ID)  AS WBS_PLAN_MNG_NM,
                       W01.WBS_PLAN_CNTS,
                       TO_CHAR(W01.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT,
                       TO_CHAR(W01.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT,
                       W01.WBS_PLAN_RMK,
                       W01.WBS_PLAN_STS_CODE_ID,
                       FN_CM05M01_CD_TO_NM(W01.WBS_PLAN_STS_CODE_ID) AS WBS_PLAN_STS_CODE_NM,                      
                       W01.DSGN_DIF_CODE_ID, 
                       FN_CM05M01_CD_TO_NM(W01.DSGN_DIF_CODE_ID) AS DSGN_DIF_CODE_NM, 
                       W01.PRDCTN_DIF_CODE_ID,
                       FN_CM05M01_CD_TO_NM(W01.PRDCTN_DIF_CODE_ID) AS PRDCTN_DIF_CODE_NM, 
                       W01.PRDCTN_PLAN_HOUR,
                       W01.WBS_PLAN_OS_YN,
                       W01.LOCK_YN,
                       W01.CLOSE_YN,
                       W01.CREAT_ID,
                       FN_CM06M01_ID_TO_NM(W01.CREAT_ID)  AS CREAT_NM,
                       TO_CHAR(W01.CREAT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS CREAT_DTTM,
                       W01.UDT_ID,
                       FN_CM06M01_ID_TO_NM(W01.UDT_ID)  AS UDT_NM,
                       TO_CHAR(W01.UDT_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS UDT_DTTM,
                       W02.WBS_PLAN_CODE_ID AS WBS_RSLTS_CODE_ID, 
                       CASE WHEN W02.FILE_TRGT_KEY  IS NULL  THEN 'N' ELSE 'Y' END WBS_RSLTS_CHK_YN,       
                       TO_CHAR(W02.WBS_RSLTS_DT, 'YYYY-MM-DD') AS WBS_RSLTS_DT,
                       W02.WBS_RSLTS_ID,
                       FN_CM06M01_ID_TO_NM(W02.WBS_RSLTS_ID)  AS WBS_RSLTS_NM,
                       W02.FILE_TRGT_KEY AS RSLTS_FILE_TRGT_KEY,
                       W02.WBS_PLAN_NO   AS RSLTS_WBS_PLAN_NO,
                       W02.WBS_RSLTS_RATE,
                       W02.WBS_PLAN_MH,
                       W02.WBS_RSLTS_MH,
                       W02.WBS_RSLTS_CNTS,
                       TO_CHAR(W02.WBS_RSLTSS_DT, 'YYYY-MM-DD') AS WBS_RSLTSS_DT,
                       TO_CHAR(W02.WBS_RSLTSE_DT, 'YYYY-MM-DD') AS WBS_RSLTSE_DT,
                       W02.WBS_RSLTS_RMK,
                       W02.LOCK_YN AS RSLTS_LOCK_YN,
                       W02.CLOSE_YN AS RSLTS_CLOSE_YN,
                       CR.ORDRS_NO,
                       CR.ORDRS_CLNT_CD, 
                       (SELECT P.CLNT_NM FROM TB_BM02M01 P WHERE P.CLNT_CD = CR.ORDRS_CLNT_CD) AS ORDRS_CLNT_NM,
                       CR.CLNT_PJT, 
                       CR.ORDRS_DTL_DIV20, 
                       (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
                       CR.PRDT_CD, 
                       (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = CR.PRDT_CD) AS PRDT_CD_NM,
                       CR.ITEM_DIV, 
                       (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ITEM_DIV) AS ITEM_DIV_NM,
                       CR.EQP_NM,
                       D1.TODO_CF_DT AS P_TODO_CF_DT,
                       D2.TODO_CF_DT AS R_TODO_CF_DT
                 FROM  (
                        SELECT 
                             CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
                             CODE_ID,
                             CODE_NM,
                             LPAD('', 3*(LEVEL-1)) || LEVEL LVL ,
                             REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
                             CONNECT_BY_ISLEAF AS IS_LEAF,
                             CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END AS TYPE
                        FROM TB_CM05M01
                        START WITH CODE_ID = 'WBSDIV'
                        CONNECT BY PRIOR CODE_ID  =  CODE_KIND )X
                LEFT OUTER JOIN TB_WB01M01_LIST W01_LIST
                ON X.CODE_KIND = W01_LIST.WBS_PLAN_CODE_KIND
                AND X.CODE_ID = W01_LIST.WBS_PLAN_CODE_ID
                
                LEFT OUTER JOIN TB_WB01M01 W01
                ON W01_LIST.CO_CD = W01.CO_CD
                AND W01_LIST.WBS_PLAN_CODE_KIND = W01.WBS_PLAN_CODE_KIND
                AND W01_LIST.WBS_PLAN_CODE_ID = W01.WBS_PLAN_CODE_ID
                AND W01_LIST.SALES_CD = W01.SALES_CD
                
                LEFT OUTER JOIN TB_WB02M01 W02
                ON W01_LIST.CO_CD = W02.CO_CD
                AND W01_LIST.WBS_PLAN_CODE_KIND = W02.WBS_PLAN_CODE_KIND
                AND W01_LIST.WBS_PLAN_CODE_ID = W02.WBS_PLAN_CODE_ID
                AND W01_LIST.SALES_CD = W02.SALES_CD
                
                LEFT OUTER JOIN (
                        SELECT  
                           CR.CO_CD, 
                           CR.ORDRS_NO,
                           CR.SALES_CD, 
                           Y.ORDRS_CLNT_CD, 
                           (SELECT P.CLNT_NM FROM TB_BM02M01 P WHERE P.CLNT_CD = Y.ORDRS_CLNT_CD) AS ORDRS_CLNT_NM,
                           Y.CLNT_PJT, 
                           CR.ORDRS_DTL_DIV20, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
                           CR.PRDT_CD, 
                           (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = CR.PRDT_CD) AS PRDT_CD_NM,
                           CR.ITEM_DIV, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ITEM_DIV) AS ITEM_DIV_NM,
                           CR.EQP_NM
                        FROM TB_CR02D02 CR INNER JOIN TB_CR02M01 Y  ON CR.CO_CD = Y.CO_CD
                                                                 AND CR.ORDRS_NO = Y.ORDRS_NO) CR
                ON CR.CO_CD = W01_LIST.CO_CD
                AND CR.SALES_CD = W01_LIST.SALES_CD                                                                 
                
                LEFT OUTER JOIN 
                            (SELECT CO_CD, SALES_CD, TODO_CODE_ID, MAX(TODO_CF_DT) AS TODO_CF_DT 
                             FROM TB_WB20M03 GROUP BY CO_CD, SALES_CD, TODO_CODE_ID) D1
                            ON W01_LIST.CO_CD = D1.CO_CD
                            AND W01_LIST.SALES_CD = D1.SALES_CD
                            AND W01_LIST.WBS_PLAN_CODE_ID = D1.TODO_CODE_ID
                            
                LEFT OUTER JOIN 
                (SELECT CO_CD, SALES_CD, TODO_CODE_ID, MAX(TODO_CF_DT) AS TODO_CF_DT
                 FROM TB_WB20M03 GROUP BY CO_CD, SALES_CD, TODO_CODE_ID) D2
                ON W02.CO_CD = D2.CO_CD
                AND W02.SALES_CD = D2.SALES_CD
                AND W02.WBS_PLAN_CODE_ID = D2.TODO_CODE_ID  
                WHERE (W01_LIST.CO_CD = #{coCd}
                AND W01_LIST.SALES_CD = #{salesCd})
                OR X.CODE_KIND IS NULL
                ORDER BY PATH
          </select>  
    
        <!-- WBS일정계획 메인화면 삭제  -->  
        <delete id="deleteWbsPlanlist" parameterType="Map">
               DELETE FROM TB_WB01M01
                   WHERE CO_CD = #{coCd}
                   AND SALES_CD = #{salesCd}
                   AND WBS_PLAN_NO = #{wbsPlanNo} 
                   AND WBS_PLAN_CODE_ID = #{codeId}
        </delete>

        <update id="updateWbsPlanLockYn" parameterType="Map">
              UPDATE TB_WB01M01
              SET LOCK_YN = #{state}
              WHERE CO_CD = #{coCd}
                   AND SALES_CD = #{salesCd}
                   AND WBS_PLAN_CODE_ID LIKE '${codeId}%'
          </update>  

        <update id="updateWbsPlanCloseYn" parameterType="Map">
              UPDATE TB_WB01M01
              SET LOCK_YN = #{state},
                  CLOSE_YN = #{state}
              WHERE CO_CD = #{coCd}
                   AND SALES_CD = #{salesCd}
                   AND WBS_PLAN_CODE_ID LIKE '${codeId}%'
          </update>   

          <select id="selectPlanSharngList" parameterType="Map" resultType="camelMap">
               SELECT ROWNUM AS RN,
                      X.SALES_CD, 
                      X.TODO_CODE_ID AS WBS_PLAN_CODE_ID,
                      (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CODE_ID) AS WBS_PLAN_CODE_NM,
                      X.TODO_NO AS WBS_PLAN_NO,
                      X.TODO_CO_CD AS WBS_PLANCO_CD,
                      TO_CHAR(X.TODO_CF_DT, 'YYYY-MM-DD') AS TODO_CF_DT,
                      X.TODO_CF_OPN,
                      (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.TODO_CO_CD) AS WBS_PLANCO_CD_NM,                      
                      Y.ID AS WBS_SHARNG_USER_ID, 
                      Y.EMP_NO,
                      Y.NAME,
                      Y.TEL_NO,
                      Y.EMAIL
                      FROM TB_WB20M03 X
                      INNER JOIN TB_CM06M01 Y
                      ON X.TODO_CO_CD = Y.CO_CD
                      AND X.TODO_ID = Y.ID
                      WHERE X.TODO_CO_CD = #{coCd}
                      AND X.TODO_CODE_ID = #{codeId} 
                      AND X.SALES_CD = #{salesCd}
                      AND X.TODO_DIV2_CODE_ID = 'TODODIV1010'
                      ORDER BY ROWNUM ASC
          </select>


        <select id="selectMaxWbsPlanNo" parameterType="Map"  resultType="camelMap">
              SELECT  #{year} || trim(to_char(nvl(SUBSTR(MAX(WBS_PLAN_NO), 4, 4),0) + 1, '0000')) AS WBS_PLAN_NO FROM TB_WB01M01 
              WHERE CO_CD = #{coCd}   
        </select>

        <select id="selectWbsPlanChk" parameterType="Map" resultType="int">
                SELECT COUNT(*)
                  FROM TB_WB01M01 
                   WHERE CO_CD = #{coCd}
                   AND SALES_CD = #{salesCd}
                   AND WBS_PLAN_CODE_ID = #{codeId}
        </select>


         <select id="deleteWbsSharngListChk" parameterType="Map" resultType="camelMap">
               SELECT *  FROM TB_WB20M03
                   WHERE TODO_CO_CD  = #{coCd}
                         AND SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{wbsPlanNo}
                         AND TODO_CODE_KIND  = #{wbsPlanCodeKind}
                         AND TODO_CODE_ID  = #{wbsPlanCodeId}
                         AND TODO_DIV1_CODE_ID  = #{S_todoDiv1CodeId}
                         AND TODO_DIV2_CODE_ID  = #{S_todoDiv2CodeId}
        </select>    

         <delete id="deleteWbsSharngListSub" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE TODO_CO_CD  = #{coCd}
                         AND SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{wbsPlanNo}
                         AND TODO_CODE_KIND  = #{codeKind}
                         AND TODO_CODE_ID  = #{codeId}
                         AND TODO_DIV1_CODE_ID  = #{S_todoDiv1CodeId}
                         AND TODO_DIV2_CODE_ID  = #{S_todoDiv2CodeId}
        </delete> 


         <insert id="insertWbsSharngList" parameterType="Map">
                <selectKey keyProperty="toDoKey" resultType="Int" order="BEFORE">
                    SELECT NVL(MAX(TODO_KEY), 0) + 1 FROM TB_WB20M03
                </selectKey>
                INSERT INTO TB_WB20M03
                (
                    TODO_KEY,
                    SANCTN_SN,
                    CO_CD,                    
                    TODO_DIV1_CODE_ID,
                    TODO_DIV2_CODE_ID,
                    TODO_ID,
                    SALES_CD,
                    PG_PATH,
                    TODO_FILE_TRGT_KEY,
                    TODO_CO_CD,
                    TODO_NO,
                    TODO_CODE_KIND,
                    TODO_CODE_ID,
                    CREAT_ID,
                    CREAT_PGM,
                    CREAT_DTTM,
                    PG_PARAM
                ) 
                VALUES
                (
                    #{toDoKey},
                    #{sanctnSn},
                    #{coCd},
                    #{todoDiv1CodeId},
                    #{todoDiv2CodeId},
                    #{wbsSharngUserId},
                    #{salesCd},
                    #{pgPath},
                    #{fileTrgtKey},
                    #{wbsPlancoCd},
                    #{wbsPlanNo},
                    #{wbsPlanCodeKind},
                    #{wbsPlanCodeId},
                    #{creatId},
                    #{creatPgm},
                    SYSDATE,
                    #{pgParam}
                )
         </insert>
         <insert id="insertWbsPlan" parameterType="Map">
                INSERT INTO TB_WB01M01
                (
                       FILE_TRGT_KEY,
                       CO_CD,
                       WBS_PLAN_NO,
                       WBS_PLAN_CODE_KIND,
                       WBS_PLAN_CODE_ID,
                       SALES_CD,
                       WBS_PLAN_DT,
                       WBS_PLAN_ID,
                       WBS_PLAN_MNG_ID,
                       WBS_PLAN_CNTS,
                       WBS_PLANS_DT,
                       WBS_PLANE_DT,   
                       WBS_PLAN_RMK,
                       WBS_PLAN_STS_CODE_ID,
                       DSGN_DIF_CODE_ID,
                       DSGN_PLAN_HOUR,
                       PRDCTN_DIF_CODE_ID,
                       PRDCTN_PLAN_HOUR,
                       WBS_PLAN_OS_YN,
                       CREAT_ID,
                       CREAT_PGM,
                       CREAT_DTTM
                ) 
                VALUES
                (
                        #{fileTrgtKey},
                        #{coCd},
                        #{wbsPlanNo},
                        #{wbsPlanCodeKind},
                        #{wbsPlanCodeId},
                        #{salesCd},
                        #{wbsPlanDt},
                        #{wbsPlanId},
                        #{wbsPlanMngId},
                        #{wbsPlanCnts},
                        #{wbsPlansDt},
                        #{wbsPlaneDt},
                        #{wbsPlanRmk},
                        #{wbsPlanStsCodeId},
                        #{dsgnDifCodeId},
                        #{dsgnPlanHour},
                        #{prdctnDifCodeId},
                        #{prdctnPlanHour},
                        #{wbsPlanOsYn},
                        #{creatId},
                        #{creatPgm},
                        SYSDATE  
                ) 
        </insert>   

        <select id="selectWbsPlanSeqNext" parameterType="Map" resultType="int">
             SELECT TO_CHAR(SYSDATE, 'YYYYMM')||LPAD(TB_WB01M01_SQ01.NEXTVAL,3,0) FROM DUAL
         </select>

         <update id="updateWbsPlan" parameterType="Map">
                UPDATE TB_WB01M01
                   SET 
                       WBS_PLAN_DT = #{wbsPlanDt},
                       WBS_PLAN_ID = #{wbsPlanId},
                       WBS_PLAN_MNG_ID = #{wbsPlanMngId},
                       WBS_PLAN_CNTS = #{wbsPlanCnts},
                       WBS_PLANS_DT = #{wbsPlansDt},
                       WBS_PLANE_DT = #{wbsPlaneDt},   
                       WBS_PLAN_RMK = #{wbsPlanRmk},
                       WBS_PLAN_STS_CODE_ID = #{wbsPlanStsCodeId},
                       WBS_PLAN_OS_YN =  #{wbsPlanOsYn},
                       DSGN_DIF_CODE_ID =  #{dsgnDifCodeId},
                       DSGN_PLAN_HOUR = #{dsgnPlanHour},
                       PRDCTN_DIF_CODE_ID = #{prdctnDifCodeId},
                       PRDCTN_PLAN_HOUR = #{prdctnPlanHour},
                       UDT_ID = #{creatId},
                       UDT_PGM = #{creatPgm},
                       UDT_DTTM = SYSDATE
                 WHERE 
                       CO_CD = #{coCd}
                       AND WBS_PLAN_NO = #{wbsPlanNo}
                       AND WBS_PLAN_CODE_KIND = #{wbsPlanCodeKind}
                       AND WBS_PLAN_CODE_ID = #{wbsPlanCodeId}
        </update>  


         <update id="updateWbsRsltsCloseYn" parameterType="Map">
              UPDATE TB_WB02M01
              SET LOCK_YN = #{state}, 
                  CLOSE_YN = #{state}
              WHERE CO_CD = #{coCd}
                   AND SALES_CD = #{salesCd}
                   AND WBS_PLAN_CODE_ID LIKE '${codeId}%'
          </update> 

       <delete id="deleteWbsSharngList" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE TODO_CO_CD  = #{coCd}
                         AND SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{wbsPlanNo}
                         AND TODO_CODE_KIND  = #{wbsPlanCodeKind}
                         AND TODO_CODE_ID  = #{wbsPlanCodeId}
                         AND TODO_DIV1_CODE_ID  = #{S_todoDiv1CodeId}
                         AND TODO_DIV2_CODE_ID  = #{S_todoDiv2CodeId}
        </delete>
        
    <select id="selectWbsSalesCount" parameterType="Map" resultType="int">
        SELECT COUNT(*)
        FROM   (
                SELECT A.*
                     , ROWNUM AS RN
                FROM   (
                        SELECT DISTINCT X.CO_CD
                             , R1.CODE_NM AS CO_CD_NM
                             , X.ORDRS_NO
                             , X.SALES_CD
                             , Y.ORGN_SALES_CD
                             , Y.ORDRS_CLNT_CD
                             , A.CLNT_NM AS ORDRS_CLNT_NM
                             , Y.CLNT_PJT
                             , R2.CODE_NM AS CLNT_PJT_NM
                             , X.ORDRS_DTL_DIV20
                             , R3.CODE_NM AS ORDRS_DTL_DIV20_NM
                             , X.PRDT_CD
                             , P.PRDT_NM AS PRDT_CD_NM
                             , X.ITEM_DIV
                             , R4.CODE_NM AS ITEM_DIV_NM
                             , X.EQP_NM
                             , Y.CTRT_NM
                        FROM   TB_CR02D02 AS X
                               INNER JOIN TB_CR02M01 AS Y  ON X.CO_CD    = Y.CO_CD
                                                          AND X.ORDRS_NO = Y.ORDRS_NO
                               LEFT OUTER JOIN TB_BM01M01 AS P ON X.PRDT_CD = P.PRDT_CD  --제품마스터
                               LEFT OUTER JOIN TB_BM02M01 AS A ON Y.ORDRS_CLNT_CD = A.CLNT_CD  --거래처마스터
                               LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = X.CO_CD  --회사
                               LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = Y.CLNT_PJT  --고객사PJT
                               LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = X.ORDRS_DTL_DIV20  --신작구분
                               LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = X.ITEM_DIV  --아이템구분
                        WHERE  1 = 1
                        AND    X.CO_CD = #{coCd}
                        AND    X.SALES_CD IS NOT NULL
                        <if test="searchValue != null and !searchValue.equals('') and !searchType.equals('CLNT_PJT_NM')">
                        AND    UPPER(${searchType}) LIKE '%'||UPPER(#{searchValue})||'%'
                        </if>
                       ) AS A
                WHERE  1 = 1
                <if test="searchType != null and searchType.equals('CLNT_PJT_NM')">
                AND    UPPER(CLNT_PJT_NM) LIKE '%' || UPPER(#{searchValue}) || '%'
                </if>
               ) AS B
        WHERE  1 = 1
    </select>
        
    <select id="selectWbsSalesCodeList" parameterType="Map" resultType="camelMap">
        SELECT B.*
        FROM   (
                SELECT A.*
                     , ROWNUM AS RN
                FROM   (
                        SELECT DISTINCT X.CO_CD
                             , R1.CODE_NM AS CO_CD_NM
                             , X.ORDRS_NO
                             , X.SALES_CD
                             , NVL(X.ORGN_SALES_CD,Y.ORGN_SALES_CD)  AS ORGN_SALES_CD
                             , Y.ORDRS_CLNT_CD                       AS ORDRS_CLNT_CD
                             , A.CLNT_NM AS ORDRS_CLNT_NM
                             , Y.CLNT_PJT
                             , R2.CODE_NM AS CLNT_PJT_NM
                             , X.ORDRS_DTL_DIV20
                             , R3.CODE_NM AS ORDRS_DTL_DIV20_NM
                             , X.PRDT_CD
                             , P.PRDT_NM AS PRDT_CD_NM
                             , X.ITEM_DIV
                             , R4.CODE_NM AS ITEM_DIV_NM
                             , X.EQP_NM
                             , Y.CTRT_NM
                             , X.ORDRS_QTY
                             , Y.ORDRS_DIV
	                         , FN_CM05M01_CD_TO_NM(Y.ORDRS_DIV) AS ORDRS_DIV_NM --수주구분명
                             , TO_CHAR(X.DUDT_INTEND_DT, 'YYYY-MM-DD') AS DUDT_INTEND_DT
                             , W1.VER_NO
                             , TO_CHAR(W1.DE_DT, 'YYYY-MM-DD') AS DE_DT	--과제 출고일 = 고객요구일
                        FROM   TB_CR02D02 AS X
                               INNER JOIN TB_CR02M01 AS Y  ON X.CO_CD    = Y.CO_CD
                                                          AND X.ORDRS_NO = Y.ORDRS_NO
                               LEFT OUTER JOIN TB_BM01M01 AS P ON X.PRDT_CD = P.PRDT_CD  --제품마스터
                               LEFT OUTER JOIN TB_BM02M01 AS A ON Y.ORDRS_CLNT_CD = A.CLNT_CD  --거래처마스터
                               LEFT OUTER JOIN TB_CM05M01 AS R1 ON R1.CODE_ID = X.CO_CD  --회사
                               LEFT OUTER JOIN TB_CM05M01 AS R2 ON R2.CODE_ID = Y.CLNT_PJT  --고객사PJT
                               LEFT OUTER JOIN TB_CM05M01 AS R3 ON R3.CODE_ID = X.ORDRS_DTL_DIV20  --신작구분
                               LEFT OUTER JOIN TB_CM05M01 AS R4 ON R4.CODE_ID = X.ITEM_DIV  --아이템구분
                               LEFT OUTER JOIN (
											    SELECT W1.*, ROW_NUMBER() OVER (PARTITION BY SALES_CD ORDER BY VER_NO DESC) AS rn
											    FROM TB_WB21M01 W1
											) W1 ON W1.CO_CD = X.CO_CD AND W1.SALES_CD = X.SALES_CD AND W1.rn = 1  --마지막 버전의 과제정보 가져오기
                        WHERE  1 = 1
                        AND    X.CO_CD = #{coCd}
                        AND    X.SALES_CD IS NOT NULL
                        <if test="searchValue != null and !searchValue.equals('') and !searchType.equals('CLNT_PJT_NM')">
                        AND    UPPER(${searchType}) LIKE '%'||UPPER(#{searchValue})||'%'
                        </if>
                        ORDER BY SUBSTR(X.ORDRS_NO, LENGTH(X.ORDRS_NO) - 4)  DESC
                       ) AS A
                WHERE  1 = 1
                <if test="searchType != null and searchType.equals('CLNT_PJT_NM')">
                AND    UPPER(CLNT_PJT_NM) LIKE '%' || UPPER(#{searchValue}) || '%'
                </if>
               ) AS B
        WHERE  1 = 1
        AND    B.RN BETWEEN ${firstIndex} AND ${lastIndex}
    </select>
           
           <select id="selectWbsSalesCountNoCocd" parameterType="Map" resultType="int">
           SELECT COUNT(*) 
             FROM (           
	                SELECT ROWNUM AS RN, 
	                       X.CO_CD, -- 회사코드
	                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
	                       X.ORDRS_NO, -- 수주번호
	                       X.SALES_CD, -- SALES CODE
	                       Y.ORGN_SALES_CD, -- 원천 SALES CODE
	                       Y.ORDRS_CLNT_CD, -- 고객사
	                       A.CLNT_NM  AS ORDRS_CLNT_NM,
	                       Y.CLNT_PJT, -- 고객사 PJT
	                       FN_CM05M01_CD_TO_NM(Y.CLNT_PJT) AS CLNT_PJT_NM, -- 고객사 PJT명
	                       X.ORDRS_DTL_DIV20, -- 신작구분
	                       FN_CM05M01_CD_TO_NM(X.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
	                       X.PRDT_CD, -- 제품구분
	                       P.PRDT_NM  PRDT_CD_NM,
	                       X.ITEM_DIV, -- 아이템구분
	                       FN_CM05M01_CD_TO_NM(X.ITEM_DIV) ITEM_DIV_NM,
	                       X.EQP_NM -- 설비명
	                  FROM TB_CR02D02 X
	                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
	                                                AND X.ORDRS_NO = Y.ORDRS_NO
	                        LEFT OUTER JOIN TB_BM01M01 P ON X.PRDT_CD = P.PRDT_CD  --제품마스터
	                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
	                WHERE X.SALES_CD IS NOT NULL
	               <if test="searchValue != null and !searchValue.equals('') and !searchType.equals('CLNT_PJT_NM')">
						AND UPPER(${searchType}) LIKE '%'||UPPER(#{searchValue})||'%'				
					</if>
	            ) A
	            <where>
		            <if test="searchType != null and searchType.equals('CLNT_PJT_NM')">
	                  AND CLNT_PJT_NM LIKE '%' || #{searchValue} || '%'
	            	</if>
            	</where>                              
           </select>
        
           <select id="selectWbsSalesCodeListNoCocd" parameterType="Map" resultType="camelMap">
           SELECT B.* 
             FROM (
		           SELECT A.* 
		                 , ROWNUM AS RN
		             FROM (           
			                SELECT  
			                       X.CO_CD, -- 회사코드
			                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
			                       X.ORDRS_NO, -- 수주번호
			                       X.SALES_CD, -- SALES CODE
			                       Y.ORGN_SALES_CD, -- 원천 SALES CODE
			                       Y.ORDRS_CLNT_CD, -- 고객사
			                       A.CLNT_NM  AS ORDRS_CLNT_NM,
			                       Y.CLNT_PJT, -- 고객사 PJT
			                       FN_CM05M01_CD_TO_NM(Y.CLNT_PJT) AS CLNT_PJT_NM, -- 고객사 PJT명
			                       X.ORDRS_DTL_DIV20, -- 신작구분
			                       FN_CM05M01_CD_TO_NM(X.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
			                       X.PRDT_CD, -- 제품구분
			                       P.PRDT_NM  PRDT_CD_NM,
			                       X.ITEM_DIV, -- 아이템구분
			                       FN_CM05M01_CD_TO_NM(X.ITEM_DIV) ITEM_DIV_NM,
			                       X.EQP_NM, -- 설비명
			                       Y.CTRT_NM /*계약명*/
			                  FROM TB_CR02D02 X
			                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
			                                                AND X.ORDRS_NO = Y.ORDRS_NO
			                        LEFT OUTER JOIN TB_BM01M01 P ON X.PRDT_CD = P.PRDT_CD  --제품마스터
			                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
			                WHERE X.SALES_CD IS NOT NULL
			               <if test="searchValue != null and !searchValue.equals('') and !searchType.equals('CLNT_PJT_NM')">
								AND UPPER(${searchType}) LIKE '%'||UPPER(#{searchValue})||'%'				
							</if>
			            ) A
   				<if test="searchType != null and searchType.equals('CLNT_PJT_NM')">
                  WHERE CLNT_PJT_NM LIKE '%' || #{searchValue} || '%'
            	</if>   
   				) B
   				WHERE B.RN BETWEEN ${firstIndex} AND ${lastIndex}
   				                               
           </select>
           
           <select id="selectWbsPlanNoList" parameterType="Map" resultType="camelMap">
                SELECT DISTINCT * 
                  FROM (
                       SELECT 
                           X.CO_CD, 
                           (SELECT Y.CODE_NM FROM TB_CM05M01 Y WHERE Y.CODE_ID = X.CO_CD) AS CO_CD_NM,                  
                           X.SALES_CD, 
                           X.WBS_PLAN_NO
                           FROM TB_WB01M01 X
                           WHERE X.CO_CD = #{coCd}
                           <if test="wbsPlanNo != null and !wbsPlanNo.equals('')">
                              AND X.WBS_PLAN_NO like '%${wbsPlanNo}%'                
                           </if>     
                          )
                 ORDER BY WBS_PLAN_NO ASC         
          </select>
          
          <!-- 실적 메인화면에서 실적 데이터 삭제 시 실적상세 테이블 삭제  -->  
         <delete id="deleteWbsRsltsDetailSub" parameterType="Map">
               DELETE FROM TB_WB02D01
                   WHERE CO_CD  = '${coCd}'
                         AND WBS_PLAN_NO  = '${wbsPlanNo}'
                         AND WBS_PLAN_CODE_KIND  = '${codeKind}'
                         AND WBS_PLAN_CODE_ID  = '${codeId}'
         </delete>
         
         <!-- 실적 메인화면에서 실적 데이터 삭제 시 결재 테이블 삭제  --> 
        <delete id="deleteWbsApprovalListSub" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE TODO_CO_CD  = '${coCd}'
                         AND SALES_CD  = '${salesCd}'
                         AND TODO_NO  = '${wbsPlanNo}'
                         AND TODO_CODE_KIND  = '${codeKind}'
                         AND TODO_CODE_ID  = '${codeId}'
                         AND TODO_DIV1_CODE_ID  = '${A_todoDiv1CodeId}'
                         AND TODO_DIV2_CODE_ID  = '${A_todoDiv2CodeId}'
                         
        </delete>
        
        <!-- WBS일정실적 메인화면 삭제  -->  
        <delete id="deleteWbsRsltslist" parameterType="Map">
               DELETE FROM TB_WB02M01
                   WHERE CO_CD = '${coCd}'
                   AND SALES_CD = '${salesCd}'
                   AND WBS_PLAN_NO = '${wbsPlanNo}' 
                   AND WBS_PLAN_CODE_KIND = '${codeKind}'
                   AND WBS_PLAN_CODE_ID = '${codeId}'
        </delete>
        
        
          <select id="selectWbsInfo" parameterType="Map" resultType="camelMap">  
				SELECT 
				        X.FILE_TRGT_KEY,
				        X.CO_CD,
				        X.WBS_PLAN_CODE_KIND,
				        X.WBS_PLAN_CODE_ID,
				        X.WBS_PLAN_NO,
				        X.SALES_CD,
				        TO_CHAR(X.WBS_PLAN_DT, 'YYYY-MM-DD') AS WBS_PLAN_DT,
				        X.WBS_PLAN_ID,
				        (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.WBS_PLAN_ID) AS WBS_PLAN_NM,
				        X.WBS_PLAN_MNG_ID,
				        (SELECT T.NAME FROM TB_CM06M01 T WHERE T.ID = X.WBS_PLAN_MNG_ID) AS WBS_PLAN_MNG_NM,
				        X.WBS_PLAN_CNTS,
				        TO_CHAR(X.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT,
				        TO_CHAR(X.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT,
				        X.WBS_PLAN_RMK,
				        X.WBS_PLAN_STS_CODE_ID,
				        (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.WBS_PLAN_STS_CODE_ID) AS WBS_PLAN_STS_NM,
				        X.DSGN_DIF_CODE_ID,
				        (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.DSGN_DIF_CODE_ID) AS DSGN_DIF_CODE_NM,
				        X.DSGN_PLAN_HOUR,
				        X.PRDCTN_DIF_CODE_ID,
				        (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = X.PRDCTN_DIF_CODE_ID) AS PRDCTN_DIF_CODE_NM,
				        X.PRDCTN_PLAN_HOUR,
				        X.WBS_PLAN_OS_YN,
				        X.LOCK_YN,
				        X.CLOSE_YN,
				        S.ORDRS_NO,
				        S.ORDRS_CLNT_CD,
				        (SELECT T.CLNT_NM FROM TB_BM02M01 T WHERE T.CLNT_CD = S.ORDRS_CLNT_CD) AS ORDRS_CLNT_NM,
				        S.CLNT_PJT,
				        S.ORDRS_DTL_DIV20,
				        (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = S.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
				        S.ITEM_DIV, 
				        S.EQP_NM
				        FROM TB_WB01M01 X
				        LEFT OUTER JOIN (
				           SELECT  X.CO_CD,
				                   X.ORDRS_NO,
				                   X.SALES_CD,
				                   Y.ORDRS_CLNT_CD,
				                   Y.CLNT_PJT,
				                   X.ORDRS_DTL_DIV20,
				                   X.PRDT_CD,
				                   X.ITEM_DIV, 
				                   X.EQP_NM 
				                   FROM TB_CR02D02 X
				            INNER JOIN TB_CR02M01 Y
				            ON X.CO_CD = Y.CO_CD
				            AND X.ORDRS_NO = Y.ORDRS_NO ) S
				          ON X.CO_CD = S.CO_CD
				          AND X.SALES_CD = S.SALES_CD 
				          WHERE X.CO_CD = #{coCd}
				          AND X.SALES_CD = #{salesCd}
				          AND X.WBS_PLAN_CODE_KIND = #{codeKind}
				          AND X.WBS_PLAN_CODE_ID = #{codeId}   
				          AND S.ORDRS_NO = #{ordrsNo}
			</select>	          
          
          <insert id="wbsPlanListInsert" parameterType="Map">
                <selectKey keyProperty="fileTrgtKey" resultType="Int" order="BEFORE">
                    SELECT NVL(MAX(FILE_TRGT_KEY), 0) + 1 FROM TB_WB01M01_LIST
                </selectKey>
                INSERT INTO TB_WB01M01_LIST
                (
                    FILE_TRGT_KEY,
                    CO_CD,                    
                    WBS_PLAN_CODE_KIND,
                    WBS_PLAN_CODE_ID,
                    SALES_CD,
                    LVL,
                    CREAT_ID,
                    CREAT_PGM,
                    CREAT_DTTM
                ) 
                VALUES
                (
                    #{fileTrgtKey},
                    #{coCd},
                    #{codeKind},
                    #{codeId},
                    #{salesCd},
                    #{lvl},
                    #{userId},
                    #{creatPgm},
                    SYSDATE
                )
         </insert>
         
         <select id="wbsPlanListChk" parameterType="Map" resultType="camelMap">
               SELECT *  FROM TB_WB01M01_LIST
                   WHERE CO_CD  = #{coCd}
                         AND SALES_CD  = #{salesCd}
                         <!-- AND WBS_PLAN_CODE_KIND  = #{codeKind} -->
                         AND WBS_PLAN_CODE_ID  = #{codeId}
                        <!--  AND LVL  = #{lvl} -->
        </select>    
        
        <delete id="deleteWbsPlanTempList" parameterType="Map">
               DELETE FROM TB_WB01M01_LIST
                   WHERE CO_CD  = #{coCd}
                         AND SALES_CD  = #{salesCd}
                         AND WBS_PLAN_CODE_ID  = #{codeId}
                        <!--  AND LVL  = #{lvl} -->
                         
        </delete>
        
        <select id="wbsCodeList" parameterType="Map" resultType="camelMap">
		        SELECT 
		              CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
		              CODE_ID,
		              CODE_NM,
		              LPAD('', 3*(LEVEL-1)) || LEVEL LVL ,
		              REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
		              CONNECT_BY_ISLEAF AS IS_LEAF,
		              CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END AS TYPE
		         FROM TB_CM05M01
		         START WITH CODE_ID = 'WBSDIV'
		         CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
		         ORDER BY PATH ASC
        </select>                
                        
</mapper>


