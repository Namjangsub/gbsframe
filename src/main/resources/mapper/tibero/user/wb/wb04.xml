<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.wb.wb04.mapper.WB04Mapper">
       <select id="selectWbsLeftSalesCodeTreeList" parameterType="Map" resultType="camelMap">                              
                SELECT DISTINCT  
                       '' PID,
                       #{coCd} ID,
                       #{coCd} CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(#{coCd}) AS CO_CD_NM,
                       '전체' ORDRS_NO,
                       '전사 현황' AS SALES_CD,
                       '' ORGN_SALES_CD,
                       '' ORDRS_CLNT_CD, -- 고객사
                       '전체' AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '' EQP_NM, -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM DUAL

              UNION ALL  --회사명을 Top LEVEL 생성
                SELECT DISTINCT  
                       X.CO_CD PID,
                       TO_CHAR(Y.ORDRS_CLNT_CD) ID,
                       X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       A.CLNT_NM,
                       A.CLNT_NM  AS SALES_CD,
                       '' ORGN_SALES_CD,
                       Y.ORDRS_CLNT_CD , -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '' CLNT_PJT,
                       '' ORDRS_DTL_DIV20, -- 신작구분
                       '' AS ORDRS_DTL_DIV20_NM,
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD like '%${salesCd}%'                
               </if>
                 
               UNION ALL --오더번호로 1 LEVEL 생성
                SELECT DISTINCT  
                       TO_CHAR(Y.ORDRS_CLNT_CD) PID,
                       X.ORDRS_NO ID,
                       X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO AS ORDRS_NO,
                       X.ORDRS_NO AS SALES_CD,
                       '',
                       Y.ORDRS_CLNT_CD, -- 고객사
                       A.CLNT_NM  AS ORDRS_CLNT_NM,
                       '',
                       '',
                       '',
                       '', -- 설비명
                       0 PLAN_CNT,
                       'E' WBS_PLAN_OS_YN,
                       'E' PLAN_LOCK_YN,
                       'E' PLAN_CLOSE_YN,
                       0 RSULT_CNT,
                       'E' RSULT_LOCK_YN,
                       'E' RSULT_CLOSE_YN,
                       '' PRDT_CD,
                       '' AS PRDT_CD_NM,
                       '' ITEM_DIV,
                       '' ITEM_DIV_NM,
                       '' DATA_GBN
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
                 WHERE X.CO_CD = #{coCd}
               <if test="salesCd != null and !salesCd.equals('')">
                  AND X.SALES_CD like '%${salesCd}%'                
               </if>

               UNION ALL
                SELECT   --Sales 코드 추출
                       X.ORDRS_NO PID,
                       X.SALES_CD ID,
                       X.CO_CD, -- 회사코드
                       FN_CM05M01_CD_TO_NM(X.CO_CD) AS CO_CD_NM,
                       X.ORDRS_NO, -- 수주번호
                       X.SALES_CD, -- SALES CODE
                       max(Y.ORGN_SALES_CD), -- 원천 SALES CODE
                       max(Y.ORDRS_CLNT_CD), -- 고객사
                       max(A.CLNT_NM)  AS ORDRS_CLNT_NM,
                       max(Y.CLNT_PJT), -- 고객사 PJT
                       max(X.ORDRS_DTL_DIV20), -- 신작구분
                       FN_CM05M01_CD_TO_NM(max(X.ORDRS_DTL_DIV20)) AS ORDRS_DTL_DIV20_NM,
                       max(X.EQP_NM), -- 설비명
                       COUNT(W.FILE_TRGT_KEY) PLAN_CNT,
                       NVL(max(W.WBS_PLAN_OS_YN),'N') WBS_PLAN_OS_YN,
                       NVL(max(W.LOCK_YN),'N') PLAN_LOCK_YN,
                       NVL(max(W.CLOSE_YN),'N') PLAN_CLOSE_YN,
                       COUNT(Z.FILE_TRGT_KEY) RSULT_CNT,
                       NVL(max(Z.LOCK_YN),'N') RSULT_LOCK_YN,
                       NVL(max(Z.CLOSE_YN),'N') RSULT_CLOSE_YN,
                       max(X.PRDT_CD) PRDT_CD,
                       FN_BM01M01_ID_TO_NM(max(X.PRDT_CD)) AS PRDT_CD_NM,
                       max(X.ITEM_DIV) ITEM_DIV,
                       FN_CM05M01_CD_TO_NM(max(X.ITEM_DIV)) AS ITEM_DIV_NM,
                       'D' DATA_GBN  --원시데이타
                  FROM TB_CR02D02 X
                        INNER JOIN TB_CR02M01 Y  ON X.CO_CD    = Y.CO_CD
                                                AND X.ORDRS_NO = Y.ORDRS_NO
                                                AND X.CO_CD = #{coCd}
                                               <if test="salesCd != null and !salesCd.equals('')">
                                                AND X.SALES_CD like '%${salesCd}%'                
                                               </if>
                        CROSS JOIN (
                                                SELECT 
                                                         CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
                                                         CODE_ID,
                                                         CODE_RPRC,
                                                         CODE_NM,
                                                         CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
                                                         CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
                                                         CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
                                                         LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
                                                         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
                                                         CONNECT_BY_ISLEAF AS IS_LEAF,
                                                         CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
                                                 FROM TB_CM05M01
                                                 START WITH CODE_ID = 'WBSDIV'
                                                 CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
                                ) CD  
                        LEFT OUTER JOIN TB_WB01M01 W  ON X.CO_CD    = W.CO_CD
                                                     AND X.SALES_CD = w.SALES_CD  
                                                     AND CD.CODE_ID = W.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_WB02M01 Z  ON X.CO_CD    = Z.CO_CD
                                                     AND X.SALES_CD = Z.SALES_CD  
                                                     AND CD.CODE_ID = Z.WBS_PLAN_CODE_ID
                        LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터                             
                GROUP BY X.ORDRS_NO, X.SALES_CD, X.CO_CD,Y.ORGN_SALES_CD,Y.ORDRS_CLNT_CD, Y.CLNT_PJT                    

           </select> 
           
           <select id="selectWbsPlanTreeList" parameterType="Map" resultType="CamelMap">
            SELECT  
                    T.*,
                    FN_CM05M01_CD_TO_NM(T.CO_CD) AS CO_CD_NM,
                    CASE WHEN W01.FILE_TRGT_KEY  IS NULL  THEN 'N' ELSE 'Y' END WBS_PLAN_CHK_YN,
                    CASE WHEN W02.FILE_TRGT_KEY  IS NULL  THEN 'N' ELSE 'Y' END WBS_RSLTS_CHK_YN,
                    TO_CHAR(W01.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT, -- 계획시작일자
                    TO_CHAR(W01.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT, -- 계획종료일자
                    TO_CHAR(W02.WBS_RSLTSS_DT, 'YYYY-MM-DD') AS WBS_RSLTSS_DT, -- 실적시작일자
                    TO_CHAR(W02.WBS_RSLTSE_DT, 'YYYY-MM-DD') AS WBS_RSLTSE_DT, -- 실적종료일자
                    W01.WBS_PLAN_ID,
                    TO_CHAR(W01.WBS_PLAN_DT, 'YYYY-MM-DD') AS  WBS_PLAN_DT,
                    FN_CM06M01_ID_TO_NM(W01.WBS_PLAN_ID) WBS_PLAN_NM,
                    FN_CM06M01_ID_TO_NM(W01.CREAT_ID)  CREAT_ID,
                    TO_CHAR(W01.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM,
                    FN_CM06M01_ID_TO_NM(W01.UDT_ID)  UDT_ID,
                    TO_CHAR(W01.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM,
                    W02.WBS_PLAN_MH,        --계획공수
                    W02.WBS_RSLTS_MH,       --실적공수
                    W01.FILE_TRGT_KEY,
                    W01.WBS_PLAN_NO,
                    W01.WBS_PLAN_CNTS,
                    W01.WBS_PLAN_RMK,
                    W01.WBS_PLAN_STS_CODE_ID,
                    W01.WBS_PLAN_OS_YN,
                    W01.LOCK_YN,
                    W01.CLOSE_YN,
                    DSGN_DIF_CODE_ID,
                    DSGN_PLAN_HOUR,
                    PRDCTN_DIF_CODE_ID,
                    PRDCTN_PLAN_HOUR,    
                    WBS_PLAN_MNG_ID,
                    FN_CM06M01_ID_TO_NM(W01.WBS_PLAN_MNG_ID) WBS_PLAN_MNG_NM,
                    W02.FILE_TRGT_KEY AS RSLTS_FILE_TRGT_KEY,
                    W02.WBS_PLAN_NO   AS RSLTS_WBS_PLAN_NO,
                    W02.WBS_RSLTS_RATE,
                    W02.LOCK_YN  AS RSLTS_LOCK_YN,
                    W02.CLOSE_YN AS RSLTS_CLOSE_YN,
                    W02.WBS_RSLTS_CNTS,
                    W02.WBS_RSLTS_RMK,
                    TO_CHAR(W02.WBS_RSLTS_DT, 'YYYY-MM-DD') AS WBS_RSLTS_DT,
                    FN_CM06M01_ID_TO_NM(W02.WBS_RSLTS_ID)  AS WBS_RSLTS_ID,
                    W02.*
               FROM         
                    (SELECT  
                           CR.CO_CD, 
                           CR.ORDRS_NO,
                           CR.SALES_CD, 
                           Y.ORDRS_CLNT_CD, 
                           (SELECT P.CLNT_NM FROM TB_BM02M01 P WHERE P.CLNT_CD = Y.ORDRS_CLNT_CD) AS ORDRS_CLNT_NM,
                           Y.CLNT_PJT, 
                           CR.ORDRS_DTL_DIV20, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
                           CR.PRDT_CD, 
                           (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = CR.PRDT_CD) AS PRDT_CD_NM,
                           CR.ITEM_DIV, 
                           (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ITEM_DIV) AS ITEM_DIV_NM,
                           CR.EQP_NM ,
                           CD.*
                      FROM TB_CR02D02 CR INNER JOIN TB_CR02M01 Y  ON CR.CO_CD = Y.CO_CD
                                                                 AND CR.ORDRS_NO = Y.ORDRS_NO
                           , (
                                                SELECT 
                                                         CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
                                                         CODE_ID,
                                                         CODE_RPRC,
                                                         CODE_NM,
                                                         CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
                                                         CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
                                                         CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
                                                         LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
                                                         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
                                                         CONNECT_BY_ISLEAF AS IS_LEAF,
                                                         CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
                                                 FROM TB_CM05M01
                                                 START WITH CODE_ID = 'WBSDIV'
                                                 CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
                                )  CD 
                       WHERE CR.CO_CD = #{coCd}
                         AND CR.SALES_CD = #{salesCd} 
                      ORDER BY  CR.SALES_CD, PATH                 
                     ) AS T LEFT OUTER JOIN TB_WB01M01 W01 ON T.CO_CD    = W01.CO_CD
                                                          AND T.SALES_CD = W01.SALES_CD
                                                          AND T.CODE_ID  = W01.WBS_PLAN_CODE_ID
                            LEFT OUTER JOIN TB_WB02M01 W02 ON T.CO_CD    = W02.CO_CD
                                                          AND T.SALES_CD = W02.SALES_CD
                                                          AND T.CODE_ID  = W02.WBS_PLAN_CODE_ID
                                                          
        </select>        


          <select id="selectGanttList" parameterType="Map" resultType="CamelMap"> 
			SELECT 
			            CO_CD,
			            SALES_CD,
			            CODE_NM,
			            CODE_ID,
			            DUR,
			            WBS_PLANS_DT,
			            WBS_PLANE_DT,
			            WBS_RSLTS_RATE,
			            WBS_PLAN_MNG_NM,
			            ORDRS_CLNT_NM,
			            WBS_PLAN_CNTS,
			            SUBSTR(TO_CHAR(WBS_PLANS_DT, 'YYYY-MM-DD'),9,2)||'-'||SUBSTR(TO_CHAR(WBS_PLANS_DT, 'YYYY-MM-DD'),6,2)||'-'||SUBSTR(TO_CHAR(WBS_PLANS_DT, 'YYYY-MM-DD'),0,4) AS WBS_PLANS_DT1,
			            SUBSTR(TO_CHAR(WBS_PLANE_DT, 'YYYY-MM-DD'),9,2)||'-'||SUBSTR(TO_CHAR(WBS_PLANE_DT, 'YYYY-MM-DD'),6,2)||'-'||SUBSTR(TO_CHAR(WBS_PLANE_DT, 'YYYY-MM-DD'),0,4) AS WBS_PLANE_DT1,                        
			            LVL,
			            WBS_PLAN_CODE_KIND,
			            WBS_PLAN_CODE_ID,
			            FILE_TRGT_KEY_P,
			            FILE_TRGT_KEY_R,
			            FILE_TRGT_KEY_I
			            FROM (
			                    SELECT  
			                                        T.CO_CD,
			                                        T.SALES_CD,
			                                        T.CODE_NM,
			                                        T.CODE_ID,
			                                        TO_DATE(TO_CHAR( W01.WBS_PLANE_DT,'YYYYMMDD'),'YYYYMMDD') - TO_DATE(TO_CHAR(W01.WBS_PLANS_DT,'YYYYMMDD'),'YYYYMMDD') AS DUR,
			                                        W01.WBS_PLANS_DT,
			                                        W01.WBS_PLANE_DT,
			                                        NVL(W02.WBS_RSLTS_RATE,0) AS WBS_RSLTS_RATE,
			                                        NVL(FN_CM06M01_ID_TO_NM(W01.WBS_PLAN_MNG_ID),' ') WBS_PLAN_MNG_NM,
			                                        T.ORDRS_CLNT_NM,
			                                        NVL(W01.WBS_PLAN_CNTS,' ') AS WBS_PLAN_CNTS ,
			                                        T.LVL-1 AS LVL,
			                                        W01.WBS_PLAN_CODE_KIND,
			                                        W01.WBS_PLAN_CODE_ID,
			                                        NVL(W01.FILE_TRGT_KEY,0) AS FILE_TRGT_KEY_P,
			                                        NVL(W02.FILE_TRGT_KEY,0) AS FILE_TRGT_KEY_R,
			                                        NVL(W03.FILE_TRGT_KEY,0) AS FILE_TRGT_KEY_I			                    
			                                   FROM         
			                                        (SELECT  
			                                               CR.CO_CD, 
			                                               CR.ORDRS_NO,
			                                               CR.SALES_CD, 
			                                               Y.ORDRS_CLNT_CD, 
			                                               (SELECT P.CLNT_NM FROM TB_BM02M01 P WHERE P.CLNT_CD = Y.ORDRS_CLNT_CD) AS ORDRS_CLNT_NM,
			                                               Y.CLNT_PJT, 
			                                               CR.ORDRS_DTL_DIV20, 
			                                               (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
			                                               CR.PRDT_CD, 
			                                               (SELECT T.PRDT_NM FROM TB_BM01M01 T WHERE T.PRDT_CD = CR.PRDT_CD) AS PRDT_CD_NM,
			                                               CR.ITEM_DIV, 
			                                               (SELECT T.CODE_NM FROM TB_CM05M01 T WHERE T.CODE_ID = CR.ITEM_DIV) AS ITEM_DIV_NM,
			                                               CR.EQP_NM ,
			                                               CD.*
			                                          FROM TB_CR02D02 CR INNER JOIN TB_CR02M01 Y  ON CR.CO_CD = Y.CO_CD
			                                                                                     AND CR.ORDRS_NO = Y.ORDRS_NO
			                                               , (
			                                                                    SELECT 
			                                                                             CASE WHEN CODE_KIND = 'ROOT' THEN '' ELSE CODE_KIND END CODE_KIND,
			                                                                             CODE_ID,
			                                                                             CODE_RPRC,
			                                                                             CODE_NM,
			                                                                             CASE WHEN LEVEL = '1' THEN CODE_NM ELSE '' END LVL1,
			                                                                             CASE WHEN LEVEL = '2' THEN CODE_NM ELSE '' END LVL2,
			                                                                             CASE WHEN LEVEL = '3' THEN CODE_NM ELSE '' END LVL3,
			                                                                             LPAD('', 3*(LEVEL-1)) || LEVEL LVL,
			                                                                             REGEXP_REPLACE(SYS_CONNECT_BY_PATH(CODE_ID, ' -> '), '^\s+\-\>\s+', '') as PATH,
			                                                                             CONNECT_BY_ISLEAF AS IS_LEAF,
			                                                                             CASE WHEN CONNECT_BY_ISLEAF = 0 THEN 'unit' ELSE 'leaf' END TYPE
			                                                                     FROM TB_CM05M01
			                                                                     START WITH CODE_ID = 'WBSDIV'
			                                                                     CONNECT BY PRIOR CODE_ID  =  CODE_KIND 
			                                                    )  CD 
			                                           WHERE CR.CO_CD = #{coCd}
			                                             AND CR.SALES_CD = #{salesCd}
			                                          ORDER BY  CR.SALES_CD, PATH                 
			                                         ) AS T LEFT OUTER JOIN TB_WB01M01 W01 ON T.CO_CD    = W01.CO_CD
			                                                                              AND T.SALES_CD = W01.SALES_CD
			                                                                              AND T.CODE_ID  = W01.WBS_PLAN_CODE_ID
			                                                LEFT OUTER JOIN TB_WB02M01 W02 ON T.CO_CD    = W02.CO_CD
			                                                                              AND T.SALES_CD = W02.SALES_CD
			                                                                              AND T.CODE_ID  = W02.WBS_PLAN_CODE_ID 
			                                                LEFT OUTER JOIN TB_WB03M01 W03 ON T.CO_CD    = W03.CO_CD
                                                                                          AND T.SALES_CD = W03.SALES_CD
                                                                                          AND T.CODE_ID  = W03.WBS_PLAN_CODE_ID 
			                               WHERE  T.CODE_ID != 'WBSDIV' ) X
			    WHERE DUR >=0      
			    ORDER BY CODE_ID ASC                                                                                                                                            
        </select>        

        <update id="updateWbsPlanDate" parameterType="Map">
             UPDATE TB_WB01M01
              SET WBS_PLANS_DT = #{wbsPlansDt},
                  WBS_PLANE_DT = #{wbsPlaneDt}
              WHERE CO_CD = #{coCd}
                    AND SALES_CD = #{salesCd}
                    AND WBS_PLAN_CODE_ID = #{codeId}
        </update>  

     
        
                <select id="selectGanttInfo" parameterType="Map" resultType="CamelMap">
					SELECT 
					         T.CO_CD, 
					         (SELECT X.CODE_NM FROM TB_CM05M01 X WHERE X.CODE_ID = T.CO_CD) AS CO_CD_NM,
					         T.SALES_CD,
					         T.LVL,      
					         T.CODE_ID01,
					         T.CODE_ID02,
					         T.CODE_ID03,
					         
					         T.WBS_PLAN_MNG_ID_01,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.WBS_PLAN_MNG_ID_01) AS WBS_PLAN_MNG_NM_01,
					         TO_CHAR(T.WBS_PLANS_DT_01, 'YYYY-MM-DD') AS WBS_PLANS_DT_01,
					         TO_CHAR(T.WBS_PLANE_DT_01, 'YYYY-MM-DD') AS WBS_PLANE_DT_01,
					         
					         T.WBS_PLAN_MNG_ID_02,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.WBS_PLAN_MNG_ID_02) AS WBS_PLAN_MNG_NM_02,
					         TO_CHAR(T.WBS_PLANS_DT_02, 'YYYY-MM-DD') AS WBS_PLANS_DT_02,
					         TO_CHAR(T.WBS_PLANE_DT_02, 'YYYY-MM-DD') AS WBS_PLANE_DT_02,
					         
					         T.WBS_PLAN_MNG_ID_03,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.WBS_PLAN_MNG_ID_03) AS WBS_PLAN_MNG_NM_03,
					         TO_CHAR(T.WBS_PLANS_DT_03, 'YYYY-MM-DD') AS WBS_PLANS_DT_03,
					         TO_CHAR(T.WBS_PLANE_DT_03, 'YYYY-MM-DD') AS WBS_PLANE_DT_03,
					         
					         T.WBS_PLAN_NO,
					         TO_CHAR(T.WBS_PLAN_DT, 'YYYY-MM-DD') AS WBS_PLAN_DT,
					         T.WBS_PLAN_ID,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.WBS_PLAN_ID) AS WBS_PLAN_NM,
					         T.WBS_PLAN_CNTS,
					         T.WBS_PLAN_RMK,
					         T.WBS_PLAN_STS_CODE_ID,
					         (SELECT X.CODE_NM FROM TB_CM05M01 X WHERE X.CODE_ID = T.WBS_PLAN_STS_CODE_ID) AS WBS_PLAN_STS_CODE_NM,
					         T.DSGN_DIF_CODE_ID,
					         (SELECT X.CODE_NM FROM TB_CM05M01 X WHERE X.CODE_ID = T.DSGN_DIF_CODE_ID) AS DSGN_DIF_CODE_NM,
					         T.DSGN_PLAN_HOUR,
					         T.PRDCTN_DIF_CODE_ID,
					         (SELECT X.CODE_NM FROM TB_CM05M01 X WHERE X.CODE_ID = T.PRDCTN_DIF_CODE_ID) AS PRDCTN_DIF_CODE_NM,
					         T.PRDCTN_PLAN_HOUR,
					         T.WBS_PLAN_OS_YN,
					         T.LOCK_YN_P,
					         T.CLOSE_YN_P,
					         T.FILE_TRGT_KEY_P,
					         
					         T.WBS_RSLTS_NO,
					         TO_CHAR(T.WBS_RSLTS_DT, 'YYYY-MM-DD') AS WBS_RSLTS_DT,
					         T.WBS_RSLTS_ID,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.WBS_RSLTS_ID) AS WBS_RSLTS_NM,
					         T.WBS_RSLTS_RATE,
					         T.WBS_PLAN_MH,
					         T.WBS_RSLTS_MH,
					         T.WBS_RSLTS_CNTS,
					         TO_CHAR(T.WBS_RSLTSS_DT, 'YYYY-MM-DD') AS WBS_RSLTSS_DT,
					         TO_CHAR(T.WBS_RSLTSE_DT, 'YYYY-MM-DD') AS WBS_RSLTSE_DT,
					         T.WBS_RSLTS_RMK,
					         T.LOCK_YN_R,
					         T.CLOSE_YN_R,
					         T.FILE_TRGT_KEY_R,
					         
					         T.WBS_ISS_NO,
					         T.ACT_YN,
					         T.ISS_DIV,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.ISS_DIV) AS ISS_DIV_NM,
					         T.ISS_DTL_DIV,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.ISS_DTL_DIV) AS ISS_DTL_DIV_NM,
					         T.ISS_GRD,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.ISS_GRD) AS ISS_GRD_NM,
					         T.ISS_CNTS,
					         T.ACT_ID,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.ACT_ID) AS ACT_NM,
					         TO_CHAR(T.ACTS_DT, 'YYYY-MM-DD') AS ACTS_DT,
					         TO_CHAR(T.ACTE_DT, 'YYYY-MM-DD') AS ACTE_DT,
					         T.ACT_MH,
					         T.ACT_AMT,
					         T.CF_YN,
					         T.CF_ID,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.CF_ID) AS CF_NM,
					         T.CAUSE_CNTS,
					         T.ACT_CNTS,
					         T.CF_DIV,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.CF_DIV) AS CF_DIV_NM,
					         T.CF_DTL_DIV,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.CF_DTL_DIV) AS CF_DTL_DIV_NM,
					         T.CF_GRD,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.CF_GRD) AS CF_GRD_NM,
					         T.CF_CNTS,
					         T.ISS_STS,
					         (SELECT X.NAME FROM TB_CM06M01 X WHERE X.ID = T.ISS_STS) AS ISS_STS_NM,
					         T.FILE_TRGT_KEY_I,
					         
					         C.ORDRS_CLNT_CD,
					         (SELECT X.CLNT_NM FROM TB_BM02M01 X WHERE X.CLNT_CD = C.ORDRS_CLNT_CD) AS ORDRS_CLNT_NM,
					         C.CLNT_PJT,
					         C.ORDRS_DTL_DIV20,
					         (SELECT X.CODE_NM FROM TB_CM05M01 X WHERE X.CODE_ID = C.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM,
					         C.PRDT_CD,
					         (SELECT X.PRDT_NM FROM TB_BM01M01 X WHERE X.PRDT_CD = C.PRDT_CD) AS  PRDT_NM,
					         C.ITEM_DIV,
					         (SELECT X.CODE_NM FROM TB_CM05M01 X WHERE X.CODE_ID = C.ITEM_DIV) AS ITEM_DIV_NM,
					         C.EQP_NM
					                                             
					       FROM (
					                SELECT 
					                         1 AS LVL,
					                         P1.CO_CD,
					                         P1.SALES_CD,
					                         
					                         P1.WBS_PLAN_CODE_ID AS CODE_ID01,
					                         '' AS CODE_ID02,
					                         '' AS CODE_ID03,
					                                                                         
					                         P1.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID_01,                                                       
					                         P1.WBS_PLANS_DT AS WBS_PLANS_DT_01,
					                         P1.WBS_PLANE_DT AS WBS_PLANE_DT_01,
					                                                                                 
					                         NULL AS WBS_PLAN_MNG_ID_02,
					                         NULL AS WBS_PLANS_DT_02,
					                         NULL AS WBS_PLANE_DT_02,
					                         
					                         NULL AS WBS_PLAN_MNG_ID_03,
					                         NULL AS WBS_PLANS_DT_03,
					                         NULL AS WBS_PLANE_DT_03,
					                         
					                         P1.WBS_PLAN_NO,
					                         P1.WBS_PLAN_DT,
					                         P1.WBS_PLAN_ID,
					                         P1.WBS_PLAN_CNTS,
					                         P1.WBS_PLAN_RMK,
					                         P1.WBS_PLAN_STS_CODE_ID,
					                         P1.DSGN_DIF_CODE_ID,
					                         P1.DSGN_PLAN_HOUR,
					                         P1.PRDCTN_DIF_CODE_ID,
					                         P1.PRDCTN_PLAN_HOUR,
					                         P1.WBS_PLAN_OS_YN,
					                         P1.LOCK_YN AS LOCK_YN_P,
					                         P1.CLOSE_YN AS CLOSE_YN_P,
					                         P1.FILE_TRGT_KEY AS FILE_TRGT_KEY_P,
					                         
					                         R.WBS_PLAN_NO AS WBS_RSLTS_NO,
					                         R.WBS_RSLTS_DT,
					                         R.WBS_RSLTS_ID,
					                         R.WBS_RSLTS_RATE,
					                         R.WBS_PLAN_MH,
					                         R.WBS_RSLTS_MH,
					                         R.WBS_RSLTS_CNTS,
					                         R.WBS_RSLTSS_DT,
					                         R.WBS_RSLTSE_DT,
					                         R.WBS_RSLTS_RMK,
					                         R.LOCK_YN AS LOCK_YN_R,
					                         R.CLOSE_YN AS CLOSE_YN_R,
					                         R.FILE_TRGT_KEY AS FILE_TRGT_KEY_R,
					                         
					                         I.ISS_NO AS WBS_ISS_NO,
					                         I.ACT_YN,
					                         I.ISS_DIV,
					                         I.ISS_DTL_DIV,
					                         I.ISS_GRD,
					                         I.ISS_CNTS,
					                         I.ACT_ID,
					                         I.ACTS_DT,
					                         I.ACTE_DT,
					                         I.ACT_MH,
					                         I.ACT_AMT,
					                         I.CF_YN,
					                         I.CF_ID,
					                         I.CAUSE_CNTS,
					                         I.ACT_CNTS,
					                         I.CF_DIV,
					                         I.CF_DTL_DIV,
					                         I.CF_GRD,
					                         I.CF_CNTS,
					                         I.ISS_STS,
					                         I.FILE_TRGT_KEY AS FILE_TRGT_KEY_I
					                                                                                 
					                        FROM TB_WB01M01 P1
					                           
					                        LEFT OUTER JOIN TB_WB02M01 R   
					                        ON P1.CO_CD = R.CO_CD
					                        AND P1.WBS_PLAN_CODE_ID = R.WBS_PLAN_CODE_ID        
					                        AND P1.SALES_CD = R.SALES_CD
					                        
					                        LEFT OUTER JOIN TB_WB03M01 I   
					                         ON P1.CO_CD = I.CO_CD
					                        AND P1.WBS_PLAN_CODE_ID = I.WBS_PLAN_CODE_ID        
					                        AND P1.SALES_CD = I.SALES_CD
					                        
					                        WHERE LENGTH(P1.WBS_PLAN_CODE_ID) = 8
					                        
					                UNION ALL 
					                        
					                SELECT 
					                         2 AS LVL,
					                         P2.CO_CD,
					                         P2.SALES_CD,
					                         
					                         P1.WBS_PLAN_CODE_ID AS CODE_ID01,
					                         P2.WBS_PLAN_CODE_ID AS CODE_ID02,
					                         '' AS CODE_ID03,
					                                                                         
					                         P1.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID_01,                                                       
					                         P1.WBS_PLANS_DT AS WBS_PLANS_DT_01,
					                         P1.WBS_PLANE_DT AS WBS_PLANE_DT_01,
					                                                                                 
					                         P2.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID_02,                                                       
					                         P2.WBS_PLANS_DT AS WBS_PLANS_DT_02,
					                         P2.WBS_PLANE_DT AS WBS_PLANE_DT_02,
					                         
					                         NULL AS WBS_PLAN_MNG_ID_03,
					                         NULL AS WBS_PLANS_DT_03,
					                         NULL AS WBS_PLANE_DT_03,
					                         
					                         P2.WBS_PLAN_NO,
					                         P2.WBS_PLAN_DT,
					                         P2.WBS_PLAN_ID,
					                         P2.WBS_PLAN_CNTS,
					                         P2.WBS_PLAN_RMK,
					                         P2.WBS_PLAN_STS_CODE_ID,
					                         P2.DSGN_DIF_CODE_ID,
					                         P2.DSGN_PLAN_HOUR,
					                         P2.PRDCTN_DIF_CODE_ID,
					                         P2.PRDCTN_PLAN_HOUR,
					                         P2.WBS_PLAN_OS_YN,
					                         P2.LOCK_YN AS LOCK_YN_P,
					                         P2.CLOSE_YN AS CLOSE_YN_P,
					                         P2.FILE_TRGT_KEY AS FILE_TRGT_KEY_P,
					                         
					                         R.WBS_PLAN_NO AS WBS_RSLTS_NO,
					                         R.WBS_RSLTS_DT,
					                         R.WBS_RSLTS_ID,
					                         R.WBS_RSLTS_RATE,
					                         R.WBS_PLAN_MH,
					                         R.WBS_RSLTS_MH,
					                         R.WBS_RSLTS_CNTS,
					                         R.WBS_RSLTSS_DT,
					                         R.WBS_RSLTSE_DT,
					                         R.WBS_RSLTS_RMK,
					                         R.LOCK_YN AS LOCK_YN_R,
					                         R.CLOSE_YN AS CLOSE_YN_R,
					                         R.FILE_TRGT_KEY AS FILE_TRGT_KEY_R,
					                         
					                         I.ISS_NO AS WBS_ISS_NO,
					                         I.ACT_YN,
					                         I.ISS_DIV,
					                         I.ISS_DTL_DIV,
					                         I.ISS_GRD,
					                         I.ISS_CNTS,
					                         I.ACT_ID,
					                         I.ACTS_DT,
					                         I.ACTE_DT,
					                         I.ACT_MH,
					                         I.ACT_AMT,
					                         I.CF_YN,
					                         I.CF_ID,
					                         I.CAUSE_CNTS,
					                         I.ACT_CNTS,
					                         I.CF_DIV,
					                         I.CF_DTL_DIV,
					                         I.CF_GRD,
					                         I.CF_CNTS,
					                         I.ISS_STS,
					                         I.FILE_TRGT_KEY AS FILE_TRGT_KEY_I
					                                                                                 
					                        FROM TB_WB01M01 P2
					                           
					                        LEFT OUTER JOIN TB_WB02M01 R   
					                        ON P2.CO_CD = R.CO_CD
					                        AND P2.WBS_PLAN_CODE_ID = R.WBS_PLAN_CODE_ID        
					                        AND P2.SALES_CD = R.SALES_CD
					                        
					                        LEFT OUTER JOIN TB_WB03M01 I   
					                         ON P2.CO_CD = I.CO_CD
					                        AND P2.WBS_PLAN_CODE_ID = I.WBS_PLAN_CODE_ID        
					                        AND P2.SALES_CD = I.SALES_CD
					                
					                        LEFT OUTER JOIN TB_WB01M01 P1
					                        ON P2.CO_CD = P1.CO_CD
					                        AND P2.WBS_PLAN_CODE_KIND = P1.WBS_PLAN_CODE_ID     
					                        AND P2.SALES_CD = P1.SALES_CD
					                                
					                        WHERE LENGTH(P2.WBS_PLAN_CODE_ID) = 10
					                        
					                UNION ALL 
					                        
					                SELECT 
					                         3 AS LVL,
					                         P3.CO_CD,
					                         P3.SALES_CD,
					                         
					                         P1.WBS_PLAN_CODE_ID AS CODE_ID01,
					                         P2.WBS_PLAN_CODE_ID AS CODE_ID02,
					                         P3.WBS_PLAN_CODE_ID  AS CODE_ID03,
					                                                                         
					                         P1.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID_01,                                                       
					                         P1.WBS_PLANS_DT AS WBS_PLANS_DT_01,
					                         P1.WBS_PLANE_DT AS WBS_PLANE_DT_01,
					                                                                                 
					                         P2.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID_02,                                                       
					                         P2.WBS_PLANS_DT AS WBS_PLANS_DT_02,
					                         P2.WBS_PLANE_DT AS WBS_PLANE_DT_02,
					                         
					                         P3.WBS_PLAN_MNG_ID AS WBS_PLAN_MNG_ID_03,                                                       
					                         P3.WBS_PLANS_DT AS WBS_PLANS_DT_03,
					                         P3.WBS_PLANE_DT AS WBS_PLANE_DT_03,
					                         
					                         P3.WBS_PLAN_NO,
					                         P3.WBS_PLAN_DT,
					                         P3.WBS_PLAN_ID,
					                         P3.WBS_PLAN_CNTS,
					                         P3.WBS_PLAN_RMK,
					                         P3.WBS_PLAN_STS_CODE_ID,
					                         P3.DSGN_DIF_CODE_ID,
					                         P3.DSGN_PLAN_HOUR,
					                         P3.PRDCTN_DIF_CODE_ID,
					                         P3.PRDCTN_PLAN_HOUR,
					                         P3.WBS_PLAN_OS_YN,
					                         P3.LOCK_YN AS LOCK_YN_P,
					                         P3.CLOSE_YN AS CLOSE_YN_P,
					                         P3.FILE_TRGT_KEY AS FILE_TRGT_KEY_P,
					                         
					                         R.WBS_PLAN_NO AS WBS_RSLTS_NO,
					                         R.WBS_RSLTS_DT,
					                         R.WBS_RSLTS_ID,
					                         R.WBS_RSLTS_RATE,
					                         R.WBS_PLAN_MH,
					                         R.WBS_RSLTS_MH,
					                         R.WBS_RSLTS_CNTS,
					                         R.WBS_RSLTSS_DT,
					                         R.WBS_RSLTSE_DT,
					                         R.WBS_RSLTS_RMK,
					                         R.LOCK_YN AS LOCK_YN_R,
					                         R.CLOSE_YN AS CLOSE_YN_R,
					                         R.FILE_TRGT_KEY AS FILE_TRGT_KEY_R,
					                         
					                         I.ISS_NO AS WBS_ISS_NO,
					                         I.ACT_YN,
					                         I.ISS_DIV,
					                         I.ISS_DTL_DIV,
					                         I.ISS_GRD,
					                         I.ISS_CNTS,
					                         I.ACT_ID,
					                         I.ACTS_DT,
					                         I.ACTE_DT,
					                         I.ACT_MH,
					                         I.ACT_AMT,
					                         I.CF_YN,
					                         I.CF_ID,
					                         I.CAUSE_CNTS,
					                         I.ACT_CNTS,
					                         I.CF_DIV,
					                         I.CF_DTL_DIV,
					                         I.CF_GRD,
					                         I.CF_CNTS,
					                         I.ISS_STS,
					                         I.FILE_TRGT_KEY AS FILE_TRGT_KEY_I
					                                                                                 
					                        FROM TB_WB01M01 P3
					                           
					                        LEFT OUTER JOIN TB_WB01M01 P2
					                        ON  P2.CO_CD = P3.CO_CD
					                        AND P2.WBS_PLAN_CODE_ID = P3.WBS_PLAN_CODE_KIND     
					                        AND P2.SALES_CD = P3.SALES_CD
					                        
					                        LEFT OUTER JOIN TB_WB01M01 P1
					                        ON  P1.CO_CD = P2.CO_CD
					                        AND P1.WBS_PLAN_CODE_ID = P2.WBS_PLAN_CODE_KIND     
					                        AND P1.SALES_CD = P2.SALES_CD
					                        
					                        LEFT OUTER JOIN TB_WB02M01 R   
					                        ON P3.CO_CD = R.CO_CD
					                        AND P3.WBS_PLAN_CODE_ID = R.WBS_PLAN_CODE_ID        
					                        AND P3.SALES_CD = R.SALES_CD
					                        
					                        LEFT OUTER JOIN TB_WB03M01 I   
					                         ON P3.CO_CD = I.CO_CD
					                        AND P3.WBS_PLAN_CODE_ID = I.WBS_PLAN_CODE_ID        
					                        AND P3.SALES_CD = I.SALES_CD
					                        WHERE LENGTH(P3.WBS_PLAN_CODE_ID) = 12 ) T  
					            INNER JOIN (                
					                      SELECT  X1.CO_CD,
					                               X1.SALES_CD,
					                               Y1.ORDRS_CLNT_CD, 
					                               Y1.CLNT_PJT, 
					                               Y1.ORDRS_NO,
					                               X1.ORDRS_DTL_DIV20, 
					                               X1.PRDT_CD, 
					                               X1.ITEM_DIV, 
					                               X1.EQP_NM 
					                               FROM TB_CR02D02 X1
					                                INNER JOIN TB_CR02M01 Y1
					                                ON X1.CO_CD = Y1.CO_CD
					                                AND X1.ORDRS_NO = Y1.ORDRS_NO ) C 
					                    ON T.CO_CD = C.CO_CD
					                    AND T.SALES_CD = C.SALES_CD
					            WHERE T.FILE_TRGT_KEY_P = #{fileTrgtKey}       
                </select>                                                                                                        
                
                
                
                
                
                
                
                
                
                
                
                <select id="selectGanttAllList2" parameterType="Map" resultType="CamelMap">
               WITH SUBJ AS --확정된 과제정보
			     (
			      SELECT X.CO_CD                            AS CO_CD        --회사코드
			           , X.SALES_CD                          AS SALES_CD     --SALES Code
			           , X.SJ_NO                             AS SJ_NO        --과제번호
			           , X.SJ_NM                             AS SJ_NM        --과제명
			           , X.VER_NO                            AS VER_NO       --버젼
			           , TO_CHAR(X.BEGIN_DT, 'YYYY-MM-DD')   AS BEGIN_DT     --시작일
			           , TO_CHAR(X.DE_DT, 'YYYY-MM-DD')      AS DE_DT        --출고일
			           , TO_CHAR(X.ACPTNC_DT, 'YYYY-MM-DD')  AS ACPTNC_DT    --완료검수일
			        FROM TB_WB21M01 X --과제정보 
			       WHERE X.CO_CD = #{coCd}
			         AND X.BEGIN_DT BETWEEN #{beginDt} AND #{deDt} --과제시작일 
			         AND X.CLOSE_YN = 'Y'    --조회조건 : 과제확정 여부 
			         <if test="salesCd != null and !salesCd.equals('')">
                      AND X.SALES_CD = #{salesCd}            
                     </if>   
			     )
			   , SJD AS --수주상세 
			     ( 
			      SELECT M.CO_CD                                            AS CO_CD        --회사코드
			            , (SELECT FN_CM05M01_CD_TO_NM(M.CO_CD) FROM DUAL)   AS CO_NM        --회사명 
			            , M.ORDRS_NO                                         AS ORDRS_NO     --수주번호
			            , X.SALES_CD                                         AS SALES_CD     --SALES Code
			            , M.ORDRS_CLNT_CD                                    AS CLNT_CD      --고객코드
			            , C.CLNT_NM                                          AS CLNT_NM      --고객명
			         FROM TB_CR02M01  M --수주마스터
			              INNER JOIN TB_CR02D02 AS X ON X.CO_CD = M.CO_CD AND X.ORDRS_NO = M.ORDRS_NO--수주상세   
			              INNER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
			        WHERE 1=1
			          AND M.CO_CD = #{coCd}
			          AND X.SALES_CD IS NOT NULL --비용제외
			          AND EXISTS (SELECT 'X'    --과제등록된 SALES_CD 만 
			                         FROM SUBJ P 
			                        WHERE P.CO_CD    = #{coCd}
			                          AND P.CO_CD    = X.CO_CD
			                          AND P.SALES_CD = X.SALES_CD
			                      )
			     )
			   , RSLT AS --WBS 계획_실적_이슈 
			     (
			      SELECT CO_CD
			            , SALES_CD
			            , WBS_PLAN_CODE_KIND
			            , WBS_PLAN_CODE_ID
			            , MIN(WBS_RSLTSS_DT)       AS WBS_RSLTSS_DT  --WBS실적 시작일
			            , MAX(WBS_RSLTSE_DT)       AS WBS_RSLTSE_DT  --WBS실적 시작일
			            , MAX(WBS_RSLTS_RATE)      AS WBS_RSLTS_RATE
			            , MAX(RSLTS_FILE_TRGT_KEY) AS RSLTS_FILE_TRGT_KEY
			            , MAX(ISSUE_PLAN_TRGT_KEY) AS ISSUE_PLAN_TRGT_KEY
			            , MAX(ISSUE_RSLT_TRGT_KEY) AS ISSUE_RSLT_TRGT_KEY
			        FROM (
			              SELECT WR.CO_CD               --회사코드
			                   , WR.SALES_CD            --SALES Code 
			                   , WR.WBS_PLAN_CODE_KIND  --WBS계획 LVL1
			                   , WR.WBS_PLAN_CODE_ID    --WBS계획 LVL2
			                   , WR.WBS_RSLTS_RATE      --WBS실적 진척율
			                   , TO_CHAR(WR.WBS_RSLTSS_DT,'YYYY-MM-DD') AS WBS_RSLTSS_DT  --WBS실적 시작일
			                   , TO_CHAR(WR.WBS_RSLTSE_DT,'YYYY-MM-DD') AS WBS_RSLTSE_DT  --WBS실적 종료일
			                   , WR.FILE_TRGT_KEY                       AS RSLTS_FILE_TRGT_KEY
			                   , ''                                     AS ISSUE_PLAN_TRGT_KEY
			                   , ISU.ISSUE_FILE_TRGT_KEY                AS ISSUE_RSLT_TRGT_KEY
			               FROM TB_WB23M01  WR--WBS실적 정보
			                    LEFT OUTER JOIN (SELECT CO_CD               --회사코드
			                                            , SALES_CD            --SALES Code 
			                                            , WBS_PLAN_CODE_KIND  --WBS계획 LVL1
			                                            , WBS_PLAN_CODE_ID    --WBS계획 LVL2
			                                            , WBS_RSLTS_NO        --WBS실적 번호
			                                            , MAX(FILE_TRGT_KEY) AS ISSUE_FILE_TRGT_KEY
			                                         FROM TB_WB24M02  --WBS이슈 정보
			                                        WHERE CO_CD = #{coCd}
			                                          AND WBS_RSLTS_NO IS NOT NULL --실적이슈 
			                                        GROUP BY CO_CD, SALES_CD, WBS_PLAN_CODE_KIND, WBS_PLAN_CODE_ID, WBS_RSLTS_NO
			                                     ) AS ISU ON WR.CO_CD              = ISU.CO_CD 
			                                             AND WR.SALES_CD           = ISU.SALES_CD 
			                                             AND WR.WBS_PLAN_CODE_KIND = ISU.WBS_PLAN_CODE_KIND 
			                                             AND WR.WBS_PLAN_CODE_ID   = ISU.WBS_PLAN_CODE_ID 
			                                             AND WR.WBS_RSLTS_NO       = ISU.WBS_RSLTS_NO
			              UNION ALL
			              SELECT PL.CO_CD               --회사코드
			                   , PL.SALES_CD            --SALES Code 
			                   , PL.WBS_PLAN_CODE_KIND  --WBS계획 LVL1
			                   , PL.WBS_PLAN_CODE_ID    --WBS계획 LVL2
			                   , 0  WBS_RSLTS_RATE      --WBS계획 진척율
			                   , ''                       AS WBS_RSLTSS_DT  --WBS실적 시작일
			                   , ''                       AS WBS_RSLTSE_DT  --WBS실적 종료일
			                   , ''                       AS RSLTS_FILE_TRGT_KEY
			                   , ISU.ISSUE_FILE_TRGT_KEY  AS ISSUE_PLAN_TRGT_KEY
			                   , ''                       AS ISSUE_RSLT_TRGT_KEY
			                FROM TB_WB22M01  PL--WBS계획 정보
			                     LEFT OUTER JOIN (SELECT CO_CD               --회사코드
			                                           , SALES_CD            --SALES Code 
			                                           , WBS_PLAN_CODE_KIND  --WBS계획 LVL1
			                                           , WBS_PLAN_CODE_ID    --WBS계획 LVL2
			                                           , WBS_PLAN_NO         --WBS계획 번호
			                                           , MAX(FILE_TRGT_KEY) AS ISSUE_FILE_TRGT_KEY
			                                        FROM TB_WB24M02  --WBS이슈 정보
			                                       WHERE CO_CD = #{coCd}
			                                         AND WBS_PLAN_NO IS NOT NULL --계획이슈 
			                                       GROUP BY CO_CD, SALES_CD, WBS_PLAN_CODE_KIND, WBS_PLAN_CODE_ID, WBS_PLAN_NO
			                                     ) AS ISU ON PL.CO_CD              = ISU.CO_CD 
			                                             AND PL.SALES_CD           = ISU.SALES_CD 
			                                             AND PL.WBS_PLAN_CODE_KIND = ISU.WBS_PLAN_CODE_KIND 
			                                             AND PL.WBS_PLAN_CODE_ID   = ISU.WBS_PLAN_CODE_ID 
			                                             AND PL.WBS_PLAN_NO       = ISU.WBS_PLAN_NO
			               WHERE PL.WBS_PLAN_CODE_KIND != 'WBSCODE'
			             )
			       GROUP BY CO_CD
			              , SALES_CD
			              , WBS_PLAN_CODE_KIND
			              , WBS_PLAN_CODE_ID
			     )
			   , PLAN AS --WBS 계획정보 
			     (
			      SELECT A.*
			            , LEVEL - 1 AS LVL
			            , CASE WHEN LEVEL = 1 THEN AVG(A.WBS_RSLTS_RATE) OVER (PARTITION BY A.CO_CD, A.CLNT_CD)
			                   WHEN LEVEL = 2 THEN AVG(A.WBS_RSLTS_RATE) OVER (PARTITION BY A.CO_CD, A.CLNT_CD, A.ORDRS_NO )
			                   WHEN LEVEL = 3 THEN AVG(A.WBS_RSLTS_RATE) OVER (PARTITION BY A.CO_CD, A.CLNT_CD, A.ORDRS_NO, A.SALES_CD )
			                   WHEN LEVEL = 4 THEN ( SELECT ROUND(AVG(R.WBS_RSLTS_RATE),1)
			                                             FROM RSLT AS R 
			                                            WHERE 1=1
			                                              AND A.CO_CD    = R.CO_CD
			                                              AND A.SALES_CD = R.SALES_CD
			                                              AND A.WBS_PLAN_CODE_KIND = 'WBSCODE'
			                                              AND A.WBS_PLAN_CODE_ID   = R.WBS_PLAN_CODE_KIND
			                                         )
			                   ELSE A.WBS_RSLTS_RATE
			              END WBS_AVG_RATE
			            
			            , CASE WHEN LEVEL = 4 THEN (SELECT FN_CM05M01_CD_TO_NM(A.WBS_PLAN_CODE_ID) FROM DUAL)
			                   WHEN LEVEL = 5 THEN A.WBS_PLAN_CODE_NM
			              END AS WBS_PLAN_CODE_NAME --WBS 계획명  
			            , CASE WHEN LEVEL = 1 THEN MAX(ISSUE_PLAN_TRGT_KEY) OVER (PARTITION BY A.CO_CD, A.CLNT_CD)
			                   WHEN LEVEL = 2 THEN MAX(ISSUE_PLAN_TRGT_KEY) OVER (PARTITION BY A.CO_CD, A.CLNT_CD, A.ORDRS_NO )
			                   WHEN LEVEL = 3 THEN MAX(ISSUE_PLAN_TRGT_KEY) OVER (PARTITION BY A.CO_CD, A.CLNT_CD, A.ORDRS_NO, A.SALES_CD )
			                   WHEN LEVEL = 4 THEN ( SELECT TO_CHAR(COUNT(ISSUE_PLAN_TRGT_KEY))
			                                             FROM RSLT AS R 
			                                            WHERE 1=1
			                                              AND A.CO_CD    = R.CO_CD
			                                              AND A.SALES_CD = R.SALES_CD
			                                              AND A.WBS_PLAN_CODE_KIND = 'WBSCODE'
			                                              AND A.WBS_PLAN_CODE_ID   = R.WBS_PLAN_CODE_KIND
			                                         ) 
			                    ELSE ISSUE_PLAN_TRGT_KEY
			              END ISSUE_PLAN_KEY
			            , CASE WHEN LEVEL = 1 THEN MAX(ISSUE_RSLT_TRGT_KEY) OVER (PARTITION BY A.CO_CD, A.CLNT_CD)
			                   WHEN LEVEL = 2 THEN MAX(ISSUE_RSLT_TRGT_KEY) OVER (PARTITION BY A.CO_CD, A.CLNT_CD, A.ORDRS_NO )
			                   WHEN LEVEL = 3 THEN MAX(ISSUE_RSLT_TRGT_KEY) OVER (PARTITION BY A.CO_CD, A.CLNT_CD, A.ORDRS_NO, A.SALES_CD )
			                   WHEN LEVEL = 4 THEN ( SELECT TO_CHAR(COUNT(ISSUE_RSLT_TRGT_KEY))
			                                             FROM RSLT AS R 
			                                            WHERE 1=1
			                                              AND A.CO_CD    = R.CO_CD
			                                              AND A.SALES_CD = R.SALES_CD
			                                              AND A.WBS_PLAN_CODE_KIND = 'WBSCODE'
			                                              AND A.WBS_PLAN_CODE_ID   = R.WBS_PLAN_CODE_KIND
			                                         ) 
			                    ELSE ISSUE_RSLT_TRGT_KEY
			              END ISSUE_RSLT_KEY
			            , CASE WHEN LEVEL = 1 THEN SUM(DECODE(LEVEL, 4, TO_NUMBER(A.DAYCNT), 0)) OVER (PARTITION BY A.CO_CD, A.CLNT_CD)
			                   WHEN LEVEL = 2 THEN SUM(DECODE(LEVEL, 4, TO_NUMBER(A.DAYCNT), 0)) OVER (PARTITION BY A.CO_CD, A.CLNT_CD, A.ORDRS_NO )
			                   WHEN LEVEL = 3 THEN SUM(DECODE(LEVEL, 4, TO_NUMBER(A.DAYCNT), 0)) OVER (PARTITION BY A.CO_CD, A.CLNT_CD, A.ORDRS_NO, A.SALES_CD )
			                   ELSE TO_NUMBER(A.DAYCNT)
			              END DAY_COUNT
			            , REGEXP_REPLACE(SYS_CONNECT_BY_PATH(A.LOWER_CD, ' -> '), '^\s+\-\>\s+', '') AS PATH --출고경로 
			        FROM (
			
			            SELECT DISTINCT 
			                    'TOP'                            AS UPPER_CD
			                  , TO_CHAR(SJ.CLNT_CD)              AS LOWER_CD
			                  , P.CO_CD                          AS CO_CD   
			                  , SJ.CLNT_CD                       AS CLNT_CD 
			                  , SJ.CLNT_NM                       AS CLNT_NM 
			                  , ''                               AS ORDRS_NO
			                  , ''                               AS SALES_CD
			                  , ''                               AS WBS_PLAN_CODE_KIND
			                  , ''                               AS WBS_PLAN_CODE_ID  
			                  , ''                               AS WBS_PLAN_CODE_NM  
			                  , ''                               AS WBS_PLAN_MNG_ID   
			                  , MIN(P.WBS_PLANS_DT) OVER (PARTITION BY P.CO_CD, SJ.CLNT_CD) AS WBS_PLANS_DT      
			                  , MAX(P.WBS_PLANE_DT) OVER (PARTITION BY P.CO_CD, SJ.CLNT_CD) AS WBS_PLANE_DT      
			                  , ''                               AS DAYCNT  
			                  , ''                               AS WBS_RSLTS_RATE    
			                  , ''                               AS WBS_RSLTSS_DT
			                  , ''                               AS WBS_RSLTSE_DT 
			                  , ''                               AS RSLTS_FILE_TRGT_KEY  
			                  , ''                               AS ISSUE_PLAN_TRGT_KEY  
			                  , ''                               AS ISSUE_RSLT_TRGT_KEY
			              FROM TB_WB22M01 P--WBS계획
			                   INNER      JOIN SUBJ AS SB ON P.CO_CD = SB.CO_CD AND P.SALES_CD = SB.SALES_CD 
			                   LEFT OUTER JOIN SJD  AS SJ ON P.CO_CD = SJ.CO_CD AND P.SALES_CD = SJ.SALES_CD
			              WHERE P.CO_CD = #{coCd}
			              --AND P.WBS_PLAN_CODE_KIND = 'WBSCODE' 
			              AND P.CLOSE_YN = 'Y'
			            UNION ALL
			            SELECT DISTINCT 
			                    TO_CHAR(SJ.CLNT_CD)              AS UPPER_CD
			                  , SJ.ORDRS_NO                      AS LOWER_CD
			                  , P.CO_CD                          AS CO_CD   
			                  , SJ.CLNT_CD                       AS CLNT_CD 
			                  , SJ.CLNT_NM                       AS CLNT_NM 
			                  , SJ.ORDRS_NO                      AS ORDRS_NO
			                  , ''                               AS SALES_CD
			                  , ''                               AS WBS_PLAN_CODE_KIND
			                  , ''                               AS WBS_PLAN_CODE_ID  
			                  , ''                               AS WBS_PLAN_CODE_NM  
			                  , ''                               AS WBS_PLAN_MNG_ID   
			                  , MIN(P.WBS_PLANS_DT) OVER (PARTITION BY P.CO_CD, SJ.CLNT_CD, SJ.ORDRS_NO) AS WBS_PLANS_DT  --2023/09/15
			                  , MAX(P.WBS_PLANE_DT) OVER (PARTITION BY P.CO_CD, SJ.CLNT_CD, SJ.ORDRS_NO) AS WBS_PLANE_DT  --2024/01/15
			                  , ''                               AS DAYCNT  
			                  , ''                               AS WBS_RSLTS_RATE  
			                  , ''                               AS WBS_RSLTSS_DT
			                  , ''                               AS WBS_RSLTSE_DT   
			                  , ''                               AS RSLTS_FILE_TRGT_KEY  
			                  , ''                               AS ISSUE_PLAN_TRGT_KEY  
			                  , ''                               AS ISSUE_RSLT_TRGT_KEY
			              FROM TB_WB22M01 P--WBS계획
			                   INNER      JOIN SUBJ AS SB ON P.CO_CD = SB.CO_CD AND P.SALES_CD = SB.SALES_CD 
			                   LEFT OUTER JOIN SJD  AS SJ ON P.CO_CD = SJ.CO_CD AND P.SALES_CD = SJ.SALES_CD
			              WHERE P.CO_CD = #{coCd}
			              --AND P.WBS_PLAN_CODE_KIND = 'WBSCODE' 
			              AND P.CLOSE_YN = 'Y'
			            UNION ALL
			            SELECT DISTINCT 
			                    SJ.ORDRS_NO                      AS UPPER_CD
			                  , P.WBS_PLAN_CODE_KIND||P.SALES_CD AS LOWER_CD
			                  , P.CO_CD                          AS CO_CD   
			                  , SJ.CLNT_CD                       AS CLNT_CD 
			                  , SJ.CLNT_NM                       AS CLNT_NM 
			                  , SJ.ORDRS_NO                      AS ORDRS_NO
			                  , P.SALES_CD                       AS SALES_CD
			                  , ''                               AS WBS_PLAN_CODE_KIND
			                  , ''                               AS WBS_PLAN_CODE_ID  
			                  , ''                               AS WBS_PLAN_CODE_NM  
			                  , ''                               AS WBS_PLAN_MNG_ID     
			                  , MIN(P.WBS_PLANS_DT) OVER (PARTITION BY P.CO_CD, SJ.CLNT_CD, SJ.ORDRS_NO, P.SALES_CD) AS WBS_PLANS_DT      
			                  , MAX(P.WBS_PLANE_DT) OVER (PARTITION BY P.CO_CD, SJ.CLNT_CD, SJ.ORDRS_NO, P.SALES_CD) AS WBS_PLANE_DT      
			                  , ''                               AS DAYCNT  
			                  , ''                               AS WBS_RSLTS_RATE   
			                  , ''                               AS WBS_RSLTSS_DT
			                  , ''                               AS WBS_RSLTSE_DT 
			                  , ''                               AS RSLTS_FILE_TRGT_KEY  
			                  , TO_CHAR(ISU.PLAN_CNT)            AS ISSUE_PLAN_TRGT_KEY  
			                  , TO_CHAR(ISU.RSLT_CNT)            AS ISSUE_RSLT_TRGT_KEY    
			              FROM TB_WB22M01 P--WBS계획
			                   INNER      JOIN SUBJ AS SB ON P.CO_CD = SB.CO_CD AND P.SALES_CD = SB.SALES_CD 
			                   LEFT OUTER JOIN SJD  AS SJ ON P.CO_CD = SJ.CO_CD AND P.SALES_CD = SJ.SALES_CD
			                   LEFT OUTER JOIN (SELECT CO_CD                    --회사코드
			                                          , SALES_CD                 --SALES Code 
			                                          , COUNT(ISSUE_PLAN_TRGT_KEY) AS PLAN_CNT --계획 이슈 COUNT
			                                          , COUNT(ISSUE_RSLT_TRGT_KEY) AS RSLT_CNT --실적 이슈 COUNT
			                                       FROM RSLT  --WBS이슈 정보
			                                      WHERE CO_CD = #{coCd}
			                                      GROUP BY CO_CD, SALES_CD
			                                   ) AS ISU ON P.CO_CD    = ISU.CO_CD 
			                                           AND P.SALES_CD = ISU.SALES_CD 
			              WHERE P.CO_CD = #{coCd}
			                AND P.WBS_PLAN_CODE_KIND = 'WBSCODE' 
			                AND P.CLOSE_YN = 'Y'
			            UNION ALL
			            SELECT P.WBS_PLAN_CODE_KIND||P.SALES_CD AS UPPER_CD
			                  , P.WBS_PLAN_CODE_ID||P.SALES_CD   AS LOWER_CD
			                  , P.CO_CD                          AS CO_CD   
			                  , SJ.CLNT_CD                       AS CLNT_CD 
			                  , SJ.CLNT_NM                       AS CLNT_NM 
			                  , SJ.ORDRS_NO                      AS ORDRS_NO
			                  , P.SALES_CD                       AS SALES_CD
			                  , P.WBS_PLAN_CODE_KIND             AS WBS_PLAN_CODE_KIND
			                  , P.WBS_PLAN_CODE_ID               AS WBS_PLAN_CODE_ID  
			                  , P.WBS_PLAN_CODE_NM               AS WBS_PLAN_CODE_NM  
			                  , P.WBS_PLAN_MNG_ID                AS WBS_PLAN_MNG_ID   
			                  , P.WBS_PLANS_DT                   AS WBS_PLANS_DT      
			                  , P.WBS_PLANE_DT                   AS WBS_PLANE_DT      
			                  , P.DAYCNT                         AS DAYCNT 
			                  , R.WBS_RSLTS_RATE                 AS WBS_RSLTS_RATE --WBS실적 진행율
			                  , R.WBS_RSLTSS_DT                  AS WBS_RSLTSS_DT
			                  , R.WBS_RSLTSE_DT                  AS WBS_RSLTSE_DT
			                  , R.RSLTS_FILE_TRGT_KEY            AS RSLTS_FILE_TRGT_KEY
			                  , R.ISSUE_PLAN_TRGT_KEY            AS ISSUE_PLAN_TRGT_KEY
			                  , R.ISSUE_RSLT_TRGT_KEY            AS ISSUE_RSLT_TRGT_KEY
			               FROM TB_WB22M01 AS P --WBS계획
			                    INNER      JOIN SUBJ AS SB ON P.CO_CD = SB.CO_CD AND P.SALES_CD = SB.SALES_CD 
			                    LEFT OUTER JOIN SJD  AS SJ ON P.CO_CD = SJ.CO_CD AND P.SALES_CD = SJ.SALES_CD
			                    LEFT OUTER JOIN RSLT AS R  ON P.CO_CD              = R.CO_CD 
			                                              AND P.SALES_CD           = R.SALES_CD 
			                                              AND P.WBS_PLAN_CODE_KIND = R.WBS_PLAN_CODE_KIND 
			                                              AND P.WBS_PLAN_CODE_ID   = R.WBS_PLAN_CODE_ID
			              WHERE P.CO_CD = #{coCd}
			              --AND P.CLOSE_YN = 'Y'
			              ) A
			       WHERE 1=1
			       START WITH UPPER_CD = 'TOP' 
			       CONNECT BY PRIOR LOWER_CD = UPPER_CD
			       ORDER BY PATH
			     ) 
			SELECT T.*
			  FROM (
			        SELECT X.UPPER_CD            --상위코드
			             , X.LOWER_CD             --하위코드
			             , X.CO_CD                --회사코드
			             , X.CLNT_CD              --고객코드
			             , X.CLNT_NM              --고객명
			             , X.ORDRS_NO             --수주번호
			             , X.SALES_CD             --SALES Code 
			             , X.WBS_PLAN_CODE_KIND   --WBS계획 LVL1
			             , X.WBS_PLAN_CODE_ID     --WBS계획 LVL2
			             , X.WBS_PLAN_CODE_NAME   --WBS계획 LVL2명칭
			             , X.WBS_PLAN_MNG_ID      --WBS계획 LVL1 담당자
			             , (SELECT FN_CM06M01_ID_TO_NM(X.WBS_PLAN_MNG_ID) FROM DUAL) AS WBS_PLAN_MNG_NM  
			             , X.WBS_PLANS_DT         --WBS계획 시작일
			             , X.WBS_PLANE_DT         --WBS계획 종료일
			             , TO_CHAR(X.WBS_PLANS_DT, 'YYYY-MM-DD') AS WBS_PLANS_DT_S
                         , TO_CHAR(X.WBS_PLANE_DT, 'YYYY-MM-DD') AS WBS_PLANE_DT_S                             
			             , (SELECT F_DAY_CNT(TO_CHAR(X.WBS_PLANS_DT,'YYYY-MM-DD'), TO_CHAR(X.WBS_PLANE_DT,'YYYY-MM-DD')) FROM DUAL) AS CHART_DAYCNT
			             , NVL(X.DAY_COUNT,0) AS DAYCNT            --WBS계획 소요일
			             , NVL(X.WBS_AVG_RATE,0) AS WBS_RSLTS_RATE                 --진도율
			             , X.LVL                  --LEVEL 
			             , X.WBS_RSLTSS_DT        --WBS실적 시작일
			             , X.WBS_RSLTSE_DT        --WBS실적 종료일
			             , NVL(X.RSLTS_FILE_TRGT_KEY,'0') AS RSLTS_FILE_TRGT_KEY  --실적 FILE_TRGT_KEY
                         , NVL(X.ISSUE_PLAN_KEY,'0') AS ISSUE_PLAN_KEY      --이슈계획 FILE_TRGT_KEY
                         , NVL(X.ISSUE_RSLT_KEY,'0') AS ISSUE_RSLT_KEY      --이슈실적 FILE_TRGT_KEY
			             , X.PATH
			          FROM PLAN X
			         WHERE 1=1
			       ) T
			  WHERE 1=1
                
           </select>
    
 
              
             
             
             
 </mapper>