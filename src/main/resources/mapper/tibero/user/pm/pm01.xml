<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.pm.pm01.mapper.PM01Mapper">

    <select id="selectDailyWorkCount" parameterType="Map" resultType="int">
        SELECT
        		COUNT(*)
	        FROM TB_PM01M01 T
			        		LEFT OUTER JOIN TB_CR02D02 CR ON T.CO_CD    = CR.CO_CD
			        								     AND T.SALES_CD = CR.SALES_CD
			        		LEFT OUTER JOIN TB_CR02M01 Y  ON CR.CO_CD    = Y.CO_CD
                                                         AND CR.ORDRS_NO = Y.ORDRS_NO
                            LEFT OUTER JOIN TB_BM02M01 A  ON Y.ORDRS_CLNT_CD = A.CLNT_CD    
        WHERE 1=1
        <if test="coCd !=null and !coCd.equals('')">
            AND T.CO_CD = #{coCd}
        </if>
        <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')">
            AND T.WORK_RPT_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYYMMDD') AND TO_DATE( #{reqDtTo},'YYYYMMDD')
        </if>
        <if test="workRptId !=null and !workRptId.equals('')">
            AND T.WORK_RPT_ID = #{workRptId}
        </if>
        <if test="salesCd != null and !salesCd.equals('')">
            AND T.SALES_CD = #{salesCd}
        </if>
        <if test="prdtCd != null and !prdtCd.equals('')">
            AND A.PRDT_CD = #{prdtCd}
        </if>
        <if test="itemDiv != null and !itemDiv.equals('')">
            AND A.ITEM_DIV = #{itemDiv}
        </if>
        <if test="workRptL != null and !workRptL.equals('')">
            AND T.WORK_RPT_L = #{workRptL}
        </if>
        <if test="workRptM != null and !workRptM.equals('')">
            AND T.WORK_RPT_M = #{workRptM}
        </if>
        <if test="workRptS !=null and !workRptS.equals('')">
            AND T.WORK_RPT_S = #{workRptS}
        </if>

    </select>

    <select id="selectDailyWorkList" parameterType="Map" resultType="CamelMap">
        SELECT
        		*
        FROM(
	        SELECT
		        ROWNUM AS RNUM, A.*
	        FROM
        			(
				        SELECT T.FILE_TRGT_KEY
				        , T.CO_CD
				        , FN_CM05M01_CD_TO_NM(T.CO_CD) CO_NM
				        , T.WORK_RPT_NO
				        , T.WORK_RPT_ID
				        , FN_CM06M01_ID_TO_NM(T.CREAT_ID) AS WORK_RPT_ID_NM
				        , TO_CHAR(T.WORK_RPT_DT,'YYYY-MM-DD') AS WORK_RPT_DT
				        , T.WORK_RPT_L
				        , T.WORK_RPT_M
				        , T.WORK_RPT_S
				        , FN_CM05M01_CD_TO_NM(T.WORK_RPT_L) WORK_RPT_L_NM
				        , FN_CM05M01_CD_TO_NM(T.WORK_RPT_M) WORK_RPT_M_NM
				        , FN_CM05M01_CD_TO_NM(T.WORK_RPT_S) WORK_RPT_S_NM
				        , T.WORK_RPT_HOUR
				        , T.SALES_CD
				        , PRDT_CD
				        , FN_BM01M01_ID_TO_NM(CR.PRDT_CD) AS PRDT_CD_NM
				        , ITEM_DIV
				        , FN_CM05M01_CD_TO_NM(CR.ITEM_DIV) AS ITEM_DIV_NM
				        , T.WORK_RPT_RMK
				        , T.WORK_RPT_RMK
				        , T.ETC_FIELD1
				        , T.ETC_FIELD2
				        , T.ETC_FIELD3
				        , T.CREAT_ID
				        , FN_CM06M01_ID_TO_NM(T.CREAT_ID) AS CREAT_NM
				        , TO_CHAR(T.CREAT_DTTM,'YYYY-MM-DD HH24:MM:SS') AS CREAT_DTTM
				        , T.UDT_ID
				        , FN_CM06M01_ID_TO_NM(T.UDT_ID)  AS UDT_NM
				        , TO_CHAR(T.UDT_DTTM,'YYYY-MM-DD HH24:MM:SS') AS UDT_DTTM
		        FROM TB_PM01M01 T
					        		LEFT OUTER JOIN TB_CR02D02 CR ON T.CO_CD    = CR.CO_CD
					        								     AND T.SALES_CD = CR.SALES_CD
					        		LEFT OUTER JOIN TB_CR02M01 Y  ON CR.CO_CD    = Y.CO_CD
                                                            	 AND CR.ORDRS_NO = Y.ORDRS_NO
                                    LEFT OUTER JOIN TB_BM02M01 A  ON Y.ORDRS_CLNT_CD = A.CLNT_CD    
		        WHERE 1=1
		        <if test="coCd !=null and !coCd.equals('')">
		            AND T.CO_CD = #{coCd}
		        </if>
		        <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')">
		            AND T.WORK_RPT_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYYMMDD') AND TO_DATE( #{reqDtTo},'YYYYMMDD')
		        </if>
		        <if test="workRptId !=null and !workRptId.equals('')">
		            AND T.WORK_RPT_ID = #{workRptId}
		        </if>
		        <if test="salesCd != null and !salesCd.equals('')">
		            AND T.SALES_CD = #{salesCd}
		        </if>
		        <if test="prdtCd != null and !prdtCd.equals('')">
		            AND A.PRDT_CD = #{prdtCd}
		        </if>
		        <if test="itemDiv != null and !itemDiv.equals('')">
		            AND A.ITEM_DIV = #{itemDiv}
		        </if>
		        <if test="workRptL != null and !workRptL.equals('')">
		            AND T.WORK_RPT_L = #{workRptL}
		        </if>
		        <if test="workRptM != null and !workRptM.equals('')">
		            AND T.WORK_RPT_M = #{workRptM}
		        </if>
		        <if test="workRptS !=null and !workRptS.equals('')">
		            AND T.WORK_RPT_S = #{workRptS}
		        </if>
		        <if test="sortType !=null and sortType.equals('DATE')">		
		        ORDER BY T.CO_CD, T.WORK_RPT_ID, T.WORK_RPT_DT, T.WORK_RPT_L, T.WORK_RPT_M, T.WORK_RPT_S, T.WORK_RPT_NO DESC, T.FILE_TRGT_KEY DESC
		        </if>
		        <if test="sortType !=null and sortType.equals('CODE')">		
		        ORDER BY T.CO_CD, T.WORK_RPT_L, T.WORK_RPT_M, T.WORK_RPT_S, T.WORK_RPT_NO DESC, T.FILE_TRGT_KEY DESC
		        </if>
	        ) AS a
        ) A
        WHERE RNUM BETWEEN #{firstIndex} AND #{lastIndex}

    </select>


    <select id="selectDailyWorkInfo" resultType="CamelMap">
        SELECT T.FILE_TRGT_KEY,
               T.CO_CD,
               T.WORK_RPT_NO,
               T.WORK_RPT_ID,
               (SELECT NAME FROM TB_CM06M01 WHERE ID = T.CREAT_ID) AS WORK_RPT_ID_NM,
               TO_CHAR(T.WORK_RPT_DT, 'YYYY-MM-DD')                AS WORK_RPT_DT,
               T.WORK_RPT_L,
               T.WORK_RPT_M,
               T.WORK_RPT_S,
               T.WORK_RPT_HOUR,
               T.SALES_CD,
               T.WORK_RPT_RMK,
               T.ETC_FIELD1,
               T.ETC_FIELD2,
               T.ETC_FIELD3,
               T.WORK_RPT_RMK,
               T.ETC_FIELD1,
               T.ETC_FIELD2,
               T.ETC_FIELD3,
               T.CREAT_ID,
               A.ORDRS_CLNT_CD,
               T3.CLNT_NM,
               A.CLNT_PJT,
               FN_CM05M01_CD_TO_NM(A.CLNT_PJT) CLNT_PJT_NM,
               T2.PRDT_CD,
               (SELECT X.PRDT_NM FROM TB_BM01M01 X WHERE X.PRDT_CD = T2.PRDT_CD) AS PRDT_CD_NM,
               T2.ITEM_DIV,
               FN_CM05M01_CD_TO_NM(T2.ITEM_DIV)    AS ITEM_DIV_NM,
               T2.EQP_NM
        FROM TB_PM01M01 T
             LEFT OUTER JOIN TB_CR02D02 AS T2   ON T.CO_CD    = T2.CO_CD 
                                               AND T.SALES_CD = T2.SALES_CD
             LEFT OUTER JOIN TB_CR02M01 AS A    ON A.CO_CD    = T2.CO_CD 
                                               AND A.ORDRS_NO = T2.ORDRS_NO
             LEFT OUTER JOIN TB_BM02M01 AS T3   ON T3.CLNT_CD = A.ORDRS_CLNT_CD
        WHERE T.FILE_TRGT_KEY = #{fileTrgtKey}
    </select>

    <select id="selectConfirmCount" parameterType="Map" resultType="int">
        SELECT COUNT(FILE_TRGT_KEY) CNT
        FROM TB_PM01M01
        WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </select>

    <update id="updateDailyWork" parameterType="Map">
        UPDATE TB_PM01M01
        SET CO_CD         = #{coCd},
            WORK_RPT_NO   = #{workRptNo},
            WORK_RPT_ID   = #{workRptId},
            WORK_RPT_DT   = #{workRptDt},
            WORK_RPT_L    = #{workRptL},
            WORK_RPT_M    = #{workRptM},
            WORK_RPT_S    = #{workRptS},
            WORK_RPT_HOUR = #{workRptHour},
            SALES_CD      = #{salesCd},
            WORK_RPT_RMK  = #{workRptRmk},
            ETC_FIELD1    = #{etcField1, jdbcType=VARCHAR},
            ETC_FIELD2    = #{etcField2, jdbcType=VARCHAR},
            ETC_FIELD3    = #{etcField3, jdbcType=VARCHAR},
            UDT_ID        = #{userId},
            UDT_PGM       = #{pgmId},
            UDT_DTTM      = SYSDATE
        WHERE FILE_TRGT_KEY = #{fileTrgtKey}

    </update>

    <select id="selectDailyWorkSeqNext" parameterType="Map" resultType="int">
        SELECT TO_CHAR(SYSDATE, 'YYYYMM') || LPAD(TB_PM01M01_SQ01.NEXTVAL, 3, 0)
        FROM DUAL
    </select>

    <insert id="insertDailyWork" parameterType="Map">
        <selectKey keyProperty="workRptNo" resultType="String" order="BEFORE">
            SELECT 'DM' || TO_CHAR(SYSDATE, 'YYYYMMDD')||'-'||LPAD(TB_PM01M01_SQ02.NEXTVAL,4,0) FROM DUAL
        </selectKey>
        INSERT INTO TB_PM01M01
        (
        FILE_TRGT_KEY,
        CO_CD,
        WORK_RPT_NO,
        WORK_RPT_ID,
        WORK_RPT_DT,
        WORK_RPT_L,
        WORK_RPT_M,
        WORK_RPT_S,
        WORK_RPT_HOUR,
        SALES_CD,
        WORK_RPT_RMK,
        ETC_FIELD1,
        ETC_FIELD2,
        ETC_FIELD3,
        CREAT_ID,
        CREAT_PGM,
        CREAT_DTTM
        )
        VALUES
        (
        #{fileTrgtKey},
        #{coCd},
        #{workRptNo},
        #{workRptId},
        #{workRptDt},
        #{workRptL},
        #{workRptM},
        #{workRptS},
        #{workRptHour},
        #{salesCd},
        #{workRptRmk},
        #{etcField1, jdbcType=VARCHAR},
        #{etcField2, jdbcType=VARCHAR},
        #{etcField3, jdbcType=VARCHAR},
        #{userId},
        #{pgmId},
        SYSDATE
        )
    </insert>

    <delete id="deleteDailyWork" parameterType="Map">
        DELETE
        TB_PM01M01 WHERE FILE_TRGT_KEY =
        #{fileTrgtKey}
    </delete>

    <select id="selectMonthlyWorkList" parameterType="Map" resultType="CamelMap">
				SELECT  CO_CD, 
						DEPT_ID,
						MAX(DEPT_NM) DEPT_NM,
						LEVEL_CD, 
						(SELECT LEVEL_NM FROM TB_CM07M01 i WHERE T.LEVEL_CD = i.LEVEL_CD) LEVEL_NM,
						ID, 
						NAME,
					    SUM(CASE WHEN DD = '01' THEN WORK_TIME ELSE '' END) AS "1",
					    SUM(CASE WHEN DD = '02' THEN WORK_TIME ELSE '' END) AS "2",
					    SUM(CASE WHEN DD = '03' THEN WORK_TIME ELSE '' END) AS "3",
					    SUM(CASE WHEN DD = '04' THEN WORK_TIME ELSE '' END) AS "4",
					    SUM(CASE WHEN DD = '05' THEN WORK_TIME ELSE '' END) AS "5",
					    SUM(CASE WHEN DD = '06' THEN WORK_TIME ELSE '' END) AS "6",
					    SUM(CASE WHEN DD = '07' THEN WORK_TIME ELSE '' END) AS "7",
					    SUM(CASE WHEN DD = '08' THEN WORK_TIME ELSE '' END) AS "8",
					    SUM(CASE WHEN DD = '09' THEN WORK_TIME ELSE '' END) AS "9",
					    SUM(CASE WHEN DD = '10' THEN WORK_TIME ELSE '' END) AS "10",
					    SUM(CASE WHEN DD = '11' THEN WORK_TIME ELSE '' END) AS "11",
					    SUM(CASE WHEN DD = '12' THEN WORK_TIME ELSE '' END) AS "12",
					    SUM(CASE WHEN DD = '14' THEN WORK_TIME ELSE '' END) AS "14",
					    SUM(CASE WHEN DD = '13' THEN WORK_TIME ELSE '' END) AS "13",
					    SUM(CASE WHEN DD = '15' THEN WORK_TIME ELSE '' END) AS "15",
					    SUM(CASE WHEN DD = '16' THEN WORK_TIME ELSE '' END) AS "16",
					    SUM(CASE WHEN DD = '17' THEN WORK_TIME ELSE '' END) AS "17",
					    SUM(CASE WHEN DD = '18' THEN WORK_TIME ELSE '' END) AS "18",
					    SUM(CASE WHEN DD = '19' THEN WORK_TIME ELSE '' END) AS "19",
					    SUM(CASE WHEN DD = '20' THEN WORK_TIME ELSE '' END) AS "20",
					    SUM(CASE WHEN DD = '21' THEN WORK_TIME ELSE '' END) AS "21",
					    SUM(CASE WHEN DD = '22' THEN WORK_TIME ELSE '' END) AS "22",
					    SUM(CASE WHEN DD = '23' THEN WORK_TIME ELSE '' END) AS "23",
					    SUM(CASE WHEN DD = '24' THEN WORK_TIME ELSE '' END) AS "24",
					    SUM(CASE WHEN DD = '25' THEN WORK_TIME ELSE '' END) AS "25",
					    SUM(CASE WHEN DD = '26' THEN WORK_TIME ELSE '' END) AS "26",
					    SUM(CASE WHEN DD = '27' THEN WORK_TIME ELSE '' END) AS "27",
					    SUM(CASE WHEN DD = '28' THEN WORK_TIME ELSE '' END) AS "28",
					    SUM(CASE WHEN DD = '29' THEN WORK_TIME ELSE '' END) AS "29",
					    SUM(CASE WHEN DD = '30' THEN WORK_TIME ELSE '' END) AS "30",
					    SUM(CASE WHEN DD = '31' THEN WORK_TIME ELSE '' END) AS "31",
					    SUM(HOLY_TIME) AS HOLY_TIME,
					    nvl(SUM(WORK_TIME),0) AS tot
				FROM (
						SELECT A.CO_CD, A.DEPT_ID, A.LEVEL_CD, A.ID, A.NAME, DD, WORK_TIME, HOLY_TIME, C.DEPT_NM, CODE
						  FROM TB_CM06M01 A 
						        LEFT OUTER JOIN (
										SELECT 	CO_CD, 
												WORK_RPT_ID, 
												WORK_RPT_DT, 
												SUBSTRING(WORK_RPT_DT,9,2) AS DD,
												CASE WHEN SUBSTRING(WORK_RPT_S, LENGTH(WORK_RPT_S) - 3, 4) = '9901' THEN 0 ELSE  WORK_RPT_HOUR END AS WORK_TIME,  --휴가인경우에는 근무시간을 빼야하는데???
												CASE WHEN SUBSTRING(WORK_RPT_S, LENGTH(WORK_RPT_S) - 3, 4) = '9901' THEN WORK_RPT_HOUR ELSE  0 END AS HOLY_TIME,  --휴가인경우에는 근무시간을 빼야하는데???
												WORK_RPT_S,  -- 근무코드
												SUBSTRING(WORK_RPT_S, LENGTH(WORK_RPT_S) - 3, 4) AS CODE --근무코드 뒤에4자리 9901은 휴가 임
											FROM TB_PM01M01 P 
		        <if test="coCd !=null and !coCd.equals('')">
										   WHERE P.CO_CD = #{coCd}
		        </if>
										     AND P.WORK_RPT_DT BETWEEN  #{workYm} || '-01' AND LAST_DAY(TO_DATE(#{workYm} || '-01', 'YYYY-MM-DD'))
								        ) B ON A.CO_CD = B.CO_CD 
								           AND A.ID    = B.WORK_RPT_ID
								LEFT OUTER JOIN TB_CM04M01 C ON A.DEPT_ID = C.DEPT_ID
		        			WHERE 1=1
		        <if test="coCd !=null and !coCd.equals('')">
		        			  AND A.CO_CD = #{coCd}
		        </if>
		        <if test="deptId !=null and !deptId.equals('')">
						      AND A.DEPT_ID BETWEEN #{deptId} AND #{deptId} || 'ZZ' 
		        </if>
		        <if test="(deptId ==null or deptId.equals('')) and deptNm !=null and !deptNm.equals('')">
			    			  AND C.DEPT_NM LIKE '%'||#{deptNm}||'%'
		        </if>
				   	) T 
				   	GROUP BY CO_CD, DEPT_ID, LEVEL_CD, ID, NAME
				   	ORDER BY LEVEL_CD DESC, ID, NAME
    </select>


</mapper>