<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.pm.pm10.mapper.PM10Mapper">

    <select id="selectMnList" parameterType="Map" resultType="CamelMap">
		SELECT ROWNUM AS RNUM
		     , A.*
		FROM   (
				SELECT
					    T.MN_DATE,
					    MAX(T.MN_WEEKS)              AS MN_WEEKS,
					    MAX(T.MN_RMK)                AS MN_RMK,
					    D1.MN_SUB_SEQ,
					    D1.MN_SUBJECT,
					
					    -- GUN00: 임원실
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN00' THEN D3.MN_CNTS   END) AS GUN00_MN_CNTS,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN00' THEN D3.MN_ETC    END) AS GUN00_MN_ETC,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN00' THEN D3.MN_RESULT END) AS GUN00_MN_RESULT,
					
					    -- GUN30: 영업팀
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN30' THEN D3.MN_CNTS   END) AS GUN30_MN_CNTS,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN30' THEN D3.MN_ETC    END) AS GUN30_MN_ETC,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN30' THEN D3.MN_RESULT END) AS GUN30_MN_RESULT,
					
					    -- GUN40: 기술연구소
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN40' THEN D3.MN_CNTS   END) AS GUN40_MN_CNTS,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN40' THEN D3.MN_ETC    END) AS GUN40_MN_ETC,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN40' THEN D3.MN_RESULT END) AS GUN40_MN_RESULT,
					
					    -- GUN60: 생산팀
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN60' THEN D3.MN_CNTS   END) AS GUN60_MN_CNTS,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN60' THEN D3.MN_ETC    END) AS GUN60_MN_ETC,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN60' THEN D3.MN_RESULT END) AS GUN60_MN_RESULT,
					
					    -- TRN5010: 기계
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'TRN5010' THEN D3.MN_CNTS   END) AS TRN5010_MN_CNTS,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'TRN5010' THEN D3.MN_ETC    END) AS TRN5010_MN_ETC,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'TRN5010' THEN D3.MN_RESULT END) AS TRN5010_MN_RESULT,
					
					    -- TRN5020: 전기
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'TRN5020' THEN D3.MN_CNTS   END) AS TRN5020_MN_CNTS,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'TRN5020' THEN D3.MN_ETC    END) AS TRN5020_MN_ETC,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'TRN5020' THEN D3.MN_RESULT END) AS TRN5020_MN_RESULT,
					
					    -- GUN10: 경영지원팀
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN10' THEN D3.MN_CNTS   END) AS GUN10_MN_CNTS,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN10' THEN D3.MN_ETC    END) AS GUN10_MN_ETC,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN10' THEN D3.MN_RESULT END) AS GUN10_MN_RESULT,
					
					    -- GUN80: 전산실
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN80' THEN D3.MN_CNTS   END) AS GUN80_MN_CNTS,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN80' THEN D3.MN_ETC    END) AS GUN80_MN_ETC,
					    MAX(CASE WHEN D3.MN_DEPT_CD = 'GUN80' THEN D3.MN_RESULT END) AS GUN80_MN_RESULT
				FROM TB_PM10M01 T
							LEFT OUTER JOIN TB_PM10D01 D1 ON D1.MN_DATE = T.MN_DATE
							<!-- LEFT OUTER JOIN TB_PM10D02 D2 ON D2.MN_DATE = T.MN_DATE -->
							LEFT OUTER JOIN TB_PM10D03 D3 ON D3.MN_DATE = T.MN_DATE AND D3.MN_SUB_SEQ = D1.MN_SUB_SEQ
				WHERE 1 = 1
		        <if test="mnDate !=null and !mnDate.equals('')">
		        AND T.MN_DATE = #{mnDate}
		        </if>
		        <if test="mnDeptCd !=null and !mnDeptCd.equals('')">
		        AND D3.MN_DEPT_CD = #{mnDeptCd}
		        </if>
				GROUP BY T.MN_DATE, D1.MN_SUB_SEQ, D1.MN_SUBJECT
				ORDER BY T.MN_DATE, D1.MN_SUB_SEQ, D1.MN_SUBJECT
		       ) AS A
    </select>

	<insert id="pm10_main_insert" parameterType="Map">
		INSERT INTO TB_PM10M01
			(
				  MN_DATE
				, MN_WEEKS
				, MN_RMK
				, CREAT_ID
				, CREAT_DTTM
				, CREAT_PGM
			)
		VALUES
			(
				  #{mnDate}
				, #{mnWeeks}
				, #{mnRmk,  jdbcType=VARCHAR}
				, #{userId}
				, SYSDATE
				, #{pgmId}
			)
	</insert>

	<insert id="pm10_d01_insert" parameterType="Map">
		<selectKey keyProperty="mnSubSeq" resultType="int" order="BEFORE">
			SELECT NVL(MAX(MN_SUB_SEQ), 0) + 1
			FROM   TB_PM10D01
			WHERE  MN_DATE = #{mnDate}
		</selectKey>
		INSERT INTO TB_PM10D01
			(
				  MN_DATE
				, MN_SUB_SEQ
				, MN_SORT_NO
				, MN_SUBJECT
				, CLNT_PJT
				, CLNT_CD
				, ORDRS_NO
				, CREAT_ID
				, CREAT_DTTM
				, CREAT_PGM
			)
		VALUES
			(
				  #{mnDate}
				, #{mnSubSeq}
				, #{mnSubSeq}
				, #{mnSubject}
				, #{clntPjt, jdbcType=VARCHAR}
				, #{clntCd, jdbcType=VARCHAR}
				, #{ordrsNo, jdbcType=VARCHAR}
				, #{userId}
				, SYSDATE
				, #{pgmId}
			)
	</insert>

	<update id="pm10_d01_update" parameterType="Map">
		UPDATE TB_PM10D01
		SET
			  MN_SUBJECT		= #{mnSubject}
			, CLNT_PJT			= #{clntPjt, jdbcType=VARCHAR}
			, CLNT_CD			= #{clntCd, jdbcType=VARCHAR}
			, ORDRS_NO			= #{ordrsNo, jdbcType=VARCHAR}
			, UDT_ID			= #{userId}
			, UDT_DTTM			= SYSDATE
			, UDT_PGM			= #{pgmId}
		WHERE MN_DATE 		= #{mnDate}
		  AND MN_SUB_SEQ 	= #{mnSubSeq}
	</update>

	<insert id="pm10_d03_insert" parameterType="Map">
		INSERT INTO TB_PM10D03
			(
				  MN_DATE
				, MN_SUB_SEQ
				, MN_DEPT_CD
				, MN_CNTS
				, MN_ETC
				, MN_RESULT
				, MN_STATUS
				, CLNT_PJT
				, CLNT_CD
				, CREAT_ID
				, CREAT_DTTM
				, CREAT_PGM
			)
		VALUES
			(
				  #{mnDate}
				, #{mnSubSeq}
				, #{mnDeptCd}
				, #{mnCnts}
				, #{mnEtc, jdbcType=VARCHAR}
				, #{mnResult, jdbcType=VARCHAR}
				, #{mnStatus, jdbcType=VARCHAR}
				, #{clntPjt, jdbcType=VARCHAR}
				, #{clntCd, jdbcType=VARCHAR}
				, #{userId}
				, SYSDATE
				, #{pgmId}
			)
	</insert>

	<update id="pm10_d03_update" parameterType="Map">
		UPDATE TB_PM10D03
		SET
			  MN_CNTS			= #{mnCnts}
			, MN_ETC			= #{mnEtc, jdbcType=VARCHAR}
			, MN_RESULT			= #{mnResult, jdbcType=VARCHAR}
			, MN_STATUS			= #{mnStatus, jdbcType=VARCHAR}
			, CLNT_PJT			= #{clntPjt, jdbcType=VARCHAR}
			, CLNT_CD			= #{clntCd, jdbcType=VARCHAR}
			, UDT_ID			= #{userId}
			, UDT_DTTM			= SYSDATE
			, UDT_PGM			= #{pgmId}
		WHERE MN_DATE 		= #{mnDate}
		  AND MN_SUB_SEQ 	= #{mnSubSeq}
		  AND MN_DEPT_CD	= #{mnDeptCd}
	</update>

	<insert id="qwewq" parameterType="Map">
		MERGE INTO TB_CM05M01 A
			USING DUAL
			ON (A.CODE_ID = #{codeId})
		WHEN MATCHED THEN
			UPDATE SET
				CODE_NM = #{codeNm},
				CODE_KIND = #{codeKind},
				CODE_DESC = #{codeDesc},
				CODE_RPRC = #{codeRprc},
				CODE_ETC  = #{codeEtc},
				SORT_NO = #{sortNo},
				USE_YN = #{useYn},
				UDT_ID = #{userId},
				UDT_PGM = #{pgmId},
				UDT_DTTM = SYSDATE,
				DZ_CODE = #{dzCode, jdbcType=VARCHAR}
		WHEN NOT MATCHED THEN
		INSERT
		(
			CODE_ID,
			CODE_NM,
			CODE_KIND,
			CODE_DESC,
			CODE_RPRC,
			CODE_ETC,
			SORT_NO,
			USE_YN,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			DZ_CODE
		)
		VALUES(
			#{codeId},
			#{codeNm},
			#{codeKind},
			#{codeDesc},
			#{codeRprc},
			#{codeEtc},
			#{sortNo},
			#{useYn},
			#{userId},
			#{pgmId},
			SYSDATE,
			LTRIM(#{dzCode, jdbcType=VARCHAR})
		)
	</insert>

    
</mapper>