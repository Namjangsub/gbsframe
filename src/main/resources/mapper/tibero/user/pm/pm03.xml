<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.pm.pm03.mapper.PM03Mapper">

	<sql id="selectDeliverySql">
		SELECT    FN_CM05M01_CD_TO_NM(TX.CO_CD) CO_NM
		    	 ,TX.UPPER_CD
		    	 ,TX.LOWER_CD
		    	 ,TX.CO_CD
		    	 ,TX.TITLE
		    	 ,TX.ORDRS_CLNT_CD
		    	 ,TX.ORDRS_CLNT_NM
		    	 ,TX.CLNT_PJT
		    	 ,TX.ORDRS_NO
		    	 ,TX.ORDRS_DT
		    	 ,TX.ORDRS_DIV_NM
		    	 ,TX.CTRT_NM
		    	 ,CASE WHEN TX.ORDRS_NO IS NULL THEN '' ELSE (SELECT NVL(SUM(ORDRS_QTY),0) FROM TB_CR02D02 WHERE CO_CD = TX.CO_CD AND ORDRS_NO = TX.ORDRS_NO) END AS ORDRS_QTY
		    	 ,CASE WHEN TX.ORDRS_NO IS NULL THEN '' ELSE (SELECT NVL(SUM(OUT_QTY),0) FROM TB_PM03M01 T1 LEFT OUTER JOIN TB_PM03D01 T ON T1.CO_CD = T.CO_CD AND T1.OUT_NO = T.OUT_NO AND T1.CO_CD = TX.CO_CD AND T1.ORDRS_NO = TX.ORDRS_NO) END AS PRE_ORDRS_QTY
		    	 ,CASE WHEN TX.ORDRS_NO IS NULL THEN '' ELSE (SELECT NVL(SUM(ORDRS_QTY),0) FROM TB_CR02D02 WHERE CO_CD = TX.CO_CD AND ORDRS_NO = TX.ORDRS_NO)
		    	                                             - (SELECT NVL(SUM(OUT_QTY),0) FROM TB_PM03M01 T1 LEFT OUTER JOIN TB_PM03D01 T ON T1.CO_CD = T.CO_CD AND T1.OUT_NO = T.OUT_NO AND T1.CO_CD = TX.CO_CD AND T1.ORDRS_NO = TX.ORDRS_NO) END AS REST_ORDRS_QTY
		    	 ,T.FILE_TRGT_KEY
		    	 ,T.OUT_NO
		    	 ,T.IO_DIV
		    	 ,TO_CHAR(T.OUT_DT,'YYYY-MM-DD') AS OUT_DT
		    	 ,T.OUT_CLNT_CD
		    	 ,(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.OUT_CLNT_CD) AS OUT_CLNT_CD_NM
		    	 ,T.OUT_ID
		    	 ,FN_CM06M01_ID_TO_NM(T.OUT_ID) AS OUT_ID_NM
		    	 ,T.OUT_RMK
		    	 ,REGEXP_REPLACE(SYS_CONNECT_BY_PATH(TX.LOWER_CD, ' -> '), '^\s+\-\>\s+', '') AS PATH
		FROM (
		    /* top -> 회사 -> 고객사 */
		    SELECT DISTINCT
					'top' AS UPPER_CD
		            , TO_CHAR(A.ORDRS_CLNT_CD) LOWER_CD
		            , X.CO_CD
		            , '' AS ORDRS_NO
		    	 	, '' AS ORDRS_DT
		    	 	, '' AS ORDRS_DIV_NM
		    	 	, '' AS CTRT_NM
		            , B.CLNT_NM AS TITLE
		            , A.ORDRS_CLNT_CD
		            , B.CLNT_NM  AS ORDRS_CLNT_NM
		            , '' AS CLNT_PJT
		            , '' AS FILE_TRGT_KEY
			   FROM TB_CR02D02 X
			  INNER JOIN TB_CR02M01 A  ON X.CO_CD = A.CO_CD AND X.ORDRS_NO = A.ORDRS_NO
			   LEFT OUTER JOIN TB_BM02M01 B ON A.ORDRS_CLNT_CD = B.CLNT_CD
			  WHERE X.CO_CD = #{coCd}
			  <if test="clntNm != null and !clntNm.equals('')">
			    AND B.CLNT_NM LIKE '%'||#{clntNm}||'%'
			  </if>
			UNION ALL
			  /* top -> 고객사 -> 수주번호 */
			  SELECT DISTINCT
					 TO_CHAR(A.ORDRS_CLNT_CD) UPPER_CD
		            , X.ORDRS_NO LOWER_CD
		            , X.CO_CD
		            , X.ORDRS_NO
		    	 	, TO_CHAR(A.ORDRS_DT,'YYYY-MM-DD') AS ORDRS_DT
		    	 	, FN_CM05M01_CD_TO_NM(A.ORDRS_DIV) AS ORDRS_DIV_NM
		    	 	, A.CTRT_NM
		            , X.ORDRS_NO AS TITLE
		            , A.ORDRS_CLNT_CD
		            , B.CLNT_NM AS ORDRS_CLNT_NM
		            , A.CLNT_PJT
		            , '' AS FILE_TRGT_KEY
			   FROM TB_CR02D02 X
			  INNER JOIN TB_CR02M01 A  ON X.CO_CD = A.CO_CD AND X.ORDRS_NO = A.ORDRS_NO
			   LEFT OUTER JOIN TB_BM02M01 B ON A.ORDRS_CLNT_CD = B.CLNT_CD
			   LEFT OUTER JOIN TB_CR02M01 A ON X.CO_CD = A.CO_CD AND X.ORDRS_NO = A.ORDRS_NO
			  WHERE X.CO_CD = #{coCd}
			  <if test="clntNm != null and !clntNm.equals('')">
			   AND B.CLNT_NM LIKE '%'||#{clntNm}||'%'
			  </if>
			  <if test="clntPjt != null and !clntPjt.equals('')">
			   AND A.CLNT_PJT LIKE '%'||#{clntPjt}||'%'
			  </if>
			  <if test="ordrsDiv != null and !ordrsDiv.equals('')">
			   AND A.ORDRS_DIV = #{ordrsDiv}
			  </if>
			  <if test="ordrsNo != null and !ordrsNo.equals('')">
			   AND X.ORDRS_NO LIKE '%'||#{ordrsNo}||'%'
			  </if>
			  <if test="ctrtNm != null and !ctrtNm.equals('')">
			   AND A.CTRT_NM LIKE '%'||#{ctrtNm}||'%'
			  </if>
			 UNION ALL
			 /* top -> 고객사 -> 수주번호 -> 출고번호 */
			 SELECT   X.ORDRS_NO AS UPPER_CD
		            , X.ORDRS_NO||'-'||X.OUT_NO AS LOWER_CD
		            , X.CO_CD
		            , X.ORDRS_NO
		    	 	, TO_CHAR(A.ORDRS_DT,'YYYY-MM-DD') AS ORDRS_DT
		    	 	, FN_CM05M01_CD_TO_NM(A.ORDRS_DIV) AS ORDRS_DIV_NM
		    	 	, A.CTRT_NM
		            , X.OUT_NO AS TITLE
		            , A.ORDRS_CLNT_CD
		            , B.CLNT_NM AS ORDRS_CLNT_NM
		            , A.CLNT_PJT
		            , X.FILE_TRGT_KEY
				FROM TB_PM03M01 X
				LEFT OUTER JOIN TB_CR02M01 A ON X.CO_CD = A.CO_CD AND X.ORDRS_NO = A.ORDRS_NO
				LEFT OUTER JOIN TB_BM02M01 B ON A.ORDRS_CLNT_CD = B.CLNT_CD
			WHERE X.CO_CD = #{coCd}
				AND TO_CHAR(X.OUT_DT,'YYYY-MM-DD') <![CDATA[>=]]> #{ordrsDtFr}
				AND TO_CHAR(X.OUT_DT,'YYYY-MM-DD') <![CDATA[<=]]> #{ordrsDtTo}
				AND NVL(FN_CM06M01_ID_TO_NM(X.OUT_ID), '.') LIKE '%'||#{outIdNm}||'%'
				<if test="clntNm != null and !clntNm.equals('')">
				AND B.CLNT_NM LIKE '%'||#{clntNm}||'%'
				</if>
				<if test="clntPjt != null and !clntPjt.equals('')">
				AND A.CLNT_PJT LIKE '%'||#{clntPjt}||'%'
				</if>
				<if test="ordrsDiv != null and !ordrsDiv.equals('')">
				AND A.ORDRS_DIV = #{ordrsDiv}
				</if>
				<if test="ordrsNo != null and !ordrsNo.equals('')">
				AND X.ORDRS_NO LIKE '%'||#{ordrsNo}||'%'
				</if>
				<if test="ctrtNm != null and !ctrtNm.equals('')">
				AND A.CTRT_NM LIKE '%'||#{ctrtNm}||'%'
				</if>
		 ) TX
		 LEFT OUTER JOIN TB_PM03M01 T ON TX.FILE_TRGT_KEY = T.FILE_TRGT_KEY
		 START WITH UPPER_CD = 'top' CONNECT BY PRIOR LOWER_CD = UPPER_CD
		 ORDER BY PATH
	</sql>

	<select id="selectDeliveryPageCount" parameterType="Map" resultType="int">
        SELECT
        COUNT(*)
        FROM (
        	<include refid="selectDeliverySql"></include>
        )
	</select>

	<select id="selectDeliveryPageList" parameterType="Map" resultType="CamelMap">
        SELECT
        *
        FROM(
        SELECT
        ROWNUM AS RNUM, A.*
        FROM
        (
        <include refid="selectDeliverySql"></include>
        ) AS a
        ) A
        WHERE RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>

	<select id="selectDeliveryList" parameterType="Map" resultType="CamelMap">
        <include refid="selectDeliverySql"></include>
	</select>

	<select id="selectSelesCdList" parameterType="Map" resultType="camelMap">
		SELECT X.CO_CD
            , X.ORDRS_NO
            , X.ORDRS_SEQ
            , X.SALES_CD
            , Y.ORDRS_CLNT_CD -- 고객사
            , A.CLNT_NM  AS ORDRS_CLNT_NM
            , Y.CLNT_PJT -- 고객사 PJT
            , FN_CM05M01_CD_TO_NM(X.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM -- 신작구분
            , FN_CM05M01_CD_TO_NM(X.ORDRS_DTL_DIV30) AS ORDRS_DTL_DIV30_NM -- 자체구분
            , X.PRDT_CD -- 제품구분
            , P.PRDT_NM  PRDT_CD_NM
            , X.ITEM_DIV -- 아이템구분
            , FN_CM05M01_CD_TO_NM(X.ITEM_DIV) ITEM_DIV_NM
            , TO_CHAR(X.DUDT_INTEND_DT,'YYYY-MM-DD') AS DUDT_INTEND_DT --납기예정일
            , X.EQP_NM -- 설비명
            , X.ORDRS_QTY
            , T.OUT_NO
            , T.OUT_SEQ
            , T.OUT_QTY
            , T.OUT_DTL_RMK
            , (SELECT SUM(OUT_QTY) FROM TB_PM03D01 WHERE CO_CD = X.CO_CD AND SALES_CD = X.SALES_CD) AS PRE_OUT_QTY --기출고수량
            ,  X.ORDRS_QTY - (SELECT SUM(OUT_QTY) FROM TB_PM03D01 WHERE CO_CD = X.CO_CD AND SALES_CD = X.SALES_CD) AS REST_OUT_QTY --미출고수량
            , T.OUT_QTY AS OLD_OUT_QTY
            , (SELECT SUM(OUT_QTY) FROM TB_PM03D01 WHERE CO_CD = X.CO_CD AND SALES_CD = X.SALES_CD) AS OLD_PRE_OUT_QTY
            ,  X.ORDRS_QTY - (SELECT SUM(OUT_QTY) FROM TB_PM03D01 WHERE CO_CD = X.CO_CD AND SALES_CD = X.SALES_CD) AS OLD_REST_OUT_QTY
		FROM TB_CR02D02 X
		INNER JOIN TB_CR02M01 Y  ON X.CO_CD = Y.CO_CD AND X.ORDRS_NO = Y.ORDRS_NO
		LEFT OUTER JOIN TB_BM01M01 P ON X.PRDT_CD = P.PRDT_CD  --제품마스터
		LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD --거래처마스터
		LEFT OUTER JOIN TB_PM03M01 T1 ON X.CO_CD = T1.CO_CD AND X.ORDRS_NO = T1.ORDRS_NO AND T1.FILE_TRGT_KEY = #{fileTrgtKey}
		LEFT OUTER JOIN TB_PM03D01 T ON T1.CO_CD = T.CO_CD AND T1.OUT_NO = T.OUT_NO AND X.SALES_CD = T.SALES_CD
		WHERE X.CO_CD = #{coCd}
		AND X.ORDRS_NO = #{ordrsNo}
		AND X.SALES_CD IS NOT NULL
		ORDER BY X.ORDRS_SEQ
	</select>

	<select id="selectDeliveryMastInfo" resultType="camelMap">
		SELECT FILE_TRGT_KEY
		, CO_CD
		, OUT_NO
		, IO_DIV
		, ORDRS_NO
		, TO_CHAR(T.OUT_DT, 'YYYY-MM-DD') AS OUT_DT
		, OUT_CLNT_CD
		, OUT_ID
		, OUT_RMK
        , T.ETC_FIELD1
        , T.ETC_FIELD2
        , T.ETC_FIELD3
        , T.CREAT_ID
        , TO_CHAR(T.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM
        , T.UDT_ID
        , TO_CHAR(T.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM
		FROM TB_PM03M01 T
	  WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</select>

	<select id="selectOutNoNext" parameterType="Map" resultType="String">
		SELECT 'OUT'||TO_CHAR(SYSDATE,'YY')||'-'||TRIM(TO_CHAR(NVL(MAX(TO_NUMBER(NVL(FILE_TRGT_KEY,'0'))),0) + 1,'0000')) FROM TB_PM03M01
	</select>

    <insert id="insertDeliveryMast" parameterType="Map">
        <selectKey keyProperty="fileTrgtKey" resultType="int" order="BEFORE">
			SELECT NVL(MAX(TO_NUMBER(NVL(FILE_TRGT_KEY,'0'))),0) + 1 FROM TB_PM03M01
        </selectKey>
        INSERT INTO TB_PM03M01
        ( FILE_TRGT_KEY
		, CO_CD
		, OUT_NO
		, IO_DIV
		, ORDRS_NO
		, OUT_DT
		, OUT_CLNT_CD
		, OUT_ID
		, OUT_RMK
        , ETC_FIELD1
        , ETC_FIELD2
        , ETC_FIELD3
        , CREAT_ID
        , CREAT_PGM
        , CREAT_DTTM
        )
        VALUES
        ( #{fileTrgtKey, jdbcType=VARCHAR}
		, #{coCd, jdbcType=VARCHAR}
		, #{outNo, jdbcType=VARCHAR}
		, #{ioDiv, jdbcType=VARCHAR}
		, #{ordrsNo, jdbcType=VARCHAR}
		, #{outDt, jdbcType=VARCHAR}
		, #{outClntCd, jdbcType=VARCHAR}
		, #{outId, jdbcType=VARCHAR}
		, #{outRmk, jdbcType=VARCHAR}
        , #{etcField1, jdbcType=VARCHAR}
        , #{etcField2, jdbcType=VARCHAR}
        , #{etcField3, jdbcType=VARCHAR}
        , #{userId, jdbcType=VARCHAR}
        , #{pgmId, jdbcType=VARCHAR}
        , SYSDATE
        )
    </insert>

    <update id="updateDeliveryMast" parameterType="Map">
        UPDATE TB_PM03M01
        SET   CO_CD			= #{coCd, jdbcType=VARCHAR}
			, OUT_NO		= #{outNo, jdbcType=VARCHAR}
			, IO_DIV		= #{ioDiv, jdbcType=VARCHAR}
			, ORDRS_NO		= #{ordrsNo, jdbcType=VARCHAR}
			, OUT_DT		= #{outDt, jdbcType=VARCHAR}
			, OUT_CLNT_CD	= #{outClntCd, jdbcType=VARCHAR}
			, OUT_ID		= #{outId, jdbcType=VARCHAR}
			, OUT_RMK		= #{outRmk, jdbcType=VARCHAR}
            , ETC_FIELD1    = #{etcField1, jdbcType=VARCHAR}
            , ETC_FIELD2    = #{etcField2, jdbcType=VARCHAR}
            , ETC_FIELD3    = #{etcField3, jdbcType=VARCHAR}
            , UDT_ID        = #{userId, jdbcType=VARCHAR}
            , UDT_PGM       = #{pgmId, jdbcType=VARCHAR}
            , UDT_DTTM      = SYSDATE
        WHERE FILE_TRGT_KEY = #{fileTrgtKey, jdbcType=VARCHAR}
    </update>

	<delete id="deleteDeliveryMast" parameterType="Map">
	  DELETE TB_PM03M01
	   WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>

    <insert id="insertLgistSalesCd" parameterType="Map">
        <selectKey keyProperty="outSeq" resultType="int" order="BEFORE">
			SELECT NVL(MAX(OUT_SEQ), 0) + 1 FROM TB_PM03D01
			  WHERE CO_CD = #{coCd, jdbcType=VARCHAR}
			    AND OUT_NO = #{outNo, jdbcType=VARCHAR}
        </selectKey>
        INSERT INTO TB_PM03D01
        ( CO_CD
		, OUT_NO
		, OUT_SEQ
		, SALES_CD
		, OUT_QTY
		, OUT_DTL_RMK
        , ETC_FIELD1
        , ETC_FIELD2
        , ETC_FIELD3
        , CREAT_ID
        , CREAT_PGM
        , CREAT_DTTM
        )
        VALUES
        ( #{coCd, jdbcType=VARCHAR}
		, #{outNo, jdbcType=VARCHAR}
		, #{outSeq, jdbcType=VARCHAR}
		, #{salesCd, jdbcType=VARCHAR}
		, #{outQty, jdbcType=VARCHAR}
		, #{outDtlRmk, jdbcType=VARCHAR}
        , #{etcField1, jdbcType=VARCHAR}
        , #{etcField2, jdbcType=VARCHAR}
        , #{etcField3, jdbcType=VARCHAR}
        , #{userId}
        , #{pgmId}
        , SYSDATE
        )
    </insert>

    <update id="updateLgistSalesCd" parameterType="Map">
        UPDATE TB_PM03D01
        SET   SALES_CD 			= #{salesCd, jdbcType=VARCHAR}
            , OUT_QTY 			= #{outQty, jdbcType=VARCHAR}
            , OUT_DTL_RMK 		= #{outDtlRmk, jdbcType=VARCHAR}
            , ETC_FIELD1        = #{etcField1, jdbcType=VARCHAR}
            , ETC_FIELD2        = #{etcField2, jdbcType=VARCHAR}
            , ETC_FIELD3        = #{etcField3, jdbcType=VARCHAR}
            , UDT_ID        = #{userId}
            , UDT_PGM       = #{pgmId}
            , UDT_DTTM      = SYSDATE
	  WHERE CO_CD = #{coCd, jdbcType=VARCHAR}
	    AND OUT_NO = #{outNo, jdbcType=VARCHAR}
	    AND OUT_SEQ = #{outSeq, jdbcType=VARCHAR}
    </update>

	<delete id="deleteLgistSalesCd" parameterType="Map">
	  DELETE TB_PM03D01
	  WHERE CO_CD = #{coCd, jdbcType=VARCHAR}
	    AND OUT_NO = #{outNo, jdbcType=VARCHAR}
	    AND OUT_SEQ = #{outSeq, jdbcType=VARCHAR}
	</delete>

	<delete id="deleteLgistSalesCdAll" parameterType="Map">
	  DELETE TB_PM03D01
	  WHERE CO_CD = #{coCd, jdbcType=VARCHAR}
	    AND OUT_NO = #{outNo, jdbcType=VARCHAR}
	</delete>

</mapper>
