<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.dw.dw03.mapper.DW03Mapper">

	<select id="selectDrawDocTreeList" parameterType="Map" resultType="CamelMap">
		WITH P AS (
			SELECT DISTINCT
					  REPLACE(T.PATH_BASE,'\','/') AS FULL_PATH
			FROM TB_DRAWING_DOC T
			WHERE 1=1
			  AND T.SERVER_NAME = #{serverName}
			<if test="reqDtFrom != null and reqDtFrom != '' and reqDtTo != null and reqDtTo != ''">
			  AND T.CREATED_AT BETWEEN to_date(REPLACE(#{reqDtFrom},'-','')) 
			  AND to_date(REPLACE(#{reqDtTo},'-',''))+1
			</if>
			<if test="salesCd != null and salesCd != ''">
			  AND T.SALES_CD LIKE ('%' || #{salesCd} || '%')
			</if>
			  AND T.PATH_BASE IS NOT NULL
		),
		N AS (
			SELECT LEVEL AS LV FROM DUAL CONNECT BY LEVEL <![CDATA[ <= ]]> 100
		)
		SELECT DISTINCT
			  CASE WHEN N.LV = 1 THEN '#'
					ELSE SUBSTR(P.FULL_PATH, 1, INSTR(P.FULL_PATH||'/', '/', 1, N.LV-1) - 1)
			END AS PARENT,
			SUBSTR(P.FULL_PATH, 1, INSTR(P.FULL_PATH||'/', '/', 1, N.LV) - 1) AS ID,
			CASE
				WHEN N.LV = 1 THEN SUBSTR(P.FULL_PATH, 1, INSTR(P.FULL_PATH||'/', '/', 1, 1) - 1)
				ELSE REGEXP_SUBSTR(SUBSTR(P.FULL_PATH, 1, INSTR(P.FULL_PATH||'/', '/', 1, N.LV) - 1), '[^/]+$')
			END AS TEXT,
			NULL AS DOC_ID,
			NULL AS DOC_NO,
			NULL AS FILE_NAME,
			SUBSTR(P.FULL_PATH, 1, INSTR(P.FULL_PATH||'/', '/', 1, N.LV) - 1) AS PATH_BASE,
			0 AS IS_LEAF,
			'unit' AS TYPE,
			'Y' AS CODE_ETC
		FROM P 
				JOIN N ON INSTR(P.FULL_PATH||'/', '/', 1, N.LV) > 0
		ORDER BY ID
	</select>

	<select id="selectDrawTreeFileListCount" parameterType="Map" resultType="int">
		WITH BASE AS (
			SELECT
				  T.DOC_ID                                 		AS DOC_ID
				, T.DOC_NO                                		AS DOC_NO
				, SUBSTR(T.FILE_NAME, INSTR(T.FILE_NAME, '\', -1) + 1) AS FILE_NAME
				, T.EXT                                   		AS FILE_TYPE
				, REPLACE(T.PATH_BASE,'\','/')             		AS LPATH
				, TO_CHAR(T.CREATED_AT,'YYYY-MM-DD HH24:MI:SS') AS WORK_DTTM
				, T.CREATED_BY                             		AS WORK_NM
				, T.ACTIVE_VER                             		AS VER_NO
				, T.SALES_CD                               		AS SALES_CD
				, T.DOC_ST
				, A.FILE_SIZE
				, A.VER_NO
				, T.SERVER_NAME
				, TO_CHAR(A.CONFIRM_AT,'YYYY-MM-DD HH24:MI:SS') AS CONFIRM_AT
				, A.CONFIRM_BY
				, A.CONFIRM_ACT_NO
			FROM TB_DRAWING_DOC T
								LEFT OUTER JOIN TB_DRAWING_VERSION AS A ON T.DOC_ID = A.DOC_ID
																	   AND T.ACTIVE_VER = A.VER_NO
			WHERE 1 = 1
			  AND T.SERVER_NAME = #{serverName}
			<if test="salesCd == null and salesCd.equals('')">
			  AND T.CREATED_AT BETWEEN to_date(REPLACE(#{reqDtFrom},'-','')) AND to_date(REPLACE(#{reqDtTo},'-',''))+1
			</if>
			<if test="salesCd != null and !salesCd.equals('')">
			  AND T.SALES_CD LIKE  '%'||#{salesCd}||'%'
			</if>
			  AND REPLACE(T.PATH_BASE,'\','/') = #{comonCd}
		)
		SELECT COUNT(*)
		FROM (
			SELECT B.*,
					ROW_NUMBER() OVER (ORDER BY B.FILE_NAME) AS RN
			FROM BASE B
		)
	</select>


	<select id="selectDrawTreeFileList" parameterType="Map" resultType="CamelMap">
		WITH BASE AS (
			SELECT
				  T.DOC_ID                                 		AS DOC_ID
				, T.DOC_NO                                		AS DOC_NO
				, SUBSTR(T.FILE_NAME, INSTR(T.FILE_NAME, '\', -1) + 1) AS FILE_NAME
				, T.EXT                                   		AS FILE_TYPE
				, REPLACE(T.PATH_BASE,'\','/')             		AS LPATH
				, TO_CHAR(T.CREATED_AT,'YYYY-MM-DD HH24:MI:SS') AS WORK_DTTM
				, T.CREATED_BY                             		AS WORK_NM
				, T.ACTIVE_VER                             		AS VER_NO
				, T.SALES_CD                               		AS SALES_CD
				, T.DOC_ST
				, A.FILE_SIZE
				, A.VER_NO
				, T.SERVER_NAME
				, TO_CHAR(A.CONFIRM_AT,'YYYY-MM-DD HH24:MI:SS') AS CONFIRM_AT
				, A.CONFIRM_BY
				, A.CONFIRM_ACT_NO
			FROM TB_DRAWING_DOC T
								LEFT OUTER JOIN TB_DRAWING_VERSION AS A ON T.DOC_ID = A.DOC_ID
																	   AND T.ACTIVE_VER = A.VER_NO
			WHERE 1 = 1
			<if test="reqDtFrom != null and !reqDtFrom.equals('') and reqDtTo != null and !reqDtTo.equals('')">
			  AND T.CREATED_AT BETWEEN to_date(REPLACE(#{reqDtFrom},'-','')) AND to_date(REPLACE(#{reqDtTo},'-',''))+1
			</if>
			<if test="salesCd != null and !salesCd.equals('')">
			  AND T.SALES_CD LIKE  '%'||#{salesCd}||'%'
			</if>
			  AND T.SERVER_NAME = #{serverName}
			  AND REPLACE(T.PATH_BASE,'\','/') = #{comonCd}
		)
		SELECT *
		FROM (
				SELECT B.*,
						ROW_NUMBER() OVER (ORDER BY B.FILE_NAME) AS RN
				FROM BASE B
			)
		WHERE RN BETWEEN #{firstIndex} AND #{lastIndex}
		ORDER BY FILE_NAME

	</select>

	<select id="select_dw03_detailList" parameterType="Map" resultType="CamelMap">
		WITH VER AS (
			SELECT
				  VER_ID
				, DOC_ID
				, VER_NO
				, STORED_PATH
				, FILE_SIZE
				, CREATED_AT
				, CREATED_BY
				, INSTR(STORED_PATH, '\', -1) AS LAST_BS
				, COMMENT_TXT
				, TO_CHAR(CONFIRM_AT,'YYYY-MM-DD HH24:MI:SS') AS CONFIRM_AT
				, CONFIRM_BY
				, CONFIRM_ACT_NO
			FROM TB_DRAWING_VERSION
			WHERE DOC_ID = #{docId}
		)
		SELECT
			  VER_ID
			, DOC_ID
			, VER_NO
			, STORED_PATH
			, FILE_SIZE
			, TO_CHAR(CREATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS WORK_DTTM
			, CREATED_BY                                   AS WORK_NM
			, CASE
				WHEN UPPER(SUBSTR(STORED_PATH, -4)) = '.DWG' AND LAST_BS <![CDATA[ > ]]>  0 THEN SUBSTR(STORED_PATH, LAST_BS + 1)	--파일명
				ELSE NULL
				END AS FILE_NAME
			, CASE
				WHEN UPPER(SUBSTR(STORED_PATH, -4)) = '.DWG' AND LAST_BS <![CDATA[ > ]]> 0 THEN SUBSTR(STORED_PATH, 1, LAST_BS - 1)	--경로
				ELSE STORED_PATH
				END AS DIR_PATH
			, COMMENT_TXT	--상세이력
			, CONFIRM_AT
			, CONFIRM_BY
			, CONFIRM_ACT_NO
		FROM VER
		ORDER BY CREATED_AT DESC

	</select>

	<select id="selectSalesCdDrawDocTreeList" parameterType="Map" resultType="CamelMap">
		WITH BASE AS (
			SELECT DISTINCT T.SALES_CD, T.PART_NO, T.UNIT_NO
			FROM TB_DRAWING_DOC T
			WHERE 1=1
			  AND T.SERVER_NAME = #{serverName}
			  AND T.SALES_CD = #{salesCd}
			  AND T.PATH_BASE IS NOT NULL
			<if test="reqDtFrom != null and !reqDtFrom.equals('') and reqDtTo != null and !reqDtTo.equals('')">
			  AND CREATED_AT BETWEEN to_date(REPLACE(#{reqDtFrom},'-','')) AND to_date(REPLACE(#{reqDtTo},'-',''))+1
			</if>
		),
		BM AS (
			SELECT
				TRIM(DSGN_NO) AS DSGN_NO,
				MIN(MATR_NM)   AS MATR_NM,
				MIN(LOWER_QTY) AS LOWER_QTY
			FROM TB_BM14M01
			WHERE SALES_CD = #{salesCd}
			  AND DSGN_NO IS NOT NULL
			GROUP BY TRIM(DSGN_NO)
		),
		L1 AS ( /* SALES */
			SELECT DISTINCT
				  '#' AS PARENT
				, B.SALES_CD 	AS ID
				, B.SALES_CD || CASE WHEN BM.MATR_NM IS NOT NULL THEN '('||BM.MATR_NM||') x '||BM.LOWER_QTY ELSE '' END AS TEXT
				, 'sales'		AS TYPE
				, B.SALES_CD 	AS SALES_CD
				, ''			AS PART_NO
				, ''			AS UNIT_NO
				, ''			AS DOC_ID
				, ''			AS DOC_NO
				, ''			AS FILE_NAME
				, B.SALES_CD 	AS PATH_BASE
				, 0				AS IS_LEAF
				, 'Y'			AS CODE_ETC
				, 1 			AS DEPTH
			FROM BASE B
						LEFT JOIN BM ON BM.DSGN_NO = B.SALES_CD
		),
		L2 AS ( /* PART */
			SELECT DISTINCT
				  B.SALES_CD 					AS PARENT
				, B.SALES_CD||'-'||B.PART_NO	AS ID
				, B.PART_NO || CASE WHEN BM.MATR_NM IS NOT NULL THEN '('||BM.MATR_NM||') x '||BM.LOWER_QTY ELSE '' END AS TEXT
				, 'part'     					AS TYPE
				, B.SALES_CD
				, B.PART_NO
				, ''							AS UNIT_NO
				, ''							AS DOC_ID
				, ''							AS DOC_NO
				, ''							AS FILE_NAME
				, B.SALES_CD||'/'||B.PART_NO 	AS PATH_BASE
				, 0          					AS IS_LEAF
				, 'Y'        					AS CODE_ETC
				, 2         					AS DEPTH
			FROM BASE B
						LEFT JOIN BM ON BM.DSGN_NO = B.SALES_CD||'-'||B.PART_NO
			WHERE B.PART_NO IS NOT NULL
		),
		L3 AS ( /* UNIT */
			SELECT DISTINCT
				  B.SALES_CD||'-'||B.PART_NO 					AS PARENT
				, B.SALES_CD||'-'||B.PART_NO||'-'||B.UNIT_NO 	AS ID
				, B.UNIT_NO || CASE WHEN BM.MATR_NM IS NOT NULL THEN '('||BM.MATR_NM||') x '||BM.LOWER_QTY ELSE '' END AS TEXT
				, 'unit'     									AS TYPE
				, B.SALES_CD
				, B.PART_NO
				, B.UNIT_NO
				, ''       										AS DOC_ID
				, ''       										AS DOC_NO
				, ''      										AS FILE_NAME
				, B.SALES_CD||'/'||B.PART_NO||'/'||B.UNIT_NO 	AS PATH_BASE
				, 0          									AS IS_LEAF
				, 'Y'        									AS CODE_ETC
				, 3         									AS DEPTH
			FROM BASE B
						 LEFT JOIN BM ON BM.DSGN_NO = B.SALES_CD||'-'||B.PART_NO||'-'||B.UNIT_NO
			WHERE B.PART_NO IS NOT NULL AND B.UNIT_NO IS NOT NULL
		),
		L4 AS ( /* FILE */
			SELECT
				  T.SALES_CD||'-'||T.PART_NO||'-'||T.UNIT_NO 			AS PARENT
				, 'F|'||T.DOC_ID										AS ID
				, SUBSTR(T.FILE_NAME, INSTR(T.FILE_NAME, '\', -1) + 1) ||
					CASE WHEN BM.MATR_NM IS NOT NULL THEN ' ('||BM.MATR_NM||') x '||BM.LOWER_QTY ELSE ''
					END AS TEXT
				, 'file'												AS TYPE
				, T.SALES_CD
				, T.PART_NO
				, T.UNIT_NO
				, T.DOC_ID
				, T.DOC_NO
				, SUBSTR(T.FILE_NAME, INSTR(T.FILE_NAME, '\', -1) + 1)	AS FILE_NAME
				, REPLACE(T.PATH_BASE,'\','/') 							AS PATH_BASE
				, 1														AS IS_LEAF
				, 'Y'													AS CODE_ETC
				, 4														AS DEPTH
			FROM TB_DRAWING_DOC T
								LEFT JOIN BM ON BM.DSGN_NO = T.SALES_CD||'-'||T.PART_NO||'-'||T.UNIT_NO
			WHERE 1=1
			  AND T.SERVER_NAME = #{serverName}
			<if test="reqDtFrom != null and !reqDtFrom.equals('') and reqDtTo != null and !reqDtTo.equals('')">
			  AND CREATED_AT BETWEEN to_date(REPLACE(#{reqDtFrom},'-','')) AND to_date(REPLACE(#{reqDtTo},'-',''))+1
			</if>
			  AND T.SALES_CD = #{salesCd}
			  AND T.PART_NO IS NOT NULL
			  AND T.UNIT_NO IS NOT NULL
			  AND T.PATH_BASE IS NOT NULL
		)
		SELECT PARENT, ID, TEXT, DOC_ID, DOC_NO, FILE_NAME, PATH_BASE, IS_LEAF, TYPE, CODE_ETC, SALES_CD, PART_NO, UNIT_NO
		FROM (
			SELECT * FROM L1
			UNION ALL SELECT * FROM L2
			UNION ALL SELECT * FROM L3
			UNION ALL SELECT * FROM L4
		)
		ORDER BY DEPTH, ID
	</select>

	<select id="selectSalesCdDrawFileListCount" parameterType="Map" resultType="int">
		WITH BASE AS (
			SELECT
				  T.DOC_ID                                   AS DOC_ID
				, T.SALES_CD                                 AS SALES_CD
				, T.PART_NO                                  AS PART_NO
				, T.UNIT_NO                                  AS UNIT_NO
				, T.DOC_NO                                   AS DOC_NO
				, SUBSTR(T.FILE_NAME, INSTR(T.FILE_NAME, '\', -1) + 1) AS FILE_NAME
				, T.EXT                                      AS FILE_TYPE
				, REPLACE(T.PATH_BASE,'\','/')               AS LPATH
				, TO_CHAR(T.CREATED_AT,'YYYY-MM-DD HH24:MI:SS') AS WORK_DTTM
				, T.CREATED_BY                               AS WORK_NM
				, T.ACTIVE_VER                               AS VER_NO
				, T.DOC_ST                                   AS DOC_ST
				, V.FILE_SIZE                                AS FILE_SIZE
				, TO_CHAR(V.CONFIRM_AT,'YYYY-MM-DD HH24:MI:SS') AS CONFIRM_AT
				, V.CONFIRM_BY
				, V.CONFIRM_ACT_NO
			FROM TB_DRAWING_DOC T
								LEFT JOIN TB_DRAWING_VERSION V ON V.DOC_ID = T.DOC_ID
															   AND V.VER_NO = T.ACTIVE_VER
			WHERE 1 = 1
			  AND T.SALES_CD = #{salesCd}
			  AND T.SERVER_NAME = #{serverName}
			<if test="reqDtFrom != null and reqDtFrom != '' and reqDtTo != null and reqDtTo != ''">
			  AND T.CREATED_AT BETWEEN TO_DATE(#{reqDtFrom}, 'YYYY-MM-DD')
			  AND TO_DATE(#{reqDtTo},   'YYYY-MM-DD') + 1
			</if>
			<if test="partNo != null and partNo != ''">
			  AND T.PART_NO = #{partNo}
			</if>
			<if test="unitNo != null and unitNo != ''">
			  AND T.UNIT_NO = #{unitNo}
			</if>
		),
		SALES AS (
			SELECT
				  'S|'||SALES_CD		AS ID
				, NULL					AS PID
				, 0						AS LVL
				, SALES_CD				AS NAME
				, 'SALES'				AS NODE_TYPE
				, SALES_CD				AS SALES_CD
				, '' 					AS PART_NO
				, '' 					AS UNIT_NO
				, '' 					AS DOC_ID
				, '' 					AS FILE_NAME
				, '' 					AS FILE_TYPE
				, '' 					AS LPATH
				, '' 					AS WORK_DTTM
				, '' 					AS WORK_NM
				, '' 					AS FILE_SIZE
				, ''					AS DOC_ST
				, ''					AS VER_NO
			FROM (SELECT DISTINCT SALES_CD FROM BASE)
		),
		PARTS AS (
			SELECT DISTINCT
				  'P|'||SALES_CD||'|'||PART_NO AS ID
				, CASE
					WHEN #{partNo,jdbcType=VARCHAR} IS NOT NULL
					OR #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN NULL
					ELSE 'S|'||SALES_CD END AS PID
				, CASE
					WHEN #{partNo,jdbcType=VARCHAR} IS NOT NULL
					OR #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN 0
					ELSE 1 END AS LVL
				, PART_NO 		AS NAME
				, 'PART' 		AS NODE_TYPE
				, SALES_CD
				, PART_NO
				, '' 			AS UNIT_NO
				, '' 			AS DOC_ID
				, '' 			AS FILE_NAME
				, '' 			AS FILE_TYPE
				, '' 			AS LPATH
				, '' 			AS WORK_DTTM
				, '' 			AS WORK_NM
				, '' 			AS FILE_SIZE
				, '' 			AS DOC_ST
				, '' 			AS VER_NO
			FROM BASE
		),

		/* UNITS */
		UNITS AS (
			SELECT DISTINCT
				  'U|'||SALES_CD||'|'||PART_NO||'|'||UNIT_NO AS ID
				, CASE WHEN #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN NULL
					ELSE 'P|'||SALES_CD||'|'||PART_NO END AS PID
				, CASE WHEN #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN 0 ELSE 1 END AS LVL
				, UNIT_NO 		AS NAME
				, 'UNIT' 		AS NODE_TYPE
				, SALES_CD
				, PART_NO
				, UNIT_NO
				, '' 			AS DOC_ID
				, '' 			AS FILE_NAME
				, '' 			AS FILE_TYPE
				, '' 			AS LPATH
				, ''			AS WORK_DTTM
				, '' 			AS WORK_NM
				, '' 			AS FILE_SIZE
				, ''			AS DOC_ST
				, '' 			AS VER_NO
			FROM BASE
		),
		FILES AS (
			SELECT
				  'F|'||DOC_ID 		AS ID
				, 'U|'||SALES_CD||'|'||PART_NO||'|'||UNIT_NO AS PID
				, CASE WHEN #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN 1
					   WHEN #{partNo,jdbcType=VARCHAR} IS NOT NULL THEN 2
					   ELSE 3 END AS LVL
				, FILE_NAME 		AS NAME
				, 'FILE' 			AS NODE_TYPE
				, SALES_CD
				, PART_NO
				, UNIT_NO
				, DOC_ID
				, FILE_NAME
				, FILE_TYPE
				, LPATH
				, WORK_DTTM
				, WORK_NM
				, FILE_SIZE
				, DOC_ST
				, VER_NO
			FROM BASE
		)
		SELECT COUNT(*) FROM (
			<if test="(partNo == null or partNo == '') and (unitNo == null or unitNo == '')">
			SELECT * FROM SALES
			UNION ALL
			</if>
			<if test="unitNo == null or unitNo == ''">
			SELECT * FROM PARTS
			UNION ALL
			</if>
			SELECT * FROM UNITS
			UNION ALL
			SELECT * FROM FILES
		)
		ORDER BY
			SALES_CD,
			CASE NODE_TYPE WHEN 'SALES' THEN 0 WHEN 'PART'  THEN 1 WHEN 'UNIT'  THEN 2 ELSE 3 END,
			PART_NO,
			UNIT_NO,
			NAME
	</select>

	<select id="selectSalesCdDrawFileList" parameterType="Map" resultType="CamelMap">
		WITH BASE AS (
			SELECT
				  T.DOC_ID                                   AS DOC_ID
				, T.SALES_CD                                 AS SALES_CD
				, T.PART_NO                                  AS PART_NO
				, T.UNIT_NO                                  AS UNIT_NO
				, T.DOC_NO                                   AS DOC_NO
				, SUBSTR(T.FILE_NAME, INSTR(T.FILE_NAME, '\', -1) + 1) AS FILE_NAME
				, T.EXT                                      AS FILE_TYPE
				, REPLACE(T.PATH_BASE,'\','/')               AS LPATH
				, TO_CHAR(T.CREATED_AT,'YYYY-MM-DD HH24:MI:SS') AS WORK_DTTM
				, T.CREATED_BY                               AS WORK_NM
				, T.ACTIVE_VER                               AS VER_NO
				, T.DOC_ST                                   AS DOC_ST
				, V.FILE_SIZE                                AS FILE_SIZE
				, T.SERVER_NAME                              AS SERVER_NAME
				, TO_CHAR(V.CONFIRM_AT,'YYYY-MM-DD HH24:MI:SS') AS CONFIRM_AT
				, V.CONFIRM_BY
				, V.CONFIRM_ACT_NO
			FROM TB_DRAWING_DOC T
								LEFT JOIN TB_DRAWING_VERSION V ON V.DOC_ID = T.DOC_ID AND V.VER_NO = T.ACTIVE_VER
			WHERE 1=1
			  AND T.SALES_CD = #{salesCd}
			  AND T.SERVER_NAME = #{serverName}
			<if test="reqDtFrom != null and reqDtFrom != '' and reqDtTo != null and reqDtTo != ''">
			  AND T.CREATED_AT BETWEEN TO_DATE(#{reqDtFrom}, 'YYYY-MM-DD')
									AND TO_DATE(#{reqDtTo},   'YYYY-MM-DD') + 1
			</if>
			<if test="partNo != null and partNo != ''">
			  AND T.PART_NO = #{partNo}
			</if>
			<if test="unitNo != null and unitNo != ''">
			  AND T.UNIT_NO = #{unitNo}
			</if>
		),
		SALES AS (  -- SALES 단일행 + SERVER_NAME 포함
			SELECT
				  'S|'||SALES_CD		AS ID
				, NULL					AS PID
				, 0						AS LVL
				, SALES_CD 				AS NAME
				, 'SALES' 				AS NODE_TYPE
				, SALES_CD
				, '' 					AS PART_NO
				, '' 					AS UNIT_NO
				, ''					AS DOC_ID
				, ''					AS FILE_NAME
				, '' 					AS FILE_TYPE
				, ''					AS LPATH
				, ''					AS WORK_DTTM
				, ''					AS WORK_NM
				, ''					AS FILE_SIZE
				, ''					AS DOC_ST
				, ''					AS VER_NO
				, MAX(SERVER_NAME)		AS SERVER_NAME
				, ''					AS CONFIRM_AT
				, ''					AS CONFIRM_BY
				, ''					AS CONFIRM_ACT_NO
			FROM BASE
			GROUP BY SALES_CD
		),
		PARTS AS (
			SELECT
				  'P|'||SALES_CD||'|'||PART_NO AS ID
				, CASE WHEN #{partNo,jdbcType=VARCHAR} IS NOT NULL
						OR #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN NULL
					ELSE 'S|'||SALES_CD END AS PID
				, CASE WHEN #{partNo,jdbcType=VARCHAR} IS NOT NULL
						OR #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN 0 ELSE 1 END AS LVL
				, PART_NO 				AS NAME
				, 'PART'  				AS NODE_TYPE
				, SALES_CD
				, PART_NO
				, '' 					AS UNIT_NO
				, ''      				AS DOC_ID
				, '' 					AS FILE_NAME
				, '' 					AS FILE_TYPE
				, '' 					AS LPATH
				, '' 					AS WORK_DTTM
				, '' 					AS WORK_NM
				, ''       				AS FILE_SIZE
				, ''  					AS DOC_ST
				, ''       				AS VER_NO
				, MAX(SERVER_NAME)      AS SERVER_NAME
				, ''					AS CONFIRM_AT
				, ''					AS CONFIRM_BY
				, ''					AS CONFIRM_ACT_NO
			FROM BASE
			GROUP BY SALES_CD, PART_NO
		),
		UNITS AS (
			SELECT
				  'U|'||SALES_CD||'|'||PART_NO||'|'||UNIT_NO AS ID
				, CASE WHEN #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN NULL
					ELSE 'P|'||SALES_CD||'|'||PART_NO END AS PID
				, CASE WHEN #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN 0 ELSE 1 END AS LVL
				, UNIT_NO 			AS NAME
				, 'UNIT'  			AS NODE_TYPE
				, SALES_CD
				, PART_NO
				, UNIT_NO
				, ''        		AS DOC_ID
				, '' 				AS FILE_NAME
				, ''  				AS FILE_TYPE
				, '' 				AS LPATH
				, ''  				AS WORK_DTTM
				, '' 				AS WORK_NM
				, ''       			AS FILE_SIZE
				, ''   				AS DOC_ST
				, ''        		AS VER_NO
				, MAX(SERVER_NAME)  AS SERVER_NAME
				, ''				AS CONFIRM_AT
				, ''				AS CONFIRM_BY
				, ''				AS CONFIRM_ACT_NO
			FROM BASE
			GROUP BY SALES_CD, PART_NO, UNIT_NO
		),
		FILES AS (
			SELECT
				  'F|'||DOC_ID AS ID
				, 'U|'||SALES_CD||'|'||PART_NO||'|'||UNIT_NO AS PID
				, CASE WHEN #{unitNo,jdbcType=VARCHAR} IS NOT NULL THEN 1
					WHEN #{partNo,jdbcType=VARCHAR} IS NOT NULL THEN 2
					ELSE 3 END AS LVL
				, FILE_NAME AS NAME
				, 'FILE' AS NODE_TYPE
				, SALES_CD
				, PART_NO, UNIT_NO
				, DOC_ID
				, FILE_NAME
				, FILE_TYPE
				, LPATH
				, WORK_DTTM
				, WORK_NM
				, FILE_SIZE
				, DOC_ST
				, VER_NO
				, SERVER_NAME
				, CONFIRM_AT
				, CONFIRM_BY
				, CONFIRM_ACT_NO
			FROM BASE
		)
		SELECT *
		FROM (
		<if test="(partNo == null or partNo == '') and (unitNo == null or unitNo == '')">
			SELECT * FROM SALES
			UNION ALL
		</if>
		<if test="unitNo == null or unitNo == ''">
			SELECT * FROM PARTS
			UNION ALL
		</if>
			SELECT * FROM UNITS
			UNION ALL
			SELECT * FROM FILES
		)
		ORDER BY
			SALES_CD,
			CASE NODE_TYPE WHEN 'SALES' THEN 0 WHEN 'PART' THEN 1 WHEN 'UNIT' THEN 2 ELSE 3 END,
			PART_NO,
			UNIT_NO,
			NAME,
			CASE WHEN NODE_TYPE='FILE' THEN REGEXP_COUNT(NVL(LPATH,''), '/') ELSE 0 END
	</select>

</mapper>