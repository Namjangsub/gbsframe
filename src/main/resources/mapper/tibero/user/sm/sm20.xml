<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.sm.sm20.mapper.SM20Mapper">
	
	<!-- 매입확정관리 조회 리스트  조회조건 -->
	<sql id="selectPurchaseListCondition">
		<!-- 회사코드 -->
		<if test="coCd != null and !coCd.equals('')">
			AND A.CO_CD = #{coCd}   
		</if>

		<!-- 확정일자 -->         
		<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
			<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
            			AND A.ORDRG_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
			</if>   
		</if>	
		
		<!-- 구매처 -->         
		<if test="pchsClntCd != null and !pchsClntCd.equals('')">
			AND A.PCHS_CLNT_CD = #{pchsClntCd}   
		</if>       
		<if test="pchsClntNm != null and !pchsClntNm.equals('')">
			AND A.PCHS_CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
		</if>

		<if test="salesCd != null and !salesCd.equals('')">
			AND A.SALES_CD LIKE '%'|| #{salesCd} || '%'   
		</if>		
		
		<!-- 확정여부 -->
		<if test="cmpletYn != null and !cmpletYn.equals('')">
			AND NVL(A.CMPLET_YN, 'N') = #{cmpletYn}	/* 체크항목 CHKBOX 표시를 안하기 위해서 '' 처리후 USER_CHK_V 로 검색 */
		</if>		
		
		<!-- 매입구분 -->
		<if test="pchsGb != null and !pchsGb.equals('')">
			<if test='pchsGb == "ordrg"'>
			AND A.IS_COST = 'N'
			</if>
			<if test='pchsGb == "cost"'>
			AND A.IS_COST = 'Y'
			</if>			
			<if test='pchsGb == "retn"'>
			AND A.IS_COST = 'R'
			</if>			
		</if>	
		
		<if test="prjctCdNm != null and !prjctCdNm.equals('')">
			AND UPPER(CLNT_PJT_NM) LIKE '%'|| UPPER(#{prjctCdNm}) || '%'   
		</if>	
        
		<if test="clntPjt != null and !clntPjt.equals('')">
        	AND CLNT_PJT IN ( ${clntPjt} )
        </if>	
        
		<if test="mngIdCd != null and !mngIdCd.equals('')">
        	AND ORDRG_MNG_ID IN ( ${mngIdCd} )
        </if>																			
	</sql>

	<select id="sm20_main_grid1_selectList" parameterType="Map" resultType="camelMap">
		WITH TOT AS
		(
		SELECT    A.*
				, D1.CLNT_NM  	AS CLNT_NM
				, D1.CRN 		/*사업자등록번호*/
				, D1.REPST_NM 	/*대표자*/
				, NVL(A.SM10_CLMN_DAY, D1.PCHS_CLMN_DAY) AS PCHS_CLMN_DAY  /*결제일 - 10*/	
				, NVL2(A.SM10_CLMN_RMK, '', D1.PCHS_CLMN_RMK) AS PCHS_CLMN_RMK   /*결제일 - 다음달 10일*/
				, NVL(A.SM10_PMNT_MTD_CD, D1.PCHS_PMNT_MTD_CD) AS PCHS_PMNT_MTD_CD  --결제조건 코드
			    , FN_CM05M01_CD_TO_NM(NVL(A.SM10_PMNT_MTD_CD, D1.PCHS_PMNT_MTD_CD)) AS PCHS_PMNT_MTD_NM /*결제조건명*/
		  FROM (
				 SELECT DISTINCT D.CO_CD
				      , CASE WHEN SUBSTR(D.ORDRG_NO,0,3) = 'BAL' THEN M.PCHS_CLNT_CD
					         WHEN SUBSTR(D.ORDRG_NO,0,3) = 'RET' THEN RM.PCHS_CLNT_CD
							                                     ELSE C.PCHS_CLNT_CD
						END AS PCHS_CLNT_CD
					  , CASE WHEN SUBSTR(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD
					         WHEN SUBSTR(D.ORDRG_NO,0,3) = 'RET' THEN R.SALES_CD
							                                     ELSE C.SALES_CD
						END AS SALES_CD
					  , D.PCHS_DT AS ORDRG_DT
					  , CASE WHEN SUBSTR(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD
					         WHEN SUBSTR(D.ORDRG_NO,0,3) = 'RET' THEN R.DSGN_NO
							                                     ELSE C.SALES_CD
						END AS DSGN_NO
					  , 1 AS ORDRG_QTY            /*발주수량 */
					  , M.ORDRG_AMT AS ORDRG_AMT  /*발주 금액 */
					  , D.PCHS_AMT  AS PCHS_AMT   /* 매입금액 */
					  , D.PCHS_VAT  AS PCHS_VAT   /* 부가세 */
					  , D.PCHS_QTY  AS PCHS_QTY   /* 수량 */
					  , TO_CHAR(D.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
					  , D.CMPLET_YN AS CMPLET_YN  /* 확정여부 */
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN 'N' ELSE 'Y' END AS BILL_YN
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN 0 ELSE B.BILL_DTL_AMT END AS COMP_AMT
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN 0 ELSE B.BILL_DTL_VAT END AS COMP_VAT
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN 0 ELSE B.BILL_DTL_TOT END AS COMP_TOT
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN D.PCHS_AMT ELSE 0 END AS UNCOMP_AMT
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN D.PCHS_VAT ELSE 0 END AS UNCOMP_VAT
					  , NVL(D.BILL_NO, '') AS BILL_NO
					  , TO_CHAR(BM.BILL_DT, 'YYYY-MM-DD') AS BILL_DT
					  , NVL(BM.FILE_TRGT_KEY, 0) 		AS FILE_TRGT_KEY
					  , BM.BILL_DT 						AS BILL_DT_S
					  , BM.PAY_YN  						AS PAY_YN
					  , BM.PAY_PMNTMTD					AS PAY_PMNTMTD
					  , BM.PAY_INTERVAL 				AS PAY_INTERVAL
					  , TO_CHAR(BM.PAY_DT, 'YYYY-MM-DD') AS PAY_DT
					  , D.PCHS_NO   AS PCHS_NO
					  , D.PCHS_SEQ  AS PCHS_SEQ
					  , D.ORDRG_NO  AS ORDRG_NO
					  , D.ORDRG_SEQ AS ORDRG_SEQ
					  , NVL(M1.DEPT_ID, SUBSTRING(U.DEPT_ID,0,5))	AS DEPT_ID
					  , NVL(CE.DEPT_NM, CD.DEPT_NM)	   			    AS DEPT_NM
					, DECODE (substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_CLMN_DAY, '') 		AS SM10_CLMN_DAY
					, DECODE (substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_CLMN_DIV_CD, '') 	AS SM10_CLMN_DIV_CD
					, DECODE (substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_PMNT_MTD_CD, '') 	AS SM10_PMNT_MTD_CD
					, DECODE (substr(D.ORDRG_NO,0,3), 'COS', 'COST', '') 				AS SM10_CLMN_RMK
					, CASE #{trunDiv} WHEN 'PCHSCOSTDIV' THEN '' ELSE C.PCHS_COST_DIV10 END	AS PCHS_COST_DIV10
					, CASE #{trunDiv} WHEN 'PCHSCOSTDIV' THEN '' ELSE C.ORDRS_NO  END		AS ORDRS_NO
					, CASE #{trunDiv} WHEN 'PCHSCOSTDIV' THEN '' ELSE C.CTRT_NO  END		AS CTRT_NO
					, BM.APR_REQ_NO		AS APR_REQ_NO	--결재요청번호
					, SM30.CREAT_ID		AS APR_REQ_ID	--결재요청자
					, SM30.CREAT_DTTM	AS APR_REQ_DT	--결재요청일시
					, W20.*
					, SM30D.HOLD_ID
					, SM30D.HOLD_DTTM
					, SM30D.HOLD_YN 
				 FROM   TB_SM12D01 AS D  /* 매입 DETAIL */
				        LEFT OUTER JOIN TB_SM12M01 AS M1  ON (D.PCHS_NO = M1.PCHS_NO)  /* 매입확정마스터 */
				        LEFT OUTER JOIN TB_SM02M01 AS M  ON (D.ORDRG_NO = M.ORDRG_NO)  /* 발주마스터 */
				        LEFT OUTER JOIN TB_SM20M01 AS BM ON (BM.CO_CD   = D.CO_CD
						                                 AND BM.BILL_NO = D.BILL_NO)  /* 매입계산서 */
						LEFT OUTER JOIN TB_SM20D01 AS B  ON (B.CO_CD     = D.CO_CD
						                                 AND B.BILL_NO   = D.BILL_NO
														 AND B.PCHS_NO   = D.PCHS_NO
														 AND B.PCHS_SEQ  = D.PCHS_SEQ
														 AND B.ORDRG_NO  = D.ORDRG_NO
														 AND B.ORDRG_SEQ = D.ORDRG_SEQ)  /* 매입계산서 */
						LEFT OUTER JOIN TB_SM10M01 AS C  ON (D.ORDRG_NO = C.COST_NO)  /* 비용마스터 */
						LEFT OUTER JOIN TB_SM06D01 AS R  ON (D.ORDRG_NO = R.RET_NO)  /* 반품 상세 */
						LEFT OUTER JOIN TB_SM06M01 AS RM ON (RM.CO_CD = R.CO_CD AND RM.RET_NO = R.RET_NO)  /* 반품 상세 */
						LEFT OUTER JOIN TB_CM06M01 U ON U.ID = D.CREAT_ID
						LEFT OUTER JOIN TB_CM04M01 CD ON CD.DEPT_ID = SUBSTRING(U.DEPT_ID,0,5)
						LEFT OUTER JOIN TB_CM04M01 CE ON CE.DEPT_ID = SUBSTRING(M1.DEPT_ID,0,5)
						LEFT OUTER JOIN TB_SM30M01 SM30 ON SM30.FILE_TRGT_KEY = BM.APR_REQ_NO
						LEFT OUTER JOIN TB_SM30D01 SM30D ON SM30D.FILE_TRGT_KEY = BM.APR_REQ_NO 
														AND SM30D.CO_CD = BM.CO_CD 
														AND SM30D.CLNT_CD = BM.CLNT_CD
														AND SM30D.BILL_NO = D.BILL_NO
				 	<if test="trunDiv != null and !trunDiv.equals('')">
				 		<if test="trunDiv.equals('PCHSCOSTDIV1030')">
														AND SM30D.CTRT_NO = C.CTRT_NO
														
						</if>
					</if>
			  			LEFT OUTER JOIN (
								  			SELECT     
											    min(TODO_NO) AS TODO_NO
												, MAX(CASE WHEN TODO_ID = SM30.CREAT_ID THEN TODO_ID ELSE NULL END) 					AS APR_ID1
												, MAX(CASE WHEN TODO_ID = SM30.CREAT_ID THEN NVL(SANCTN_STTUS, 'N') ELSE NULL END) 	AS APR_YN1
												, MAX(CASE WHEN TODO_ID = SM30.CREAT_ID THEN NVL(TODO_CF_DT, '') ELSE NULL END) 		AS APR_DT1
												, MAX(CASE WHEN TODO_ID = (SELECT MNG_ID  FROM TB_CM04M01 WHERE DEPT_ID = ( SELECT substr(DEPT_ID,0, 5) FROM tb_cm06M01 WHERE id = SM30.CREAT_ID )) THEN TODO_ID ELSE NULL END) 					AS APR_ID2
												, MAX(CASE WHEN TODO_ID = (SELECT MNG_ID  FROM TB_CM04M01 WHERE DEPT_ID = ( SELECT substr(DEPT_ID,0, 5) FROM tb_cm06M01 WHERE id = SM30.CREAT_ID )) THEN NVL(SANCTN_STTUS, 'N') ELSE NULL END) 	AS APR_YN2
												, MAX(CASE WHEN TODO_ID = (SELECT MNG_ID  FROM TB_CM04M01 WHERE DEPT_ID = ( SELECT substr(DEPT_ID,0, 5) FROM tb_cm06M01 WHERE id = SM30.CREAT_ID )) THEN NVL(TODO_CF_DT, '') ELSE NULL END) 		AS APR_DT2
												, MAX(CASE WHEN TODO_ID = 'EMJ8105' THEN TODO_ID ELSE NULL END) 				AS APR_ID3
												, MAX(CASE WHEN TODO_ID = 'EMJ8105' THEN NVL(SANCTN_STTUS, 'N') ELSE NULL END) 	AS APR_YN3
												, MAX(CASE WHEN TODO_ID = 'EMJ8105' THEN NVL(TODO_CF_DT, '') ELSE NULL END) 	AS APR_DT3
											 FROM TB_WB20M03 WB20
											 		LEFT OUTER JOIN TB_SM30M01 AS SM30 ON SM30.FILE_TRGT_KEY = WB20.TODO_NO
											WHERE TODO_DIV2_CODE_ID = 'TODODIV2170'  -- 결제진행상태	  
											GROUP BY  TODO_NO
			  							) AS W20 ON W20.TODO_NO = BM.APR_REQ_NO
				 WHERE  1 = 1
				 <!-- 회사코드 -->
				 <if test="coCd != null and !coCd.equals('')">
				   AND D.CO_CD = #{coCd}
				 </if>
				 <!-- 확정일자 -->
				 <if test="pchsDtfrom != null and !pchsDtfrom.equals('')">
				 	<if test="pchsDtto != null and !pchsDtto.equals('')">
				   AND D.PCHS_DT BETWEEN #{pchsDtfrom} AND #{pchsDtto}
					</if>
				 </if>
				 <!-- 매입구분 -->
				 <if test="pchsGb != null and !pchsGb.equals('')">
				   AND substr(D.ORDRG_NO,0,3) = #{pchsGb} /* '':전체, 'BAL':발주, 'RET':반납, 'COS':비용*/
				 </if>
				 <!-- 청구/영수 구분 -->
				 <if test="payDiv != null and !payDiv.equals('')">
				   AND NVL(C.PAY_DIV,'PAYDIV02') = #{payDiv}  --기타비용의 경우 청구(PAYDIV02)인 경우만 구매현황에 출력함.
				   AND D.PAY_DIV = #{payDiv} /* 영수, 청구 구분*/ --매입확정의 경우에도 청구(PAYDIV02)인 경우만 구매현황에 출력함.
				 </if>	
				 <!-- 부서구분 -->	
				 <if test="deptId !=null and !deptId.equals('')">
				 	 <if test="deptId.equals('TRN50')">
				 	 AND SUBSTRING(M1.DEPT_ID,0,5) = #{deptId}
					 </if>
					 <if test="!deptId.equals('TRN50')">
					 AND SUBSTRING(M1.DEPT_ID,0,5) != 'TRN50'
					 </if>
				 </if>	
				 <if test="trunDiv != null and !trunDiv.equals('')">
				 	 <if test="trunDiv.equals('PCHSCOSTDIV1030')">
 				   AND NVL(C.PCHS_COST_DIV10,'A') =  #{trunDiv}  --기타비용의 경우 턴키(PCHSCOSTDIV1030)인 경우만 처리됨
					 </if>	
					 <if test="!trunDiv.equals('PCHSCOSTDIV1030')">
				   AND NVL(C.PCHS_COST_DIV10,'A') !=  'PCHSCOSTDIV1030'  --기타비용의 경우 턴키(PCHSCOSTDIV1030)가 아닌것
					 </if> 
				 </if>	 
			) AS A
     				LEFT OUTER JOIN TB_BM02M01 D1 ON A.PCHS_CLNT_CD = D1.CLNT_CD   --거래처마스터
			WHERE 1 = 1
			<!-- 청구/영수 구분 -->
			<if test="pchsClmnDay != null and !pchsClmnDay.equals('')">
			 AND NVL(A.SM10_CLMN_DAY, D1.PCHS_CLMN_DAY) =  #{pchsClmnDay}
			</if>
			 <!-- 구매처 -->
			 <if test="clntCd != null and !clntCd.equals('')">
			 AND    A.PCHS_CLNT_CD = #{clntCd}
			 </if>
			 <if test="clntNm != null and !clntNm.equals('')">
			 AND    D1.CLNT_NM LIKE '%'||#{clntNm}||'%'
			 </if>
		)
		SELECT DISTINCT A.CO_CD  AS CO_CD
		     , A.PCHS_CLNT_CD         AS CLNT_CD
			 , A.CLNT_NM         AS CLNT_NM
			 , A.ORDRS_NO		 AS ORDRS_NO
			 , A.CTRT_NO		 AS CTRT_NO
			 , SUM(A.PCHS_QTY)   AS PCHS_QTY
			 , SUM(A.PCHS_AMT)   AS PCHS_AMT
			 , SUM(A.PCHS_VAT)   AS PCHS_VAT
			 , SUM(A.PCHS_AMT) + SUM(A.PCHS_VAT)     AS PCHS_TOT    /* 합계 */
			 , SUM(A.COMP_AMT)   AS COMP_AMT
			 , SUM(A.COMP_VAT)   AS COMP_VAT
			 , SUM(A.COMP_TOT)   AS COMP_TOT
			 , SUM(A.UNCOMP_AMT) AS UNCOMP_AMT
			 , SUM(A.UNCOMP_VAT) AS UNCOMP_VAT
			 , SUM(A.UNCOMP_AMT) + SUM(A.UNCOMP_VAT) AS UNCOMP_TOT  /* 합계 */
			 , A.BILL_NO
			 , A.BILL_DT
			 , MAX(A.PAY_YN)     					AS PAY_YN
			 , MAX(A.PAY_PMNTMTD)   				AS PAY_PMNTMTD
			 , FN_CM05M01_CD_TO_NM(MAX(A.PAY_PMNTMTD)) AS PAY_PMNTMTD_NM
			 , MAX(A.PAY_INTERVAL) 					AS PAY_INTERVAL
			 , MAX(A.PAY_DT) 						AS PAY_DT
			 , MAX(A.CRN)							  AS CRN
			 , MAX(A.REPST_NM)						  AS REPST_NM
			 , MAX(A.PCHS_PMNT_MTD_CD)				  AS PCHS_PMNT_MTD_CD
			 , MAX(A.PCHS_PMNT_MTD_NM)				  AS PCHS_PMNT_MTD_NM
			 , CR.CLNT_PJT
			 , FN_CM05M01_CD_TO_NM(CR.CLNT_PJT) 	AS CLNT_PJT_NM
			 , CR.ORDRS_CLNT_CD					AS CUST_ID
			 , D1.CLNT_NM						AS CUST_NM
			  , MAX(A.APR_REQ_NO)				  	  AS APR_REQ_NO
			  , MAX(A.APR_YN2)				  		  AS APR_YN2
			  , DECODE(NVL(MAX(A.HOLD_YN),'N'), 'Y', 'H', MAX(A.APR_YN3)) AS APR_YN3 --부사장님 보류지정건이면 'H' 아니면결재완료 여부를 Update 
			  , DECODE(MAX(A.APR_REQ_NO),'','N','Y')  AS APR_REQ_STS
			  , MAX(A.APR_REQ_ID)				  	  AS APR_REQ_ID
			  , FN_CM06M01_ID_TO_NM(MAX(A.APR_REQ_ID)) AS APR_REQ_ID_NM
			  , TO_CHAR(MAX(A.APR_REQ_DT),'YYYY-MM-DD') AS APR_REQ_DT
			  , MAX(SM11.FILE_TRGT_KEY)			  		AS SM11_FILE_TRGT_KEY
			  , SM11.CTRT_APPROVAL_NO			  		AS CTRT_APPROVAL_NO
			  , MAX(A.HOLD_ID)			  				AS HOLD_ID
			  , TO_CHAR(MAX(A.HOLD_DTTM),'YYYY-MM-DD')  AS HOLD_DTTM
			  , MAX(NVL(A.HOLD_YN,'N'))			  		AS HOLD_YN
			  , A.BILL_YN
		FROM   TOT AS A
		           LEFT OUTER JOIN TB_CR02M01 AS CR ON CR.ORDRS_NO = A.ORDRS_NO 		--수주마스터 
				   LEFT OUTER JOIN TB_BM02M01 AS D1 ON CR.ORDRS_CLNT_CD = D1.CLNT_CD   --거래처마스터 CTRT_NO, CTRT_NO_SEQ
				   LEFT OUTER JOIN TB_SM11M01 SM11 ON SM11.CTRT_NO = A.CTRT_NO
		WHERE  1 = 1
              <!-- 발행여부 -->
		<if test="billYn != null and !billYn.equals('')">
		AND    A.BILL_YN = #{billYn}
		</if>
		GROUP BY A.CO_CD, SM11.CTRT_APPROVAL_NO, D1.CLNT_NM, CR.ORDRS_CLNT_CD, CR.CLNT_PJT, A.ORDRS_NO, A.CTRT_NO, A.CLNT_NM, A.PCHS_CLNT_CD, A.BILL_NO, A.BILL_DT, A.BILL_YN
		ORDER BY A.CO_CD, SM11.CTRT_APPROVAL_NO, D1.CLNT_NM, CR.ORDRS_CLNT_CD, CR.CLNT_PJT, A.ORDRS_NO, A.CTRT_NO, A.CLNT_NM, A.PCHS_CLNT_CD, A.BILL_NO, A.BILL_DT, A.BILL_YN
	</select>

	<select id="sm20_main_grid2_selectList" parameterType="Map" resultType="camelMap">
		WITH TOT AS
		(
			SELECT    A.*
					, D1.CLNT_NM  AS PCHS_CLNT_NM
					, D1.CRN /*사업자등록번호*/
					, NVL(A.SM10_CLMN_DAY, D1.PCHS_CLMN_DAY) AS PCHS_CLMN_DAY  /*결제일 - 10*/	
					, NVL2(A.SM10_CLMN_RMK, '', D1.PCHS_CLMN_RMK) AS PCHS_CLMN_RMK   /*결제일 - 다음달 10일*/
					, NVL(A.SM10_PMNT_MTD_CD, D1.PCHS_PMNT_MTD_CD) AS PCHS_PMNT_MTD_CD  --결제조건 코드
				    , FN_CM05M01_CD_TO_NM(NVL(A.SM10_PMNT_MTD_CD, D1.PCHS_PMNT_MTD_CD)) AS PCHS_PMNT_MTD_NM /*결제조건명*/
			  FROM (
				 --매입확정전체
				 SELECT DISTINCT D.CO_CD
				      , CASE WHEN SUBSTR(D.ORDRG_NO,0,3) = 'BAL' THEN M.PCHS_CLNT_CD
					         WHEN SUBSTR(D.ORDRG_NO,0,3) = 'RET' THEN RM.PCHS_CLNT_CD
							                                     ELSE C.PCHS_CLNT_CD
						END AS PCHS_CLNT_CD
					  , CASE WHEN SUBSTR(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD
					         WHEN SUBSTR(D.ORDRG_NO,0,3) = 'RET' THEN R.SALES_CD
							                                     ELSE C.SALES_CD
						END AS SALES_CD
					  , D.PCHS_DT AS ORDRG_DT
					  , CASE WHEN SUBSTR(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD
					         WHEN SUBSTR(D.ORDRG_NO,0,3) = 'RET' THEN R.DSGN_NO
							                                     ELSE C.SALES_CD
						END AS DSGN_NO
					  , 1 AS ORDRG_QTY            /*발주수량 */
					  , M.ORDRG_AMT AS ORDRG_AMT  /*발주 금액 */
					  , D.PCHS_AMT  AS PCHS_AMT   /* 매입금액 */
					  , D.PCHS_VAT  AS PCHS_VAT   /* 부가세 */
					  , D.PCHS_QTY  AS PCHS_QTY   /* 수량 */
					  , TO_CHAR(D.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
					  , D.CMPLET_YN AS CMPLET_YN  /* 확정여부 */
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN 'N' ELSE 'Y' END AS BILL_YN
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN 0 ELSE B.BILL_DTL_AMT END AS COMP_AMT
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN 0 ELSE B.BILL_DTL_VAT END AS COMP_VAT
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN 0 ELSE B.BILL_DTL_TOT END AS COMP_TOT
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN D.PCHS_AMT ELSE 0 END AS UNCOMP_AMT
					  , CASE WHEN NVL(D.BILL_NO, '.') = '.' THEN D.PCHS_VAT ELSE 0 END AS UNCOMP_VAT
					  , NVL(D.BILL_NO, '') AS BILL_NO
					  , TO_CHAR(BM.BILL_DT, 'YYYY-MM-DD') AS BILL_DT
					  , NVL(BM.FILE_TRGT_KEY, 0) AS FILE_TRGT_KEY
					  , BM.BILL_DT AS BILL_DT_S
					  , D.PCHS_NO   AS PCHS_NO
					  , D.PCHS_SEQ  AS PCHS_SEQ
					  , D.ORDRG_NO  AS ORDRG_NO
					  , D.ORDRG_SEQ AS ORDRG_SEQ
					  , BM.PAY_YN  						AS PAY_YN
					  , BM.PAY_PMNTMTD 					AS PAY_PMNTMTD
					  , BM.PAY_INTERVAL 				AS PAY_INTERVAL
					, U.NAME											 AS CREAT_ID_NM
					, DECODE (substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_CLMN_DAY, '') 		AS SM10_CLMN_DAY
					, DECODE (substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_CLMN_DIV_CD, '') 	AS SM10_CLMN_DIV_CD
					, DECODE (substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_PMNT_MTD_CD, '') 	AS SM10_PMNT_MTD_CD
					, DECODE (substr(D.ORDRG_NO,0,3), 'COS', 'COST', '') 				AS SM10_CLMN_RMK
<!-- 	    			, CD.DEPT_NM -->
					, TO_CHAR(BM.PAY_DT, 'YYYY-MM-DD') AS PAY_DT
<!-- 					, SUBSTRING(U.DEPT_ID,0,5) 		   AS DEPT_ID -->
					, D.CREAT_ID 		   			   			AS MNG_ID
					, NVL(M1.DEPT_ID, SUBSTRING(U.DEPT_ID,0,5))	AS DEPT_ID
					, NVL(CE.DEPT_NM, CD.DEPT_NM)	   			AS DEPT_NM
					, C.CTRT_NO			--계약번호
				 FROM   TB_SM12D01 AS D  /* 매입 DETAIL */
				        LEFT OUTER JOIN TB_SM12M01 AS M1 ON (D.PCHS_NO = M1.PCHS_NO)  /* 매입확정마스터 */
				        LEFT OUTER JOIN TB_SM02M01 AS M  ON (D.ORDRG_NO = M.ORDRG_NO)  /* 발주마스터 */
				        LEFT OUTER JOIN TB_SM20M01 AS BM ON (BM.CO_CD   = D.CO_CD
						                                 AND BM.BILL_NO = D.BILL_NO)  /* 매입계산서 */
						LEFT OUTER JOIN TB_SM20D01 AS B  ON (B.CO_CD     = D.CO_CD
						                                 AND B.BILL_NO   = D.BILL_NO
														 AND B.PCHS_NO   = D.PCHS_NO
														 AND B.PCHS_SEQ  = D.PCHS_SEQ
														 AND B.ORDRG_NO  = D.ORDRG_NO
														 AND B.ORDRG_SEQ = D.ORDRG_SEQ)  /* 매입계산서 */
						LEFT OUTER JOIN TB_SM10M01 AS C  ON (D.ORDRG_NO = C.COST_NO)  /* 비용마스터 */
						LEFT OUTER JOIN TB_SM11M01 AS S11 ON S11.CTRT_NO = C.CTRT_NO
						LEFT OUTER JOIN TB_SM06D01 AS R  ON (D.ORDRG_NO = R.RET_NO)  /* 반품 상세 */
						LEFT OUTER JOIN TB_SM06M01 AS RM ON (RM.CO_CD = R.CO_CD AND RM.RET_NO = R.RET_NO)  /* 반품 상세 */
						LEFT OUTER JOIN TB_CM06M01 U ON U.ID = D.CREAT_ID
						LEFT OUTER JOIN TB_CM04M01 CD ON CD.DEPT_ID = SUBSTRING(U.DEPT_ID,0,5)
						LEFT OUTER JOIN TB_CM04M01 CE ON CE.DEPT_ID = SUBSTRING(M1.DEPT_ID,0,5)
				 WHERE  1 = 1
				 <!-- 회사코드 -->
				 <if test="coCd != null and !coCd.equals('')">
				 AND    D.CO_CD = #{coCd}
				 </if>
				 <!-- 확정일자 -->
				 <if test="pchsDtfrom != null and !pchsDtfrom.equals('')">
				 	<if test="pchsDtto != null and !pchsDtto.equals('')">
					AND    D.PCHS_DT BETWEEN #{pchsDtfrom} AND #{pchsDtto}
					</if>
				 </if>	
				<!-- 발행여부 -->
				<if test="billYn != null and !billYn.equals('')">
				    AND    D.BILL_YN LIKE #{billYn}
				</if>	
				<!-- 계약등록번호 -->
				<if test="ctrtNo != null and !ctrtNo.equals('')">
				    AND    C.CTRT_NO = #{ctrtNo}
				</if>	
				<!-- 청구/영수 구분 -->
				<if test="payDiv != null and !payDiv.equals('')">
					AND NVL(C.PAY_DIV,'PAYDIV02') = #{payDiv}  --기타비용의 경우 청구(PAYDIV02)인 경우만 구매현황에 출력함.
					AND D.PAY_DIV = #{payDiv} /* 영수, 청구 구분*/ --매입확정의 경우에도 청구(PAYDIV02)인 경우만 구매현황에 출력함.
				</if>	
				<!-- 계약등록번호 -->
				<if test="ctrtApprovalNo != null and !ctrtApprovalNo.equals('')">
				    AND    S11.CTRT_APPROVAL_NO = #{ctrtApprovalNo}
				</if>	
				<if test="deptId !=null and !deptId.equals('')">
					<if test="deptId.equals('TRN50')">
					AND SUBSTRING(M1.DEPT_ID,0,5) = #{deptId}
					</if>
					<if test="!deptId.equals('TRN50')">
					AND SUBSTRING(M1.DEPT_ID,0,5) != 'TRN50'
					</if>
				</if>		
			) A
    				LEFT OUTER JOIN TB_BM02M01 D1 ON A.PCHS_CLNT_CD = D1.CLNT_CD   --거래처마스터
		 WHERE 1 = 1
		<if test="pchsClntNm != null and !pchsClntNm.equals('')">
			AND D1.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
		</if>
		<if test="pchsClmnDay != null and !pchsClmnDay.equals('')">
			AND NVL(A.SM10_CLMN_DAY, D1.PCHS_CLMN_DAY) =  #{pchsClmnDay}
		</if>				
		)
		, MI AS
		(
		 --미발행
		 SELECT DISTINCT A.CO_CD                      AS CO_CD
		      , A.PCHS_CLNT_CD                        AS CLNT_CD
			  , C.CLNT_NM                             AS CLNT_NM
			  , SUM(A.PCHS_QTY)                       AS PCHS_QTY    /* 수량 */
			  , SUM(A.PCHS_AMT)                       AS PCHS_AMT    /* 매입금액 */
			  , SUM(A.PCHS_VAT)                       AS PCHS_VAT    /* 부가세 */
			  , SUM(A.PCHS_AMT) + SUM(A.PCHS_VAT)     AS PCHS_TOT    /* 합계 */
			  , SUM(A.COMP_AMT)                       AS COMP_AMT    /* 매입금액 */
			  , SUM(A.COMP_VAT)                       AS COMP_VAT    /* 부가세 */
			  , SUM(A.COMP_TOT)                       AS COMP_TOT    /* 합계 */
			  , SUM(A.UNCOMP_AMT)                     AS UNCOMP_AMT  /* 수량 */
			  , SUM(A.UNCOMP_VAT)                     AS UNCOMP_VAT  /* 부가세 */
			  , SUM(A.UNCOMP_AMT) + SUM(A.UNCOMP_VAT) AS UNCOMP_TOT  /* 합계 */
			  , A.FILE_TRGT_KEY
			  , MIN(A.BILL_NO)                        AS BILL_NO
			  , MIN(A.BILL_DT)                        AS BILL_DT
			  , 'N'                                   AS BILL_YN
			  , MAX(A.PAY_YN)     					  AS PAY_YN
			  , MAX(A.PAY_PMNTMTD)   				  AS PAY_PMNTMTD
			  , FN_CM05M01_CD_TO_NM(MAX(A.PAY_PMNTMTD))  AS PAY_PMNTMTD_NM
			  , MAX(A.PAY_INTERVAL) 				  AS PAY_INTERVAL
			  , MAX(A.PAY_DT) 						  AS PAY_DT
			  , MAX(A.DEPT_ID) 						  AS DEPT_ID
			  , MAX(A.DEPT_NM) 						  AS DEPT_NM
			  , MAX(A.CTRT_NO) 						  AS CTRT_NO
		 FROM   TOT AS A
				LEFT OUTER JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD  --거래처마스터
		 WHERE  1 = 1
		 AND    A.BILL_YN = 'N'
		 <!-- 구매처 -->
		 <if test="pchsClntCd != null and !pchsClntCd.equals('')">
		 AND    A.PCHS_CLNT_CD = #{pchsClntCd}
		 </if>
		 GROUP BY A.CO_CD, C.CLNT_NM, A.PCHS_CLNT_CD, A.FILE_TRGT_KEY
		)
		, BILL AS
		(
		 --발행
		 SELECT DISTINCT A.CO_CD                      AS CO_CD
		      , A.PCHS_CLNT_CD                        AS CLNT_CD
			  , C.CLNT_NM                             AS CLNT_NM
			  , SUM(A.PCHS_QTY)                       AS PCHS_QTY    /* 수량 */
			  , SUM(A.PCHS_AMT)                       AS PCHS_AMT    /* 매입금액 */
			  , SUM(A.PCHS_VAT)                       AS PCHS_VAT    /* 부가세 */
			  , SUM(A.PCHS_AMT) + SUM(A.PCHS_VAT)     AS PCHS_TOT    /* 합계 */
			  , SUM(A.COMP_AMT)                       AS COMP_AMT    /* 매입금액 */
			  , SUM(A.COMP_VAT)                       AS COMP_VAT    /* 부가세 */
			  , SUM(A.COMP_TOT)                       AS COMP_TOT    /* 합계 */
			  , SUM(A.UNCOMP_AMT)                     AS UNCOMP_AMT  /* 수량 */
			  , SUM(A.UNCOMP_VAT)                     AS UNCOMP_VAT  /* 부가세 */
			  , SUM(A.UNCOMP_AMT) + SUM(A.UNCOMP_VAT) AS UNCOMP_TOT  /* 합계 */
			  , A.FILE_TRGT_KEY
			  , MIN(A.BILL_NO)                        AS BILL_NO
			  , MIN(A.BILL_DT)                        AS BILL_DT
			  , 'Y'                                   AS BILL_YN
			  , MAX(A.PAY_YN)     					  AS PAY_YN
			  , MAX(A.PAY_PMNTMTD)   				  AS PAY_PMNTMTD
			  , FN_CM05M01_CD_TO_NM(MAX(A.PAY_PMNTMTD))  AS PAY_PMNTMTD_NM
			  , MAX(A.PAY_INTERVAL) 				  AS PAY_INTERVAL
			  , MAX(A.PAY_DT) 						  AS PAY_DT
			  , MAX(A.DEPT_ID) 						  AS DEPT_ID
			  , MAX(A.DEPT_NM) 						  AS DEPT_NM
			  , MAX(A.CTRT_NO) 						  AS CTRT_NO
		 FROM   TOT AS A
				LEFT OUTER JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD  --거래처마스터
		 WHERE  1 = 1
		 AND    A.BILL_YN = 'Y'
		 <!-- 구매처 -->
		 <if test="pchsClntCd != null and !pchsClntCd.equals('')">
		 AND    A.PCHS_CLNT_CD = #{pchsClntCd}
		 </if>
		 <!-- 발행일자 -->
		 <!-- <if test="dtfrom != null and !dtfrom.equals('')">
		 	<if test="dtto != null and !dtto.equals('')">
			AND    A.BILL_DT_S BETWEEN #{dtfrom} AND #{dtto}
			</if>
		 </if> -->
		 GROUP BY A.CO_CD, C.CLNT_NM, A.PCHS_CLNT_CD, A.FILE_TRGT_KEY --세금계산서발행번호별 채번 : A.FILE_TRGT_KEY
		)
		, PAY AS
		(
		 --지급
		 SELECT A.CO_CD                      		  AS CO_CD
		      , A.PAY_YYMM                        	  AS PAY_YYMM
		      , A.CLNT_CD                        	  AS CLNT_CD
			  , A.CLNT_NM                             AS CLNT_NM
			  , A.BILL_NO                             AS BILL_NO
			  , NVL(SUM(A.PAY_AMT),0)                 AS PAY_AMT    /* 매입금액 */
			  , NVL(SUM(A.PAY_VAT),0)                 AS PAY_VAT    /* 부가세 */
			  , NVL(SUM(A.PAY_TOT),0)                 AS PAY_TOT    /* 합계 */
			  , MAX(A.PAY_DT)                         AS PAY_DT
			  , MAX(A.PAY_PMNTMTD)   				  AS PAY_PMNTMTD
			  , FN_CM05M01_CD_TO_NM(MAX(A.PAY_PMNTMTD))  AS PAY_PMNTMTD_NM
			  , MAX(A.CTRT_NO)                        AS CTRT_NO
		 FROM   TB_SM21M01 AS A
		 WHERE  1 = 1
		   AND  A.PAY_YYMM = #{closeYm}
		 <!-- 구매처 -->
		 <if test="pchsClntCd != null and !pchsClntCd.equals('')">
		   AND  A.CLNT_CD = #{pchsClntCd}
		 </if>
		<if test="pchsClntNm != null and !pchsClntNm.equals('')">
		   AND A.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
		</if>
		<if test="ctrtNo != null and !ctrtNo.equals('')">
		   AND A.CTRT_NO LIKE '%'||#{ctrtNo}||'%'   
		</if>
		   AND EXISTS (SELECT 1 FROM TOT WHERE TOT.BILL_NO = A.BILL_NO)
		 GROUP BY A.CO_CD, A.PAY_YYMM, A.CLNT_NM, A.CLNT_CD, A.BILL_NO
		)
		SELECT *
		FROM   (
		        SELECT A.*
		             , NVL(C.PAY_TOT,0)  				AS PAY_TOT /* 합계 */
		             , (A.COMP_TOT - NVL(C.PAY_TOT,0))  AS REM_TOT --미지급금합계
		             , ROWNUM AS RN
		        FROM   (
		                SELECT * FROM MI
		                UNION ALL
		                SELECT * FROM BILL
		               ) AS A
					LEFT OUTER JOIN PAY AS C ON A.BILL_NO = C.BILL_NO  --지급내역파일
		        WHERE  1 = 1
				<!-- 발행여부 -->
				<if test="billYn != null and !billYn.equals('')">
				AND    A.BILL_YN = #{billYn}
				</if>
		       ) AS A
		WHERE  1 = 1
	</select>
	

	<select id="sm20_main_grid3_selectList" parameterType="Map" resultType="camelMap">
		SELECT 
			   	 T.FILE_TRGT_KEY
			   , T.CO_CD
			   , TO_CHAR(TO_DATE(T.PAY_YYMM, 'YYYYMM'), 'YYYY-MM')		AS PAY_YYMM
			   , T.CLNT_CD
			   , T.CLNT_NM
			   , T.CRN
			   , T.REPST_NM
			   , TO_CHAR(T.PAY_DT, 'YYYY-MM-DD') 		AS PAY_DT
			   , T.PAY_PMNTMTD
			   , FN_CM05M01_CD_TO_NM(T.PAY_PMNTMTD) 	AS PAY_PMNTMTD_NM
			   , T.PAY_INTERVAL
			   , TO_CHAR(T.PAY_EXP_DT, 'YYYY-MM-DD') 	AS PAY_EXP_DT
			   , T.PAY_AMT
			   , T.PAY_VAT
			   , T.PAY_TOT
			   , T.PAY_RMK
			   , T.BILL_NO
			   , T.UPLOAD_ID
			   , FN_CM06M01_ID_TO_NM(T.UPLOAD_ID)		AS UPLOAD_ID_NM
			   , TO_CHAR(T.UPLOAD_DTTM, 'YYYY-MM-DD') 	AS UPLOAD_DTTM
			   , T.UPLOAD_SEQ
			   , T.PROC_YN
			   , T.CTRT_NO
		  FROM TB_SM21M01 T		
				 LEFT OUTER JOIN TB_SM20M01 P ON P.BILL_NO = T.BILL_NO /* 매입 확정 DETAIL */
		 WHERE 1 = 1
		 <!-- 회사코드 -->
		 <if test="coCd != null and !coCd.equals('')">
		   AND T.CO_CD = #{coCd}
		 </if>
		   AND T.CLNT_CD = #{pchsClntCd}
		 <!-- 확정일자 -->
		 <if test="pchsDtto != null and !pchsDtto.equals('')">
		   AND T.PAY_YYMM = substr(#{pchsDtto}, 0, 6)
		 </if>
		 <if test="billNo != null and !billNo.equals('')">
		   AND T.BILL_NO = #{billNo}
		 </if>
		<if test="ctrtNo != null and !ctrtNo.equals('')">
		   AND  (T.CTRT_NO LIKE '%'||#{ctrtNo}||'%'  OR T.CTRT_NO IS NULL)   
		</if>
		   OR T.BILL_NO IS NULL
		   ORDER BY T.PAY_DT, T.PAY_EXP_DT
	</select>
	
	<!-- 매입계산서 리스트  카운트 -->
	<select id="grid1_selectCount" parameterType="Map" resultType="int">
		WITH TOT AS
		(
		 --매입확정전체
		 SELECT DISTINCT D.CO_CD
		      , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.PCHS_CLNT_CD
			         WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN RM.PCHS_CLNT_CD
					                                     ELSE C.PCHS_CLNT_CD
				END AS PCHS_CLNT_CD
			  , D.ORDRG_NO
			  , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD
			         WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN R.SALES_CD
					                                     ELSE C.SALES_CD
				END AS SALES_CD
			  , D.PCHS_DT AS ORDRG_DT
			  , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD
			         WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN R.DSGN_NO
					                                     ELSE C.SALES_CD
				END AS DSGN_NO
			  , 1 AS ORDRG_QTY            /*발주수량 */
			  , M.ORDRG_AMT AS ORDRG_AMT  /*발주 금액 */
			  , PCHS_NO     AS PCHS_NO    /*매입확정번호 */
			  , D.PCHS_AMT  AS PCHS_AMT   /* 매입금액 */
			  , D.PCHS_VAT  AS PCHS_VAT   /* 부가세 */
			  , D.PCHS_QTY  AS PCHS_QTY   /* 수량 */
			  , TO_CHAR(D.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
			  , D.CMPLET_YN AS CMPLET_YN  /* 확정여부 */
			  , D.BILL_YN   AS BILL_YN    /*계산서 여부*/
			  , DECODE(D.BILL_YN,'Y',PCHS_AMT) AS COMP_AMT
			  , DECODE(D.BILL_YN,'Y',PCHS_VAT) AS COMP_VAT
			  , DECODE(D.BILL_YN,'N',PCHS_AMT) AS UNCOMP_AMT
			  , DECODE(D.BILL_YN,'N',PCHS_VAT) AS UNCOMP_VAT
			  , NVL(D.BILL_NO, '') AS BILL_NO
			  , TO_CHAR(B.BILL_DT, 'YYYY-MM-DD') AS BILL_DT
			  , B.FILE_TRGT_KEY
		 FROM   TB_SM12D01 AS D  /* 매입 DETAIL */
		        LEFT OUTER JOIN TB_SM02M01 AS M  ON (D.ORDRG_NO = M.ORDRG_NO)  /* 발주마스터 */
				LEFT OUTER JOIN TB_SM20M01 AS B  ON (B.CO_CD = D.CO_CD AND B.BILL_NO = D.BILL_NO)  /* 매입계산서 */
				LEFT OUTER JOIN TB_SM10M01 AS C  ON (D.ORDRG_NO = C.COST_NO)  /* 비용마스터 */
				LEFT OUTER JOIN TB_SM06D01 AS R  ON (D.ORDRG_NO = R.RET_NO)  /* 반품 상세 */
				LEFT OUTER JOIN TB_SM06M01 AS RM ON (RM.CO_CD = R.CO_CD AND RM.RET_NO = R.RET_NO)  /* 반품 상세 */
		 WHERE  1 = 1
		 <!-- 회사코드 -->
		 <if test="coCd != null and !coCd.equals('')">
		 AND    D.CO_CD = #{coCd}
		 </if>
		)
		, MI AS
		(
		 --미발행
		 SELECT DISTINCT A.CO_CD                      AS CO_CD
		      , A.PCHS_CLNT_CD                        AS CLNT_CD
			  , C.CLNT_NM                             AS CLNT_NM
			  , SUM(A.PCHS_QTY)                       AS PCHS_QTY    /* 수량 */
			  , SUM(A.PCHS_AMT)                       AS PCHS_AMT    /* 매입금액 */
			  , SUM(A.PCHS_VAT)                       AS PCHS_VAT    /* 부가세 */
			  , SUM(A.PCHS_AMT) + SUM(A.PCHS_VAT)     AS PCHS_TOT    /* 합계 */
			  , SUM(A.COMP_AMT)                       AS COMP_AMT    /* 매입금액 */
			  , SUM(A.COMP_VAT)                       AS COMP_VAT    /* 부가세 */
			  , SUM(A.COMP_AMT) + SUM(A.COMP_VAT)     AS COMP_TOT    /* 합계 */
			  , SUM(A.UNCOMP_AMT)                     AS UNCOMP_AMT  /* 수량 */
			  , SUM(A.UNCOMP_VAT)                     AS UNCOMP_VAT  /* 부가세 */
			  , SUM(A.UNCOMP_AMT) + SUM(A.UNCOMP_VAT) AS UNCOMP_TOT  /* 합계 */
			  , A.FILE_TRGT_KEY
			  , MIN(A.BILL_NO)                        AS BILL_NO
			  , 'N'                                   AS BILL_YN
		 FROM   TOT AS A
		        LEFT OUTER JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD  --거래처마스터
		 WHERE  1 = 1
		 AND    A.BILL_NO IS NULL
		 <!-- 구매처 -->
		 <if test="clntCd != null and !clntCd.equals('')">
		 AND    A.PCHS_CLNT_CD = #{clntCd}
		 </if>
		 <if test="clntNm != null and !clntNm.equals('')">
		 AND    C.CLNT_NM LIKE '%'||#{clntNm}||'%'
		 </if>
		 GROUP BY A.CO_CD, A.PCHS_CLNT_CD, C.CLNT_NM, A.FILE_TRGT_KEY
		)
		, BILL AS
		(
		 --발행
		 SELECT DISTINCT A.CO_CD                      AS CO_CD
		      , A.PCHS_CLNT_CD                        AS CLNT_CD
			  , C.CLNT_NM                             AS CLNT_NM
			  , SUM(A.PCHS_QTY)                       AS PCHS_QTY    /* 수량 */
			  , SUM(A.PCHS_AMT)                       AS PCHS_AMT    /* 매입금액 */
			  , SUM(A.PCHS_VAT)                       AS PCHS_VAT    /* 부가세 */
			  , SUM(A.PCHS_AMT) + SUM(A.PCHS_VAT)     AS PCHS_TOT    /* 합계 */
			  , SUM(A.COMP_AMT)                       AS COMP_AMT    /* 매입금액 */
			  , SUM(A.COMP_VAT)                       AS COMP_VAT    /* 부가세 */
			  , SUM(A.COMP_AMT) + SUM(A.COMP_VAT)     AS COMP_TOT    /* 합계 */
			  , SUM(A.UNCOMP_AMT)                     AS UNCOMP_AMT  /* 수량 */
			  , SUM(A.UNCOMP_VAT)                     AS UNCOMP_VAT  /* 부가세 */
			  , SUM(A.UNCOMP_AMT) + SUM(A.UNCOMP_VAT) AS UNCOMP_TOT  /* 합계 */
			  , A.FILE_TRGT_KEY
			  , MIN(A.BILL_NO)                        AS BILL_NO
			  , 'Y'                                   AS BILL_YN
		 FROM   TOT AS A
		        LEFT OUTER JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD  --거래처마스터
		 WHERE  1 = 1
		 AND    A.BILL_NO IS NOT NULL
		 <!-- 구매처 -->
		 <if test="clntCd != null and !clntCd.equals('')">
		 AND    A.PCHS_CLNT_CD = #{clntCd}
		 </if>
		 <if test="clntNm != null and !clntNm.equals('')">
		 AND    C.CLNT_NM LIKE '%'||#{clntNm}||'%'
		 </if>
		 <!-- 발행일자 -->
		 <if test="dtfrom != null and !dtfrom.equals('')">
		 	<if test="dtto != null and !dtto.equals('')">
			AND    A.BILL_DT BETWEEN #{dtfrom} AND #{dtto}
			</if>
		 </if>
		 GROUP BY A.CO_CD, A.PCHS_CLNT_CD, C.CLNT_NM, A.FILE_TRGT_KEY
		)
		SELECT COUNT(*)
		FROM   (
		        SELECT A.*
		             , ROWNUM AS RN
		        FROM   (
		                SELECT * FROM MI
		                UNION ALL
		                SELECT * FROM BILL
		               ) AS A
		        WHERE  1 = 1
				<!-- 발행여부 -->
				<if test="billYn != null and !billYn.equals('')">
				AND    A.BILL_YN LIKE #{billYn}
				</if>
		       ) AS A
		WHERE  1 = 1
	</select>

	<!-- 매입계산서 리스트  -->
	<select id="grid1_selectList" parameterType="Map" resultType="camelMap">
		WITH TOT AS
		(
		 --매입확정전체
		 SELECT DISTINCT D.CO_CD
		      , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.PCHS_CLNT_CD
			         WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN RM.PCHS_CLNT_CD
					                                     ELSE C.PCHS_CLNT_CD
				END AS PCHS_CLNT_CD
			  , D.ORDRG_NO
			  , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD
			         WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN R.SALES_CD
					                                     ELSE C.SALES_CD
				END AS SALES_CD
			  , D.PCHS_DT AS ORDRG_DT
			  , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD
			         WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN R.DSGN_NO
					                                     ELSE C.SALES_CD
				END AS DSGN_NO
			  , 1 AS ORDRG_QTY            /*발주수량 */
			  , M.ORDRG_AMT AS ORDRG_AMT  /*발주 금액 */
			  , PCHS_NO     AS PCHS_NO    /*매입확정번호 */
			  , D.PCHS_AMT  AS PCHS_AMT   /* 매입금액 */
			  , D.PCHS_VAT  AS PCHS_VAT   /* 부가세 */
			  , D.PCHS_QTY  AS PCHS_QTY   /* 수량 */
			  , TO_CHAR(D.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
			  , D.CMPLET_YN AS CMPLET_YN  /* 확정여부 */
			  , D.BILL_YN   AS BILL_YN    /*계산서 여부*/
			  , DECODE(D.BILL_YN, 'Y', B.BILL_AMT) AS COMP_AMT
			  , DECODE(D.BILL_YN, 'Y', B.BILL_VAT) AS COMP_VAT
			  , DECODE(D.BILL_YN, 'N', D.PCHS_AMT) AS UNCOMP_AMT
			  , DECODE(D.BILL_YN, 'N', D.PCHS_VAT) AS UNCOMP_VAT
			  , NVL(D.BILL_NO, '') AS BILL_NO
			  , TO_CHAR(B.BILL_DT, 'YYYY-MM-DD') AS BILL_DT
			  , NVL(B.FILE_TRGT_KEY, 0) AS FILE_TRGT_KEY
		 FROM   TB_SM12D01 AS D  /* 매입 DETAIL */
		        LEFT OUTER JOIN TB_SM02M01 AS M  ON (D.ORDRG_NO = M.ORDRG_NO)  /* 발주마스터 */
				LEFT OUTER JOIN TB_SM20M01 AS B  ON (B.CO_CD = D.CO_CD AND B.BILL_NO = D.BILL_NO)  /* 매입계산서 */
				LEFT OUTER JOIN TB_SM10M01 AS C  ON (D.ORDRG_NO = C.COST_NO)  /* 비용마스터 */
				LEFT OUTER JOIN TB_SM06D01 AS R  ON (D.ORDRG_NO = R.RET_NO)  /* 반품 상세 */
				LEFT OUTER JOIN TB_SM06M01 AS RM ON (RM.CO_CD = R.CO_CD AND RM.RET_NO = R.RET_NO)  /* 반품 상세 */
		 WHERE  1 = 1
		 <!-- 회사코드 -->
		 <if test="coCd != null and !coCd.equals('')">
		 AND    D.CO_CD = #{coCd}
		 </if>
		)
		, MI AS
		(
		 --미발행
		 SELECT DISTINCT A.CO_CD                      AS CO_CD
		      , A.PCHS_CLNT_CD                        AS CLNT_CD
			  , C.CLNT_NM                             AS CLNT_NM
			  , SUM(A.PCHS_QTY)                       AS PCHS_QTY    /* 수량 */
			  , SUM(A.PCHS_AMT)                       AS PCHS_AMT    /* 매입금액 */
			  , SUM(A.PCHS_VAT)                       AS PCHS_VAT    /* 부가세 */
			  , SUM(A.PCHS_AMT) + SUM(A.PCHS_VAT)     AS PCHS_TOT    /* 합계 */
			  , SUM(A.COMP_AMT)                       AS COMP_AMT    /* 매입금액 */
			  , SUM(A.COMP_VAT)                       AS COMP_VAT    /* 부가세 */
			  , SUM(A.COMP_AMT) + SUM(A.COMP_VAT)     AS COMP_TOT    /* 합계 */
			  , SUM(A.UNCOMP_AMT)                     AS UNCOMP_AMT  /* 수량 */
			  , SUM(A.UNCOMP_VAT)                     AS UNCOMP_VAT  /* 부가세 */
			  , SUM(A.UNCOMP_AMT) + SUM(A.UNCOMP_VAT) AS UNCOMP_TOT  /* 합계 */
			  , A.FILE_TRGT_KEY
			  , MIN(A.BILL_NO)                        AS BILL_NO
			  , MIN(A.BILL_DT)                        AS BILL_DT
			  , 'N'                                   AS BILL_YN
			  , NVL(MIN(B.PAY_YN), '')               AS PAY_YN
		 FROM   TOT AS A
		        LEFT OUTER JOIN TB_SM20M01 AS B  ON A.CO_CD   = B.CO_CD
		                                        AND A.BILL_NO = B.BILL_NO
				LEFT OUTER JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD  --거래처마스터
		 WHERE  1 = 1
		 AND    A.BILL_NO IS NULL
		 <!-- 구매처 -->
		 <if test="clntCd != null and !clntCd.equals('')">
		 AND    A.PCHS_CLNT_CD = #{clntCd}
		 </if>
		 <if test="clntNm != null and !clntNm.equals('')">
		 AND    C.CLNT_NM LIKE '%'||#{clntNm}||'%'
		 </if>
		 GROUP BY A.CO_CD, A.PCHS_CLNT_CD, C.CLNT_NM, A.FILE_TRGT_KEY
		)
		, BILL AS
		(
		 --발행
		 SELECT DISTINCT A.CO_CD                      AS CO_CD
		      , A.PCHS_CLNT_CD                        AS CLNT_CD
			  , C.CLNT_NM                             AS CLNT_NM
			  , SUM(A.PCHS_QTY)                       AS PCHS_QTY    /* 수량 */
			  , SUM(A.PCHS_AMT)                       AS PCHS_AMT    /* 매입금액 */
			  , SUM(A.PCHS_VAT)                       AS PCHS_VAT    /* 부가세 */
			  , SUM(A.PCHS_AMT) + SUM(A.PCHS_VAT)     AS PCHS_TOT    /* 합계 */
			  , SUM(A.COMP_AMT)                       AS COMP_AMT    /* 매입금액 */
			  , SUM(A.COMP_VAT)                       AS COMP_VAT    /* 부가세 */
			  , SUM(A.COMP_AMT) + SUM(A.COMP_VAT)     AS COMP_TOT    /* 합계 */
			  , SUM(A.UNCOMP_AMT)                     AS UNCOMP_AMT  /* 수량 */
			  , SUM(A.UNCOMP_VAT)                     AS UNCOMP_VAT  /* 부가세 */
			  , SUM(A.UNCOMP_AMT) + SUM(A.UNCOMP_VAT) AS UNCOMP_TOT  /* 합계 */
			  , A.FILE_TRGT_KEY
			  , MIN(A.BILL_NO)                        AS BILL_NO
			  , MIN(A.BILL_DT)                        AS BILL_DT
			  , 'Y'                                   AS BILL_YN
			  , NVL(MIN(B.PAY_YN), 'N')               AS PAY_YN
		 FROM   TOT AS A
		        LEFT OUTER JOIN TB_SM20M01 AS B  ON A.CO_CD   = B.CO_CD
		                                        AND A.BILL_NO = B.BILL_NO
				LEFT OUTER JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD  --거래처마스터
		 WHERE  1 = 1
		 AND    A.BILL_NO IS NOT NULL
		 <!-- 구매처 -->
		 <if test="clntCd != null and !clntCd.equals('')">
		 AND    A.PCHS_CLNT_CD = #{clntCd}
		 </if>
		 <if test="clntNm != null and !clntNm.equals('')">
		 AND    C.CLNT_NM LIKE '%'||#{clntNm}||'%'
		 </if>
		 <!-- 발행일자 -->
		 <if test="dtfrom != null and !dtfrom.equals('')">
		 	<if test="dtto != null and !dtto.equals('')">
			AND    A.BILL_DT BETWEEN #{dtfrom} AND #{dtto}
			</if>
		 </if>
		 GROUP BY A.CO_CD, A.PCHS_CLNT_CD, C.CLNT_NM, A.FILE_TRGT_KEY
		)
		SELECT *
		FROM   (
		        SELECT A.*
		             , ROWNUM AS RN
		        FROM   (
		                SELECT * FROM MI
		                UNION ALL
		                SELECT * FROM BILL
		               ) AS A
		        WHERE  1 = 1
				<!-- 발행여부 -->
				<if test="billYn != null and !billYn.equals('')">
				AND    A.BILL_YN LIKE #{billYn}
				</if>
		       ) AS A
		WHERE  1 = 1
		AND    A.RN BETWEEN ${firstIndex} AND ${lastIndex}
		ORDER BY A.CO_CD, A.CLNT_CD, A.CLNT_NM, A.FILE_TRGT_KEY
	</select>
	
	<!-- 수정팝업 조회 -->
    <select id="select_sm20_Info" parameterType="Map" resultType="camelMap">
		SELECT DISTINCT A.FILE_TRGT_KEY
		     , A.CO_CD
		     , A.BILL_NO
		     , A.CLNT_CD
		     , S.CLNT_NM AS CLNT_NM
		     , TO_CHAR(A.BILL_DT, 'YYYY-MM-DD') AS BILL_DT
		     , A.CURR_CD
		     , NVL(A.EXRATE, 1) AS EXRATE
		     , NVL(A.BILL_AMT, 0) AS BILL_AMT
			 , NVL(A.BILL_AMT, 0) AS PRINT_AMT
		     , NVL(A.BILL_QTY, 0) AS BILL_QTY
		     , NVL(A.BILL_PRC, 0) AS BILL_PRC
		     , NVL(A.BILL_VAT, 0) AS BILL_VAT
		     , NVL(A.BILL_TOT, 0) AS BILL_TOT
			 , NVL(A.BILL_TOT, 0) AS PRINT_SUM_AMT
		     , NVL(A.PAY_YN, 'N') AS PAY_YN
		     , A.BILL_SUMRMK
		     , A.BILL_RMK
		     , A.BILL_RMK1
		     , A.BILL_RMK2
		     , A.BILL_RMK3
		     , A.BILL_GOODS
		     , A.BILL_SPEC
		     , A.UDT_RESN
		     , 'U' AS DATA_CHK
		     , A.DEPT_ID
		     , CE.DEPT_NM
		FROM   TB_SM20M01 AS A
               LEFT OUTER JOIN TB_BM02M01 AS S ON S.CLNT_CD = A.CLNT_CD
			   LEFT OUTER JOIN TB_CM04M01 CE ON CE.DEPT_ID = SUBSTRING(A.DEPT_ID,0,5)
		WHERE  1 = 1
		AND    A.FILE_TRGT_KEY = #{fileTrgtKey}
    </select>

	<!-- 수정팝업 그리드 조회 -->
	<select id="select_sm20_Info_Dtl" parameterType="Map" resultType="camelMap">
		WITH BILL AS
		(
		 --계산서 상세
		 SELECT A.CO_CD
		      , A.BILL_NO
		      , A.PCHS_NO
		      , A.PCHS_SEQ
		      , A.ORDRG_NO
		      , A.ORDRG_SEQ
		      , M.CLNT_CD
		      , S.CLNT_NM AS CLNT_NM
		      , TO_CHAR(M.BILL_DT, 'YYYY-MM-DD') AS BILL_DT
		      , A.SALES_CD
		      , A.CURR_CD
		      , A.EXRATE
		      , A.BILL_DTL_AMT
		      , A.BILL_DTL_VAT
		      , A.BILL_DTL_TOT
		      , A.BILL_DTL_RMK
		      , M.FILE_TRGT_KEY
		      , A.ETC_FIELD1
		      , A.ETC_FIELD2
		      , A.ETC_FIELD3
		      , A.CREAT_ID
		      , (SELECT FN_CM06M01_ID_TO_NM(A.CREAT_ID) FROM DUAL) AS CREAT_ID_NM
		      , A.CREAT_PGM
		      , A.CREAT_DTTM
		 FROM   TB_SM20D01 AS A
		        LEFT OUTER JOIN TB_SM20M01 AS M  ON M.CO_CD   = A.CO_CD
		                                        AND M.BILL_NO = A.BILL_NO
		        LEFT OUTER JOIN TB_BM02M01 AS S  ON S.CLNT_CD = M.CLNT_CD
		 WHERE  1 = 1
		 <if test="coCd != null and !coCd.equals('')">
		 AND    A.CO_CD = #{coCd}
		 </if>
		 <if test="billNo != null and !billNo.equals('')">
		 AND    A.BILL_NO = #{billNo}
		 </if>
		)
		, BAL AS
		(
		 --발주집계
		 SELECT A.CO_CD
		      , A.ORDRG_NO
			  , A.SALES_CD
			  , SUM(A.ORDRG_QTY) AS ORDRG_QTY
			  , SUM(A.ORDRG_AMT) AS ORDRG_AMT
			  , MIN(A.DSGN_NO)   AS DSGN_NO
		 FROM   TB_SM02D01 AS A
		 WHERE  1 = 1
		 AND    EXISTS (SELECT 1 FROM BILL WHERE BILL.ORDRG_NO = A.ORDRG_NO)
		 GROUP BY A.CO_CD, A.ORDRG_NO, A.SALES_CD
		)
		SELECT DISTINCT A.CO_CD
		     , A.PCHS_NO
			 , A.PCHS_SEQ
			 , A.ORDRG_NO
			 , A.ORDRG_SEQ
			 , B.DSGN_NO
			 , A.SALES_CD
			 , A.CLNT_CD
			 , A.CLNT_NM
			 , ''  AS MATR_CD
			 , 0   AS ORDRG_QTY
			 , 0   AS ORDRG_AMT
			 , ''  AS ORDRG_DT
			 , NVL(I.PCHS_AMT, 0) AS PCHS_AMT
			 , NVL(I.PCHS_VAT, 0) AS PCHS_VAT
			 , NVL(I.PCHS_QTY, 0) AS PCHS_QTY
			 , NVL(I.PCHS_AMT, 0) + NVL(I.PCHS_VAT, 0) AS PCHS_SUM_AMT
			 , 0   AS BAL_TOT_AMT
			 , 0   AS BAL_TOT_VAT
			 , 0   AS REMAIN_AMT
			 , TO_CHAR(I.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
			 , 'Y' AS CMPLET_YN
			 , ''  AS IS_COST
			 , 'Y' AS BILL_YN
			 , A.FILE_TRGT_KEY
			 , A.CREAT_ID_NM
			 , A.BILL_NO AS BILL_NO
			 , A.BILL_DT
			 , 'N' AS CHK
			 , 0   AS BILL_AMT
			 , 'U' AS DATA_CHK
			 , NVL(A.BILL_DTL_AMT, 0) AS BILL_DTL_AMT
		     , NVL(A.BILL_DTL_VAT, 0) AS BILL_DTL_VAT
		     , NVL(A.BILL_DTL_TOT, 0) AS BILL_DTL_TOT
			 , C.CTRT_NO				--외주계약번호
			 , C.CTRT_NO_SEQ			--외주계약일련번호
		FROM   BILL AS A
		       LEFT OUTER JOIN BAL AS B  ON A.CO_CD    = B.CO_CD
										AND A.ORDRG_NO = B.ORDRG_NO
			   LEFT OUTER JOIN TB_SM10M01 AS C  ON A.ORDRG_NO = C.COST_NO	--구매비용
			   LEFT OUTER JOIN TB_SM12D01 AS I  ON I.CO_CD     = A.CO_CD
		                                       AND I.PCHS_NO   = A.PCHS_NO
		                                       AND I.PCHS_SEQ  = A.PCHS_SEQ
		                                       AND I.ORDRG_NO  = A.ORDRG_NO
		                                       AND I.ORDRG_SEQ = A.ORDRG_SEQ
		WHERE  1 = 1
		ORDER BY A.CO_CD, A.SALES_CD ASC
    </select>

	<select id="select_sm20_insert_target_modal" parameterType="Map" resultType="camelMap">
		WITH IPGO AS
		(
		 --입고
		 SELECT D.*
		      , D1.CLNT_NM 		AS CLNT_NM 
			  , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN 'N' ELSE 'Y' END AS IS_COST
			  , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN '' ELSE C.ORDRS_NO END AS ORDRS_NO
			  , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD ELSE C.SALES_CD END AS SALES_CD
			  , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.PCHS_CLNT_CD ELSE C.PCHS_CLNT_CD END AS PCHS_CLNT_CD
			  , CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.FILE_TRGT_KEY ELSE C.FILE_TRGT_KEY END AS FILE_TRGT_KEY
			  , (SELECT FN_CM06M01_ID_TO_NM(D.CREAT_ID) FROM DUAL) AS CREAT_ID_NM
			  , NVL(R5.CODE_RPRC,10) 		AS VAT_RATE	--설정 없으면 무조건 10%부가세 적용
			  , M1.DEPT_ID							    AS DEPT_ID
			  , CE.DEPT_NM					   			AS DEPT_NM
			, D1.PCHS_CLMN_DAY		--거래처 정보의 결재일
			, DECODE (substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_CLMN_DAY, '') 		AS SM10_CLMN_DAY	--비용처리시 결재일자
			, DECODE (substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_CLMN_DIV_CD, '') 	AS SM10_CLMN_DIV_CD
			, DECODE (substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_PMNT_MTD_CD, '') 	AS SM10_PMNT_MTD_CD
			, DECODE (substr(D.ORDRG_NO,0,3), 'COS', 'COST', '') 				AS SM10_CLMN_RMK
			, C.PCHS_COST_DIV10							AS PCHS_COST_DIV10
			, C.CTRT_NO				--외주계약번호
			, C.CTRT_NO_SEQ			--외주계약일련번호
		 FROM   TB_SM12D01 AS D		--매입처리마스터
				LEFT OUTER JOIN TB_SM12M01 AS M1 ON (D.PCHS_NO = M1.PCHS_NO)  /* 매입확정마스터 */
		        LEFT OUTER JOIN TB_SM02M01 AS M  ON D.ORDRG_NO = M.ORDRG_NO	--발주
				LEFT OUTER JOIN TB_SM10M01 AS C  ON D.ORDRG_NO = C.COST_NO	--구매비용
				LEFT OUTER JOIN TB_BM02M01 AS D1 ON D.CLNT_CD = D1.CLNT_CD	--공급사
                LEFT OUTER JOIN TB_CM05M01 AS R5 ON R5.CODE_ID = D1.PCHS_VAT_CD		--부가세% 
				LEFT OUTER JOIN TB_CM04M01 CE ON CE.DEPT_ID = SUBSTRING(M1.DEPT_ID,0,5)
				LEFT OUTER JOIN TB_BM02M01 D1 ON D.CLNT_CD = D1.CLNT_CD   --거래처마스터
		 WHERE  1 = 1
		 AND    D.BILL_NO IS NULL
		 <if test="coCd != null and !coCd.equals('')">
		 AND    D.CO_CD = #{coCd}
		 </if>
		 <!-- 확정일자 -->
		 <if test="pchsDtfrom != null and !pchsDtfrom.equals('')">
		 	<if test="pchsDtto != null and !pchsDtto.equals('')">
		 AND    D.PCHS_DT BETWEEN #{pchsDtfrom} AND #{pchsDtto}
			</if>
		 </if>
		 <if test="deptId !=null and !deptId.equals('')">
			 <if test="deptId.equals('TRN50')">
			 AND SUBSTRING(M1.DEPT_ID,0,5) = #{deptId}
			 </if>
			 <if test="!deptId.equals('TRN50')">
			 AND SUBSTRING(M1.DEPT_ID,0,5) != 'TRN50'
			 </if>
		 </if>		
	 <if test="trunDiv != null and !trunDiv.equals('')">
	 	<if test="trunDiv.equals('PCHSCOSTDIV1030')">
		AND NVL(C.PCHS_COST_DIV10,'A') =  #{trunDiv}  --기타비용의 경우 턴키(PCHSCOSTDIV1030)인 경우만 처리됨
		</if>	
		<if test="!trunDiv.equals('PCHSCOSTDIV1030')">
	 	AND NVL(C.PCHS_COST_DIV10,'A') !=  'PCHSCOSTDIV1030'  --기타비용의 경우 턴키(PCHSCOSTDIV1030)가 아닌것
		 </if> 
	 </if>	 
		<if test="pchsClmnDay != null and !pchsClmnDay.equals('')">
		AND DECODE(substr(D.ORDRG_NO,0,3), 'COS', C.PCHS_CLMN_DAY, D1.PCHS_CLMN_DAY)  =  #{pchsClmnDay}
		</if>		
		<if test="clntCd != null and !clntCd.equals('')">
		AND    D.CLNT_CD = #{clntCd}
		</if>
		<if test="clntNm != null and !clntNm.equals('')">
		AND    D1.CLNT_NM LIKE  '%${clntNm}%'
		</if>
		)
		, IPGOTOT AS
		(
		 --매입확정집계
		 SELECT CO_CD
		      , ORDRG_NO
			  , SUM(PCHS_AMT) AS BAL_TOT_AMT
			  , SUM(PCHS_VAT) AS BAL_TOT_VAT
			  , SUM(PCHS_QTY) AS BAL_TOT_QTY
		 FROM   TB_SM12D01 AS A
		 WHERE  1 = 1
		 AND    EXISTS (SELECT 1 FROM IPGO WHERE IPGO.ORDRG_NO = A.ORDRG_NO)
		 GROUP BY CO_CD, ORDRG_NO
		)
		, BAL AS
		(
		 --발주집계
		 SELECT A.CO_CD
		      , A.ORDRG_NO
			  , A.SALES_CD
			  , SUM(A.ORDRG_QTY) AS ORDRG_QTY
			  , SUM(A.ORDRG_AMT) AS ORDRG_AMT
			  , MIN(A.DSGN_NO)   AS DSGN_NO
		 FROM   TB_SM02D01 AS A
		 WHERE  1 = 1
		 AND    EXISTS (SELECT 1 FROM IPGO WHERE IPGO.ORDRG_NO = A.ORDRG_NO)
		 GROUP BY A.CO_CD, A.ORDRG_NO, A.SALES_CD
		)
		SELECT DISTINCT A.CO_CD
		     , A.PCHS_NO
			 , A.PCHS_SEQ
			 , A.ORDRG_NO
			 , A.ORDRG_SEQ
			 , A.DSGN_NO
			 , A.SALES_CD
			 , A.CLNT_CD
			 , A.CLNT_NM
			 , A.MATR_CD
			 , A.ORDRG_QTY
			 , A.ORDRG_AMT
			 , A.ORDRG_DT
			 , A.PCHS_AMT
			 , A.PCHS_VAT
			 , A.PCHS_QTY
			 , NVL(A.PCHS_AMT, 0) + NVL(A.PCHS_VAT, 0) AS PCHS_SUM_AMT
			 , A.BAL_TOT_AMT
			 , A.BAL_TOT_VAT
			 , A.REMAIN_AMT AS REMAIN_AMT
			 , TO_CHAR(A.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
			 , A.CMPLET_YN
			 , A.IS_COST
			 , A.BILL_YN
			 , A.FILE_TRGT_KEY
			 , A.CREAT_ID_NM
			 , ''  AS BILL_NO
			 , ''  AS BILL_DT
			 , 'N' AS CHK
			 , 0   AS BILL_AMT
			 , 'I' AS DATA_CHK
			 , 0   AS BILL_DTL_AMT
			 , 0   AS BILL_DTL_VAT
			 , 0   AS BILL_DTL_TOT
			 , A.VAT_RATE
			 , A.CTRT_NO				--외주계약번호
			 , A.CTRT_NO_SEQ			--외주계약일련번호
		FROM   (
			    SELECT A.CO_CD
					, A.ORDRG_NO
					, A.ORDRG_SEQ
					, NVL(A.SALES_CD, '.') AS SALES_CD
					, A.CLNT_CD
					, A.CLNT_NM
					, '' AS MATR_CD --자재명 없음
					, A.PCHS_DT AS ORDRG_DT
					, D.DSGN_NO  AS DSGN_NO
					, E.BAL_TOT_AMT
					, E.BAL_TOT_VAT
					, D.ORDRG_QTY AS ORDRG_QTY
					, D.ORDRG_AMT AS ORDRG_AMT
					, D.ORDRG_AMT - E.BAL_TOT_AMT AS REMAIN_AMT
					, A.PCHS_NO   AS PCHS_NO
					, A.PCHS_AMT  AS PCHS_AMT
					, A.PCHS_VAT AS PCHS_VAT
					, A.PCHS_QTY AS PCHS_QTY
					, A.PCHS_DT
					, A.CMPLET_YN AS CMPLET_YN
					, DECODE(A.CMPLET_YN, 'Y', 'Y', 'N') AS USER_CHK_V
					, A.IS_COST AS IS_COST
					, A.BILL_YN AS BILL_YN
					, A.FILE_TRGT_KEY
					, A.PCHS_SEQ
					, A.CREAT_ID_NM
					, A.VAT_RATE
					, A.CTRT_NO				--외주계약번호
					, A.CTRT_NO_SEQ			--외주계약일련번호
				FROM   IPGO AS A
				       LEFT OUTER JOIN BAL AS D  ON A.CO_CD    = D.CO_CD
												AND A.ORDRG_NO = D.ORDRG_NO
				       LEFT OUTER JOIN IPGOTOT AS E  ON A.CO_CD    = E.CO_CD
													AND A.ORDRG_NO = E.ORDRG_NO
				WHERE  1 = 1
		       ) AS A
		WHERE  1 = 1
		ORDER BY A.CO_CD, A.ORDRG_DT ASC, A.ORDRG_NO DESC, A.SALES_CD DESC, A.PCHS_NO DESC
    </select>

	<!-- 파일키 MAX + 1 채번 -->
	<select id="select_sm20_SeqNext" parameterType="Map" resultType="int">
		SELECT NVL(MAX(TO_NUMBER(FILE_TRGT_KEY)),0) + 1
		FROM   TB_SM20M01
	</select>

	<!-- 수불키 채번 -->
	<select id="select_sm20_Ioseq" parameterType="Map" resultType="int">
		SELECT TB_BM30M01_SQ01.NEXTVAL
		FROM   DUAL
	</select>

	<!-- 관리번호 채번 -->
	<select id="select_sm20_Next_MNGM_NO" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT CASE WHEN MAX(BILL_NO) IS NULL THEN 'BILL'||SUBSTR(#{billDt}, 3, 2)||'00001'
		                                      ELSE 'BILL'||SUBSTR(#{billDt}, 3, 2)||LPAD(TO_NUMBER(SUBSTR(MAX(BILL_NO), -5)) + 1, 5, 0)
			   END AS MNGM_NO
		FROM   TB_SM20M01
		WHERE  1 = 1
		AND    BILL_DT LIKE SUBSTR(#{billDt}, 0, 4)||'%'
    </select>

	<!-- BILL개별 건별_YN 수정 -->
	<update id="update_sm20_payYn" parameterType="Map">
		UPDATE TB_SM20M01
		SET    PAY_YN 		= #{payYn, jdbcType=VARCHAR}
			 , PAY_PMNTMTD  = #{payPmntmtd, jdbcType=VARCHAR}
			 , PAY_INTERVAL = #{payInterval, jdbcType=VARCHAR}
			 , PAY_DT   	= #{payDt, jdbcType=VARCHAR}
			 , UDT_ID   	= #{userId}
			 , UDT_PGM  	= #{pgmId}
			 , UDT_DTTM 	= SYSDATE
		WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
	</update>
	
	<!-- insert -->
    <insert id="insert_sm20" parameterType="Map">
        INSERT INTO TB_SM20M01
		( FILE_TRGT_KEY
		, CO_CD
		, BILL_NO
		, CLNT_CD
		, BILL_DT
		, CURR_CD
		, EXRATE
		, BILL_AMT
		, PAY_YN
		, BILL_SUMRMK
		, BILL_RMK
		, BILL_RMK1
		, BILL_RMK2
		, BILL_RMK3
		, BILL_GOODS
		, BILL_SPEC
		, BILL_QTY
		, BILL_PRC
		, BILL_VAT
		, BILL_TOT
		, UDT_RESN
		, ETC_FIELD1
		, ETC_FIELD2
		, ETC_FIELD3
		, CREAT_ID
		, CREAT_PGM
		, CREAT_DTTM
		)
		VALUES
		( #{fileTrgtKey}
		, #{coCd}
		, #{billNo}
		, #{clntCd}
		, #{billDt}
		, #{currCd}
		, 1
		, #{billAmt}
		, 'N'
		, #{billSumrmk, jdbcType=VARCHAR}
		, #{billRmk,    jdbcType=VARCHAR}
		, #{billRmk1,   jdbcType=VARCHAR}
		, #{billRmk2,   jdbcType=VARCHAR}
		, #{billRmk3,   jdbcType=VARCHAR}
		, #{billGoods,  jdbcType=VARCHAR}
		, #{billSpec,   jdbcType=VARCHAR}
		, 0
		, 0
		, #{billVat}
		, #{printSumAmt}
		, #{udtResn,   jdbcType=VARCHAR}
		, #{etcField1, jdbcType=VARCHAR}
		, #{etcField2, jdbcType=VARCHAR}
		, #{etcField3, jdbcType=VARCHAR}
		, #{userId}
		, #{pgmId}
		, SYSDATE
		)
    </insert>

	<insert id="insert_sm20_Dtl" parameterType="Map">
		INSERT INTO TB_SM20D01
		( CO_CD
		, BILL_NO
		, PCHS_NO
		, PCHS_SEQ
		, ORDRG_NO
		, ORDRG_SEQ
		, SALES_CD
		, CURR_CD
		, EXRATE
		, BILL_DTL_AMT
		, BILL_DTL_VAT
		, BILL_DTL_TOT
		, BILL_DTL_RMK
		, ETC_FIELD1
		, ETC_FIELD2
		, ETC_FIELD3
		, CREAT_ID
		, CREAT_PGM
		, CREAT_DTTM
		)
		VALUES
		( #{coCd}
		, #{billNo}
		, #{pchsNo}
		, #{pchsSeq}
		, #{ordrgNo}
		, #{ordrgSeq}
		, #{salesCd}
		, #{currCdM}
		, 1
		, #{billDtlAmt}
		, #{billDtlVat}
		, #{billDtlTot}
		, #{billDtlRmk, jdbcType=VARCHAR}
		, #{etcField1, jdbcType=VARCHAR}
		, #{etcField2, jdbcType=VARCHAR}
		, #{etcField3, jdbcType=VARCHAR}
		, #{userId}
		, #{pgmId}
		, SYSDATE
		)
	</insert>

	<update id="update_sm20_Approval" parameterType="map">
		UPDATE TB_SM20M01
		SET    APR_REQ_NO = #{aprReqNo} --결재요청서 번호
		WHERE  BILL_NO 	  = #{billNo}
    </update>

	<update id="update_sm20_Approval_All_clear" parameterType="map">
		UPDATE TB_SM20M01
		SET    APR_REQ_NO = '' --결재요청서 번호
		WHERE  APR_REQ_NO = #{aprReqNo}
    </update>
    

	<update id="update_sm20_Conf" parameterType="map">
		UPDATE TB_SM12D01
		SET    BILL_NO = #{billNo}
		     , BILL_YN = 'Y'
		WHERE  CO_CD     = #{coCd}
		AND    PCHS_NO   = #{pchsNo}
		AND    PCHS_SEQ  = #{pchsSeq}
		AND    ORDRG_NO  = #{ordrgNo}
		AND    ORDRG_SEQ = #{ordrgSeq}
    </update>
    
	<!-- update -->
    <update id="update_sm20" parameterType="map">
		UPDATE TB_SM20M01
		SET    BILL_DT  = #{billDt}
			 , UDT_ID   = #{userId}
			 , UDT_PGM  = #{pgmId}
			 , UDT_DTTM = SYSDATE
		WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
    </update>

	<update id="update_sm20_Dtl" parameterType="map">
		UPDATE TB_SM20D01
		SET    UDT_ID   = #{userId}
			 , UDT_PGM  = #{pgmId}
			 , UDT_DTTM = SYSDATE
		WHERE  CO_CD     = #{coCd}
		AND    BILL_NO   = #{billNo}
		AND    PCHS_NO   = #{pchsNo}
		AND    PCHS_SEQ  = #{pchsSeq}
		AND    ORDRG_NO  = #{ordrgNo}
		AND    ORDRG_SEQ = #{ordrgSeq}
    </update>

	<update id="update_sm20_Del" parameterType="map">
		UPDATE TB_SM12D01
		SET    BILL_NO = ''
		     , BILL_YN = 'N'
		WHERE  CO_CD     = #{coCd}
		AND    BILL_NO   = #{billNo}
    </update>
    
    <!-- delete -->
    <delete id="delete_sm20" parameterType="Map">
		DELETE TB_SM20M01
		WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>
    
    <delete id="delete_sm20_Dtl" parameterType="Map">
		DELETE TB_SM20D01
		WHERE  CO_CD   = #{coCd}
		AND    BILL_NO = #{billNo}
	</delete>
	
	<!-- 최종입금내역 Flag 변경 처리하기위한 쿼리 -->
	<update id="update_sm20_payCompleteChke" parameterType="map">
		MERGE INTO TB_SM20M01 M
		USING (
			  SELECT 
			    P.BILL_NO,
			    CASE 
			      WHEN NVL(SUM(P.PAY_TOT), 0) = NVL(MAX(A.BILL_TOT),0) THEN 'Y'
			      ELSE 'N'
			    END AS PAY_YN,
			    NVL(SUM(P.PAY_TOT), 0) AS BILL_TOT,
			    MAX(P.PAY_PMNTMTD)     AS PAY_PMNTMTD,
			    MAX(P.PAY_INTERVAL)    AS PAY_INTERVAL,
			    MAX(P.PAY_DT)          AS PAY_DT
			  FROM TB_SM21M01 AS P
			  		LEFT OUTER JOIN TB_SM20M01 AS A  ON (A.BILL_NO = P.BILL_NO)
			  WHERE P.BILL_NO = #{billNo}
			  GROUP BY P.BILL_NO
			UNION ALL
			  -- 데이터가 없을 경우 기본값을 가진 가짜 행 (보장)
			  SELECT 
			    #{billNo}	  AS BILL_NO,
			    'N'           AS PAY_YN,
			    0             AS BILL_TOT,
			    NULL          AS PAY_PMNTMTD,
			    NULL          AS PAY_INTERVAL,
			    NULL          AS PAY_DT
			  FROM DUAL
			  WHERE NOT EXISTS (
			    SELECT 1 FROM TB_SM21M01 WHERE BILL_NO = #{billNo}
			  )
		) S
		ON (M.BILL_NO = S.BILL_NO)
		WHEN MATCHED THEN
		  UPDATE SET 
		    M.PAY_YN        = S.PAY_YN,
		    M.ETC_FIELD2    = S.BILL_TOT,
		    M.PAY_PMNTMTD   = S.PAY_PMNTMTD,
		    M.PAY_INTERVAL  = S.PAY_INTERVAL,
		    M.PAY_DT        = S.PAY_DT
		  WHERE M.BILL_NO = #{billNo}
    </update>
	
	
	<select id="select_prjct_code" parameterType="Map" resultType="camelMap">
	   /* select_prjct_code  */
			SELECT DISTINCT 
	        		  CLNT_PJT           AS CODE      --고객사PJT 
					, CLNT_PJT_NM        AS NAME
				FROM(
							SELECT DISTINCT 
									 A.CO_CD
									, A.ORDRG_DT											 AS ORDRG_DT       --발주일자		
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, A.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(A.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
								FROM TB_SM02M01 A --발주마스터
				                INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
								LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = A.SALES_CD
								LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
								LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT
							UNION ALL		       
								SELECT  DISTINCT 
									 E.CO_CD
									, E.COST_DT AS ORDRG_DT			
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM10M01 E		/* 구매비용 */		
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT						
								WHERE 1=1				
							UNION ALL
								SELECT  DISTINCT 
									 E.CO_CD
									, E.RET_DT AS ORDRG_DT	
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM06M01 E		/* 반품 */	
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT			
								WHERE 1=1										
						  ) A		/* 발주+기타비용+반품 내역 */
						  WHERE 1=1	
						<!-- 회사코드 -->         
						<if test="coCd != null and !coCd.equals('')">
							AND A.CO_CD = #{coCd}   
						</if>
						<!-- 확정일자 -->         
						<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
							<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
				            	AND A.ORDRG_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
							</if>   
						</if>	
						ORDER BY CLNT_PJT_NM
						
	</select>		

	
	<select id="select_mngId_code" parameterType="Map" resultType="camelMap">
			SELECT DISTINCT 
	        		  ORDRG_MNG_ID          AS CODE      --고객사PJT 
					, ORDRG_MNG_NM        	AS NAME
				FROM(
							SELECT DISTINCT 
									 A.CO_CD
									, A.ORDRG_DT											 AS ORDRG_DT       --발주일자		
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, A.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(A.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
								FROM TB_SM02M01 A --발주마스터
				                INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
								LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = A.SALES_CD
								LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
								LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT
							UNION ALL		       
								SELECT  DISTINCT 
									 E.CO_CD
									, E.COST_DT AS ORDRG_DT			
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM10M01 E		/* 구매비용 */		
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT						
								WHERE 1=1				
							UNION ALL
								SELECT  DISTINCT 
									 E.CO_CD
									, E.RET_DT AS ORDRG_DT	
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM06M01 E		/* 반품 */	
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT			
								WHERE 1=1										
						  ) A		/* 발주+기타비용+반품 내역 */
						  WHERE 1=1	
						<!-- 회사코드 -->         
						<if test="coCd != null and !coCd.equals('')">
							AND A.CO_CD = #{coCd}   
						</if>
						<!-- 확정일자 -->         
						<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
							<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
				            	AND A.ORDRG_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
							</if>   
						</if>
						ORDER BY ORDRG_MNG_NM

    </select>	
 </mapper>