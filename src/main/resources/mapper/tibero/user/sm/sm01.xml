<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.sm.sm01.mapper.SM01Mapper">

	<sql id="selectBomSalesSql">
        SELECT BOM.FILE_TRGT_KEY
		     , A.CO_CD
		     , FN_CM05M01_CD_TO_NM(A.CO_CD)  AS CO_NM
		     , A.ORDRS_NO
		     , B.SALES_CD
		     , A.ORDRS_CLNT_CD AS CLNT_CD
		     , C.CLNT_NM
		     , A.CLNT_PJT
			 , FN_CM05M01_CD_TO_NM(A.CLNT_PJT) AS CLNT_PJT_NM
		     , B.PRDT_CD
		     , P.PRDT_NM
		     , B.ITEM_DIV
		     , FN_CM05M01_CD_TO_NM(B.ITEM_DIV) AS ITEM_DIV_NM
		     , B.ORDRS_DTL_DIV20
		     , FN_CM05M01_CD_TO_NM(B.ORDRS_DTL_DIV20) AS ORDRS_DTL_DIV20_NM
		     , B.ORDRS_DTL_DIV30
		     , FN_CM05M01_CD_TO_NM(B.ORDRS_DTL_DIV30) AS ORDRS_DTL_DIV30_NM
		     , B.DUDT_INTEND_DT
		     , B.EQP_NM
		     , NVL(TO_CHAR(T3.BOM_CNT),'0') AS BOM_CNT
		     , (SELECT COUNT(*) FROM TB_SM01D01 WHERE CO_CD = A.CO_CD AND ORDRS_NO = A.ORDRS_NO AND SALES_CD = B.SALES_CD) AS MATR_CNT
        FROM   TB_CR02M01 AS A
               JOIN TB_CR02D02 AS B  ON B.CO_CD    = A.CO_CD
                                    AND B.ORDRS_NO = A.ORDRS_NO
               LEFT OUTER JOIN TB_BM02M01 AS C ON C.CLNT_CD = A.ORDRS_CLNT_CD
               LEFT OUTER JOIN TB_BM01M01 AS P ON P.PRDT_CD = B.PRDT_CD
               LEFT OUTER JOIN (
                                SELECT FILE_TRGT_KEY
                                     , CO_CD
                                     , ORDRS_NO
                                     , SALES_CD
                                FROM   TB_SM01M01 AS X1
                                WHERE  LEVEL = 1
                                START WITH X1.UPPER_CD = 'top'
                                CONNECT BY PRIOR X1.LOWER_CD = X1.UPPER_CD
                               ) AS BOM  ON A.CO_CD = BOM.CO_CD
                                        AND B.ORDRS_NO = BOM.ORDRS_NO
                                        AND B.SALES_CD = BOM.SALES_CD
               LEFT OUTER JOIN (
                                SELECT CO_CD
                                     , ORDRS_NO
                                     , SALES_CD
                                     , COUNT(*) AS BOM_CNT
                                FROM   TB_SM01M01
                                GROUP BY CO_CD, ORDRS_NO, SALES_CD
                               ) AS T3  ON A.CO_CD    = T3.CO_CD
                                       AND A.ORDRS_NO = T3.ORDRS_NO
                                       AND B.SALES_CD = T3.SALES_CD
        WHERE  B.SALES_CD IS NOT NULL
		<if test="coCd != null and !coCd.equals('')">
		AND    A.CO_CD = #{coCd}
		</if>
		<if test="itemDiv != null and !itemDiv.equals('')">
		AND    B.ITEM_DIV = #{itemDiv}
		</if>
		<if test="salesCd != null and !salesCd.equals('')">
		AND    B.SALES_CD LIKE '%'||#{salesCd}||'%'
		</if>
		<if test="clntNm != null and !clntNm.equals('')">
		AND    C.CLNT_NM LIKE '%'||#{clntNm}||'%'
		</if>
		<if test="clntPjt != null and !clntPjt.equals('')">
		AND    A.CLNT_PJT LIKE '%'||#{clntPjt}||'%'
		</if>
		<if test="prdtNm != null and !prdtNm.equals('')">
		AND    P.PRDT_NM LIKE '%'||#{prdtNm}||'%'
		</if>
		<if test="eqpNm != null and !eqpNm.equals('')">
		AND    B.EQP_NM LIKE '%'||#{eqpNm}||'%'
		</if>
		<if test="bomCnt != null and !bomCnt.equals('')">
		AND    TO_CHAR(NVL(T3.BOM_CNT,0)) = #{bomCnt}
		</if>
		ORDER BY A.CO_CD, A.ORDRS_CLNT_CD, A.CLNT_PJT, A.ORDRS_NO, B.SALES_CD
	</sql>
	<select id="selectBomSalesCount" parameterType="Map" resultType="int">
        SELECT
        COUNT(*)
        FROM (
        	<include refid="selectBomSalesSql"></include>
        )
	</select>

	<select id="selectBomSalesList" parameterType="Map" resultType="CamelMap">
        SELECT
        *
        FROM(
        SELECT
        ROWNUM AS RNUM, A.*

        FROM
        (
        	<include refid="selectBomSalesSql"></include>
        ) AS a
        ) A
        WHERE RNUM BETWEEN #{firstIndex} AND #{lastIndex}

	</select>

	<select id="selectBomDetailList" parameterType="Map" resultType="camelMap">
        SELECT T.FILE_TRGT_KEY
        , T.LVL
        , T.CO_CD
        , FN_CM05M01_CD_TO_NM(T.CO_CD) CO_NM
        , T.ORDRS_NO
        , T.SALES_CD
        , T.DSGN_NO
        , T.UPPER_CD AS OLD_UPPER_CD
        , T.LOWER_CD AS OLD_LOWER_CD
        , T.UPPER_CD
        , T.LOWER_CD
        , D.MATR_SEQ
        , D.ORDRG_DIV_10
        , D.ORDRG_DIV_20
        , D.NEXT_PRCSN_NM
        , D.DLVPLC_NM
        , D.BOM_QTY
        , D.POS_QTY
        , D.MATR_CD
        , D.MATR_NM
        , D.GOODS_DIV
        , D.MATR_CLNT_DIV
        , D.MATR_DIV
        , D.MATR_GRP
        , D.MATR_MAT
        , D.MATR_SIZE
        , D.MATR_SPEC
        , D.MATR_MAKR_NM
        , D.MATR_MNO
        , D.MATR_WT
        , D.MATR_UNIT
        , D.ORIGIN_NM
        , D.MATR_DRW_NO
        , D.MATR_TEST_DIV
        , D.DLVR_RQM_DAY
        , D.MATR_PURC_DIV
        , D.MIN_ORDRG_QTY
        , D.MATR_SAFT_QTY
        , D.MATR_STOCK_CD
        , D.DSGN_2D_MD
        , D.AVRG_2D_MD
        , D.DSGN_3D_MD
        , D.AVRG_3D_MD
        , D.PRDCTN_RQM_MD
        , D.PRDCTN_AVRG_MD
        , D.USE_YN
        , D.MATR_PART_NO
        , D.PCHS_CLNT_CD1
        , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = D.PCHS_CLNT_CD1) AS PCHS_CLNT_NM1
        , D.PCHS_CLNT_PCT1
        , D.PCHS_CLNT_CD2
        , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = D.PCHS_CLNT_CD2) AS PCHS_CLNT_NM2
        , D.PCHS_CLNT_PCT2
        , D.PCHS_CLNT_CD3
        , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = D.PCHS_CLNT_CD3) AS PCHS_CLNT_NM3
        , D.PCHS_CLNT_PCT3
        , D.MATR_UPR
        , D.MATR_AVRG_UPR
        , D.MATR_RMK
        , TO_CHAR(D.MATR_LAST_TRST_DT, 'YYYY-MM-DD') AS MATR_LAST_TRST_DT
        , D.MATR_ATNT_CD
        , D.MATR_NO
        , T.ETC_FIELD1
        , T.ETC_FIELD2
        , T.ETC_FIELD3
        , T.CREAT_ID
        , (SELECT NAME FROM TB_CM06M01 WHERE ID = T.CREAT_ID) AS CREAT_NM
        , TO_CHAR(T.CREAT_DTTM,'YYYY-MM-DD HH24:MM:SS') AS CREAT_DTTM
        , T.UDT_ID
        , (SELECT NAME FROM TB_CM06M01 WHERE ID = T.UDT_ID) AS UDT_NM
        , TO_CHAR(T.UDT_DTTM,'YYYY-MM-DD HH24:MM:SS') AS UDT_DTTM
        FROM
  		( SELECT X1.*, LEVEL AS LVL FROM TB_SM01M01 X1
           START WITH X1.UPPER_CD = 'top' AND X1.CO_CD = #{coCd} AND X1.ORDRS_NO = #{ordrsNo} AND X1.SALES_CD = #{salesCd}
          CONNECT BY PRIOR X1.LOWER_CD = X1.UPPER_CD
        ) T
        LEFT OUTER JOIN TB_SM01D01 D
		ON T.CO_CD = D.CO_CD AND T.ORDRS_NO = D.ORDRS_NO AND T.SALES_CD = D.SALES_CD AND T.UPPER_CD = D.UPPER_CD AND T.LOWER_CD = D.LOWER_CD
        LEFT OUTER JOIN
        ( SELECT T1.CO_CD
		        , T2.SALES_CD
		        , T2.PRDT_CD
		        , (SELECT X.PRDT_NM FROM TB_BM01M01 X WHERE X.PRDT_CD = T2.PRDT_CD) AS PRDT_NM
		        , T2.ITEM_DIV
		        , FN_CM05M01_CD_TO_NM(T2.ITEM_DIV) AS ITEM_DIV_NM
		        , T1.CLNT_PJT
		        , T2.EQP_NM
		        , T3.CLNT_NM
		        FROM TB_CR02M01 AS T1
		        JOIN TB_CR02D02 AS T2 ON T1.CO_CD = T2.CO_CD AND T1.ORDRS_NO = T2.ORDRS_NO
		        LEFT JOIN TB_BM02M01 AS T3 ON T3.CLNT_CD = T1.ORDRS_CLNT_CD
        ) A
        ON T.CO_CD = A.CO_CD AND T.SALES_CD = A.SALES_CD
		WHERE 1=1
		ORDER BY T.CO_CD,T.LOWER_CD, T.UPPER_CD , D.MATR_SEQ
	</select>

	<select id="selectBomMatrTreeList" parameterType="Map" resultType="camelMap">
		SELECT  '' AS DTA_CHK
		        , LEVEL - 1 AS LVL
		        ,T.*
		        ,SUBSTR(REPLACE(T.DSGN_NO,T.SALES_CD,''), INSTR(REPLACE(T.DSGN_NO,T.SALES_CD,''), '-', -1) + 1) AS LAST_DSGN_NO
		        ,REGEXP_REPLACE(SYS_CONNECT_BY_PATH(T.LOWER_CODE, ' -> '), '^\s+\-\>\s+', '') AS PATH
		        ,UPPER_CD AS OLD_UPPER_CD
		        ,LOWER_CD AS OLD_LOWER_CD
		        ,UPPER_CODE AS OLD_UPPER_CODE
		        ,LOWER_CODE AS OLD_LOWER_CODE
		       FROM (
			SELECT   FILE_TRGT_KEY
				    , CO_CD
					, ORDRS_NO
					, SALES_CD
					, DSGN_NO
					, UPPER_CD
					, LOWER_CD
					, DSGN_NM
					, DSGN_BOM_QTY
					, UPPER_CD AS UPPER_CODE
					, LOWER_CD AS LOWER_CODE
					,'N' AS MATR_YN
					,'' AS MATR_SEQ
					,'' AS ORDRG_DIV_10
					,'' AS ORDRG_DIV_20
					,'' AS NEXT_PRCSN_NM
					,'' AS DLVPLC_NM
					,'' AS BOM_QTY
					,'' AS POS_QTY
					,'' AS MATR_CD
					,'' AS MATR_NM
					,'' AS GOODS_DIV
					,'' AS MATR_CLNT_DIV
					,'' AS MATR_DIV
					,'' AS MATR_GRP
					,'' AS MATR_MAT
					,'' AS MATR_SIZE
					,'' AS MATR_SPEC
					,'' AS MATR_MAKR_NM
					,'' AS MATR_MNO
					,'' AS MATR_WT
					,'' AS MATR_UNIT
					,'' AS ORIGIN_NM
					,'' AS MATR_DRW_NO
					,'' AS MATR_TEST_DIV
					,'' AS DLVR_RQM_DAY
					,'' AS MATR_PURC_DIV
					,'' AS MIN_ORDRG_QTY
					,'' AS MATR_SAFT_QTY
					,'' AS MATR_STOCK_CD
					,'' AS DSGN_2D_MD
					,'' AS AVRG_2D_MD
					,'' AS DSGN_3D_MD
					,'' AS AVRG_3D_MD
					,'' AS PRDCTN_RQM_MD
					,'' AS PRDCTN_AVRG_MD
					,'' AS USE_YN
					,'' AS MATR_PART_NO
					,'' AS PCHS_CLNT_CD1
					,'' AS PCHS_CLNT_NM1
					,'' AS PCHS_CLNT_PCT1
					,'' AS PCHS_CLNT_CD2
					,'' AS PCHS_CLNT_NM2
					,'' AS PCHS_CLNT_PCT2
					,'' AS PCHS_CLNT_CD3
					,'' AS PCHS_CLNT_NM3
					,'' AS PCHS_CLNT_PCT3
					,'' AS MATR_UPR
					,'' AS MATR_AVRG_UPR
					,'' AS MATR_RMK
					,'' AS MATR_LAST_TRST_DT
					,'' AS MATR_ATNT_CD
					,'' AS MATR_NO
				FROM TB_SM01M01 A
				WHERE A.CO_CD = #{coCd}
				AND A.ORDRS_NO = #{ordrsNo}
				AND A.SALES_CD = #{salesCd}
			UNION ALL
			   SELECT '' AS FILE_TRGT_KEY
				    , CO_CD
				    , ORDRS_NO
					, SALES_CD
					,'' AS DSGN_NO
					,UPPER_CD
					,LOWER_CD
					,'' DSGN_NM
					,'' DSGN_BOM_QTY
					,LOWER_CD AS UPPER_CODE
					,LOWER_CD||'-m('||LPAD(MATR_SEQ,4,'0')||')' AS LOWER_CODE
					,'Y' AS MATR_YN
					,MATR_SEQ
					,ORDRG_DIV_10
					,ORDRG_DIV_20
					,NEXT_PRCSN_NM
					,DLVPLC_NM
					,BOM_QTY
					,POS_QTY
					,MATR_CD
					,MATR_NM
					,GOODS_DIV
					,MATR_CLNT_DIV
					,MATR_DIV
					,MATR_GRP
					,MATR_MAT
					,MATR_SIZE
					,MATR_SPEC
					,MATR_MAKR_NM
					,MATR_MNO
					,MATR_WT
					,MATR_UNIT
					,ORIGIN_NM
					,MATR_DRW_NO
					,MATR_TEST_DIV
					,DLVR_RQM_DAY
					,MATR_PURC_DIV
					,MIN_ORDRG_QTY
					,MATR_SAFT_QTY
					,MATR_STOCK_CD
					,DSGN_2D_MD
					,AVRG_2D_MD
					,DSGN_3D_MD
					,AVRG_3D_MD
					,PRDCTN_RQM_MD
					,PRDCTN_AVRG_MD
					,USE_YN
					,MATR_PART_NO
					,PCHS_CLNT_CD1
					,(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = A.PCHS_CLNT_CD1) AS PCHS_CLNT_NM1
					,PCHS_CLNT_PCT1
					,PCHS_CLNT_CD2
					,(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = A.PCHS_CLNT_CD2) AS PCHS_CLNT_NM2
					,PCHS_CLNT_PCT2
					,PCHS_CLNT_CD3
					,(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = A.PCHS_CLNT_CD3) AS PCHS_CLNT_NM3
					,PCHS_CLNT_PCT3
					,MATR_UPR
					,MATR_AVRG_UPR
					,MATR_RMK
					,TO_CHAR(A.MATR_LAST_TRST_DT, 'YYYY-MM-DD') AS MATR_LAST_TRST_DT
					,MATR_ATNT_CD
					,MATR_NO
			FROM TB_SM01D01 A
			WHERE A.CO_CD = #{coCd}
			AND A.ORDRS_NO = #{ordrsNo}
			AND A.SALES_CD = #{salesCd}
		) T
		WHERE 1=1
		START WITH T.UPPER_CODE = 'top'
	    CONNECT BY PRIOR T.LOWER_CODE = T.UPPER_CODE
	    ORDER BY PATH
	</select>

	<!-- 구매 BOM 조회 -->
	<select id="selectBuyBomList" resultType="CamelMap">
		SELECT '' AS DTA_CHK
		     , LEVEL - 1 AS LVL
		     , T.FILE_TRGT_KEY
		     , T.CO_CD
	         , T.ORDRS_NO
	         , T.SALES_CD
	         , T.LOWER_CD AS DSGN_NO --2023.09.19 김성욱 수정, T.DSGN_NO
	         , T.UPPER_NM
	         , T.LOWER_NM
			 , T.LOWER_NM || '(' || T.MATR_NM || ')' AS TEXT
	         , REGEXP_REPLACE(SYS_CONNECT_BY_PATH(T.LOWER_NM, ' > '), '^\s+\>\s+', '') AS PATH
	         , SUBSTR(REPLACE(T.DSGN_NO,T.SALES_CD,''), INSTR(REPLACE(T.DSGN_NO,T.SALES_CD,''), '-', -1) + 1) AS LAST_DSGN_NO
	         , T.UPPER_CD
	         , T.LOWER_CD
	         , T.UPPER_CD AS OLD_UPPER_CD
	         , T.LOWER_CD AS OLD_LOWER_CD
	         , T.DSGN_NM
	         , T.DSGN_BOM_QTY
			 , T.BOM_SEQ
	         , T.PART_NO
	         , T.UNIT_NO
	         , T.REV_NO
	         , T.MATR_SEQ
	         , T.MATR_CD
	         , T.MATR_NM
	         , T.MATR_MAT
	         , T.MATR_MAKR_NM
	         , T.MATR_MNO
	         , T.MATR_SPEC
	         , T.MATR_RMK
		FROM   TB_SM01M01 AS T
		WHERE  T.CO_CD = #{coCd}
		AND    T.ORDRS_NO = #{ordrsNo}
		AND    T.SALES_CD = #{salesCd}
		START WITH T.UPPER_CD = 'top' 
		CONNECT BY PRIOR T.LOWER_CD = T.UPPER_CD
		ORDER BY T.CO_CD, T.LOWER_CD, T.UPPER_CD
	</select>

	<!-- BOM 자재정보 조회 -->
	<select id="selectBomMatrList" resultType="CamelMap">
		SELECT  '' AS DTA_CHK
	        , CO_CD
	        , ORDRS_NO
	        , SALES_CD
	        , UPPER_CD
	        , LOWER_CD
	        , UPPER_CD AS OLD_UPPER_CD
	        , LOWER_CD AS OLD_LOWER_CD
	        , UPPER_CD AS DSGN_NO  --2023.09.19 김성욱 수정, LOWER_CD AS DSGN_NO
	        , MATR_SEQ
	        , ORDRG_DIV_10
	        , ORDRG_DIV_20
	        , NEXT_PRCSN_NM
	        , DLVPLC_NM
	        , BOM_QTY
	        , POS_QTY
	        , MATR_CD
	        , MATR_NM
	        , GOODS_DIV
	        , MATR_CLNT_DIV
	        , MATR_DIV
	        , MATR_GRP
	        , MATR_MAT
	        , MATR_SIZE
	        , MATR_SPEC
	        , MATR_MAKR_NM
	        , MATR_MNO
	        , MATR_WT
	        , MATR_UNIT
	        , ORIGIN_NM
	        , MATR_DRW_NO
	        , MATR_TEST_DIV
	        , DLVR_RQM_DAY
	        , MATR_PURC_DIV
	        , MIN_ORDRG_QTY
	        , MATR_SAFT_QTY
	        , MATR_STOCK_CD
	        , DSGN_2D_MD
	        , AVRG_2D_MD
	        , DSGN_3D_MD
	        , AVRG_3D_MD
	        , PRDCTN_RQM_MD
	        , PRDCTN_AVRG_MD
	        , USE_YN
	        , MATR_PART_NO
	        , PCHS_CLNT_CD1
	        , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.PCHS_CLNT_CD1) AS PCHS_CLNT_NM1
	        , PCHS_CLNT_PCT1
	        , PCHS_CLNT_CD2
	        , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.PCHS_CLNT_CD2) AS PCHS_CLNT_NM2
	        , PCHS_CLNT_PCT2
	        , PCHS_CLNT_CD3
	        , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.PCHS_CLNT_CD3) AS PCHS_CLNT_NM3
	        , PCHS_CLNT_PCT3
	        , MATR_UPR
	        , MATR_AVRG_UPR
	        , MATR_RMK
	        , TO_CHAR(T.MATR_LAST_TRST_DT, 'YYYY-MM-DD') AS MATR_LAST_TRST_DT
	        , MATR_ATNT_CD
	        , MATR_NO
		FROM TB_SM01D01 T
		WHERE CO_CD = #{coCd}
		  AND ORDRS_NO = #{ordrsNo}
		  AND SALES_CD = #{salesCd}
		ORDER BY T.CO_CD, T.LOWER_CD, T.UPPER_CD, T.MATR_SEQ
	</select>

    <insert id="insertBom" parameterType="Map">
        <selectKey keyProperty="fileTrgtKey" resultType="String" order="BEFORE">
            SELECT NVL(MAX(TO_NUMBER(NVL(FILE_TRGT_KEY,'0'))),0) + 1 FROM TB_SM01M01
        </selectKey>
        INSERT INTO TB_SM01M01
        ( FILE_TRGT_KEY
        , CO_CD
        , ORDRS_NO
        , SALES_CD
        , DSGN_NO
        , DSGN_NM
        , DSGN_BOM_QTY
        , UPPER_CD
        , LOWER_CD
        , ETC_FIELD1
        , ETC_FIELD2
        , ETC_FIELD3
        , CREAT_ID
        , CREAT_PGM
        , CREAT_DTTM
        )
        VALUES
        ( #{fileTrgtKey}
        , #{coCd}
        , #{ordrsNo}
        , #{salesCd}
        , #{dsgnNo, jdbcType=VARCHAR}
        , #{dsgnNm, jdbcType=VARCHAR}
        , #{dsgnBomQty, jdbcType=VARCHAR}
        , #{upperCd, jdbcType=VARCHAR}
        , #{lowerCd, jdbcType=VARCHAR}
        , #{etcField1, jdbcType=VARCHAR}
        , #{etcField2, jdbcType=VARCHAR}
        , #{etcField3, jdbcType=VARCHAR}
        , #{userId}
        , #{pgmId}
        , SYSDATE
        )
    </insert>

    <update id="updateBom" parameterType="Map">
        UPDATE TB_SM01M01
        SET   CO_CD 		= #{coCd}
	        , ORDRS_NO 		= #{ordrsNo, jdbcType=VARCHAR}
	        , SALES_CD 		= #{salesCd, jdbcType=VARCHAR}
	        , DSGN_NO 		= #{dsgnNo, jdbcType=VARCHAR}
	        , DSGN_NM 		= #{dsgnNm, jdbcType=VARCHAR}
	        , DSGN_BOM_QTY 	= #{dsgnBomQty, jdbcType=VARCHAR}
	        , UPPER_CD 		= #{upperCd, jdbcType=VARCHAR}
	        , LOWER_CD 		= #{lowerCd, jdbcType=VARCHAR}
            , ETC_FIELD1    = #{etcField1, jdbcType=VARCHAR}
            , ETC_FIELD2    = #{etcField2, jdbcType=VARCHAR}
            , ETC_FIELD3    = #{etcField3, jdbcType=VARCHAR}
            , UDT_ID        = #{userId}
            , UDT_PGM       = #{pgmId}
            , UDT_DTTM      = SYSDATE
        WHERE FILE_TRGT_KEY = #{fileTrgtKey}
    </update>

	<delete id="deleteBom" parameterType="Map">
	  DELETE TB_SM01M01
	   WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>

	<delete id="deleteBomMatrAll" parameterType="Map">
	  DELETE TB_SM01D01
	  WHERE CO_CD = #{coCd}
	    AND ORDRS_NO = #{ordrsNo}
	    AND SALES_CD = #{salesCd}
	    AND UPPER_CD = #{upperCd}
	    AND LOWER_CD = #{lowerCd}
	</delete>

	<!-- 수불키 채번 -->
	<select id="select_bm14_Key" parameterType="Map" resultType="int">
		SELECT TB_BM14M01_SQ01.NEXTVAL
		FROM   DUAL
	</select>

    <insert id="insertBomMatr" parameterType="Map">
        <selectKey keyProperty="matrSeq" resultType="String" order="BEFORE">
			SELECT NVL(MAX(MATR_SEQ), 0) + 1
			FROM   TB_SM01D01
			WHERE  CO_CD = #{coCd}
			AND    ORDRS_NO = #{ordrsNo}
			AND    SALES_CD = #{salesCd}
			AND    UPPER_CD = #{upperCd}
			AND    LOWER_CD = #{lowerCd}
        </selectKey>
        INSERT INTO TB_SM01D01
        ( CO_CD
        , ORDRS_NO
        , SALES_CD
        , MATR_SEQ
        , UPPER_CD
        , LOWER_CD
        , ORDRG_DIV_10
        , ORDRG_DIV_20
        , NEXT_PRCSN_NM
        , DLVPLC_NM
        , BOM_QTY
        , POS_QTY
        , MATR_CD
        , MATR_NM
        , GOODS_DIV
        , MATR_CLNT_DIV
        , MATR_DIV
        , MATR_GRP
        , MATR_MAT
        , MATR_SIZE
        , MATR_SPEC
        , MATR_MAKR_NM
        , MATR_MNO
        , MATR_WT
        , MATR_UNIT
        , ORIGIN_NM
        , MATR_DRW_NO
        , MATR_TEST_DIV
        , DLVR_RQM_DAY
        , MATR_PURC_DIV
        , MIN_ORDRG_QTY
        , MATR_SAFT_QTY
        , MATR_STOCK_CD
        , DSGN_2D_MD
        , AVRG_2D_MD
        , DSGN_3D_MD
        , AVRG_3D_MD
        , PRDCTN_RQM_MD
        , PRDCTN_AVRG_MD
        , USE_YN
        , MATR_PART_NO
        , PCHS_CLNT_CD1
        , PCHS_CLNT_PCT1
        , PCHS_CLNT_CD2
        , PCHS_CLNT_PCT2
        , PCHS_CLNT_CD3
        , PCHS_CLNT_PCT3
        , MATR_UPR
        , MATR_AVRG_UPR
        , MATR_RMK
        , MATR_LAST_TRST_DT
        , MATR_ATNT_CD
        , ETC_FIELD1
        , ETC_FIELD2
        , ETC_FIELD3
        , CREAT_ID
        , CREAT_PGM
        , CREAT_DTTM
        )
        VALUES
        ( #{coCd}
        , #{ordrsNo}
        , #{salesCd}
        , #{matrSeq}
        , #{upperCd}
        , #{lowerCd}
        , #{ordrgDiv10, jdbcType=VARCHAR}
        , #{ordrgDiv20, jdbcType=VARCHAR}
        , #{nextPrcsnNm, jdbcType=VARCHAR}
        , #{dlvplcNm, jdbcType=VARCHAR}
        , #{bomQty, jdbcType=VARCHAR}
        , #{posQty, jdbcType=VARCHAR}
        , #{matrCd, jdbcType=VARCHAR}
        , #{matrNm, jdbcType=VARCHAR}
        , #{goodsDiv, jdbcType=VARCHAR}
        , #{matrClntDiv, jdbcType=VARCHAR}
        , #{matrDiv, jdbcType=VARCHAR}
        , #{matrGrp, jdbcType=VARCHAR}
        , #{matrMat, jdbcType=VARCHAR}
        , #{matrSize, jdbcType=VARCHAR}
        , #{matrSpec, jdbcType=VARCHAR}
        , #{matrMakrNm, jdbcType=VARCHAR}
        , #{matrMno, jdbcType=VARCHAR}
        , #{matrWt, jdbcType=VARCHAR}
        , #{matrUnit, jdbcType=VARCHAR}
        , #{originNm, jdbcType=VARCHAR}
        , #{matrDrwNo, jdbcType=VARCHAR}
        , #{matrTestDiv, jdbcType=VARCHAR}
        , #{dlvrRqmDay, jdbcType=VARCHAR}
        , #{matrPurcDiv, jdbcType=VARCHAR}
        , #{minOrdrgQty, jdbcType=VARCHAR}
        , #{matrSaftQty, jdbcType=VARCHAR}
        , #{matrStockCd, jdbcType=VARCHAR}
        , #{dsgn2dMd, jdbcType=VARCHAR}
        , #{avrg2dMd, jdbcType=VARCHAR}
        , #{dsgn3dMd, jdbcType=VARCHAR}
        , #{avrg3dMd, jdbcType=VARCHAR}
        , #{prdctnRqmMd, jdbcType=VARCHAR}
        , #{prdctnAvrgMd, jdbcType=VARCHAR}
        , #{useYn, jdbcType=VARCHAR}
        , #{matrPartNo, jdbcType=VARCHAR}
        , #{pchsClntCd1, jdbcType=VARCHAR}
        , #{pchsClntPct1, jdbcType=VARCHAR}
        , #{pchsClntCd2, jdbcType=VARCHAR}
        , #{pchsClntPct2, jdbcType=VARCHAR}
        , #{pchsClntCd3, jdbcType=VARCHAR}
        , #{pchsClntPct3, jdbcType=VARCHAR}
        , #{matrUpr, jdbcType=VARCHAR}
        , #{matrAvrgUpr, jdbcType=VARCHAR}
        , #{matrRmk, jdbcType=VARCHAR}
        , #{matrLastTrstDt, jdbcType=VARCHAR}
        , #{matrAtntCd, jdbcType=VARCHAR}
        , #{etcField1, jdbcType=VARCHAR}
        , #{etcField2, jdbcType=VARCHAR}
        , #{etcField3, jdbcType=VARCHAR}
        , #{userId}
        , #{pgmId}
        , SYSDATE
        )
    </insert>

    <update id="updateBomMatr" parameterType="Map">
		UPDATE TB_SM01D01
		SET   UPPER_CD            = #{upperCd, jdbcType=VARCHAR}
		    , LOWER_CD            = #{lowerCd, jdbcType=VARCHAR}
		    , ORDRG_DIV_10        = #{ordrgDiv10, jdbcType=VARCHAR}
		    , ORDRG_DIV_20        = #{ordrgDiv20, jdbcType=VARCHAR}
		    , NEXT_PRCSN_NM       = #{nextPrcsnNm, jdbcType=VARCHAR}
		    , DLVPLC_NM           = #{dlvplcNm, jdbcType=VARCHAR}
		    , BOM_QTY             = #{bomQty, jdbcType=VARCHAR}
		    , POS_QTY             = #{posQty, jdbcType=VARCHAR}
		    , MATR_CD             = #{matrCd, jdbcType=VARCHAR}
		    , MATR_NM             = #{matrNm, jdbcType=VARCHAR}
		    , GOODS_DIV           = #{goodsDiv, jdbcType=VARCHAR}
		    , MATR_CLNT_DIV       = #{matrClntDiv, jdbcType=VARCHAR}
		    , MATR_DIV            = #{matrDiv, jdbcType=VARCHAR}
		    , MATR_GRP            = #{matrGrp, jdbcType=VARCHAR}
		    , MATR_MAT            = #{matrMat, jdbcType=VARCHAR}
		    , MATR_SIZE           = #{matrSize, jdbcType=VARCHAR}
		    , MATR_SPEC           = #{matrSpec, jdbcType=VARCHAR}
		    , MATR_MAKR_NM        = #{matrMakrNm, jdbcType=VARCHAR}
		    , MATR_MNO            = #{matrMno, jdbcType=VARCHAR}
		    , MATR_WT             = #{matrWt, jdbcType=VARCHAR}
		    , MATR_UNIT           = #{matrUnit, jdbcType=VARCHAR}
		    , ORIGIN_NM           = #{originNm, jdbcType=VARCHAR}
		    , MATR_DRW_NO         = #{matrDrwNo, jdbcType=VARCHAR}
		    , MATR_TEST_DIV       = #{matrTestDiv, jdbcType=VARCHAR}
		    , DLVR_RQM_DAY        = #{dlvrRqmDay, jdbcType=VARCHAR}
		    , MATR_PURC_DIV       = #{matrPurcDiv, jdbcType=VARCHAR}
		    , MIN_ORDRG_QTY       = #{minOrdrgQty, jdbcType=VARCHAR}
		    , MATR_SAFT_QTY       = #{matrSaftQty, jdbcType=VARCHAR}
		    , MATR_STOCK_CD       = #{matrStockCd, jdbcType=VARCHAR}
		    , DSGN_2D_MD          = #{dsgn2dMd, jdbcType=VARCHAR}
		    , AVRG_2D_MD          = #{avrg2dMd, jdbcType=VARCHAR}
		    , DSGN_3D_MD          = #{dsgn3dMd, jdbcType=VARCHAR}
		    , AVRG_3D_MD          = #{avrg3dMd, jdbcType=VARCHAR}
		    , PRDCTN_RQM_MD       = #{prdctnRqmMd, jdbcType=VARCHAR}
		    , PRDCTN_AVRG_MD      = #{prdctnAvrgMd, jdbcType=VARCHAR}
		    , USE_YN              = #{useYn, jdbcType=VARCHAR}
		    , MATR_PART_NO        = #{matrPartNo, jdbcType=VARCHAR}
		    , PCHS_CLNT_CD1       = #{pchsClntCd1, jdbcType=VARCHAR}
		    , PCHS_CLNT_PCT1      = #{pchsClntPct1, jdbcType=VARCHAR}
		    , PCHS_CLNT_CD2       = #{pchsClntCd2, jdbcType=VARCHAR}
		    , PCHS_CLNT_PCT2      = #{pchsClntPct2, jdbcType=VARCHAR}
		    , PCHS_CLNT_CD3       = #{pchsClntCd3, jdbcType=VARCHAR}
		    , PCHS_CLNT_PCT3      = #{pchsClntPct3, jdbcType=VARCHAR}
		    , MATR_UPR            = #{matrUpr, jdbcType=VARCHAR}
		    , MATR_AVRG_UPR       = #{matrAvrgUpr, jdbcType=VARCHAR}
		    , MATR_RMK            = #{matrRmk, jdbcType=VARCHAR}
		    , MATR_LAST_TRST_DT   = #{matrLastTrstDt, jdbcType=VARCHAR}
		    , MATR_ATNT_CD        = #{matrAtntCd, jdbcType=VARCHAR}
		    , MATR_NO             = #{matrNo, jdbcType=VARCHAR}
		    , ETC_FIELD1          = #{etcField1, jdbcType=VARCHAR}
		    , ETC_FIELD2          = #{etcField2, jdbcType=VARCHAR}
		    , ETC_FIELD3          = #{etcField3, jdbcType=VARCHAR}
		    , UDT_ID              = #{userId}
		    , UDT_PGM             = #{pgmId}
		    , UDT_DTTM            = SYSDATE
		WHERE CO_CD    = #{coCd}
		  AND ORDRS_NO = #{ordrsNo}
		  AND SALES_CD = #{salesCd}
		  AND MATR_SEQ = #{matrSeq}
		  AND UPPER_CD = #{oldUpperCd}
		  AND LOWER_CD = #{oldLowerCd}
	    <!--
	    UPPER_CD, LOWER_CD 가 Key 수정을 MultiLine 으로 작업시 에러발생.
	     -->
    </update>

	<delete id="deleteBomMatr" parameterType="Map">
	  DELETE TB_SM01D01
	  WHERE CO_CD = #{coCd}
	    AND ORDRS_NO = #{ordrsNo}
	    AND SALES_CD = #{salesCd}
	    AND MATR_SEQ = #{matrSeq}
	    AND UPPER_CD = #{upperCd}
	    AND LOWER_CD = #{lowerCd}
	</delete>



	<delete id="deleteBomAllMatrAll" parameterType="Map">
	  DELETE TB_SM01D01
	  WHERE CO_CD = #{coCd}
	    AND ORDRS_NO = #{ordrsNo}
	    AND SALES_CD = #{salesCd}
	</delete>

	<delete id="deleteBomAll" parameterType="Map">
	  DELETE TB_SM01M01
	  WHERE CO_CD = #{coCd}
	    AND ORDRS_NO = #{ordrsNo}
	    AND SALES_CD = #{salesCd}
	</delete>

	<select id="selectBomMatrInfo" resultType="camelMap">
		SELECT CO_CD
	        , ORDRS_NO
	        , SALES_CD
	        , MATR_SEQ
	        , UPPER_CD
	        , LOWER_CD
	        , ORDRG_DIV_10
	        , ORDRG_DIV_20
	        , NEXT_PRCSN_NM
	        , DLVPLC_NM
	        , BOM_QTY
	        , POS_QTY
	        , MATR_CD
	        , MATR_NM
	        , GOODS_DIV
	        , MATR_CLNT_DIV
	        , MATR_DIV
	        , MATR_GRP
	        , MATR_MAT
	        , MATR_SIZE
	        , MATR_SPEC
	        , MATR_MAKR_NM
	        , MATR_MNO
	        , MATR_WT
	        , MATR_UNIT
	        , ORIGIN_NM
	        , MATR_DRW_NO
	        , MATR_TEST_DIV
	        , DLVR_RQM_DAY
	        , MATR_PURC_DIV
	        , MIN_ORDRG_QTY
	        , MATR_SAFT_QTY
	        , MATR_STOCK_CD
	        , DSGN_2D_MD
	        , AVRG_2D_MD
	        , DSGN_3D_MD
	        , AVRG_3D_MD
	        , PRDCTN_RQM_MD
	        , PRDCTN_AVRG_MD
	        , USE_YN
	        , MATR_PART_NO
	        , PCHS_CLNT_CD1
	        , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.PCHS_CLNT_CD1) AS PCHS_CLNT_NM1
	        , PCHS_CLNT_PCT1
	        , PCHS_CLNT_CD2
	        , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.PCHS_CLNT_CD2) AS PCHS_CLNT_NM2
	        , PCHS_CLNT_PCT2
	        , PCHS_CLNT_CD3
	        , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = T.PCHS_CLNT_CD3) AS PCHS_CLNT_NM3
	        , PCHS_CLNT_PCT3
	        , MATR_UPR
	        , MATR_AVRG_UPR
	        , MATR_RMK
	        , TO_CHAR(T.MATR_LAST_TRST_DT, 'YYYY-MM-DD') AS MATR_LAST_TRST_DT
	        , MATR_ATNT_CD
		FROM TB_SM01D01 T
	  WHERE CO_CD = #{coCd}
	    AND ORDRS_NO = #{ordrsNo}
	    AND SALES_CD = #{salesCd}
	    AND MATR_SEQ = #{matrSeq}
	    AND UPPER_CD = #{upperCd}
	    AND LOWER_CD = #{lowerCd}
  </select>


	<select id="bomTreeList" resultType="camelMap">
		SELECT
	         CASE WHEN T.UPPER_CD = '.' THEN '' ELSE T.UPPER_CD END UPPER_CD,
	         T.LOWER_CD,
	         LPAD(' ', 3*(LEVEL-1)) || (LEVEL -1) LVL,
	         DSGN_NO,
	         REGEXP_REPLACE(SYS_CONNECT_BY_PATH(T.LOWER_CD, ' -> '), '^\s+\-\>\s+', '') as PATH
	     FROM TB_SM01M01 T
	     WHERE T.SALES_CD = '23010-99TVFTE'
		     START WITH T.LOWER_CD = '23010-99TVFTE'
		     CONNECT BY PRIOR T.LOWER_CD = T.UPPER_CD
		     ORDER BY PATH
	</select>


</mapper>
