<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.sm.sm02.mapper.SM02Mapper">
			
	<!-- 발주관리 리스트 with -->
	<sql id="selectOrderListWith">
		WITH BJM AS 
		     ( 
		       SELECT DISTINCT 
		               A.CO_CD                                               AS CO_CD          --회사코드
					, (SELECT FN_CM05M01_CD_TO_NM(A.CO_CD) FROM DUAL)        AS CO_CD_NM	   --회사명
					, A.ORDRG_NO                                             AS ORDRG_NO       --발주번호
					, A.REQ_NO                                               AS REQ_NO         --요인별 요청번호
					, A.SALES_CD                                             AS SALES_CD       --SALES CODE
					, A.PCHS_CLNT_CD                                         AS PCHS_CLNT_CD   --구매처cd
		            , C.CLNT_NM                                              AS PCHS_CLNT_NM   --구매처명
					, TO_CHAR(A.ORDRG_DT, 'YYYY-MM-DD')                      AS ORDRG_DT       --발주일자
					, A.CURR_CD	                                             AS CURR_CD        --통화단위
					, A.EXRATE                                               AS EXRATE         --환율
					, TO_CHAR(A.DUDT_DEQ_DT, 'YYYY-MM-DD')                   AS DUDT_DEQ_DT    --납기요청일
					, A.ORDRG_RMK                                            AS ORDRG_RMK      --비고 
					, A.IN_CMPLET_YN                                         AS IN_CMPLET_YN   --입고완료여부
					, A.ETC_FIELD1                                           AS ETC_FIELD1
					, A.ETC_FIELD2                                           AS ETC_FIELD2
					, A.ETC_FIELD3                                           AS ETC_FIELD3
					, A.CREAT_ID                                             AS CREAT_ID
					, A.CREAT_PGM                                            AS CREAT_PGM
					, A.CREAT_DTTM                                           AS CREAT_DTTM
					, A.UDT_ID                                               AS UDT_ID
					, A.UDT_DTTM                                             AS UDT_DTTM
					, A.FILE_TRGT_KEY                                        AS FILE_TRGT_KEY
		            , B.MATR_CD
		            , (SELECT FN_BM05M01_NM(B.MATR_CD) FROM dual)            AS MATR_NM
		            , 
						CASE 
							WHEN BB.CNT > 1  THEN  ' 외 ' || (BB.CNT - 1) ||'건'
							ELSE ''
						END AS CNT_NM
	                , Q.PART_CD
                FROM TB_SM02M01 A --발주마스터
                	  LEFT OUTER JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO AND B.ORDRG_SEQ =  (SELECT MIN(ORDRG_SEQ) FROM TB_SM02D01 WHERE ORDRG_NO = B.ORDRG_NO))		/* 발주디테일 */
                	  LEFT OUTER JOIN (SELECT count(*) AS CNT, ORDRG_NO FROM TB_SM02D01 GROUP BY ORDRG_NO) BB ON (A.ORDRG_NO=BB.ORDRG_NO)
                      LEFT OUTER JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD--거래처마스터    
					  LEFT OUTER JOIN TB_QM01M01 Q ON Q.REQ_NO = A.REQ_NO
		       WHERE 1=1
                <if test="coCd != null and !coCd.equals('')">
                 AND A.CO_CD = #{coCd}
                </if>
                <if test="ordrgDtFrom != null and !ordrgDtFrom.equals('') and  ordrgDtTo != null and !ordrgDtTo.equals('')" >
                  AND A.ORDRG_DT BETWEEN TO_DATE( #{ordrgDtFrom},'YYYYMMDD') AND TO_DATE( #{ordrgDtTo},'YYYYMMDD') +1
                </if>
                <if test="salesCd != null and !salesCd.equals('')">
                AND A.SALES_CD LIKE '%' || #{salesCd} || '%'   --조회조건 : SALES_CD
               </if>
               <!-- 사용안함  -->
               <if test="ordrgDiv10 != null and !ordrgDiv10.equals('')">
                AND A.ORDRG_DIV10 = #{ordrgDiv10} --조회조건 : 발주구분  
               </if>
               <if test="pchsClntNm != null and !pchsClntNm.equals('')">
                AND C.CLNT_NM LIKE '%' || #{pchsClntNm} || '%' --조회조건 : 구매처
               </if>    
		     )
		     , SJD AS --수주상세 
		     ( 
              SELECT M.CO_CD                                             AS CO_CD         --회사코드
                    , M.ORDRS_NO                                         AS ORDRS_NO      --수주번호
                    , M.ORDRS_CLNT_CD                                    AS ORDRS_CLNT_CD --고객코드
                    , C.CLNT_NM                                          AS ORDRS_CLNT_NM --고객명
                    , X.SALES_CD                                         AS SALES_CD      --SALES Code
                    , M.CLNT_PJT                                         AS CLNT_PJT      --고객사PJT 
                    , X.PRDT_CD                                          AS PRDT_CD       --제품구분
		            , E.PRDT_NM                                          AS PRDT_NM       --제품구분명
                    , X.EQP_NM                                           AS EQP_NM        --설비명 
		            , X.ITEM_DIV                                         AS ITEM_DIV      --아이템구분
		            , (SELECT FN_CM05M01_CD_TO_NM(X.ITEM_DIV) FROM DUAL) AS ITEM_DIV_NM   --아이템 구분명
		            , C.CLNT_DIV_CD                                      AS CLNT_DIV_CD    --거래처 분류
		            , (SELECT FN_CM05M01_CD_TO_NM(C.CLNT_DIV_CD) FROM DUAL) AS CLNT_DIV_NM  --거래처 분류명
					, FN_CM05M01_CD_TO_NM(M.CLNT_PJT)                    AS CLNT_PJT_NM
                FROM TB_CR02M01  M --수주마스터
                      INNER      JOIN ( 
                      					SELECT #{coCd} CO_CD, SALES_CD, max(EQP_NM) EQP_NM, max(PRDT_CD) PRDT_CD, max(ITEM_DIV) ITEM_DIV, min(CO_CD||ORDRS_NO) ORDRS_NO
                      					  FROM TB_CR02D02
                      				     WHERE CO_CD = CASE WHEN 'GUN' = #{coCd} THEN 'GUN' ELSE CO_CD END
                      					 GROUP BY SALES_CD 
                      				) AS X ON X.ORDRS_NO = M.CO_CD || M.ORDRS_NO--수주상세  
                      LEFT OUTER JOIN TB_BM02M01 AS C ON M.ORDRS_CLNT_CD = C.CLNT_CD --거래처정보
                      LEFT OUTER JOIN TB_BM01M01 AS E ON X.PRDT_CD       = E.PRDT_CD --제품마스터
               WHERE 1=1
                 AND EXISTS (SELECT SALES_CD FROM BJM B WHERE B.SALES_CD = X.SALES_CD )
               <if test="salesCd != null and !salesCd.equals('')">
                AND X.SALES_CD LIKE '%'||#{salesCd}||'%' --조회조건 : SALES_CD
               </if>
               <if test="itemDiv != null and !itemDiv.equals('')">
		        AND X.ITEM_DIV = #{itemDiv}  --조회조건 : 아이템 구분
		       </if>  	
               <if test="prdtNm != null and !prdtNm.equals('')">
		        AND E.PRDT_NM LIKE '%' || #{prdtNm} || '%'  --조회조건 : 제품구분명
		       </if>
		       <if test="clntNm != null and !clntNm.equals('')">
		        AND C.CLNT_NM LIKE '%' || #{clntNm} || '%'  --조회조건 : 제품구분명
		       </if>
		       <if test="clntPjt != null and !clntPjt.equals('')">
		        AND M.CLNT_PJT IN ( ${clntPjt} )
		       </if>
		     )
		   , TDO AS --TODO 결재공유
		     (
				SELECT X.SALES_CD
						, X.TODO_NO
						, 
						CASE 
							WHEN(X.TODO_YN='Y') THEN 'Y'	
							WHEN(TO_NUMBER(X.TODO_YN)>0) THEN X.TODO_YN||'차'
							ELSE ''
						END AS TODO_YN
					FROM
					  (
				      SELECT A.SALES_CD 
				            , A.TODO_NO
				            , 
				            CASE 
								WHEN ( COUNT(A.TODO_KEY) = SUM(DECODE(NVL(A.SANCTN_STTUS, 'N'), 'N', 0, 'Y', 1) ) ) 
									THEN 'Y'
								ELSE TO_CHAR( SUM(DECODE(NVL(A.SANCTN_STTUS, 'N'), 'N', 0, 'Y', 1) ) )
				            END TODO_YN
				        FROM TB_WB20M03 A
				       WHERE 1=1 
                		 AND EXISTS (SELECT SALES_CD FROM SJD B WHERE B.SALES_CD = A.SALES_CD )
				       GROUP BY A.SALES_CD 
				               , A.TODO_NO
				               ORDER BY A.SALES_CD			  
					  ) X   
		     )
		     , INY AS --- 입고여부
		     (
			  SELECT ORDRG_NO
			  		, SUM(NVL(IN_QTY, 0))  IN_QTY
			        , TO_CHAR(MAX(D.IN_DT), 'YYYY-MM-DD') AS IN_DT			        
				FROM TB_SM03D01 D
				WHERE 1=1 
                 AND EXISTS (SELECT SALES_CD FROM BJM B WHERE B.ORDRG_NO = D.ORDRG_NO )
				GROUP BY ORDRG_NO     
		     )	
		     , BOM AS --- BOM 수량
		     (
		     	SELECT D.CO_CD, D.SALES_CD
		     	     , SUM(NVL(D.BOM_QTY,0))  AS BOM_QTY 
		     	     , SUM(NVL(D.POS_QTY,0))  AS POS_QTY
				  FROM  TB_SM01D01 D 
				 WHERE 1=1 
				   AND D.MATR_CD IS NOT NULL	
                   AND EXISTS (SELECT SALES_CD FROM SJD B WHERE B.SALES_CD = D.SALES_CD )
                 GROUP BY D.CO_CD, D.SALES_CD
			)
		     , BAL AS --- SALES_CD 별 발주총수량
		     (
		     SELECT  B.*
		     	, SUM(ORDRG_QTY) OVER(PARTITION BY CO_CD, SALES_CD) AS SALES_QTY
		     	, SUM(ORDRG_AMT) OVER(PARTITION BY CO_CD, SALES_CD) AS SALES_AMT
				FROM (		
				     	SELECT M.CO_CD,M.SALES_CD, D.ORDRG_NO
				     	     , SUM(NVL(D.ORDRG_QTY,0))  AS ORDRG_QTY 
				     	     , SUM(NVL(D.ORDRG_AMT,0))  AS ORDRG_AMT
				     	     , MIN(D.DSGN_NO) 			AS DSGN_NO 
						  FROM  TB_SM02D01 D 
						  			INNER JOIN TB_SM02M01 M  ON M.ORDRG_NO = D.ORDRG_NO
						 WHERE 1=1   
						   AND D.CO_CD = CASE WHEN 'GUN' = #{coCd} THEN 'GUN' ELSE D.CO_CD END --'GUN'이 아니면 테이블에 있는 회사코드로  
		                   AND EXISTS (SELECT SALES_CD FROM SJD B WHERE B.SALES_CD = D.SALES_CD )
		                 GROUP BY M.CO_CD, M.SALES_CD, D.ORDRG_NO
		             ) B
			)
	</sql>
	
	<!-- 발주관리 리스트 카운트  NEW -->
	<select id="selectOrderListCount" parameterType="Map" resultType="int">
		<include refid="selectOrderListWith"></include>
		SELECT COUNT(*)
			FROM
			(
			SELECT *
		          FROM (
		                SELECT A.CO_CD         --회사코드
		                  FROM BJM A	                       
		                 WHERE 1=1
						<if test="prdtNm != null and !prdtNm.equals('')">
						AND     T.PRDT_NM LIKE '%' || #{prdtNm} || '%'
						</if>
						<if test="itemDiv != null and !itemDiv.equals('')">
				        AND     T.ITEM_DIV = #{itemDiv}  --조회조건 : 아이템 구분
				        </if> 
				        <if test="clntDivCd != null and !clntDivCd.equals('')">
				        AND     T.CLNT_DIV_CD = #{clntDivCd}  --조회조건 : 아이템 구분
				        </if>
				        <if test="clntPjt != null and !clntPjt.equals('')">
				        AND     B.CLNT_PJT IN ( ${clntPjt} )
				        </if>
				        <if test="mngIdCd != null and !mngIdCd.equals('')">
				        AND     A.CREAT_ID IN ( ${mngIdCd} )
				        </if>
				        <if test="clntNm != null and !clntNm.equals('')">
				        AND T.ORDRS_CLNT_NM LIKE '%' || #{clntNm} || '%'  --조회조건 : 고객코드
				        </if>
		                ) 
		         WHERE 1=1
		           	
			) T
			  
	</select>
	
	<!-- 발주관리 리스트  NEW -->
	<select id="selectOrderList" parameterType="Map" resultType="camelMap">
			<include refid="selectOrderListWith"></include>
		SELECT T.*
			FROM
			(
			SELECT X.*
				, ROWNUM AS RN
				FROM
				(
				SELECT *
		          FROM (
		                SELECT A.CO_CD         --회사코드
		                     , A.CO_CD_NM	    --회사명
		                     , A.ORDRG_NO       --발주번호
		                     , BAL.DSGN_NO		-- 대표도번
		                     , A.REQ_NO         --요인별 요청번호
		                     , A.SALES_CD       --SALES CODE
		                     , A.PCHS_CLNT_CD   --구매처cd
		                     , A.PCHS_CLNT_NM   --구매처명
		                     , B.ORDRS_CLNT_CD  --고객사
		                     , B.ORDRS_CLNT_NM  --고객사명
		                     , B.CLNT_DIV_CD    --거래처분류
		                     , B.CLNT_DIV_NM --거래처분류명
		                     , B.CLNT_PJT       --고객사PJT
		                     , B.PRDT_CD        --제품구분
		                     , B.PRDT_NM        --제품구분명
		                     , B.ITEM_DIV       --아이템 구분
		                     , B.ITEM_DIV_NM    --아이템 구분명
		                     , B.EQP_NM         --설비명
		                     , A.ORDRG_DT       --발주일자
		                     , A.CURR_CD        --통화단위
		                     , A.EXRATE         --환율
		                     , BAL.ORDRG_QTY      --발주수량
		                     , BAL.ORDRG_AMT      --발주금액
		                     , A.DUDT_DEQ_DT    --납기요청일 
		                     , A.ORDRG_RMK      --비고 
		                     , A.IN_CMPLET_YN   --입고완료여부 
		                     , A.ETC_FIELD1
		                     , A.ETC_FIELD2
		                     , A.ETC_FIELD3
		                     , A.CREAT_ID
		                     , A.CREAT_PGM
		                     , A.CREAT_DTTM
		                     , A.FILE_TRGT_KEY
		                     , T.TODO_YN
		                     , T.TODO_NO
		                     , (SELECT FN_CM06M01_ID_TO_NM(NVL(A.UDT_ID,A.CREAT_ID)) FROM DUAL) AS PROCESS_NM	
		                     , M.BOM_QTY - BAL.SALES_QTY   AS REAMIN_BAL_QTY	/* SALES_CD 기준 BOM수량 - 발주수량  (발주잔량)*/
					     	 , CASE WHEN (M.BOM_QTY - BAL.SALES_QTY) > 0  THEN 1 ELSE 0 END AS SALES_COMP
							 , B.CLNT_PJT_NM       --고객사PJT
							 , 
							 (
							      SELECT CASE WHEN (SUM(DECODE(D.MAIL_YN, 'N', 0, 'Y', 1, 0))>0) THEN 'Y'
							                    ELSE ''
							              END 
							        FROM TB_SM02D01 D
							       WHERE 1=1 
							       AND A.ORDRG_NO = D.ORDRG_NO
							       GROUP BY ORDRG_NO, PCHS_CLNT_CD    
							 ) AS MAIL_YN				
							 ,
							   CASE 
							     WHEN(BAL.ORDRG_QTY=D.IN_QTY)
							     	THEN D.IN_DT
							     ELSE ''
							   END AS IN_YN
							 ,
							 DECODE(
							 (
							 	SELECT 
							 		   CASE
								 	     WHEN ( BAL.ORDRG_AMT - SUM(NVL(D.PCHS_AMT, 0)) = 0 )
								 	     	THEN '1' /* 발주금액 - 매입금액 */
								 	     ELSE '0'
									   END   
							 		FROM TB_SM12D01 D
							       WHERE 1=1 
							       AND A.ORDRG_NO = D.ORDRG_NO
							       AND D.CMPLET_YN = 'Y'
							       GROUP BY D.ORDRG_NO						 		
							 ) , NULL, '', 0, '', 1, 'Y') AS PCHS_YN	
							 , (SELECT TO_CHAR(MAX(CREAT_DTTM), 'YYYY-MM-DD')
							 	  FROM TB_SM02D02
								 WHERE CO_CD = A.CO_CD 
								   AND ORDRG_NO = A.ORDRG_NO 
							 ) AS REPORT_DT	
							 , MATR_NM || CNT_NM  AS MATR_NM		
           					 , TO_CHAR(IP.MIN_IPGO_DT, 'YYYY-MM-DD')     				AS MIN_IPGO_DT		--입고시작일자		
           					 , A.PART_CD
	              			 , (SELECT FN_CM05M01_CD_TO_NM(A.PART_CD) FROM DUAL) AS PART_CD_NM							 				 			 
		                  FROM BJM A
		                       LEFT OUTER JOIN SJD AS B ON A.SALES_CD = B.SALES_CD
		                       LEFT OUTER JOIN TDO AS T ON A.SALES_CD = T.SALES_CD AND A.ORDRG_NO = T.TODO_NO
							   LEFT OUTER JOIN INY AS D ON A.ORDRG_NO = D.ORDRG_NO
							   LEFT OUTER JOIN BOM AS M ON A.SALES_CD = M.SALES_CD
							   LEFT OUTER JOIN BAL      ON A.SALES_CD = BAL.SALES_CD AND A.CO_CD = BAL.CO_CD AND  A.ORDRG_NO =  BAL.ORDRG_NO	
								LEFT OUTER JOIN ( SELECT ORDRG_NO, MIN(IN_DT) AS MIN_IPGO_DT 
													FROM TB_SM03D01 IP 
												   GROUP BY IP.ORDRG_NO 
												 ) IP ON IP.ORDRG_NO = A.ORDRG_NO 	                       		                       
		                 WHERE 1=1
		                 <if test="ordrsClntCd != null and !ordrsClntCd.equals('')">
				          AND B.ORDRS_CLNT_CD = #{ordrsClntCd}  --조회조건 : 고객코드
				         </if>
				         <if test="prdtCd != null and !prdtCd.equals('')">
				          AND B.PRDT_CD = #{prdtCd}  --조회조건 : 제품구분
				         </if> 
		                ) Y
		         WHERE 1=1
					<if test="prdtNm != null and !prdtNm.equals('')">
					AND     Y.PRDT_NM LIKE '%' || #{prdtNm} || '%'
					</if>
					<if test="itemDiv != null and !itemDiv.equals('')">
			        AND     Y.ITEM_DIV = #{itemDiv}  --조회조건 : 아이템 구분
			        </if> 
			        <if test="clntDivCd != null and !clntDivCd.equals('')">
			        AND     Y.CLNT_DIV_CD = #{clntDivCd}  --조회조건 : 아이템 구분
			        </if>
			        <if test="clntPjt != null and !clntPjt.equals('')">
			        AND     Y.CLNT_PJT IN ( ${clntPjt} )
			        </if>
			        <if test="mngIdCd != null and !mngIdCd.equals('')">
			        AND     Y.CREAT_ID IN ( ${mngIdCd} )
			        </if>
			        <if test="clntNm != null and !clntNm.equals('')">
			        AND Y.ORDRS_CLNT_NM LIKE '%' || #{clntNm} || '%'  --조회조건 : 고객코드
			        </if>
		         ORDER BY CREAT_DTTM DESC, CO_CD, DUDT_DEQ_DT, SALES_CD DESC, ORDRS_CLNT_NM, PCHS_CLNT_NM, ORDRG_NO DESC, SALES_COMP DESC
				) X		
			) T
			WHERE 1=1	
		AND RN BETWEEN ${firstIndex} AND ${lastIndex}				
	</select>	
	
	<!--  file target key -->
	<select id="selectMaxTrgtKey" parameterType="Map" resultType="int">
    	SELECT NVL(MAX(TO_NUMBER(FILE_TRGT_KEY)),0) + 1 FROM TB_SM02M01
	</select>	
	
	<!-- 발주번호 max -->	
	<select id="selectMaxOrdrgNo" parameterType="Map" resultType="String">
		SELECT NVL(MAX_ORDRG_NO, 'BAL'||TO_CHAR(SYSDATE, 'YY')||'00001') AS MAX_ORDRG_NO
			FROM
			(
			SELECT DISTINCT DECODE( INSTR(ORDRG_NO, 'BAL'||TO_CHAR(SYSDATE, 'YY')), 0, 'BAL'||TO_CHAR(SYSDATE, 'YY')||'00001'
							, 'BAL' || MAX( TO_CHAR(SYSDATE, 'YY')|| LPAD( SUBSTRING(ORDRG_NO, -5)+1, 5, '0') ) OVER()
						  ) AS MAX_ORDRG_NO
				FROM TB_SM02M01
				WHERE ORDRG_NO LIKE 'BAL'||TO_CHAR(SYSDATE, 'YY')||'%'
			UNION ALL
			SELECT NULL AS MAX_ORDRG_NO
				FROM DUAL		
			)		
			WHERE MAX_ORDRG_NO IS NOT NULL OR ROWNUM = 1	
	</select>		
	
	<!-- 발주 DETAIL SELECT -->
	<select id="selectOrderDetailList" parameterType="Map" resultType="camelMap">
		SELECT X.*
			FROM
			(	
			SELECT D.CO_CD
				, D.ORDRG_NO
				, D.ORDRG_SEQ
				, D.SALES_CD
				, D.MATR_SEQ
				, D.UPPER_CD
				, D.LOWER_CD
				, D.DSGN_NO
				, D.MATR_CD
				, ( SELECT FN_CM05M01_CD_TO_NM(D.MATR_TEST_DIV) FROM DUAL ) MATR_TEST_DIV    
				, NVL(ORDRG_PRC,0)				AS ORDRG_PRC		/* 발주단가		*/
				, ORDRG_QTY											/* 발주수량 */
				, NVL(ORDRG_PRC,0)*ORDRG_QTY	AS ORDRG_AMT		/* 발주금액  */
				, TO_CHAR(D.DUDT_DEQ_DT, 'YYYY-MM-DD') DUDT_DEQ_DT
				, TO_CHAR(D.DUDT_INTEND_DT, 'YYYY-MM-DD') DUDT_INTEND_DT
				, ORDRG_DTL_RMK
				, D.CREAT_ID
				, D.CREAT_PGM
				, D.CREAT_DTTM
				, D.UDT_ID
				, D.UDT_PGM
				, D.UDT_DTTM
				, D.IN_CMPLET_YN
		        , D.WH_CD AS MATR_WH_CD		/* 입고창고  */
		        , ( SELECT FN_CM05M01_CD_TO_NM(D.WH_CD) FROM DUAL ) AS MATR_WH_NM		/* 입고창고  */
		        , 
		        (
		        	SELECT NVL(SUM(ORDRG_QTY), 0) 
		        		FROM TB_SM02D01 CC
		        	WHERE 1=1 /* D.CO_CD = CC.CO_CD */ 
		        		AND D.ORDRG_NO != CC.ORDRG_NO
		        		AND D.SALES_CD = CC.SALES_CD 
		        		AND D.LOWER_CD = CC.LOWER_CD
		        		AND D.MATR_CD = CC.MATR_CD
		        ) AS PRE_BOM_QTY			/* 구매 BOM 기발주 수량 임시 */      
		        ,
		        (
		        	SELECT CC.BOM_QTY			/* 구매 BOM 수량 */
		        		FROM TB_SM01D01 CC 						        		
					WHERE 1=1
		        		AND D.SALES_CD = CC.SALES_CD AND D.MATR_SEQ = CC.MATR_SEQ
	        			AND D.UPPER_CD=CC.UPPER_CD  AND D.LOWER_CD=CC.LOWER_CD       		
		        ) BOM_QTY /* 구매 BOM 수량 */
		        , 'Y' AS USER_CHK_V		/* 수정시 CHK값 SET */
		        , E.MATR_NM		/* 자재명 */
		        , E.MATR_MAT		/* 소재 */
		        , E.MATR_MAKR_NM
		        , E.MATR_MNO
		        , E.MATR_SPEC
				, D.ORDRG_DIV10					/* 발주구분 */
				, ( SELECT FN_CM05M01_CD_TO_NM(D.ORDRG_DIV10) FROM DUAL ) AS ORDRG_DIV10_NM	/* 발주구분명 */			
				, D.ORDRG_DIV20					/* 용도구분 */
				, ( SELECT FN_CM05M01_CD_TO_NM(D.ORDRG_DIV20) FROM DUAL ) AS ORDRG_DIV20_NM	/* 용도구분명 */ 			
				/* , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = E.PCHS_CLNT_CD) AS BOM_PCHS_CLNT_NM */		/* 협력사 */
				, E.PCHS_CLNT_NM AS BOM_PCHS_CLNT_NM					/* 거래처명 */
				, E.MNG_NM /* 담당자명 */
				, F.PCHS_CLNT_CD1
				, (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = F.PCHS_CLNT_CD1) AS PCHS_CLNT_NM1		/* 구매처1 */
				, F.PCHS_CLNT_PCT1
				, F.PCHS_CLNT_CD2
				, (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = F.PCHS_CLNT_CD2) AS PCHS_CLNT_NM2		/* 구매처2 */
				, F.PCHS_CLNT_PCT2
				, F.PCHS_CLNT_CD3
				,(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = F.PCHS_CLNT_CD3) AS PCHS_CLNT_NM3		/* 구매처2 */		
				, D.NEXT_PRCSN_NM					/* 후행업체 */	  
				
			    , D.MATR_SPEC       /* 규격			*/
			    , D.MATR_MNO        /* 형번(Model No) */
			    , D.MATR_SIZE       /* 크기           */
			    , D.MATR_WT         /* 중량           */
			    , D.MATR_MAT        /* 소재           */
			    , D.MATR_MAKR_NM    /* 제조시          */             	
			FROM TB_SM02D01 D			/* 발주디테일 */
			LEFT OUTER JOIN TB_SM01D01 E ON(/* D.CO_CD=E.CO_CD AND */ D.SALES_CD=E.SALES_CD AND D.UPPER_CD=E.UPPER_CD AND D.LOWER_CD=E.LOWER_CD
											AND D.MATR_SEQ=E.MATR_SEQ AND D.MATR_CD=E.MATR_CD)		/*구매 BOM */
			LEFT OUTER JOIN TB_BM05M01 F ON ( E.MATR_CD = F.MATR_CD )	/* 자재마스터 */					
			WHERE 1=1
			<if test="coCd != null and !coCd.equals('')">
				AND D.CO_CD = #{coCd}   
			</if>		
			<if test="ordrgNo != null and !ordrgNo.equals('')">
				AND D.ORDRG_NO = #{ordrgNo}   
			</if>	
			<if test="ordrgSeq != null and !ordrgSeq.equals('')">
				AND D.ORDRG_SEQ = #{ordrgSeq}   
			</if>		
			<if test="salesCd != null and !salesCd.equals('')">
				AND D.SALES_CD = #{salesCd}   
			</if>
			) X
			ORDER BY DSGN_NO, MATR_CD, BOM_PCHS_CLNT_NM ASC 					
	</select>
	
	<!-- bom detail list -->
	<select id="selectBomDetailList" parameterType="Map" resultType="camelMap">
		SELECT X.*
				, 
				CASE 
					WHEN((X.BOM_QTY-X.PRE_BOM_QTY) = 0)
					  THEN 'Y'
					ELSE 'N'
				END AS USER_CHK_V		/* 수정시 CHK값 SET */		
			FROM
			(
		        SELECT D.CO_CD
			        , ( SELECT FN_CM05M01_CD_TO_NM(D.CO_CD) FROM DUAL ) CO_CD_NM
					, D.SALES_CD
	--				, D.DSGN_NO			/*설계BOM에 있는 도번 사용*/
					, M.DSGN_NO			/*설계BOM에 있는 도번 사용*/
					, D.UPPER_CD
					, D.LOWER_CD
					, D.MATR_SEQ
					, D.ORDRG_DIV_10
					, ( SELECT FN_CM05M01_CD_TO_NM(D.ORDRG_DIV_10) FROM DUAL ) AS ORDRG_DIV_10_NM
					, D.ORDRG_DIV_20
					, ( SELECT FN_CM05M01_CD_TO_NM(D.ORDRG_DIV_20) FROM DUAL ) AS ORDRG_DIV_20_NM
					/* , D.NEXT_PRCSN_NM */		/* 발주디테일로 이동 */
					, D.DLVPLC_NM   AS NEXT_PRCSN_NM   --후행업체명 BOM에서 입력됨
					, D.MNG_NM 							--BOM에서 등록한 담당자명
					, D.MATR_CD
					, D.MATR_NM
					, D.GOODS_DIV
					, D.MATR_CLNT_DIV
					, D.MATR_DIV
					, D.MATR_GRP
					, D.MATR_MAT
					, D.MATR_SIZE
					, D.MATR_SPEC
					, D.MATR_MAKR_NM
					, D.MATR_MNO
					, D.MATR_WT
					, D.MATR_UNIT
					, D.ORIGIN_NM
					, D.MATR_DRW_NO
					, ( SELECT FN_CM05M01_CD_TO_NM(D.MATR_TEST_DIV) FROM DUAL ) MATR_TEST_DIV    
					, D.DLVR_RQM_DAY
					, D.MATR_PURC_DIV
					, D.MIN_ORDRG_QTY
					, D.MATR_SAFT_QTY
					, D.MATR_STOCK_CD
					, D.DSGN_2D_MD
					, D.AVRG_2D_MD
					, D.DSGN_3D_MD
					, D.AVRG_3D_MD
					, D.PRDCTN_RQM_MD
					, D.PRDCTN_AVRG_MD
					, D.USE_YN
					, D.MATR_PART_NO
					, E.PCHS_CLNT_CD1
					, D.PCHS_CLNT_NM AS BOM_PCHS_CLNT_NM					/* 거래처명 */
					,(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = E.PCHS_CLNT_CD1) AS PCHS_CLNT_NM1		/* 구매처1 */
					, E.PCHS_CLNT_PCT1
					, E.PCHS_CLNT_CD2
					,(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = E.PCHS_CLNT_CD2) AS PCHS_CLNT_NM2		/* 구매처2 */
					, E.PCHS_CLNT_PCT2
					, E.PCHS_CLNT_CD3
					,(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = E.PCHS_CLNT_CD3) AS PCHS_CLNT_NM3		/* 구매처2 */
					, E.PCHS_CLNT_PCT3
					, D.MATR_UPR
					, D.MATR_AVRG_UPR
					, D.MATR_RMK
					, D.MATR_LAST_TRST_DT
					, D.MATR_ATNT_CD
					, D.MATR_NO
			        , F_CO_DEFAULT_WH(#{coCd}, 'GDSGRPWHDIV01', 'CD') AS MATR_WH_CD		/* 입고창고 하드코딩값 */
			        , F_CO_DEFAULT_WH(#{coCd}, 'GDSGRPWHDIV01', 'NM') AS MATR_WH_NM		/* 입고창고 하드코딩값 */
			        , D.BOM_QTY /* 구매 BOM 수량 */
			        , 
			        (
			        	SELECT NVL(SUM(ORDRG_QTY), 0) 
			        		FROM TB_SM02D01 CC
			        	WHERE 1=1 /* D.CO_CD = CC.CO_CD */ 
				        		AND D.SALES_CD = CC.SALES_CD 
				        		AND D.LOWER_CD = CC.LOWER_CD
				        		AND D.MATR_CD = CC.MATR_CD        		
			        ) AS PRE_BOM_QTY			/* 구매 BOM 기발주 수량 임시 */        
				FROM TB_SM01D01 D		/* 구매 BOM */
					INNER JOIN TB_BM05M01 E ON ( D.MATR_CD = E.MATR_CD )	/* 자재마스터 */
					LEFT OUTER JOIN  TB_SM01M01 M ON   M.SALES_CD = D.SALES_CD  AND  M.LOWER_CD = D.UPPER_CD
				WHERE 1=1	
					AND D.MATR_CD IS NOT NULL
					AND D.BOM_QTY IS NOT NULL   
					AND D.SALES_CD = #{salesCd}
			/* ORDER BY D.LOWER_CD, D.UPPER_CD, D.MATR_SEQ */			
			) X 
			WHERE (BOM_QTY-PRE_BOM_QTY) != 0 
			ORDER BY  BOM_PCHS_CLNT_NM ASC, DSGN_NO, MATR_CD
	</select>	
	
	<!-- 발주상세 팝업 -->
	<select id="selectOrderDetailView" parameterType="Map" resultType="camelMap">	
		SELECT A.FILE_TRGT_KEY
			, A.CO_CD
			, A.ORDRG_NO
			, B.ORDRG_SEQ
			, A.SALES_CD			
			, ( SELECT FN_CM05M01_CD_TO_NM(A.CO_CD) FROM DUAL ) AS CO_CD_NM	/* 회사명 */
			, A.PCHS_CLNT_CD				/* 구매처cd */
   			,
   			(
   				SELECT D.CLNT_NM
   					FROM TB_BM02M01 D
   				WHERE A.PCHS_CLNT_CD=D.CLNT_CD
   			) AS PCHS_CLNT_NM		/* 구매처명 */	
			, C.ORDRS_CLNT_CD				 /* 고객사 */
			, C.ORDRS_CLNT_NM				/* 고객사명 */
			, C.CLNT_PJT AS CLNT_PJT					 /* 고객사 PJT */
			, ( SELECT FN_CM05M01_CD_TO_NM(C.CLNT_PJT) FROM DUAL ) AS CLNT_PJT_NM					 /* 고객사 PJT */
			, C.PRDT_CD			/* 제품구분 */
			, C.PRDT_NM			/* 제품구분명 */			                    
			, C.ITEM_DIV		/* 아이템 구분 */    
            , ( SELECT FN_CM05M01_CD_TO_NM(C.ITEM_DIV) FROM DUAL ) AS ITEM_DIV_NM	/* 아이템 구분명 */			
   			, C.EQP_NM					/* 설비명 */				            		   					
			, TO_CHAR(A.ORDRG_DT, 'YYYY-MM-DD') ORDRG_DT		/* 발주일자 */
			, A.CURR_CD						/* 통화단위 */
			, A.EXRATE						/* 환율 */	
			, SUM(B.ORDRG_AMT) OVER(PARTITION BY B.CO_CD, B.ORDRG_NO) ORDRG_AMT	/* 발주금액 합*/					
			, TO_CHAR(A.DUDT_DEQ_DT, 'YYYY-MM-DD') DUDT_DEQ_DT
			, ( SELECT FN_CM05M01_CD_TO_NM(B.MATR_TEST_DIV) FROM DUAL ) MATR_TEST_DIV    
			, B.ORDRG_DTL_RMK
			, B.IN_CMPLET_YN
	        , B.WH_CD AS MATR_WH_CD		/* 입고창고  */ 	
			,
			( --결재정보 등록 여부
				SELECT CASE
						WHEN (COUNT(TODO_KEY)>0)
							THEN 'Y'
						ELSE 'N'
					   END
					FROM TB_WB20M03 W20
				WHERE 1=1
					AND A.SALES_CD=W20.SALES_CD
					AND A.ORDRG_NO=W20.TODO_NO										
			) AS TODO_YN	
			,
			( --결재진행여부
				SELECT max(SANCTN_STTUS)
					FROM TB_WB20M03 W20
				WHERE 1=1
					AND A.SALES_CD=W20.SALES_CD
					AND A.ORDRG_NO=W20.TODO_NO										
			) AS SANCTN_STTUS		
			, A.REQ_NO
            , M.NAME 		AS ORDRG_MNG_NM   /*생성자명 */
            , M.OFF_TEL_NO  AS ORDRG_MNG_TEL_NO   /*생성자전화번호 */
            , A.ORDRG_RMK  
            , A.CREAT_ID       AS ORDRG_CREAT_ID             
            , TO_CHAR(A.CREAT_DTTM, 'YYYY-MM-DD HH24:MI:SS')     		AS CREAT_DTTM   	--작성일자 
            , TO_CHAR(IP.MIN_IPGO_DT, 'YYYY-MM-DD')     				AS MIN_IPGO_DT		--입고시작일자
            , TO_CHAR(MA.SEND_DTTM, 'YYYY-MM-DD HH24:MI:SS')     		AS MAIL_SEND_DTTM  	--최초메일발송일자
            , TO_CHAR(RP.REPORT_DTTM, 'YYYY-MM-DD HH24:MI:SS')     		AS REPORT_DTTM  	--최초발행일자
            
		FROM TB_SM02M01 A
							INNER JOIN TB_SM02D01 B ON(A.CO_CD=B.CO_CD AND A.SALES_CD=B.SALES_CD AND A.ORDRG_NO=B.ORDRG_NO)
							LEFT OUTER JOIN TB_CM06M01 AS M ON M.ID = A.CREAT_ID
							LEFT OUTER JOIN
											(
											 SELECT  X.CO_CD 					/* 회사코드 */
											 		, Y.ORDRS_CLNT_CD 			/* 고객사 */
									                      , A.CLNT_NM  AS ORDRS_CLNT_NM		/* 고객사명 */
									                      , X.SALES_CD
									                      , Y.CLNT_PJT		/* 고객사PJT */
									                      , X.PRDT_CD			/* 제품구분 */
									                      , E.PRDT_NM			/* 제품구분명 */
									                      , X.ITEM_DIV		/* 아이템 구분 */
									                      , X.EQP_NM			/* 설비명 */
									                FROM TB_CR02D02 X		/* 수주상세 */
									                      INNER JOIN TB_CR02M01 Y ON(X.CO_CD = Y.CO_CD AND X.ORDRS_NO = Y.ORDRS_NO)	/* 수주마스터 */
									                      LEFT OUTER JOIN TB_BM02M01 A ON Y.ORDRS_CLNT_CD = A.CLNT_CD /* 거래처마스터 */
									                      LEFT OUTER JOIN TB_BM01M01 E ON(X.PRDT_CD=E.PRDT_CD)							
											) C ON(A.SALES_CD=C.SALES_CD)	
							LEFT OUTER JOIN ( SELECT ORDRG_NO, MIN(IN_DT) AS MIN_IPGO_DT 
												FROM TB_SM03D01 IP 
											   GROUP BY IP.ORDRG_NO 
											 ) IP ON IP.ORDRG_NO = A.ORDRG_NO 
							LEFT OUTER JOIN (
												SELECT SEND_KEY, MIN(SEND_DTTM) AS SEND_DTTM
												 FROM TB_CM10M01
												WHERE SEND_TYPE = 'SM0201P01'
												GROUP BY SEND_KEY
											) MA ON MA.SEND_KEY = A.FILE_TRGT_KEY 
							LEFT OUTER JOIN (
												SELECT ORDRG_NO, MIN(CREAT_DTTM) AS REPORT_DTTM
												 FROM TB_SM02D02
												GROUP BY ORDRG_NO
											) RP ON RP.ORDRG_NO = A.ORDRG_NO 
		WHERE 1=1
		<if test="coCd != null and !coCd.equals('')">
			AND A.CO_CD = #{coCd}   
		</if>		
		<if test="ordrgNo != null and !ordrgNo.equals('')">
			AND A.ORDRG_NO = #{ordrgNo}   
		</if>	
		<if test="ordrgSeq != null and !ordrgSeq.equals('')">
			AND B.ORDRG_SEQ = #{ordrgSeq}   
		</if>		
		<if test="salesCd != null and !salesCd.equals('')">
			AND A.SALES_CD = #{salesCd}   
		</if>							
	</select>	
	
	<!-- 발주관리 - 발주마스터 등록 -->
	<insert id="insertOrderMaster" parameterType="Map">	
		INSERT INTO TB_SM02M01
	      (
			FILE_TRGT_KEY
			, CO_CD
			, ORDRG_NO
			, REQ_NO
			, SALES_CD
			, PCHS_CLNT_CD
			, ORDRG_DT
			, CURR_CD
			, EXRATE
			, ORDRG_AMT
			, DUDT_DEQ_DT
			, ORDRG_RMK
			, IN_CMPLET_YN
			, ETC_FIELD1
			, ETC_FIELD2
			, ETC_FIELD3
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
	      )
	    VALUES
	    (
			#{fileTrgtKey}
			, #{coCd}
			, #{maxOrdrgNo}
			, #{reqNo,  jdbcType=VARCHAR}
			, #{salesCd,  jdbcType=VARCHAR}
			, #{pchsClntCd,  jdbcType=VARCHAR}
			, #{ordrgDt,  jdbcType=VARCHAR}
			, #{currCd,  jdbcType=VARCHAR}
			, #{exrate,  jdbcType=VARCHAR}
			, #{ordrgAmt,  jdbcType=DECIMAL}
			, #{dudtDeqDt,  jdbcType=VARCHAR}
			, #{ordrgRmk,  jdbcType=VARCHAR}
			, #{inCmpletYn,  jdbcType=VARCHAR}
			, #{etcField1,  jdbcType=VARCHAR}
			, #{etcField2,  jdbcType=VARCHAR}
			, #{etcField3,  jdbcType=VARCHAR}
			, #{userId}
			, #{pgmId}
			, SYSDATE
	    )
	</insert>	
	
	<!-- 발주 detail 등록 -->
	<insert id="insertOrderDetail" parameterType="Map">

	    <selectKey keyProperty="ordrgSeq" resultType="String" order="BEFORE">
			SELECT NVL(MAX(ORDRG_SEQ)+1, 1) FROM TB_SM02D01 
				WHERE CO_CD = #{coCd}
						AND ORDRG_NO = #{maxOrdrgNo}
	    </selectKey>		    
	    INSERT INTO TB_SM02D01
	    (
			CO_CD
			, ORDRG_NO
			, ORDRG_SEQ
			, SALES_CD
			, MATR_SEQ
			, UPPER_CD
			, LOWER_CD
			, DSGN_NO 
			, MATR_CD
			, MATR_TEST_DIV
			, ORDRG_PRC
			, ORDRG_QTY
			, ORDRG_AMT
			, DUDT_DEQ_DT
			, DUDT_INTEND_DT
			, ORDRG_DTL_RMK
			, ETC_FIELD1
			, ETC_FIELD2
			, ETC_FIELD3
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
			, IN_CMPLET_YN
			, WH_CD
			, ORDRG_DIV10
			, ORDRG_DIV20		
			, NEXT_PRCSN_NM
			
		    , MATR_SPEC
		    , MATR_MNO
		    , MATR_SIZE
		    , MATR_WT
		    , MATR_MAT
		    , MATR_MAKR_NM
	      )
	    VALUES
	    (
			#{coCd}
			, #{maxOrdrgNo}
			, #{ordrgSeq}
			, #{salesCd}
			, #{matrSeq}
			, #{upperCd}
			, #{lowerCd}
			, #{dsgnNo}
			, #{matrCd}
			, #{matrTestDiv}			
			, #{ordrgPrc,  jdbcType=VARCHAR}	  
			, #{ordrgQty,  jdbcType=VARCHAR}	  
			, #{ordrgAmt,  jdbcType=VARCHAR}	   
			, #{dudtDeqDt,  jdbcType=VARCHAR}	  
			, #{dudtIntendDt,  jdbcType=VARCHAR}	  
			, #{ordrgDtlRmk,  jdbcType=VARCHAR}	   
			, #{etcField1,  jdbcType=VARCHAR}
			, #{etcField2,  jdbcType=VARCHAR}
			, #{etcField3,  jdbcType=VARCHAR}
			, #{userId}
			, #{pgmId}
			, SYSDATE
			, #{inCmpletYn,			jdbcType=VARCHAR}			
			, #{matrWhCd,			jdbcType=VARCHAR}	 	
			, #{ordrgDiv10,  jdbcType=VARCHAR}
			, #{ordrgDiv20,  jdbcType=VARCHAR}		
			, #{nextPrcsnNm,  jdbcType=VARCHAR}	
			
			, #{matrSpec,  jdbcType=VARCHAR}
			, #{matrMno,  jdbcType=VARCHAR}
			, #{matrSize,  jdbcType=VARCHAR}
			, #{matrWt,  jdbcType=VARCHAR}
			, #{matrMat,  jdbcType=VARCHAR}
			, #{matrMakrNm,  jdbcType=VARCHAR}		   
	    )
	</insert>	
	
	<!-- 발주관리 마스터 수정 -->
	<update id="updateOrderMaster" parameterType="Map">
		UPDATE TB_SM02M01
			SET
		REQ_NO = #{reqNo} 
		, SALES_CD = #{salesCd}
		, PCHS_CLNT_CD = #{pchsClntCd}
		, ORDRG_DT = #{ordrgDt}
		, DUDT_DEQ_DT = #{dudtDeqDt}
		, CURR_CD = #{currCd}
		, EXRATE = #{exrate}
		, ORDRG_AMT = #{ordrgAmt}
		, ORDRG_RMK = #{ordrgRmk,			jdbcType=VARCHAR}	 	
		, IN_CMPLET_YN = #{inCmpletYn,			jdbcType=VARCHAR}
		, UDT_ID = #{userId}
		, UDT_PGM = #{pgmId}
		, UDT_DTTM = SYSDATE
		WHERE FILE_TRGT_KEY = #{fileTrgtKey}
			AND CO_CD = #{coCd}
			AND ORDRG_NO = #{ordrgNo}
	</update>
		

	<!-- 발주서 발행 여부 체크 -->
	<insert id="OrderMasterReport" parameterType="Map">
	    INSERT INTO TB_SM02D02
	    (
			CO_CD
			, ORDRG_NO
			, ORDRG_SEQ
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
	      )
	    VALUES
	    (
			#{coCd}
			, #{ordrgNo}
			, (SELECT  NVL(max(TO_NUMBER(ORDRG_SEQ)),0)+1 FROM TB_SM02D02 WHERE CO_CD = #{coCd} AND ORDRG_NO = #{ordrgNo})
			, #{creatId}
			, #{pgmId}
			, SYSDATE	   
	    )
	</insert>
				
	<!-- 발주관리 상세 수정 -->
	<update id="updateOrderDetail" parameterType="Map">
		UPDATE TB_SM02D01
			SET 
		SALES_CD = #{salesCd}
		, MATR_SEQ = #{matrSeq}
		, UPPER_CD = #{upperCd}
		, LOWER_CD = #{lowerCd}
		, DSGN_NO = #{dsgnNo}
		, MATR_CD = #{matrCd}
		, MATR_TEST_DIV = #{matrTestDiv}
		, ORDRG_PRC = #{ordrgPrc}
		, ORDRG_QTY = #{ordrgQty}
		, ORDRG_AMT = #{ordrgAmt}
		, DUDT_DEQ_DT = #{dudtDeqDt}
		, DUDT_INTEND_DT = #{dudtIntendDt}
		, ORDRG_DTL_RMK = #{ordrgDtlRmk,			jdbcType=VARCHAR}	
		, UDT_ID = #{userId}
		, UDT_PGM = #{pgmId}
		, UDT_DTTM = SYSDATE	
		, WH_CD = #{matrWhCd,  jdbcType=VARCHAR}		
		, ORDRG_DIV10 = #{ordrgDiv10,			jdbcType=VARCHAR}	
		, ORDRG_DIV20 = #{ordrgDiv20,			jdbcType=VARCHAR}	
		, NEXT_PRCSN_NM = #{nextPrcsnNm,  jdbcType=VARCHAR}	
		
		, MATR_SPEC     = #{matrSpec,  jdbcType=VARCHAR}
		, MATR_MNO      = #{matrMno,  jdbcType=VARCHAR}
        , MATR_SIZE     = #{matrSize,  jdbcType=VARCHAR}
        , MATR_WT       = #{matrWt,  jdbcType=VARCHAR}
        , MATR_MAT      = #{matrMat,  jdbcType=VARCHAR}
        , MATR_MAKR_NM  = #{matrMakrNm,  jdbcType=VARCHAR}
		WHERE CO_CD = #{coCd} 
		 AND ORDRG_NO = #{ordrgNo} 
		 AND ORDRG_SEQ = #{ordrgSeq}
	</update>
	
		
	
	<!-- 발주 디테일  삭제 -->         
	<delete id="deleteOrderDetail" parameterType="Map">
		DELETE 
			FROM TB_SM02D01
		WHERE 1=1
			AND CO_CD = #{coCd}
			AND ORDRG_NO = #{ordrgNo}
			AND ORDRG_SEQ = #{ordrgSeq}	
	</delete>
	
	<!-- 발주 마스터  삭제 -->         
	<delete id="deleteOrderMaster" parameterType="Map">
		DELETE 
			FROM TB_SM02M01
		WHERE 1=1
			AND FILE_TRGT_KEY = #{fileTrgtKey}
			AND CO_CD = #{coCd}
			AND ORDRG_NO = #{ordrgNo}	
	</delete>		
	
	<!-- 발주 디테일  모두삭제 -->         
	<delete id="deleteOrderDetailAll" parameterType="Map">
		DELETE 
			FROM TB_SM02D01
		WHERE 1=1
			AND CO_CD = #{coCd}
			AND ORDRG_NO = #{ordrgNo}	
	</delete>	
		
	<!-- 오늘환율 -->	
	<select id="selectCurrToday" parameterType="Map" resultType="camelMap">	
		SELECT CODE_ID
				, CODE_NM
				, CODE_ETC
			FROM TB_CM05M01
		WHERE 1=1
		<if test="codeKind != null and !codeKind.equals('')">
			AND CODE_KIND = #{codeKind}   
		</if>				
		<if test="codeId != null and !codeId.equals('')">
			AND CODE_ID = #{codeId}   
		</if>						
	</select>		
	
	<!-- 회사, 자재코드, 거래처코드, 통화코드, 적용일  -->	
	<select id="selectCurrMatrUpr" parameterType="Map" resultType="String">	
		SELECT FN_BM11M01_UPRC (#{coCd, jdbcType=VARCHAR}
								, #{matrCd, jdbcType=VARCHAR}
								, #{pchsClntCd, jdbcType=VARCHAR}
								, #{curr, jdbcType=VARCHAR}
								, TO_CHAR(SYSDATE, 'YYYYMMDD')) 
			FROM DUAL		
	</select>	
	
	<!-- 입고,매입 작성여부  -->	
	<select id="selectInPurchaseChk" parameterType="Map" resultType="camelMap">	
		SELECT SUM(IN_YN) AS IN_YN
			, SUM(PURCHASE_YN) AS PURCHASE_YN
			FROM
			(
			SELECT CASE WHEN(COUNT(M03.ORDRG_NO)>0) THEN 1 ELSE 0 END AS IN_YN
					, 0 AS PURCHASE_YN
				FROM TB_SM03D01 M03
			WHERE 1=1 AND M03.ORDRG_NO = #{ordrgNo}
			UNION ALL
			SELECT 0 AS IN_YN
					, CASE WHEN(COUNT(M12.ORDRG_NO)>0) THEN 1 ELSE 0 END AS PURCHASE_YN
				FROM TB_SM12D01 M12
			WHERE 1=1 AND M12.ORDRG_NO = #{ordrgNo}	
			)		
	</select>				
	
	<!-- 메일발송 수정 -->
	<update id="updateMailConfirm" parameterType="Map">
		UPDATE TB_SM02D01
			SET 
		MAIL_YN = #{mailYn}	
		WHERE CO_CD = #{coCd} 
		 AND ORDRG_NO = #{ordrgNo} 
	</update>	
	
	<select id="select_prjct_code" parameterType="Map" resultType="camelMap">
			SELECT DISTINCT 
	        		  X.CLNT_PJT           AS CODE      --고객사PJT 
					, C.CODE_NM            AS NAME
	         FROM TB_SM02M01 A --발주마스터
	         			LEFT OUTER JOIN  ( 
                      					SELECT #{coCd} CO_CD, max(SALES_CD) SALES_CD,  min(CO_CD||ORDRS_NO) ORDRS_NO
                      					FROM TB_CR02D02
                      					WHERE SALES_CD IS NOT NULL
                      					  AND CO_CD = CASE WHEN 'GUN' = #{coCd} THEN 'GUN' ELSE CO_CD END
                      					GROUP BY SALES_CD 
                      				)   M  ON A.CO_CD = M.CO_CD
                      				      AND A.SALES_CD = M.SALES_CD
	                    LEFT OUTER JOIN TB_CR02M01 AS X ON X.CO_CD||X.ORDRS_NO = M.ORDRS_NO--수주상세 
	                    LEFT OUTER JOIN TB_CM05M01 AS C ON X.CLNT_PJT = C.CODE_ID   
	       WHERE 1=1
                <if test="coCd != null and !coCd.equals('')">
                 AND A.CO_CD = #{coCd}
                </if>
                <if test="ordrgDtFrom != null and !ordrgDtFrom.equals('') and  ordrgDtTo != null and !ordrgDtTo.equals('')" >
                  AND A.ORDRG_DT BETWEEN TO_DATE( #{ordrgDtFrom},'YYYYMMDD') AND TO_DATE( #{ordrgDtTo},'YYYYMMDD') +1
                </if>
                <if test="salesCd != null and !salesCd.equals('')">
                AND A.SALES_CD LIKE '%' || #{salesCd} || '%'   --조회조건 : SALES_CD
               </if>
		   ORDER BY C.CODE_NM   
    </select>
	
	<select id="select_mngId_code" parameterType="Map" resultType="camelMap">
			SELECT DISTINCT
	               A.CREAT_ID   AS CODE
				 , C.NAME 		AS NAME
	         FROM TB_SM02M01 A --발주마스터
	        		   LEFT OUTER JOIN TB_CM06M01 C  ON A.CREAT_ID  = C.ID
	        WHERE 1=1
                <if test="coCd != null and !coCd.equals('')">
                 AND A.CO_CD = #{coCd}
                </if>
                <if test="ordrgDtFrom != null and !ordrgDtFrom.equals('') and  ordrgDtTo != null and !ordrgDtTo.equals('')" >
                AND A.ORDRG_DT BETWEEN TO_DATE( #{ordrgDtFrom},'YYYYMMDD') AND TO_DATE( #{ordrgDtTo},'YYYYMMDD') +1
                </if>
                <if test="salesCd != null and !salesCd.equals('')">
                AND A.SALES_CD LIKE '%' || #{salesCd} || '%'   --조회조건 : SALES_CD
               </if>
		     ORDER BY C.NAME  
    </select>			
	
	<!-- 발주 물품 당사 도착 확인 처리 -->
	<update id="arriveWareHousingConfirm" parameterType="Map">
		UPDATE TB_SM02M01
		   SET 
				ARR_ID		= #{userId}
			  , ARR_DTTM	= SYSDATE
			  , ARR_YN		= 'Y'
		WHERE CO_CD 	= #{coCd} 
		  AND ORDRG_NO 	= #{ordrgNo} 
	</update>	

	<!-- 입고처리시 발주수량만큼 입고완료시 발주 물품 당사 도착 확인 처리 -->
	<update id="arriveWareHousingStoreConfirm" parameterType="Map">
		UPDATE TB_SM02M01
		   SET 
				ARR_ID		= #{userId}
			  , ARR_DTTM	= SYSDATE
			  , ARR_YN		= 'Y'
		WHERE CO_CD 	= #{coCd} 
		  AND ORDRG_NO 	= #{ordrgNo} 
		  AND 'Y'  = (SELECT DECODE(SUM(S.ORDRG_QTY),SUM(I.IN_QTY),'Y','N')
						FROM TB_SM02D01 S 
									LEFT OUTER JOIN TB_SM03D01 I  ON S.ORDRG_NO  = I.ORDRG_NO
									                             AND S.ORDRG_SEQ = I.ORDRG_SEQ
					   WHERE S.ORDRG_NO = #{ordrgNo} 
					 )
	</update>	
		
	<!-- 발주 물품 당사 도착 확인 처리 -->
	<update id="arriveWareHousingUnconfirm" parameterType="Map">
		UPDATE TB_SM02M01
		   SET 
				ARR_ID		= ''
			  , ARR_DTTM	= ''
			  , ARR_YN		= 'N'
		WHERE CO_CD 	= #{coCd} 
		  AND ORDRG_NO 	= #{ordrgNo} 
	</update>	
			
	
	<!-- 발주 물품 당사 도착 확인 상세 확인 처리 -->
	<update id="detailArriveWareHousingConfirm" parameterType="Map">
		UPDATE TB_SM02D01
		   SET 
				ARR_ID		= #{userId}
			  , ARR_DTTM	= SYSDATE
			  , ARR_YN		= 'Y'
		WHERE CO_CD 	= #{coCd} 
		  AND ORDRG_NO 	= #{ordrgNo}
		<if test="ordrgSeq != null and !ordrgSeq.equals('')">
		  AND ORDRG_SEQ = #{ordrgSeq}
		</if>
	</update>	

	<!-- 입고처리시 발주수량만큼 입고완료시 발주 물품 당사 도착 확인 상세 확인 처리 -->
	<update id="detailArriveWareHousingStoreConfirm" parameterType="Map">
		UPDATE TB_SM02D01
		   SET 
				ARR_ID		= #{userId}
			  , ARR_DTTM	= SYSDATE
			  , ARR_YN		= 'Y'
		WHERE CO_CD 	= #{coCd} 
		  AND ORDRG_NO 	= #{ordrgNo} 
		  AND ORDRG_SEQ = #{ordrgSeq}  
		  AND 'Y'  = (SELECT DECODE(SUM(S.ORDRG_QTY),SUM(I.IN_QTY),'Y','N')
						FROM TB_SM02D01 S 
									LEFT OUTER JOIN TB_SM03D01 I  ON S.ORDRG_NO  = I.ORDRG_NO
									                             AND S.ORDRG_SEQ = I.ORDRG_SEQ
					   WHERE S.ORDRG_NO = #{ordrgNo} 
		  				 AND S.ORDRG_SEQ = #{ordrgSeq}
					 )
	</update>	
		
	<!-- 발주 물품 당사 도착 확인 상세 확인 처리 -->
	<update id="detailArriveWareHousingUnconfirm" parameterType="Map">
		UPDATE TB_SM02D01
		   SET 
				ARR_ID		= ''
			  , ARR_DTTM	= ''
			  , ARR_YN		= 'N'
		WHERE CO_CD 	= #{coCd} 
		  AND ORDRG_NO 	= #{ordrgNo} 
		<if test="ordrgSeq != null and !ordrgSeq.equals('')">
		  AND ORDRG_SEQ = #{ordrgSeq}
		</if> 
	</update>	
	
	<!-- 상세내역 전체 도착시 발주마스터정보에 도착 확인 처리 -->
	<update id="allArriveWareHousingStoreCheck" parameterType="Map">
		UPDATE TB_SM02M01
		   SET 
				ARR_ID		= #{userId}
			  , ARR_DTTM	= SYSDATE
			  , ARR_YN		= (SELECT decode(sum(decode(ARR_YN,'Y',1,0)), COUNT(ORDRG_NO), 'Y', 'N') --도착확인건수와 전체건수 비교해서 같으면 'Y', 다르면 'N'
						FROM TB_SM02D01 S 
					   WHERE S.ORDRG_NO = #{ordrgNo}
					 )
		WHERE CO_CD 	= #{coCd} 
		  AND ORDRG_NO 	= #{ordrgNo} 
	</update>	
 </mapper>