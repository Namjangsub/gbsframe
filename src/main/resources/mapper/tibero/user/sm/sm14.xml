<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.sm.sm14.mapper.SM14Mapper">

	<!-- 매입확정관리 조회 리스트  조회조건 -->
	<sql id="selectPurchaseListCondition">

		<!-- 회사코드 -->         
		<if test="coCd != null and !coCd.equals('')">
			AND A.CO_CD = #{coCd}   
		</if>
		<!-- 확정일자 -->         
		<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
			<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
            			AND A.ORDRG_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
			</if>   
		</if>	
		
		<!-- 구매처 -->         
		<if test="pchsClntCd != null and !pchsClntCd.equals('')">
			AND A.PCHS_CLNT_CD = #{pchsClntCd}   
		</if>       
		<if test="pchsClntNm != null and !pchsClntNm.equals('')">
			AND A.PCHS_CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
		</if>

		<if test="salesCd != null and !salesCd.equals('')">
			AND A.SALES_CD LIKE '%'|| #{salesCd} || '%'   
		</if>		
		<!-- 확정여부 -->
		<if test="cmpletYn != null and !cmpletYn.equals('')">
			AND NVL(A.CMPLET_YN, 'N') = #{cmpletYn}	/* 체크항목 CHKBOX 표시를 안하기 위해서 '' 처리후 USER_CHK_V 로 검색 */
		</if>		
		<!-- 매입구분 -->
		<if test="pchsGb != null and !pchsGb.equals('')">
			<if test='pchsGb == "ordrg"'>
			AND A.IS_COST = 'N'
			</if>
			<if test='pchsGb == "cost"'>
			AND A.IS_COST = 'Y'
			</if>			
			<if test='pchsGb == "retn"'>
			AND A.IS_COST = 'R'
			</if>			
		</if>	
		<if test="prjctCdNm != null and !prjctCdNm.equals('')">
			AND UPPER(CLNT_PJT_NM) LIKE '%'|| UPPER(#{prjctCdNm}) || '%'   
		</if>	
        <if test="clntPjt != null and !clntPjt.equals('')">
        	AND CLNT_PJT IN ( ${clntPjt} )
        </if>	
        <if test="mngIdCd != null and !mngIdCd.equals('')">
        	AND ORDRG_MNG_ID IN ( ${mngIdCd} )
        </if>																			
	</sql>	
		
	<!-- 매입확정 리스트  카운트 -->
	<select id="selectPurchaseListCount" parameterType="Map" resultType="int">
			SELECT COUNT(*)
					FROM
						(
						SELECT A.CO_CD	
							, A.PCHS_NO			/* 매입번호 */
							, A.PCHS_NO_GRID		/* 매입번호 그리드 출력용 */
							, A.ORDRG_NO
							, A.SALES_CD
							, A.PCHS_CLNT_CD
							, A.PCHS_CLNT_NM		/* 구매처명 */
							, A.MATR_CD
							, A.ORDRG_QTY
							, A.ORDRG_AMT	
							, A.ORDRG_DT
							, A.DSGN_NO			/* 대표도번 */	
							, A.PCHS_AMT
							, A.PCHS_VAT		/* 부가세 */
							, A.PCHS_QTY			/* 수량 */
							, 
							(
							  CASE 
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND NVL(A.PCHS_VAT, 0) > 0 )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND A.PCHS_VAT IS NOT NULL  )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))							  	 
							    ELSE NULL
							  END
							) AS PCHS_SUM_AMT			/* 합계금액 */
							, CASE  
								WHEN ( SUBSTR(A.ORDRG_NO, 0, 3) = 'BAL' )		/* 발주와 기타구매비용 분리 */
									THEN NVL(A.ORDRG_AMT, 0) - NVL(A.PCHS_AMT, 0)
								/* ELSE NVL(A.ORDRG_AMT, 0) + NVL(A.PCHS_VAT, 0)  */
								ELSE NVL(A.ORDRG_AMT, 0) - NVL(A.PCHS_AMT, 0) 
							  END AS REMAIN_AMT	/* 잔여금액 구매비용일 경우 부가세 포함으로 작업함 */							
							, TO_CHAR(A.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
							, A.CMPLET_YN
							, A.USER_CHK_V
							, A.IS_COST
							, A.BILL_YN		  /*계산서 여부*/
							, A.FILE_TRGT_KEY
						  FROM
						  (
							SELECT DISTINCT 
									  A.CO_CD                                               AS CO_CD          --회사코드
									, A.ORDRG_NO                                             AS ORDRG_NO       --발주번호
									, A.SALES_CD                                             AS SALES_CD       --SALES CODE
									, A.PCHS_CLNT_CD                                         AS PCHS_CLNT_CD   --구매처cd
									, C.CLNT_NM                                              AS PCHS_CLNT_NM   --구매처명
									, '' AS MATR_CD --자재명 없음
									, A.ORDRG_DT											 AS ORDRG_DT       --발주일자									
									, D.DSGN_NO 											 AS DSGN_NO			/* 도번 MIN */
									, D.ORDRG_QTY				/* 발주수량 */
									, D.ORDRG_AMT				/*발주 금액 */
									, NVL(E.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */
									, E.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/					
									, E.PCHS_AMT				/* 매입금액 */
									, E.PCHS_VAT				/* 매입금액 */
									, E.PCHS_QTY				/* 매입수량 */
									, E.PCHS_DT					/* 매입확정일자 */
									, CASE
										WHEN ( COUNT(B.ORDRG_SEQ) OVER(PARTITION BY B.ORDRG_NO) = CMPLET_SUM )
											THEN 'Y'
										ELSE 'N'
									  END AS CMPLET_YN	 		/* 확정여부 */
									, CASE
										WHEN ( COUNT(B.ORDRG_SEQ) OVER(PARTITION BY B.ORDRG_NO) = CMPLET_SUM )
											THEN 'Y'
										ELSE 'N'
									  END AS USER_CHK_V	 		/* 확정여부 */											            
									, 'N' IS_COST			/* 기타비용여부 */	
									, '' AS BILL_YN		  /*계산서 여부*/
									, FILE_TRGT_KEY		
								FROM TB_SM02M01 A --발주마스터
				                INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
				                INNER      JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD--거래처마스터   
				                LEFT OUTER JOIN (SELECT A.CO_CD
														, A.ORDRG_NO
														, A.SALES_CD
														, SUM(A.ORDRG_QTY) ORDRG_QTY
														, SUM(A.ORDRG_AMT) ORDRG_AMT
														, ( SELECT MIN(B.DSGN_NO) FROM TB_SM02D01 B WHERE A.SALES_CD=B.SALES_CD AND A.ORDRG_NO=B.ORDRG_NO) AS DSGN_NO
													FROM TB_SM02D01 A
						                         WHERE 1=1
						                         	GROUP BY A.CO_CD
						                                     , A.ORDRG_NO
						                                     , A.SALES_CD
				                                 ) AS D ON A.CO_CD = D.CO_CD AND A.SALES_CD = D.SALES_CD AND A.ORDRG_NO = D.ORDRG_NO --발주상세
								LEFT OUTER JOIN(
												SELECT ORDRG_NO
														, SUM(A.PCHS_AMT) AS PCHS_AMT
														, SUM(A.PCHS_VAT) AS PCHS_VAT
														, SUM(A.PCHS_QTY) AS PCHS_QTY
														, PCHS_NO
														, COUNT(A.PCHS_NO) PCHS_CNT 
														, SUM(DECODE(A.CMPLET_YN, 'Y', 1, 0)) AS CMPLET_SUM
														, MAX(A.PCHS_DT) AS PCHS_DT
													FROM TB_SM12D01 A 
												WHERE 1=1
													AND ORDRG_NO LIKE 'BAL%'
													GROUP BY A.CO_CD
															, A.ORDRG_NO
															, A.PCHS_NO															
												) E ON(A.ORDRG_NO=E.ORDRG_NO)	/* 매입 DETAIL */                                      
									WHERE 1=1
							UNION ALL		       
								SELECT E.CO_CD
									, E.COST_NO AS ORDRG_NO
									, NVL(E.SALES_CD, E.COST_NO) AS SALES_CD
									, E.PCHS_CLNT_CD				/* 구매처cd */
									,
									(
										SELECT D.CLNT_NM
											FROM TB_BM02M01 D
										WHERE E.PCHS_CLNT_CD=D.CLNT_CD
									) AS PCHS_CLNT_NM		/* 구매처명 */
									, E.PCHS_COST_DIV10 AS MATR_CD
									, E.COST_DT AS ORDRG_DT			
									, '' AS DSGN_NO							
									, 1 AS ORDRG_QTY				/*발주수량 */
									, E.COST_AMT AS ORDRG_AMT		/*발주 금액 */												
									, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */					
									, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/			 										
									, D.PCHS_AMT /*- TRUNC(E.COST_AMT * 10/110 ) */ AS PCHS_AMT		/* 매입금액  - 부가세 미포함으로설정  */
									, /* TRUNC(E.COST_AMT * 10/110 ) */ D.PCHS_VAT AS PCHS_VAT		/* 부가세 */
									, D.PCHS_QTY			/* 수량 */										
									, D.PCHS_DT
									, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
									, DECODE(D.CMPLET_YN, 'Y', 'Y', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
									, 'Y' IS_COST			/* 기타비용여부 */
									, D.BILL_YN AS BILL_YN  /*계산서 여부*/
									, FILE_TRGT_KEY
									FROM TB_SM10M01 E		/* 구매비용 */		
									LEFT OUTER JOIN TB_SM12D01 D ON(D.ORDRG_NO=E.COST_NO AND D.ORDRG_SEQ=1)	/* 매입 DETAIL */					
								WHERE 1=1															
						  ) A		/* 발주+기타비용 내역 */
						  WHERE 1=1 
						<include refid="selectPurchaseListCondition"></include>
						  ORDER BY A.CO_CD, A.ORDRG_DT ASC, A.ORDRG_NO DESC, A.SALES_CD DESC, A.PCHS_NO DESC
						) X		
	</select>

	<!-- 매입확정 리스트  개별매입 사용안함 -->
	<select id="selectPurchaseList" parameterType="Map" resultType="camelMap">
		SELECT *
			FROM
			(
			SELECT X.*
					, ROWNUM AS RN
					FROM
						(
						SELECT A.CO_CD	
							, A.PCHS_NO			/* 매입번호 */
							, PCHS_NO_GRID		/* 매입번호 그리드 출력용 */
							, A.PCHS_SEQ		/* 매입순번 */
							, MAX(A.PCHS_SEQ) OVER(PARTITION BY A.PCHS_NO, A.PCHS_SEQ)+1	AS MAX_PCHS_SEQ
							, A.ORDRG_NO
							, A.ORDRG_SEQ
							, A.SALES_CD
							, A.PCHS_CLNT_CD
							, A.PCHS_CLNT_NM		/* 구매처명 */
							, A.MATR_CD	
							, A.MATR_NM		
							, A.ORDRG_AMT	
							, A.ORDRG_DT	
							, A.PCHS_AMT
							, A.PCHS_VAT		/* 부가세 */
							, A.PCHS_QTY			/* 수량 */
							, 
							(
							  CASE 
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND NVL(A.PCHS_VAT, 0) > 0 )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND A.PCHS_VAT IS NOT NULL  )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))							  	 
							    ELSE NULL
							  END
							) AS PCHS_SUM_AMT			/* 합계금액 */
							, NVL(A.ORDRG_AMT, 0) - SUM(NVL(A.PCHS_AMT, 0)) OVER(PARTITION BY A.ORDRG_NO, A.ORDRG_SEQ) AS REMAIN_AMT	/* 잔여금액 */							
							, TO_CHAR(A.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
							, A.CMPLET_YN
							, A.USER_CHK_V
							, A.BILL_YN  --세금계산서발행여부
							, A.FILE_TRGT_KEY
						  FROM
						  (
							SELECT E.CO_CD
								, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */
								, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/
								, D.PCHS_SEQ
								/* , DECODE(M12.CMPLET_YN, 'Y', '', 'N') AS CMPLET_YN */								
								, E.ORDRG_NO 
								, E.ORDRG_SEQ 
								, E.SALES_CD
								, B.PCHS_CLNT_CD				/* 구매처cd */
								,
								(
									SELECT D.CLNT_NM
										FROM TB_BM02M01 D
									WHERE B.PCHS_CLNT_CD=D.CLNT_CD
								) AS PCHS_CLNT_NM		/* 구매처명 */		
								, F.MATR_CD
								, F.MATR_NM			/* 자재명 */
								, E.ORDRG_AMT		/*발주 금액 */
								, B.ORDRG_DT		/* 발주일자 */
								, D.PCHS_AMT		/* 매입금액 */
								, D.PCHS_VAT		/* 부가세 */
								, D.PCHS_QTY			/* 수량 */										
								, D.PCHS_DT
								, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
								, DECODE(D.CMPLET_YN, 'Y', ' ', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
								, D.BILL_YN  --세금계산서발행여부
								, B.FILE_TRGT_KEY	
								FROM TB_SM02D01 E		/* 발주 DETAIL */
								INNER JOIN TB_SM02M01 B ON(E.CO_CD=B.CO_CD AND E.ORDRG_NO=B.ORDRG_NO AND E.SALES_CD=B.SALES_CD)	/* 발주마스터 */
								LEFT OUTER JOIN TB_SM12D01 D ON(D.ORDRG_NO=E.ORDRG_NO AND D.ORDRG_SEQ=E.ORDRG_SEQ)	/* 매입 DETAIL */
								LEFT OUTER JOIN TB_SM12M01 M12 ON(D.CO_CD=M12.CO_CD AND D.PCHS_NO=M12.PCHS_NO)		/* 매입 MASTER */
								LEFT OUTER JOIN TB_SM01D01 F ON(E.CO_CD=F.CO_CD AND E.SALES_CD=F.SALES_CD AND E.UPPER_CD=F.UPPER_CD 
								 								AND E.LOWER_CD=F.LOWER_CD AND E.MATR_SEQ=F.MATR_SEQ AND E.MATR_CD=F.MATR_CD)	/* 구매BOM 자재 */
							WHERE 1=1  											
						  ) A		/* 발주+매입 내역 */
						  WHERE 1=1 
						<include refid="selectPurchaseListCondition"></include>
						  ORDER BY A.CO_CD, A.ORDRG_NO DESC, A.ORDRG_SEQ DESC, A.SALES_CD DESC, A.PCHS_NO DESC, A.PCHS_SEQ DESC	
						) X		
			)							
			WHERE 1=1
				AND RN BETWEEN ${firstIndex} AND ${lastIndex}	
	</select>	
	
	<!-- 매입확정 리스트  구매비용 포함-->
	<select id="selectPurchaseListUnion" parameterType="Map" resultType="camelMap">
		SELECT *
			FROM
			(
			SELECT X.*
					, ROWNUM AS RN
					FROM
						(
						SELECT A.CO_CD	
							, A.PCHS_NO			/* 매입번호 */
							, A.PCHS_NO_GRID		/* 매입번호 그리드 출력용 */
							, A.ORDRG_NO
							, A.SALES_CD
							, A.PCHS_CLNT_CD
							, A.PCHS_CLNT_NM		/* 구매처명 */
							, A.MATR_CD
							, A.ORDRG_QTY
							, A.ORDRG_AMT	
							, A.ORDRG_DT
							, A.DSGN_NO			/* 대표도번 */	
							, A.PCHS_AMT
							, A.PCHS_VAT		/* 부가세 */
							, A.PCHS_QTY			/* 수량 */
							, 
							(
							  CASE 
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND NVL(A.PCHS_VAT, 0) > 0 )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND A.PCHS_VAT IS NOT NULL  )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))							  	 
							    ELSE NULL
							  END
							) AS PCHS_SUM_AMT			/* 합계금액 */
							, CASE  
								WHEN ( SUBSTR(A.ORDRG_NO, 0, 3) = 'BAL' )		/* 발주와 기타구매비용 분리 */
									THEN NVL(A.ORDRG_AMT, 0) - NVL(A.PCHS_AMT, 0)
								/* ELSE NVL(A.ORDRG_AMT, 0) + NVL(A.PCHS_VAT, 0)  */
								ELSE NVL(A.ORDRG_AMT, 0) - NVL(A.PCHS_AMT, 0) 
							  END AS REMAIN_AMT	/* 잔여금액 구매비용일 경우 부가세 포함으로 작업함 */							
							, TO_CHAR(A.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
							, A.CMPLET_YN
							, A.USER_CHK_V
							, A.IS_COST
							, A.BILL_YN   /*계산서 여부*/
							, A.FILE_TRGT_KEY
						  FROM
						  (
							SELECT DISTINCT 
									  A.CO_CD                                               AS CO_CD          --회사코드
									, A.ORDRG_NO                                             AS ORDRG_NO       --발주번호
									, A.SALES_CD                                             AS SALES_CD       --SALES CODE
									, A.PCHS_CLNT_CD                                         AS PCHS_CLNT_CD   --구매처cd
									, C.CLNT_NM                                              AS PCHS_CLNT_NM   --구매처명
									, '' AS MATR_CD --자재명 없음
									, A.ORDRG_DT											 AS ORDRG_DT       --발주일자									
									, D.DSGN_NO 											 AS DSGN_NO			/* 도번 MIN */
									, D.ORDRG_QTY				/* 발주수량 */
									, D.ORDRG_AMT				/*발주 금액 */
									, NVL(E.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */
									, E.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/					
									, E.PCHS_AMT				/* 매입금액 */
									, E.PCHS_VAT				/* 매입금액 */
									, E.PCHS_QTY				/* 매입수량 */
									, E.PCHS_DT					/* 매입확정일자 */
									, CASE
										WHEN ( COUNT(B.ORDRG_SEQ) OVER(PARTITION BY B.ORDRG_NO) = CMPLET_SUM )
											THEN 'Y'
										ELSE 'N'
									  END AS CMPLET_YN	 		/* 확정여부 */
									, CASE
										WHEN ( COUNT(B.ORDRG_SEQ) OVER(PARTITION BY B.ORDRG_NO) = CMPLET_SUM )
											THEN 'Y'
										ELSE 'N'
									  END AS USER_CHK_V	 		/* 확정여부 */											            
									, 'N' IS_COST			/* 기타비용여부 */	
									, BILL_YN AS BILL_YN		  /*계산서 여부*/
									, A.FILE_TRGT_KEY
								FROM TB_SM02M01 A --발주마스터
				                INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
				                INNER      JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD--거래처마스터   
				                LEFT OUTER JOIN (SELECT A.CO_CD
														, A.ORDRG_NO
														, A.SALES_CD
														, SUM(A.ORDRG_QTY) ORDRG_QTY
														, SUM(A.ORDRG_AMT) ORDRG_AMT
														, ( SELECT MIN(B.DSGN_NO) FROM TB_SM02D01 B WHERE A.SALES_CD=B.SALES_CD AND A.ORDRG_NO=B.ORDRG_NO) AS DSGN_NO
													FROM TB_SM02D01 A
						                         WHERE 1=1
						                         	GROUP BY A.CO_CD
						                                     , A.ORDRG_NO
						                                     , A.SALES_CD
				                                 ) AS D ON A.CO_CD = D.CO_CD AND A.SALES_CD = D.SALES_CD AND A.ORDRG_NO = D.ORDRG_NO --발주상세
								LEFT OUTER JOIN(
												SELECT ORDRG_NO
														, SUM(A.PCHS_AMT) AS PCHS_AMT
														, SUM(A.PCHS_VAT) AS PCHS_VAT
														, SUM(A.PCHS_QTY) AS PCHS_QTY
														, PCHS_NO
														, COUNT(A.PCHS_NO) PCHS_CNT 
														, SUM(DECODE(A.CMPLET_YN, 'Y', 1, 0)) AS CMPLET_SUM
														, MAX(A.PCHS_DT) AS PCHS_DT
														, BILL_YN
														, CO_CD
													FROM TB_SM12D01 A 
												WHERE 1=1
													AND ORDRG_NO LIKE 'BAL%'
													GROUP BY A.CO_CD
															, A.ORDRG_NO
															, A.PCHS_NO		
															, A.BILL_YN														
												) E ON(A.ORDRG_NO=E.ORDRG_NO)	/* 매입 DETAIL */                                      
									WHERE 1=1
							UNION ALL		       
								SELECT E.CO_CD
									, E.COST_NO AS ORDRG_NO
									, NVL(E.SALES_CD, E.COST_NO) AS SALES_CD
									, E.PCHS_CLNT_CD				/* 구매처cd */
									,
									(
										SELECT D.CLNT_NM
											FROM TB_BM02M01 D
										WHERE E.PCHS_CLNT_CD=D.CLNT_CD
									) AS PCHS_CLNT_NM		/* 구매처명 */
									, E.PCHS_COST_DIV10 AS MATR_CD
									, E.COST_DT AS ORDRG_DT			
									, '' AS DSGN_NO							
									, 1 AS ORDRG_QTY				/*발주수량 */
									, E.COST_AMT AS ORDRG_AMT		/*발주 금액 */												
									, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */					
									, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/			 										
									, D.PCHS_AMT /*- TRUNC(E.COST_AMT * 10/110 ) */ AS PCHS_AMT		/* 매입금액  - 부가세 미포함으로설정  */
									, /* TRUNC(E.COST_AMT * 10/110 ) */ D.PCHS_VAT AS PCHS_VAT		/* 부가세 */
									, D.PCHS_QTY			/* 수량 */										
									, D.PCHS_DT
									, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
									, DECODE(D.CMPLET_YN, 'Y', 'Y', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
									, 'Y' IS_COST			/* 기타비용여부 */
									, D.BILL_YN AS BILL_YN  /*계산서 여부*/
									, E.FILE_TRGT_KEY
									FROM TB_SM10M01 E		/* 구매비용 */		
									LEFT OUTER JOIN TB_SM12D01 D ON(D.ORDRG_NO=E.COST_NO AND D.ORDRG_SEQ=1)	/* 매입 DETAIL */					
								WHERE 1=1													
						  ) A		/* 발주+기타비용 내역 */
						  WHERE 1=1 
						<include refid="selectPurchaseListCondition"></include>
						  ORDER BY A.CO_CD, A.ORDRG_DT ASC, A.ORDRG_NO DESC, A.SALES_CD DESC, A.PCHS_NO DESC
						) X		
			)							
			WHERE 1=1
				AND RN BETWEEN ${firstIndex} AND ${lastIndex}	
	</select>	

	<!-- 매입확정 리스트  개별매입 사용안함 -->
	<select id="selectClntPurchaseList" parameterType="Map" resultType="camelMap">
						SELECT CO_CD, PCHS_CLNT_CD, C.CLNT_NM
									, SUM(PCHS_QTY)  AS PCHS_QTY		/* 수량 */		
									, SUM(PCHS_AMT)  AS PCHS_AMT		/* 매입금액 */
									, SUM(PCHS_VAT)  AS PCHS_VAT		/* 부가세 */
									, SUM(PCHS_AMT)+SUM(PCHS_VAT)  AS PCHS_TOT		/* 합계 */
										
									, SUM(COMP_AMT)  AS COMP_AMT		/* 매입금액 */
									, SUM(COMP_VAT)  AS COMP_VAT		/* 부가세 */
									, SUM(COMP_AMT)+SUM(COMP_VAT)  AS COMP_TOT		/* 합계 */
									
									, SUM(UNCOMP_AMT)  AS UNCOMP_AMT		/* 수량 */	
									, SUM(UNCOMP_VAT)  AS UNCOMP_VAT		/* 부가세 */
									, SUM(UNCOMP_AMT)+SUM(UNCOMP_VAT)  AS UNCOMP_TOT		/* 합계 */		
						FROM (			
									SELECT 
											  D.CO_CD
												, CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.PCHS_CLNT_CD 
													   WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN RM.PCHS_CLNT_CD ELSE C.PCHS_CLNT_CD END PCHS_CLNT_CD
												, D.ORDRG_NO
												, CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD 
													   WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN R.SALES_CD  ELSE C.SALES_CD END AS SALES_CD
												, D.PCHS_DT AS ORDRG_DT			
												, CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD 
													   WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN R.DSGN_NO  ELSE C.SALES_CD END AS DSGN_NO					
												, 1 AS ORDRG_QTY				/*발주수량 */
												, M.ORDRG_AMT AS ORDRG_AMT		/*발주 금액 */												
												, PCHS_NO     AS PCHS_NO		/*매입확정번호 */					
												, D.PCHS_AMT  AS PCHS_AMT		/* 매입금액 */
												, D.PCHS_VAT AS PCHS_VAT		/* 부가세 */
												, D.PCHS_QTY AS PCHS_QTY		/* 수량 */										
												, D.PCHS_DT
												, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
												, D.BILL_YN AS BILL_YN  /*계산서 여부*/
												, DECODE(D.BILL_YN,'Y',PCHS_AMT) AS COMP_AMT
												, DECODE(D.BILL_YN,'Y',PCHS_VAT) AS COMP_VAT
												, DECODE(D.BILL_YN,'N',PCHS_AMT) AS UNCOMP_AMT
												, DECODE(D.BILL_YN,'N',PCHS_VAT) AS UNCOMP_VAT
									FROM  TB_SM12D01 D /* 매입 DETAIL */		
											LEFT OUTER JOIN TB_SM02M01 M ON(D.ORDRG_NO = M.ORDRG_NO)		/* 발주마스터 */
			--				                LEFT OUTER JOIN TB_SM02D01 B ON(D.ORDRG_NO = B.ORDRG_NO)		/* 발주디테일 */
											LEFT OUTER JOIN TB_SM10M01 C ON(D.ORDRG_NO = C.COST_NO)		/* 비용마스터 */
											LEFT OUTER JOIN TB_SM06D01 R ON(D.ORDRG_NO = R.RET_NO)		/* 반품 상세 */
											LEFT OUTER JOIN TB_SM06M01 RM ON(RM.CO_CD = R.CO_CD AND RM.RET_NO = R.RET_NO)		/* 반품 상세 */
									WHERE 1=1	
								<!-- 회사코드 -->         
								<if test="coCd != null and !coCd.equals('')">
									AND D.CO_CD = #{coCd}   
								</if>												
<!-- 								확정일자          -->
								<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
									<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
						            AND D.PCHS_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
									</if>   
								</if>	
								<!-- 매입구분 -->
								<if test="pchsGb != null and !pchsGb.equals('')">
									AND substr(D.ORDRG_NO,0,3) = #{pchsGb} /* '':전체, 'BAL':발주, 'RET':반납, 'COS':비용*/
								</if>
            				) A
            					LEFT OUTER JOIN TB_BM02M01 AS C ON PCHS_CLNT_CD = C.CLNT_CD   --거래처마스터
						  WHERE 1=1 
						<!-- 구매처 -->         
						<if test="pchsClntCd != null and !pchsClntCd.equals('')">
							AND A.PCHS_CLNT_CD = #{pchsClntCd}   
						</if>       
						<if test="pchsClntNm != null and !pchsClntNm.equals('')">
							AND C.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
						</if>
						<!-- 확정여부 -->
<!-- 						<if test="cmpletYn != null and !cmpletYn.equals('')"> -->
<!-- 							AND NVL(A.CMPLET_YN, 'N') = #{cmpletYn}	 -->
<!-- 						</if> -->
            			GROUP BY CO_CD, C.CLNT_NM, PCHS_CLNT_CD
	</select>	
		
	<!-- 매입확정 리스트  구매비용 포함-->
	<select id="selectClntPurchaseDetailList" parameterType="Map" resultType="camelMap">
						SELECT A.CO_CD	
							, A.PCHS_NO			/* 매입번호 */
							, A.PCHS_SEQ
							, A.ORDRG_NO
							, A.DSGN_NO
							, A.SALES_CD
							, A.PCHS_CLNT_CD
							, A.PCHS_CLNT_NM		/* 구매처명 */
							, A.MATR_CD
							, A.ORDRG_QTY
							, A.ORDRG_AMT	
							, A.ORDRG_DT
							, A.DSGN_NO			/* 대표도번 */	
							, A.PCHS_AMT
							, A.PCHS_VAT		/* 부가세 */
							, A.PCHS_QTY			/* 수량 */
							, NVL(A.PCHS_AMT, 0) + NVL(A.PCHS_VAT, 0) AS PCHS_SUM_AMT			/* 합계금액 */
							, A.BAL_TOT_AMT
							, A.BAL_TOT_VAT
							, A.REMAIN_AMT  AS REMAIN_AMT												
							, TO_CHAR(A.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
							, A.CMPLET_YN
							, A.IS_COST
							, A.BILL_YN   /*계산서 여부*/
							, A.FILE_TRGT_KEY
							, A.CREAT_ID_NM
						  FROM
						  (
								WITH IPGO AS (
									SELECT    A.*
											, D1.CLNT_NM  AS PCHS_CLNT_NM
									  FROM (
											SELECT A.* 
														, CASE WHEN substr(A.ORDRG_NO,0,3) = 'BAL' THEN 'N' 
														   	   WHEN substr(A.ORDRG_NO,0,3) = 'RET' THEN 'R' ELSE 'Y' END IS_COST
														, CASE WHEN substr(A.ORDRG_NO,0,3) = 'BAL' THEN '' 
														   	   WHEN substr(A.ORDRG_NO,0,3) = 'RET' THEN '' ELSE C.ORDRS_NO END ORDRS_NO --수주번호
														, CASE WHEN substr(A.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD 
														   	   WHEN substr(A.ORDRG_NO,0,3) = 'RET' THEN RM.SALES_CD ELSE C.SALES_CD END SALES_CD
														, CASE WHEN substr(A.ORDRG_NO,0,3) = 'BAL' THEN M.PCHS_CLNT_CD 
														   	   WHEN substr(A.ORDRG_NO,0,3) = 'RET' THEN RM.PCHS_CLNT_CD ELSE C.PCHS_CLNT_CD END PCHS_CLNT_CD
														, CASE WHEN substr(A.ORDRG_NO,0,3) = 'BAL' THEN M.FILE_TRGT_KEY 
														   	   WHEN substr(A.ORDRG_NO,0,3) = 'RET' THEN RM.FILE_TRGT_KEY ELSE C.FILE_TRGT_KEY END FILE_TRGT_KEY
														, (SELECT FN_CM06M01_ID_TO_NM(A.CREAT_ID) FROM DUAL) AS CREAT_ID_NM
											FROM  TB_SM12D01 A /* 매입 확정 DETAIL */		
													LEFT OUTER JOIN TB_SM02M01 M ON(A.ORDRG_NO = M.ORDRG_NO)		/* 발주마스터 */
													LEFT OUTER JOIN TB_SM10M01 C ON(A.ORDRG_NO = C.COST_NO)			/* 비용마스터 */
													LEFT OUTER JOIN TB_SM06D01 R ON(A.ORDRG_NO = R.RET_NO)		/* 반품 상세 */
													LEFT OUTER JOIN TB_SM06M01 RM ON(RM.CO_CD = R.CO_CD AND RM.RET_NO = R.RET_NO)		/* 반품 상세 */
										  WHERE 1=1 
										<!-- 회사코드 -->         
										<if test="coCd != null and !coCd.equals('')">
											AND A.CO_CD = #{coCd}   
										</if>					
										<!-- 확정일자 -->         
										<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
											<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
								            AND A.PCHS_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
											</if>   
										</if>	
										<!-- 구매처 -->         
										<if test="pchsClntCd != null and !pchsClntCd.equals('')">
											AND (M.PCHS_CLNT_CD = #{pchsClntCd} OR C.PCHS_CLNT_CD = #{pchsClntCd} OR RM.PCHS_CLNT_CD = #{pchsClntCd})  
										</if>       
										<!-- 매입구분 -->
										<if test="pchsGb != null and !pchsGb.equals('')">
											AND substr(D.ORDRG_NO,0,3) = #{pchsGb} /* 'BAL', 'RET', 'COS'*/
										</if>			
										<!-- 세금계산서 -->
										<if test="cmpletYn != null and !cmpletYn.equals('')">
											AND NVL(A.BILL_YN, 'N') = #{cmpletYn}	
										</if>				
										) A
           									LEFT OUTER JOIN TB_BM02M01 D1 ON A.PCHS_CLNT_CD = D1.CLNT_CD   --거래처마스터
									 WHERE 1 = 1
									<if test="pchsClntNm != null and !pchsClntNm.equals('')">
										AND D1.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
									</if>			
								)
								,  IPGOTOT AS --매입확정집계
								(
						 			 SELECT   CO_CD, ORDRG_NO
						 			 	   , SUM(PCHS_AMT) AS BAL_TOT_AMT
						 			       , SUM(PCHS_VAT) AS BAL_TOT_VAT
						 			       , SUM(PCHS_QTY) AS BAL_TOT_QTY --수량은 입고 건별 1로 불일치 발생
										FROM  TB_SM12D01 A /* 매입확정 DETAIL */		
									  WHERE 1=1 
					                    AND EXISTS (SELECT 1 FROM IPGO WHERE  IPGO.ORDRG_NO = A.ORDRG_NO)
									  GROUP BY CO_CD, ORDRG_NO
								)
								,  BAL AS  --발주집계
								(
									SELECT A.CO_CD
											, A.ORDRG_NO
											, A.SALES_CD
											, SUM(A.ORDRG_QTY) ORDRG_QTY
											, SUM(A.ORDRG_AMT) ORDRG_AMT
											, MIN(A.DSGN_NO)   AS DSGN_NO
										FROM TB_SM02D01 A
			                         WHERE 1=1
			                           AND EXISTS (SELECT 1 FROM IPGO WHERE  IPGO.ORDRG_NO = A.ORDRG_NO)
			                         GROUP BY A.CO_CD, A.ORDRG_NO, A.SALES_CD
								)
									SELECT 
										  A.CO_CD
											, A.ORDRG_NO
											, A.SALES_CD
											, A.PCHS_CLNT_CD
											, A.PCHS_CLNT_NM
											, '' AS MATR_CD --자재명 없음
											, A.PCHS_DT AS ORDRG_DT									
											, D.DSGN_NO  AS DSGN_NO			/* 도번 MIN */	
											, E.BAL_TOT_AMT
											, E.BAL_TOT_VAT		
											, D.ORDRG_QTY AS ORDRG_QTY				/*발주수량 */
											, D.ORDRG_AMT AS ORDRG_AMT		/*발주 금액 */		
											, D.ORDRG_AMT - E.BAL_TOT_AMT AS REMAIN_AMT										
											, A.PCHS_NO   AS PCHS_NO		/*매입확정번호 */					
											, A.PCHS_AMT  AS PCHS_AMT		/* 매입금액 */
											, A.PCHS_VAT AS PCHS_VAT		/* 부가세 */
											, A.PCHS_QTY AS PCHS_QTY		/* 수량  --> 매입확정시 무조건 1로 입력됨 의미없음*/										
											, A.PCHS_DT
											, A.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
											, DECODE(A.CMPLET_YN, 'Y', 'Y', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
											, A.IS_COST AS  IS_COST			/* 기타비용여부 */
											, A.BILL_YN AS BILL_YN  /*계산서 여부*/
											, A.FILE_TRGT_KEY
											, A.PCHS_SEQ
											, A.CREAT_ID_NM
									FROM  IPGO A /* 매입 확정 DETAIL */		
							                LEFT OUTER JOIN BAL AS D ON A.CO_CD = D.CO_CD AND A.ORDRG_NO = D.ORDRG_NO --발주상세
							                LEFT OUTER JOIN IPGOTOT AS E ON A.CO_CD = E.CO_CD AND A.ORDRG_NO = E.ORDRG_NO --매입확정집계
								  WHERE 1=1 										
					  ) A		/* 발주+기타비용 내역 */
					  WHERE 1=1 
					<if test="salesCd != null and !salesCd.equals('')">
						AND A.SALES_CD LIKE '%'|| #{salesCd} || '%'   
					</if>		
					<if test="prjctCdNm != null and !prjctCdNm.equals('')">
						AND UPPER(CLNT_PJT_NM) LIKE '%'|| UPPER(#{prjctCdNm}) || '%'   
					</if>	
					  ORDER BY A.CO_CD, A.ORDRG_NO, A.PCHS_NO
	</select>	
		
	<!-- 매입확정 리스트 엑셀   -->
	<select id="selectPurchaseExcelList" parameterType="Map" resultType="camelMap">   
		SELECT *
			FROM
			(
			SELECT X.*
					, ROWNUM AS RN
					FROM
						(
						SELECT A.CO_CD	
							, A.PCHS_NO			/* 매입번호 */
							, A.PCHS_NO_GRID		/* 매입번호 그리드 출력용 */
							, A.ORDRG_NO
							, A.SALES_CD
							, A.PCHS_CLNT_CD
							, A.PCHS_CLNT_NM		/* 구매처명 */
							, A.MATR_CD
							, A.ORDRG_QTY
							, A.ORDRG_AMT	
							, A.ORDRG_DT
							, A.DSGN_NO			/* 대표도번 */	
							, A.PCHS_AMT
							, A.PCHS_VAT		/* 부가세 */
							, A.PCHS_QTY			/* 수량 */
							, 
							(
							  CASE 
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND NVL(A.PCHS_VAT, 0) > 0 )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND A.PCHS_VAT IS NOT NULL  )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))							  	 
							    ELSE NULL
							  END
							) AS PCHS_SUM_AMT			/* 합계금액 */
							, CASE  
								WHEN ( SUBSTR(A.ORDRG_NO, 0, 3) = 'BAL' )		/* 발주와 기타구매비용 분리 */
									THEN NVL(A.ORDRG_AMT, 0) - NVL(A.PCHS_AMT, 0)
								/* ELSE NVL(A.ORDRG_AMT, 0) + NVL(A.PCHS_VAT, 0)  */
								ELSE NVL(A.ORDRG_AMT, 0) - NVL(A.PCHS_AMT, 0) 
							  END AS REMAIN_AMT	/* 잔여금액 구매비용일 경우 부가세 포함으로 작업함 */							
							, TO_CHAR(A.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
							, A.CMPLET_YN
							, A.USER_CHK_V
							, A.IS_COST
							, A.BILL_YN		  /*계산서 여부*/
						  FROM
						  (
							SELECT DISTINCT 
									  A.CO_CD                                               AS CO_CD          --회사코드
									, A.ORDRG_NO                                             AS ORDRG_NO       --발주번호
									, A.SALES_CD                                             AS SALES_CD       --SALES CODE
									, A.PCHS_CLNT_CD                                         AS PCHS_CLNT_CD   --구매처cd
									, C.CLNT_NM                                              AS PCHS_CLNT_NM   --구매처명
									, '' AS MATR_CD --자재명 없음
									, A.ORDRG_DT											 AS ORDRG_DT       --발주일자									
									, D.DSGN_NO 											 AS DSGN_NO			/* 도번 MIN */
									, D.ORDRG_QTY				/* 발주수량 */
									, D.ORDRG_AMT				/*발주 금액 */
									, NVL(E.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */
									, E.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/					
									, E.PCHS_AMT				/* 매입금액 */
									, E.PCHS_VAT				/* 매입금액 */
									, E.PCHS_QTY				/* 매입수량 */
									, E.PCHS_DT					/* 매입확정일자 */
									, CASE
										WHEN ( COUNT(B.ORDRG_SEQ) OVER(PARTITION BY B.ORDRG_NO) = CMPLET_SUM )
											THEN 'Y'
										ELSE 'N'
									  END AS CMPLET_YN	 		/* 확정여부 */
									, CASE
										WHEN ( COUNT(B.ORDRG_SEQ) OVER(PARTITION BY B.ORDRG_NO) = CMPLET_SUM )
											THEN 'Y'
										ELSE 'N'
									  END AS USER_CHK_V	 		/* 확정여부 */											            
									, 'N' IS_COST			/* 기타비용여부 */	
									, '' AS BILL_YN		  /*계산서 여부*/		
								FROM TB_SM02M01 A --발주마스터
				                INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
				                INNER      JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD--거래처마스터   
				                LEFT OUTER JOIN (SELECT A.CO_CD
														, A.ORDRG_NO
														, A.SALES_CD
														, SUM(A.ORDRG_QTY) ORDRG_QTY
														, SUM(A.ORDRG_AMT) ORDRG_AMT
														, ( SELECT MIN(B.DSGN_NO) FROM TB_SM02D01 B WHERE A.SALES_CD=B.SALES_CD AND A.ORDRG_NO=B.ORDRG_NO) AS DSGN_NO
													FROM TB_SM02D01 A
						                         WHERE 1=1
						                         	GROUP BY A.CO_CD
						                                     , A.ORDRG_NO
						                                     , A.SALES_CD
				                                 ) AS D ON A.CO_CD = D.CO_CD AND A.SALES_CD = D.SALES_CD AND A.ORDRG_NO = D.ORDRG_NO --발주상세
								LEFT OUTER JOIN(
												SELECT ORDRG_NO
														, SUM(A.PCHS_AMT) AS PCHS_AMT
														, SUM(A.PCHS_VAT) AS PCHS_VAT
														, SUM(A.PCHS_QTY) AS PCHS_QTY
														, PCHS_NO
														, COUNT(A.PCHS_NO) PCHS_CNT 
														, SUM(DECODE(A.CMPLET_YN, 'Y', 1, 0)) AS CMPLET_SUM
														, MAX(A.PCHS_DT) AS PCHS_DT
													FROM TB_SM12D01 A 
												WHERE 1=1
													AND ORDRG_NO LIKE 'BAL%'
													GROUP BY A.CO_CD
															, A.ORDRG_NO
															, A.PCHS_NO															
												) E ON(A.ORDRG_NO=E.ORDRG_NO)	/* 매입 DETAIL */                                      
									WHERE 1=1
							UNION ALL		       
								SELECT E.CO_CD
									, E.COST_NO AS ORDRG_NO
									, NVL(E.SALES_CD, E.COST_NO) AS SALES_CD
									, E.PCHS_CLNT_CD				/* 구매처cd */
									,
									(
										SELECT D.CLNT_NM
											FROM TB_BM02M01 D
										WHERE E.PCHS_CLNT_CD=D.CLNT_CD
									) AS PCHS_CLNT_NM		/* 구매처명 */
									, E.PCHS_COST_DIV10 AS MATR_CD
									, E.COST_DT AS ORDRG_DT			
									, '' AS DSGN_NO							
									, 1 AS ORDRG_QTY				/*발주수량 */
									, E.COST_AMT AS ORDRG_AMT		/*발주 금액 */												
									, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */					
									, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/			 										
									, D.PCHS_AMT /*- TRUNC(E.COST_AMT * 10/110 ) */ AS PCHS_AMT		/* 매입금액  - 부가세 미포함으로설정  */
									, /* TRUNC(E.COST_AMT * 10/110 ) */ D.PCHS_VAT AS PCHS_VAT		/* 부가세 */
									, D.PCHS_QTY			/* 수량 */										
									, D.PCHS_DT
									, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
									, DECODE(D.CMPLET_YN, 'Y', 'Y', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
									, 'Y' IS_COST			/* 기타비용여부 */
									, D.BILL_YN  --세금계산서발행여부
									FROM TB_SM10M01 E		/* 구매비용 */		
									LEFT OUTER JOIN TB_SM12D01 D ON(D.ORDRG_NO=E.COST_NO AND D.ORDRG_SEQ=1)	/* 매입 DETAIL */					
								WHERE 1=1													
						  ) A		/* 발주+기타비용 내역 */
						  WHERE 1=1 
						<include refid="selectPurchaseListCondition"></include>
						  ORDER BY A.CO_CD, A.ORDRG_DT ASC, A.ORDRG_NO DESC, A.SALES_CD DESC, A.PCHS_NO DESC
						) X		
			)							
			WHERE 1=1
			/* 엑셀은 전체 조회 */
	</select>
	
	<!-- 매입확정리스트 변경 참고 20231107 -->
	<select id="selectPurchaseListUnionNew" parameterType="Map" resultType="camelMap">
		SELECT *
			FROM
			(
			SELECT X.*
					, ROWNUM AS RN
					FROM
						(
						SELECT A.CO_CD	
							, A.PCHS_NO			/* 매입번호 */
							, A.PCHS_NO_GRID		/* 매입번호 그리드 출력용 */
							, A.ORDRG_NO
							, A.SALES_CD
							, A.PCHS_CLNT_CD
							, A.PCHS_CLNT_NM		/* 구매처명 */
							, A.ORDRG_DT
							, A.DSGN_NO			/* 대표도번 */	
							, A.PCHS_AMT
							, A.PCHS_VAT		/* 부가세 */
							, A.PCHS_QTY			/* 수량 */
							, 
							(
							  CASE 
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND NVL(A.PCHS_VAT, 0) > 0 )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))
							  	WHEN( NVL(A.PCHS_AMT, 0) > 0 AND A.PCHS_VAT IS NOT NULL  )
							  		THEN TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))							  	 
							    ELSE NULL
							  END
							) AS PCHS_SUM_AMT			/* 합계금액 */
							, CASE  
								WHEN ( SUBSTR(A.ORDRG_NO, 0, 3) = 'BAL' )		/* 발주와 기타구매비용 분리 */
									THEN NVL(A.SUM_IN_AMT, 0) - NVL(A.PCHS_AMT, 0)
								/* ELSE NVL(A.ORDRG_AMT, 0) + NVL(A.PCHS_VAT, 0)  VAT 사용시 사용 */
								ELSE NVL(A.SUM_IN_AMT, 0) - NVL(A.PCHS_AMT, 0) 
							  END AS REMAIN_AMT	/* 잔여금액 구매비용일 경우 부가세 포함으로 작업함 */							
							, TO_CHAR(A.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
							, A.CMPLET_YN
							, A.USER_CHK_V
							, A.IS_COST
						  FROM
						  (
							SELECT DISTINCT A.CO_CD
								, A.IN_NO
								, A.IN_SEQ
								, A.IN_DTL_AMT
								, A.IN_QTY			/* 입고수량 */
								, SUM(A.IN_DTL_AMT) OVER(PARTITION BY A.ORDRG_NO) AS SUM_IN_AMT						
								, A.ORDRG_NO 
								, A.ORDRG_SEQ 
								, A.SALES_CD
								, B.PCHS_CLNT_CD				/* 구매처cd */
								,
								(
									SELECT D.CLNT_NM
										FROM TB_BM02M01 D
									WHERE B.PCHS_CLNT_CD=D.CLNT_CD
								) AS PCHS_CLNT_NM		/* 구매처명 */		
								, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */
								, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/
								, D.PCHS_SEQ								
								, B.ORDRG_DT		/* 발주일자 */
								, D.PCHS_AMT		/* 매입금액 */
								, D.PCHS_VAT		/* 부가세 */
								, D.PCHS_QTY			/* 수량 */										
								, D.PCHS_DT
								, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
								, DECODE(D.CMPLET_YN, 'Y', ' ', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
								, C.DSGN_NO  			
								, 'N' AS IS_COST
								FROM TB_SM03D01 A		/* 입고 DETAIL */
								INNER JOIN TB_SM02M01 B ON(A.CO_CD=B.CO_CD AND A.ORDRG_NO=B.ORDRG_NO AND A.SALES_CD=B.SALES_CD)	/* 발주마스터 */								
			                    LEFT OUTER JOIN (SELECT A.CO_CD
					                                     , A.ORDRG_NO
					                                     , A.SALES_CD
					                                     , SUM(A.ORDRG_QTY) ORDRG_QTY
					                                     , SUM(A.ORDRG_AMT) ORDRG_AMT
														 , ( SELECT MIN(B.DSGN_NO) FROM TB_SM02D01 B WHERE A.SALES_CD=B.SALES_CD AND A.ORDRG_NO=B.ORDRG_NO) AS DSGN_NO
					                                 FROM TB_SM02D01 A
					                                WHERE A.CO_CD = 'GUN'
					                                GROUP BY A.CO_CD
					                                        , A.ORDRG_NO
					                                        , A.SALES_CD
			                                      ) AS C ON B.CO_CD = C.CO_CD AND B.SALES_CD = C.SALES_CD AND B.ORDRG_NO = C.ORDRG_NO --발주상세								
								LEFT OUTER JOIN TB_SM12D01 D ON(A.ORDRG_NO=D.ORDRG_NO AND A.ORDRG_SEQ=D.ORDRG_SEQ)	/* 매입 DETAIL */
								LEFT OUTER JOIN TB_SM12M01 M12 ON(D.CO_CD=M12.CO_CD AND D.PCHS_NO=M12.PCHS_NO)		/* 매입 MASTER */
							WHERE 1=1  		
							AND A.CO_CD='GUN'
--							ORDER BY A.IN_NO ASC, A.IN_SEQ ASC, ORDRG_NO ASC
							UNION ALL		       
							SELECT E.CO_CD
								, '' AS IN_NO
								, '' AS IN_SEQ
								, '' AS IN_DTL_AMT			
								, 1 AS IN_QTY			/* 입고수량 */
								, E.COST_AMT AS SUM_IN_AMT
								, E.COST_NO AS ORDRG_NO
								, 1 AS ORDRG_SEQ 
								, NVL(E.SALES_CD, E.COST_NO) AS SALES_CD
								, E.PCHS_CLNT_CD				/* 구매처cd */
								,
								(
									SELECT D.CLNT_NM
										FROM TB_BM02M01 D
									WHERE E.PCHS_CLNT_CD=D.CLNT_CD
								) AS PCHS_CLNT_NM		/* 구매처명 */										
								, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */
								, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/
								, D.PCHS_SEQ																
								, E.COST_DT AS ORDRG_DT	
								, D.PCHS_AMT		/* 매입금액 */
								, D.PCHS_VAT		/* 부가세 */
								, D.PCHS_QTY			/* 수량 */										
								, D.PCHS_DT
								, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
								, DECODE(D.CMPLET_YN, 'Y', ' ', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
								, ''AS DSGN_NO  			
								, 'Y' AS IS_COST								
								FROM TB_SM10M01 E		/* 구매비용 */		
								LEFT OUTER JOIN TB_SM12D01 D ON(D.ORDRG_NO=E.COST_NO AND D.ORDRG_SEQ=1)	/* 매입 DETAIL */					
							WHERE 1=1																
						) A
						  WHERE 1=1
						<include refid="selectPurchaseListCondition"></include>						   
						  ORDER BY A.CO_CD, A.ORDRG_DT ASC, A.ORDRG_NO DESC, A.SALES_CD DESC, A.PCHS_NO DESC
					) X		
			)							
			WHERE 1=1
				AND RN BETWEEN ${firstIndex} AND ${lastIndex}	
	</select>
		
	<!-- 매입번호 max -->	
	<select id="selectMaxPchsNo" parameterType="Map" resultType="String">
		SELECT NVL(MAX_PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00001') AS MAX_IN_NO
			FROM
			(
			SELECT DISTINCT DECODE( INSTR(PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')), 0, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00001'
							, 'PC' || MAX( TO_CHAR(SYSDATE, 'YY')|| LPAD( SUBSTRING(PCHS_NO, -5)+1, 5, '0') ) OVER()
						  ) AS MAX_PCHS_NO
				FROM TB_SM12D01
			WHERE 1=1
				AND PCHS_NO LIKE 'PC'||TO_CHAR(SYSDATE, 'YY')||'%'
			<if test="coCd != null and !coCd.equals('')">
				AND CO_CD = #{coCd}   
			</if>	
			<if test="ordrgNo != null and !ordrgNo.equals('')">
				AND ORDRG_NO = #{ordrgNo}   
			</if>					
			UNION ALL
			SELECT NULL AS MAX_PCHS_NO
				FROM DUAL		
			)		
			WHERE MAX_PCHS_NO IS NOT NULL OR ROWNUM = 1	
	</select>		
	
	<!-- 발주 DETAIL SELECT -->
	<select id="selectPurchaseDetailList" parameterType="Map" resultType="camelMap">	
		SELECT B.FILE_TRGT_KEY
				, A.CO_CD
				, ( SELECT FN_CM05M01_CD_TO_NM(A.CO_CD) FROM DUAL) AS CO_CD_NM	/* 회사명 */		
				, A.MATR_CD						/* 자재코드 */
				, ( SELECT FN_CM05M01_CD_TO_NM(A.MATR_CD) FROM DUAL ) AS MATR_CD_NM	/* 자재명 */				
				, A.ORDRG_NO			/* 발주번호 */
				, A.ORDRG_SEQ			/* 발주순번 */
				, B.REQ_NO				/* 요인별 요청번호 */
				, A.SALES_CD
				, A.MATR_CD 			/* 자재코드 */
				, D.MATR_NM		/* 자재명 */
				, D.MATR_SPEC		/* 규격 */								
				, B.PCHS_CLNT_CD				/* 구매처cd */
                   			,
                   			(
                   				SELECT D.CLNT_NM
                   					FROM TB_BM02M01 D
                   				WHERE B.PCHS_CLNT_CD=D.CLNT_CD
                   			) AS PCHS_CLNT_NM		/* 구매처명 */            		
				, TO_CHAR(B.ORDRG_DT, 'YYYY-MM-DD') ORDRG_DT		/* 발주일자 */
				, B.ORDRG_DIV10					/* 발주구분 */
				, ( SELECT FN_CM05M01_CD_TO_NM(B.ORDRG_DIV10) FROM DUAL ) AS ORDRG_DIV10_NM	/* 발주구분명 */
				, B.ORDRG_DIV20					/* 용도구분 */
				, ( SELECT FN_CM05M01_CD_TO_NM(B.ORDRG_DIV20) FROM DUAL ) AS ORDRG_DIV20_NM	/* 용도구분명 */
				, B.ORDRG_DIV30					/* 특성구분 */
				, ( SELECT FN_CM05M01_CD_TO_NM(B.ORDRG_DIV30) FROM DUAL ) AS ORDRG_DIV30_NM	/* 특성구분명 */								
				, 
				(
					SELECT SUM(D.ORDRG_AMT)
						FROM TB_SM02D01 D
					WHERE A.CO_CD=D.CO_CD AND A.ORDRG_NO=D.ORDRG_NO AND A.ORDRG_SEQ=D.ORDRG_SEQ AND A.SALES_CD=D.SALES_CD
				) AS ORDRG_AMT										
				, SUM(A.ORDRG_QTY) OVER(PARTITION BY A.CO_CD, A.ORDRG_NO, A.ORDRG_SEQ) ORDRG_QTY	/* 발주수량 */									
				, SUM(A.ORDRG_AMT) OVER(PARTITION BY A.CO_CD, A.ORDRG_NO, A.ORDRG_SEQ) ORDRG_AMT	/* 발주금액 */	
				, SUM(A.ORDRG_PRC) OVER(PARTITION BY A.CO_CD, A.ORDRG_NO, A.ORDRG_SEQ) ORDRG_PRC	/* 발주단가 */	
				, NVL(SUM(C.IN_QTY) OVER(PARTITION BY A.CO_CD, A.ORDRG_NO, A.ORDRG_SEQ), 0)  PRE_IN_QTY 	/* 기입고수량 */
				<if test='actionType == "U" '>
				, C.IN_NO		/* 입고번호 */
				, C.IN_SEQ		/* 입고순번 */				
				, 'Y' AS USER_CHK 	/* chk 값 */   	
				, NVL(C.IN_QTY, 0) AS IN_QTY 	/* 입고(합격)수량 */	
				, NVL(C.BAD_QTY, 0) AS BAD_QTY		/*불량수량 */   				
				, NVL(C.IN_PRC, 0) AS IN_PRC		/* 입고단가 */
				, NVL(C.IN_DTL_AMT, 0) AS IN_DTL_AMT		/* 입고금액 */
				, NVL(C.IN_QTY+C.BAD_QTY, 0) AS S_INSPEC_QTY		/* 검사수량 */
				, NVL(C.IN_QTY, 0) AS S_IN_QTY		/* 입고수량 */					
				, TO_CHAR(C.IN_DT, 'YYYY-MM-DD') IN_DT		/* 입고일자 */	
				, C.IN_DTL_RMK				/* 상세비고 */				
				, MAX(C.CURR_CD) OVER(PARTITION BY A.CO_CD, A.ORDRG_NO)	AS CURR_CD				/* 통화단위 */
				, MAX(C.EXRATE) OVER(PARTITION BY A.CO_CD, A.ORDRG_NO) AS EXRATE				/* 환율 */						
				</if>				
				<if test='actionType == "C" '>
				, B.CURR_CD						/* 통화단위 */
				, B.EXRATE						/* 환율 */   				   
				</if>								
				, 
				  SUM(A.ORDRG_QTY) OVER(PARTITION BY A.CO_CD, A.ORDRG_NO, A.ORDRG_SEQ) 
				  - NVL(SUM(IN_QTY) OVER(PARTITION BY A.CO_CD, A.ORDRG_NO, A.ORDRG_SEQ), 0) AS NOT_IN_QTY			/* 미입고수량 */	
		        , A.WH_CD AS MATR_WH_CD		/* 입고창고  */
		        , ( SELECT FN_CM05M01_CD_TO_NM(A.WH_CD) FROM DUAL ) AS MATR_WH_NM		/* 입고창고  */								  
				, A.MATR_TEST_DIV				/*검사구분 */				  
				, ( SELECT FN_CM05M01_CD_TO_NM(A.MATR_TEST_DIV) FROM DUAL ) MATR_TEST_DIV_NM				/*검사구분 */																								                    
			FROM TB_SM02D01 A
			INNER JOIN TB_SM02M01 B ON(A.CO_CD=B.CO_CD AND A.ORDRG_NO=B.ORDRG_NO)
			LEFT OUTER JOIN TB_SM01D01 D ON(A.CO_CD = D.CO_CD AND A.SALES_CD = D.SALES_CD AND A.UPPER_CD = D.UPPER_CD AND A.LOWER_CD = D.LOWER_CD 
											AND A.MATR_SEQ=D.MATR_SEQ AND A.MATR_CD=D.MATR_CD)
				<if test='actionType == "U" '>
			INNER JOIN TB_SM12D01 C ON(A.ORDRG_NO=C.ORDRG_NO AND A.ORDRG_SEQ=C.ORDRG_SEQ)				
				</if>							
				<if test='actionType == "C" '>											
							LEFT OUTER JOIN
							(
								SELECT C.ORDRG_NO
										, C.ORDRG_SEQ
										, NVL(SUM(IN_QTY), 0) AS IN_QTY
									FROM TB_SM12D01 C
								GROUP BY C.ORDRG_NO, C.ORDRG_SEQ
							) C ON( A.ORDRG_NO=C.ORDRG_NO AND A.ORDRG_SEQ=C.ORDRG_SEQ)
				</if>									
		WHERE 1=1					
		<if test="coCd != null and !coCd.equals('')">
			AND A.CO_CD = #{coCd}   
		</if>		
		<if test="ordrgNo != null and !ordrgNo.equals('')">
			AND A.ORDRG_NO = #{ordrgNo}   
		</if>	
		<if test="ordrgSeq != null and !ordrgSeq.equals('')">
			AND A.ORDRG_SEQ = #{ordrgSeq}   
		</if>		
		<if test="salesCd != null and !salesCd.equals('')">
			AND A.SALES_CD = #{salesCd}   
		</if>							
	</select>
	
	<!-- 매입확정관리 detail 등록   -->
	<insert id="insertPurchaseBillDetail" parameterType="Map">       
		<selectKey keyProperty="pchsSeq" resultType="String" order="BEFORE">
			SELECT NVL(MAX(PCHS_SEQ)+1, 1) FROM TB_SM12D01 
				WHERE CO_CD = #{coCd}
					AND ORDRG_NO = #{ordrgNo}
					AND ORDRG_SEQ = #{ordrgSeq}					
					AND PCHS_NO = #{maxPchsNo}
		</selectKey>
		INSERT INTO TB_SM12D01
		  (
			CO_CD
			, PCHS_NO
			, PCHS_SEQ
			, ORDRG_NO
			, ORDRG_SEQ
			, PCHS_AMT
			, PCHS_VAT
			, PCHS_QTY
			, PCHS_DT
			, CMPLET_YN 
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
			, MATR_CD
		  )
		VALUES
		  (
			 #{coCd}
			, #{maxPchsNo}
			, #{pchsSeq}
			, #{ordrgNo}
			, #{ordrgSeq}
			, #{pchsAmt}
			, #{pchsVat}
			, #{pchsQty}
			, #{pchsDt}
			, #{cmpletYn,			jdbcType=VARCHAR}	 
			, #{userId}
			, #{pgmId}
			, SYSDATE
			, #{matrCd,			jdbcType=VARCHAR}
	      )
	</insert>	
	
	
	<!-- 매입확정관리 detail 등록 - 발주일경우 select insert  -->
	<insert id="insertPurchaseBillDetailOrdrg" parameterType="Map">       
		<selectKey keyProperty="pchsSeq" resultType="String" order="BEFORE">
			SELECT NVL(MAX(PCHS_SEQ)+1, 1) FROM TB_SM12D01 
				WHERE CO_CD = #{coCd}
					AND ORDRG_NO = #{ordrgNo}					
					AND PCHS_NO = #{maxPchsNo}
		</selectKey>
		INSERT INTO TB_SM12D01
		  (
			CO_CD
			, PCHS_NO
			, PCHS_SEQ
			, ORDRG_NO
			, ORDRG_SEQ
			, PCHS_AMT
			, PCHS_VAT
			, PCHS_QTY
			, PCHS_DT
			, CMPLET_YN 
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
			, MATR_CD
		  )
	     SELECT CO_CD 
	     		, #{maxPchsNo}
	     		, ORDRG_SEQ AS PCHS_SEQ
	     		, ORDRG_NO
	     		, ORDRG_SEQ
	     		, ORDRG_AMT
	     		, TRUNC(ORDRG_AMT / 10 )
	     	<choose>
	     		<when test="ordrgSeq != null and !ordrgSeq.equals('')">
	     		, #{pchsQty}	     		
	     		</when>
	     		<otherwise>
	     		, ORDRG_QTY
	     		</otherwise>
	     	</choose>
	     		, #{pchsDt}
	     		, #{cmpletYn,			jdbcType=VARCHAR}	
				, #{userId}
				, #{pgmId}
				, SYSDATE
				, MATR_CD    		
	     	FROM TB_SM02D01
	     WHERE 1=1
	     	AND ORDRG_NO = #{ordrgNo}
		<if test="ordrgSeq != null and !ordrgSeq.equals('')">			
			AND ORDRG_SEQ = #{ordrgSeq}
		</if>	     	
	     	ORDER BY ORDRG_SEQ
	</insert>		
		
	<!-- 매입확정관리 상세 수정 old (개별수정일경우 사용)-->
	<update id="updatePurchaseBillDetail" parameterType="Map">
		MERGE INTO TB_SM12D01 
			USING DUAL
			ON (
			CO_CD = #{coCd}
			AND ORDRG_NO = #{ordrgNo}			
			AND ORDRG_SEQ = #{ordrgSeq}			
			AND PCHS_NO = #{pchsNo}
		<if test="pchsSeq != null and !pchsSeq.equals('')">						
			AND PCHS_SEQ = #{pchsSeq}			
		</if>
				)		
		WHEN MATCHED THEN
		UPDATE SET
			PCHS_AMT = #{pchsAmt}
			, PCHS_VAT = #{pchsVat}
			, PCHS_QTY = #{pchsQty} 			
			, PCHS_DT = #{pchsDt}
			, CMPLET_YN = #{cmpletYn,			jdbcType=VARCHAR}
			, UDT_ID = #{userId}
			, UDT_PGM = #{pgmId}
			, UDT_DTTM = SYSDATE
		WHEN NOT MATCHED THEN						
		INSERT  
		  (
			CO_CD
			, PCHS_NO
			, PCHS_SEQ
			, ORDRG_NO
			, ORDRG_SEQ
			, PCHS_AMT
			, PCHS_VAT
			, PCHS_QTY
			, PCHS_DT
			, CMPLET_YN 
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
			, MATR_CD
		  )
		VALUES
		  (
	     	#{coCd} 
	     	, #{pchsNo}
	     	, #{ordrgSeq}
	     	, #{ordrgNo}
	     	, #{ordrgSeq}
	     	, #{pchsAmt}
	     	, #{pchsVat}
	     	, #{pchsQty}
	     	, #{pchsDt}
	     	, #{cmpletYn,			jdbcType=VARCHAR}	
			, #{userId}
			, #{pgmId}
			, SYSDATE
			, #{matrCd,    			jdbcType=VARCHAR}			  
		  )
	</update>
	
	<!-- 매입확정관리 상세 수정 new (확정여부만 수정)-->
	<update id="updatePurchaseBillDetailOrdrg" parameterType="Map">
		UPDATE TB_SM12D01
			SET  
			PCHS_DT = #{pchsDt}
			, CMPLET_YN = #{cmpletYn,			jdbcType=VARCHAR}
			, UDT_ID = #{userId}
			, UDT_PGM = #{pgmId}
			, UDT_DTTM = SYSDATE
		WHERE CO_CD = #{coCd}
			AND ORDRG_NO = #{ordrgNo}
			AND PCHS_NO = #{pchsNo}			
		<if test="ordrgSeq != null and !ordrgSeq.equals('')">			
			AND ORDRG_SEQ = #{ordrgSeq}
		</if>	     	
	</update>	
	
	<!-- 매입확정관리 마스터 CMPLET_YN 수정 -->
	<update id="updatePurchaseMaster" parameterType="Map">
		MERGE INTO TB_SM12M01 
			USING DUAL
			ON (
			CO_CD = #{coCd}
			AND PCHS_NO = #{maxPchsNo}
				)		
		WHEN MATCHED THEN
			UPDATE SET	
				CMPLET_YN = #{cmpletYn,			jdbcType=VARCHAR}
				, UDT_ID = #{userId}
				, UDT_PGM = #{pgmId}
				, UDT_DTTM = SYSDATE
		WHEN NOT MATCHED THEN					
		INSERT 
	      (
			 CO_CD
			 , PCHS_NO
			 , CMPLET_YN
			 , CREAT_ID
			 , CREAT_PGM
			 , CREAT_DTTM
	      )
	    VALUES
	    (
			#{coCd}
			, #{maxPchsNo}
			, #{cmpletYn,			jdbcType=VARCHAR}
			, #{userId}
			, #{pgmId}
			, SYSDATE
	    )
	</update>	
	
	<!-- 매입 DETAIL  삭제 -->         
	<delete id="deletePurchaseDetail" parameterType="Map">
		DELETE 
			FROM TB_SM12D01
		WHERE 1=1
			AND CO_CD = #{coCd}
			AND PCHS_NO = #{pchsNo}
			AND ORDRG_NO = #{ordrgNo}
		<if test="ordrgSeq != null and !ordrgSeq.equals('')">			
			AND ORDRG_SEQ = #{ordrgSeq}
		</if>
	</delete>	
	
	<!-- 매입 마스터  삭제 (사용안함) -->         
	<delete id="deletePurchaseMaster" parameterType="Map">
		DELETE 
			FROM TB_SM12M01
		WHERE 1=1
			AND CO_CD = #{coCd}
			AND PCHS_NO = #{pchsNo}
	</delete>		
		
	<!-- BILL_YN 수정 -->
	<update id="updateBillYn" parameterType="Map">
		UPDATE TB_SM12D01
			SET  
			 BILL_YN = #{billYn,			jdbcType=VARCHAR}
			, UDT_ID = #{userId}
			, UDT_PGM = #{pgmId}
			, UDT_DTTM = SYSDATE
		WHERE CO_CD = #{coCd}
			AND PCHS_NO = #{pchsNo}			
			AND ORDRG_NO = #{ordrgNo}
	</update>	
	
	
	<!-- BILL개별 건별_YN 수정 -->
	<update id="updateBillSeqYn" parameterType="Map">
		UPDATE TB_SM12D01
			SET  
			 BILL_YN = #{billYn,			jdbcType=VARCHAR}
			, UDT_ID = #{userId}
			, UDT_PGM = #{pgmId}
			, UDT_DTTM = SYSDATE
		WHERE CO_CD = #{coCd}
			AND PCHS_NO = #{pchsNo}			
			AND PCHS_SEQ = #{pchsSeq}			
			AND ORDRG_NO = #{ordrgNo}
	</update>	
	
	<!-- 매입확정 자재리스트 -->
	<select id="selectOrdrgMatList" parameterType="Map" resultType="camelMap">
		SELECT X.*
			FROM
			(	
			SELECT D.CO_CD
				, D.ORDRG_NO
				, D.ORDRG_SEQ
				, D.SALES_CD
				, D.MATR_SEQ
				, D.UPPER_CD
				, D.LOWER_CD
				, D.DSGN_NO
				, D.MATR_CD
				, ( SELECT FN_CM05M01_CD_TO_NM(D.MATR_TEST_DIV) FROM DUAL ) MATR_TEST_DIV    
				, ORDRG_PRC			/* 발주단가		*/
				, ORDRG_QTY			/* 발주수량 */
				, ORDRG_AMT			/* 발주금액  */
				, TO_CHAR(D.DUDT_DEQ_DT, 'YYYY-MM-DD') DUDT_DEQ_DT
				, TO_CHAR(D.DUDT_INTEND_DT, 'YYYY-MM-DD') DUDT_INTEND_DT
				, ORDRG_DTL_RMK
				, D.CREAT_ID
				, D.CREAT_PGM
				, D.CREAT_DTTM
				, D.UDT_ID
				, D.UDT_PGM
				, D.UDT_DTTM
				, D.IN_CMPLET_YN
		        , D.WH_CD AS MATR_WH_CD		/* 입고창고  */
		        , ( SELECT FN_CM05M01_CD_TO_NM(D.WH_CD) FROM DUAL ) AS MATR_WH_NM		/* 입고창고  */
		        , 
		        (
		        	SELECT NVL(SUM(ORDRG_QTY), 0) 
		        		FROM TB_SM02D01 CC
		        	WHERE 1=1 /* D.CO_CD = CC.CO_CD */ 
		        		AND D.ORDRG_NO != CC.ORDRG_NO
		        		AND D.SALES_CD = CC.SALES_CD 
		        		AND D.LOWER_CD = CC.LOWER_CD
		        		AND D.MATR_CD = CC.MATR_CD
		        ) AS PRE_BOM_QTY			/* 구매 BOM 기발주 수량 임시 */      
		        ,
		        (
		        	SELECT CC.BOM_QTY			/* 구매 BOM 수량 */
		        		FROM TB_SM01D01 CC 						        		
					WHERE 1=1
		        		AND D.SALES_CD = CC.SALES_CD AND D.MATR_SEQ = CC.MATR_SEQ
	        			AND D.UPPER_CD=CC.UPPER_CD  AND D.LOWER_CD=CC.LOWER_CD       		
		        ) BOM_QTY /* 구매 BOM 수량 */
		        , E.MATR_NM		/* 자재명 */
		        , E.MATR_MAT		/* 소재 */
		        , E.MATR_MAKR_NM
		        , E.MATR_MNO
		        , E.MATR_SPEC
				, D.ORDRG_DIV10					/* 발주구분 */
				, ( SELECT FN_CM05M01_CD_TO_NM(D.ORDRG_DIV10) FROM DUAL ) AS ORDRG_DIV10_NM	/* 발주구분명 */			
				, D.ORDRG_DIV20					/* 용도구분 */
				, ( SELECT FN_CM05M01_CD_TO_NM(D.ORDRG_DIV20) FROM DUAL ) AS ORDRG_DIV20_NM	/* 용도구분명 */ 			
				, E.PCHS_CLNT_NM AS BOM_PCHS_CLNT_NM					/* 거래처명 */
				, D.NEXT_PRCSN_NM					/* 후행업체 */	                	
		        , NVL( M12.CMPLET_YN, 'N') AS USER_CHK_V		/* 수정시 CHK값 SET */
		        , NVL(M12.PCHS_AMT, 0) AS PCHS_AMT
		        , NVL(M12.PCHS_VAT, 0) AS PCHS_VAT			
		        , NVL(M12.PCHS_AMT, 0) + NVL(M12.PCHS_VAT, 0) AS PCHS_SUM_AMT
		        , 
		        	CASE
	        		WHEN ( ( SELECT COUNT(*) FROM TB_SM12D01 AA WHERE D.ORDRG_NO=AA.ORDRG_NO ) > 0 )
	        			THEN MAX(M12.PCHS_NO) OVER()
		        		ELSE NVL(M12.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000')
		        	END  AS PCHS_NO	
		        , TO_CHAR(M12.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
		        , M12.PCHS_QTY
		        , M12.PCHS_SEQ		        
			FROM TB_SM02D01 D			/* 발주디테일 */
			LEFT OUTER JOIN TB_SM01D01 E ON(/* D.CO_CD=E.CO_CD AND */ D.SALES_CD=E.SALES_CD AND D.UPPER_CD=E.UPPER_CD AND D.LOWER_CD=E.LOWER_CD
											AND D.MATR_SEQ=E.MATR_SEQ AND D.MATR_CD=E.MATR_CD)		/*구매 BOM */
			INNER JOIN TB_BM05M01 F ON ( E.MATR_CD = F.MATR_CD )	/* 자재마스터 */					
			LEFT OUTER JOIN TB_SM12D01 M12 ON(D.ORDRG_NO=M12.ORDRG_NO AND D.ORDRG_SEQ=M12.ORDRG_SEQ)			
			WHERE 1=1
			<if test="coCd != null and !coCd.equals('')">
				AND D.CO_CD = #{coCd}   
			</if>		
			<if test="ordrgNo != null and !ordrgNo.equals('')">
				AND D.ORDRG_NO = #{ordrgNo}   
			</if>	
			<if test="ordrgSeq != null and !ordrgSeq.equals('')">
				AND D.ORDRG_SEQ = #{ordrgSeq}   
			</if>		
			<if test="salesCd != null and !salesCd.equals('')">
				AND D.SALES_CD = #{salesCd}   
			</if>
			) X
			ORDER BY BOM_PCHS_CLNT_NM ASC 					
	</select>	
	
		<!-- 매입확정 리스트  카운트 -->
	<select id="selectPurchaseListCountNew" parameterType="Map" resultType="int">
			SELECT COUNT(*)
					FROM
						(
						SELECT A.CO_CD	
							, A.PCHS_NO			/* 매입번호 */
							, A.PCHS_NO_GRID		/* 매입번호 그리드 출력용 */
							, A.ORDRG_NO
							, A.SALES_CD
							, A.PCHS_CLNT_CD
							, A.PCHS_CLNT_NM		/* 구매처명 */
							, A.MATR_CD
							, A.ORDRG_QTY
							, A.ORDRG_AMT	
							, A.IN_DTL_AMT	
							, A.IN_DTL_AMT_GRID	
							, A.ORDRG_DT
							, A.DSGN_NO			/* 대표도번 */	
							, A.PCHS_AMT
							, A.PCHS_VAT		/* 부가세 */
							, A.PCHS_QTY			/* 수량 */
							, 
							(
							  CASE 
							  	WHEN NVL(A.PCHS_AMT,'0') = '0' 
							  	THEN NULL
							  		ELSE TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))						  	 
							  END	
							) AS PCHS_SUM_AMT			/* 합계금액 */
							, CASE  
								WHEN ( SUBSTR(A.ORDRG_NO, 0, 3) = 'RET' )		/* 발주와 기타구매비용 분리 */
									THEN NVL(A.IN_DTL_AMT, 0) + NVL(A.PCHS_AMT, 0)
								/* ELSE NVL(A.IN_DTL_AMT, 0) + NVL(A.PCHS_VAT, 0)  */
								ELSE NVL(A.IN_DTL_AMT, 0) - NVL(A.PCHS_AMT, 0) 
							  END AS REMAIN_AMT	/* 잔여금액 구매비용일 경우 부가세 포함으로 작업함 */							
							, TO_CHAR(A.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
							, NVL(A.CMPLET_YN,'') AS CMPLET_YN
							, A.USER_CHK_V
							, A.IS_COST
							, A.IS_CNT
							, A.IS_DIV
							, A.BILL_YN   /*계산서 여부*/
							, A.FILE_TRGT_KEY
							, CLNT_PJT
							, CLNT_PJT_NM		
							, ORDRG_MNG_ID					
							, ORDRG_MNG_NM	
						  FROM
						  (
							SELECT DISTINCT 
									  A.CO_CD                                               AS CO_CD          --회사코드
									, A.ORDRG_NO                                             AS ORDRG_NO       --발주번호
									, A.SALES_CD                                             AS SALES_CD       --SALES CODE
									, A.PCHS_CLNT_CD                                         AS PCHS_CLNT_CD   --구매처cd
									, C.CLNT_NM                                              AS PCHS_CLNT_NM   --구매처명
									, '' AS MATR_CD --자재명 없음
									, A.ORDRG_DT											 AS ORDRG_DT       --발주일자									
									, D.DSGN_NO 											 AS DSGN_NO			/* 도번 MIN */
									, D.ORDRG_QTY				/* 발주수량 */
									, D.ORDRG_AMT				/*발주 금액 */
									, F.IN_DTL_AMT              /*입고 금액 */
									, F.IN_DTL_AMT AS IN_DTL_AMT_GRID         /*입고 금액 */
									, NVL(E.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */
									, E.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/					
									, E.PCHS_AMT				/* 매입금액 */
									, E.PCHS_VAT				/* 매입금액 */
									, E.PCHS_QTY				/* 매입수량 */
									, E.PCHS_QTY AS IS_CNT
									, E.PCHS_DT					/* 매입확정일자 */
									, CASE
										WHEN ( TO_NUMBER(E.PCHS_AMT) = TO_NUMBER(F.IN_DTL_AMT) )
											THEN 'Y'
										ELSE ''
									  END AS CMPLET_YN	 		/* 확정여부 */
									, CASE
										WHEN ( COUNT(B.ORDRG_SEQ) OVER(PARTITION BY B.ORDRG_NO) = CMPLET_SUM )
											THEN 'Y'
										ELSE 'N'
									  END AS USER_CHK_V	 		/* 확정여부 */											            
									, 'N' IS_COST			/* 기타비용여부 */	
									, '발주' IS_DIV			/* 구분 */
									, '' AS BILL_YN		  /*계산서 여부*/
									, A.FILE_TRGT_KEY
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, A.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(A.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
								FROM TB_SM02M01 A --발주마스터
				                INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
				                LEFT OUTER JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD--거래처마스터     
								LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = A.SALES_CD
								LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
								LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT
				                LEFT OUTER JOIN (SELECT A.CO_CD
														, A.ORDRG_NO
														, A.SALES_CD
														, SUM(A.ORDRG_QTY) ORDRG_QTY
														, SUM(A.ORDRG_AMT) ORDRG_AMT
														, ( SELECT MIN(B.DSGN_NO) FROM TB_SM02D01 B WHERE A.SALES_CD=B.SALES_CD AND A.ORDRG_NO=B.ORDRG_NO) AS DSGN_NO
													FROM TB_SM02D01 A
						                         WHERE 1=1
						                         	GROUP BY A.CO_CD
						                                     , A.ORDRG_NO
						                                     , A.SALES_CD
				                                 ) AS D ON A.CO_CD = D.CO_CD AND A.SALES_CD = D.SALES_CD AND A.ORDRG_NO = D.ORDRG_NO --발주상세
								LEFT OUTER JOIN(
												SELECT ORDRG_NO
														, SUM(A.PCHS_AMT) AS PCHS_AMT
														, SUM(A.PCHS_VAT) AS PCHS_VAT
														, SUM(A.PCHS_QTY) AS PCHS_QTY
														, PCHS_NO
														, COUNT(A.PCHS_NO) PCHS_CNT 
														, SUM(DECODE(A.CMPLET_YN, 'Y', 1, 0)) AS CMPLET_SUM
														, MAX(A.PCHS_DT) AS PCHS_DT
													FROM TB_SM12D01 A 
												WHERE 1=1
													AND ORDRG_NO LIKE 'BAL%'
													GROUP BY A.CO_CD
															, A.ORDRG_NO
															, A.PCHS_NO															
												) E ON(A.ORDRG_NO=E.ORDRG_NO)	/* 매입 DETAIL */    
								LEFT OUTER JOIN (SELECT A.CO_CD
														, A.ORDRG_NO
														, A.SALES_CD
														, SUM(A.IN_DTL_AMT) IN_DTL_AMT
													FROM TB_SM03D01 A
						                         WHERE 1=1
						                         	GROUP BY A.CO_CD
						                                     , A.ORDRG_NO
						                                     , A.SALES_CD
				                                 ) AS F ON A.CO_CD = F.CO_CD AND A.SALES_CD = F.SALES_CD AND A.ORDRG_NO = F.ORDRG_NO --입고상세                                  
									WHERE 1=1
									AND IN_DTL_AMT IS NOT NULL
							UNION ALL		       
								SELECT E.CO_CD
									, E.COST_NO AS ORDRG_NO
									, NVL(E.SALES_CD, E.COST_NO) AS SALES_CD
									, E.PCHS_CLNT_CD				/* 구매처cd */
									,
									(
										SELECT D.CLNT_NM
											FROM TB_BM02M01 D
										WHERE E.PCHS_CLNT_CD=D.CLNT_CD
									) AS PCHS_CLNT_NM		/* 구매처명 */
									, E.PCHS_COST_DIV10 AS MATR_CD
									, E.COST_DT AS ORDRG_DT			
									, '' AS DSGN_NO							
									, 1 AS ORDRG_QTY				/*발주수량 */
									, E.COST_AMT AS ORDRG_AMT		/*발주 금액 */		
									, E.COST_AMT AS IN_DTL_AMT										
									, E.COST_AMT AS IN_DTL_AMT_GRID										
									, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */					
									, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/			 										
									, D.PCHS_AMT /*- TRUNC(E.COST_AMT * 10/110 ) */ AS PCHS_AMT		/* 매입금액  - 부가세 미포함으로설정  */
									, /* TRUNC(E.COST_AMT * 10/110 ) */ D.PCHS_VAT AS PCHS_VAT		/* 부가세 */
									, D.PCHS_QTY			/* 수량 */	
									, D.PCHS_QTY AS IS_CNT									
									, D.PCHS_DT
									, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
									, DECODE(D.CMPLET_YN, 'Y', 'Y', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
									, 'Y' IS_COST			/* 기타비용여부 */
									, '비용' IS_DIV			/* 구분 */
									, D.BILL_YN AS BILL_YN  /*계산서 여부*/
									, E.FILE_TRGT_KEY
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM10M01 E		/* 구매비용 */		
									LEFT OUTER JOIN TB_SM12D01 D ON(D.CO_CD=E.CO_CD AND D.ORDRG_NO=E.COST_NO AND D.ORDRG_SEQ=1)	/* 매입 DETAIL */	
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT								
								WHERE 1=1				
							UNION ALL
								SELECT E.CO_CD
									, E.RET_NO AS ORDRG_NO
									, NVL(E.SALES_CD, E.RET_NO) AS SALES_CD
									, E.PCHS_CLNT_CD				/* 구매처cd */
									,
									(
										SELECT D.CLNT_NM
											FROM TB_BM02M01 D
										WHERE E.PCHS_CLNT_CD=D.CLNT_CD
									) AS PCHS_CLNT_NM		/* 구매처명 */
									, E.IO_DIV AS MATR_CD
									, E.RET_DT AS ORDRG_DT			
									, R.DSGN_NO AS DSGN_NO							
									, 1 AS ORDRG_QTY				/*발주수량 */
									, R.RET_DTL_AMT AS ORDRG_AMT		/*발주 금액 */	
									, R.RET_DTL_AMT AS IN_DTL_AMT											
									, -(R.RET_DTL_AMT) AS IN_DTL_AMT_GRID											
									, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */					
									, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/			 										
									, -(D.PCHS_AMT) AS PCHS_AMT		/* 매입금액  */
									, -(D.PCHS_VAT) AS PCHS_VAT		/* 부가세 */
									, D.PCHS_QTY			/* 수량 */	
									, D.PCHS_QTY AS CNT									
									, D.PCHS_DT
									, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
									, DECODE(D.CMPLET_YN, 'Y', 'Y', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
									, 'R' IS_COST			/* 반품여부 */
									, '반품' IS_DIV			/* 구분 */
									, D.BILL_YN AS BILL_YN  /*계산서 여부*/
									, E.FILE_TRGT_KEY
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM06M01 E		/* 반품 */	
									INNER JOIN (SELECT SUM(RET_DTL_AMT) AS RET_DTL_AMT, MIN(DSGN_NO) AS DSGN_NO, RET_NO, CO_CD FROM TB_SM06D01 GROUP BY RET_NO, CO_CD ) R 
									ON R.CO_CD = E.CO_CD AND R.RET_NO = E.RET_NO	
									LEFT OUTER JOIN TB_SM12D01 D ON(D.CO_CD=E.CO_CD AND D.ORDRG_NO=E.RET_NO AND D.ORDRG_SEQ=1)	/* 매입 DETAIL */		
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT			
								WHERE 1=1										
						  ) A		/* 발주+기타비용+반품 내역 */
						  WHERE 1=1		
						<include refid="selectPurchaseListCondition"></include>
						  ORDER BY A.CO_CD, A.PCHS_CLNT_NM, A.ORDRG_NO,  A.PCHS_NO 
						) X
	</select>
	
		<!-- 매입확정 리스트  구매비용 포함-->
	<select id="selectPurchaseListNew" parameterType="Map" resultType="camelMap">
		WITH IPGO_BALJU AS (
						SELECT  
								IPGO.CO_CD, IPGO.ORDRG_NO, IPGO.REQ_NO, IPGO.SALES_CD
			 			 	   , SUM(IN_QTY) 		AS IN_QTY
			 			       , SUM(BAD_QTY) 		AS BAD_QTY
			 			       , SUM(IN_DTL_AMT) 	AS IN_DTL_AMT
			 			       , TO_CHAR(MAX(IN_DT), 'YYYY-MM-DD')	AS IN_DT										
						FROM TB_SM03D01 IPGO
								LEFT OUTER JOIN TB_SM02M01 M ON(IPGO.ORDRG_NO = M.ORDRG_NO)		/* 발주마스터 */
								LEFT OUTER JOIN TB_BM02M01 AS C ON M.PCHS_CLNT_CD = C.CLNT_CD   --거래처마스터
						WHERE 1 = 1
					<!-- 회사코드 -->         
					<if test="coCd != null and !coCd.equals('')">
						AND IPGO.CO_CD = #{coCd}   
					</if>
					<!-- 확정일자 -->         
					<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
						<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
			            AND IPGO.IN_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
						</if>   
					</if>	
					<!-- 구매처 -->         
					<if test="pchsClntCd != null and !pchsClntCd.equals('')">
						AND M.PCHS_CLNT_CD = #{pchsClntCd}   
					</if>       
					<if test="pchsClntNm != null and !pchsClntNm.equals('')">
						AND C.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
					</if>
			
					<if test="salesCd != null and !salesCd.equals('')">
						AND IPGO.SALES_CD LIKE '%'|| #{salesCd} || '%'   
					</if>  
						GROUP BY IPGO.CO_CD, IPGO.ORDRG_NO, IPGO.REQ_NO, IPGO.SALES_CD
				UNION ALL    
					  SELECT  
					         	E.CO_CD, E.COST_NO, E.REQ_NO, E.SALES_CD 
			 			 	   , 0 			AS IN_QTY
			 			       , 0 			AS BAD_QTY
			 			       , 0 			AS IN_DTL_AMT
			 			       , ''			AS IN_DT
					    FROM TB_SM10M01 E		/* 구매비용 */	
								LEFT OUTER JOIN TB_BM02M01 AS C ON E.PCHS_CLNT_CD = C.CLNT_CD   --거래처마스터
					   WHERE 1 = 1
					<!-- 회사코드 -->         
					<if test="coCd != null and !coCd.equals('')">
						AND E.CO_CD = #{coCd}   
					</if>
					<!-- 확정일자 -->         
					<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
						<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
			            AND E.COST_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
						</if>   
					</if>	
					<!-- 구매처 -->         
					<if test="pchsClntCd != null and !pchsClntCd.equals('')">
						AND E.PCHS_CLNT_CD = #{pchsClntCd}   
					</if>       
					<if test="pchsClntNm != null and !pchsClntNm.equals('')">
						AND C.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
					</if>
			
					<if test="salesCd != null and !salesCd.equals('')">
						AND E.SALES_CD LIKE '%'|| #{salesCd} || '%'   
					</if>
						GROUP BY E.CO_CD, E.COST_NO, E.REQ_NO, E.SALES_CD 
				UNION ALL    
					  SELECT  
					         	E.CO_CD, E.RET_NO, '', E.SALES_CD  
			 			 	   , 0 			AS IN_QTY
			 			       , 0 			AS BAD_QTY
			 			       , 0 			AS IN_DTL_AMT
			 			       , ''			AS IN_DT
						FROM TB_SM06M01 E		/* 반품 */	
								LEFT OUTER JOIN TB_BM02M01 AS C ON E.PCHS_CLNT_CD = C.CLNT_CD   --거래처마스터
					   WHERE 1 = 1
					<!-- 회사코드 -->         
					<if test="coCd != null and !coCd.equals('')">
						AND E.CO_CD = #{coCd}   
					</if>
					<!-- 확정일자 -->         
					<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
						<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
			            AND E.RET_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
						</if>   
					</if>	
					<!-- 구매처 -->         
					<if test="pchsClntCd != null and !pchsClntCd.equals('')">
						AND E.PCHS_CLNT_CD = #{pchsClntCd}   
					</if>       
					<if test="pchsClntNm != null and !pchsClntNm.equals('')">
						AND C.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
					</if>
			
					<if test="salesCd != null and !salesCd.equals('')">
						AND E.SALES_CD LIKE '%'|| #{salesCd} || '%'   
					</if>
						GROUP BY E.CO_CD, E.RET_NO, '', E.SALES_CD  
		)
		SELECT *
			FROM
			(
			SELECT X.*
					, ROWNUM AS RN
					FROM
						(
						SELECT A.CO_CD	
							, A.PCHS_NO			/* 매입번호 */
							, A.PCHS_NO_GRID		/* 매입번호 그리드 출력용 */
							, A.ORDRG_NO
							, A.SALES_CD
							, A.PCHS_CLNT_CD
							, A.PCHS_CLNT_NM		/* 구매처명 */
							, A.MATR_CD
							, A.ORDRG_QTY
							, A.ORDRG_AMT	
							, A.IN_DTL_AMT	
							, A.IN_DTL_AMT_GRID	
							, A.ORDRG_DT
							, A.DSGN_NO			/* 대표도번 */	
							, A.PCHS_AMT
							, A.PCHS_VAT		/* 부가세 */
							, A.PCHS_QTY			/* 수량 */
							, 
							(
							  CASE 
							  	WHEN NVL(A.PCHS_AMT,'0') = '0' 
							  	THEN NULL
							  		ELSE TO_NUMBER(NVL(A.PCHS_AMT, 0)) + TO_NUMBER(NVL(A.PCHS_VAT, 0))						  	 
							  END	
							) AS PCHS_SUM_AMT			/* 합계금액 */
							, CASE  
								WHEN ( SUBSTR(A.ORDRG_NO, 0, 3) = 'RET' )		/* 발주와 기타구매비용 분리 */
									THEN NVL(A.IN_DTL_AMT, 0) + NVL(A.PCHS_AMT, 0)
								/* ELSE NVL(A.IN_DTL_AMT, 0) + NVL(A.PCHS_VAT, 0)  */
								ELSE NVL(A.IN_DTL_AMT, 0) - NVL(A.PCHS_AMT, 0) 
							  END AS REMAIN_AMT	/* 잔여금액 구매비용일 경우 부가세 포함으로 작업함 */							
							, TO_CHAR(A.PCHS_DT, 'YYYY-MM-DD') AS PCHS_DT
							, NVL(A.CMPLET_YN,'') AS CMPLET_YN
							, A.USER_CHK_V
							, A.IS_COST
							, A.IS_CNT
							, A.IS_DIV
							, A.BILL_YN   /*계산서 여부*/
							, A.FILE_TRGT_KEY
							, CLNT_PJT
							, CLNT_PJT_NM	
							, ORDRG_MNG_ID					
							, ORDRG_MNG_NM
							, IPGO_BALJU.IN_QTY
							, IPGO_BALJU.BAD_QTY
			 			    , IPGO_BALJU.IN_DTL_AMT
			 			    , IPGO_BALJU.IN_DT
						  FROM
						  (
							SELECT DISTINCT 
									  A.CO_CD                                               AS CO_CD          --회사코드
									, A.ORDRG_NO                                             AS ORDRG_NO       --발주번호
									, A.SALES_CD                                             AS SALES_CD       --SALES CODE
									, A.PCHS_CLNT_CD                                         AS PCHS_CLNT_CD   --구매처cd
									, C.CLNT_NM                                              AS PCHS_CLNT_NM   --구매처명
									, '' AS MATR_CD --자재명 없음
									, A.ORDRG_DT											 AS ORDRG_DT       --발주일자									
									, D.DSGN_NO 											 AS DSGN_NO			/* 도번 MIN */
									, D.ORDRG_QTY				/* 발주수량 */
									, D.ORDRG_AMT				/*발주 금액 */
									, F.IN_DTL_AMT              /*입고 금액 */
									, F.IN_DTL_AMT AS IN_DTL_AMT_GRID         /*입고 금액 */
									, NVL(E.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */
									, E.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/					
									, E.PCHS_AMT				/* 매입금액 */
									, E.PCHS_VAT				/* 매입금액 */
									, E.PCHS_QTY				/* 매입수량 */
									, E.PCHS_QTY AS IS_CNT
									, E.PCHS_DT					/* 매입확정일자 */
									, CASE
										WHEN ( TO_NUMBER(E.PCHS_AMT) = TO_NUMBER(F.IN_DTL_AMT) )
											THEN 'Y'
										ELSE ''
									  END AS CMPLET_YN	 		/* 확정여부 */
									, CASE
										WHEN ( COUNT(B.ORDRG_SEQ) OVER(PARTITION BY B.ORDRG_NO) = CMPLET_SUM )
											THEN 'Y'
										ELSE 'N'
									  END AS USER_CHK_V	 		/* 확정여부 */											            
									, 'N' IS_COST			/* 기타비용여부 */	
									, '발주' IS_DIV			/* 구분 */
									, '' AS BILL_YN		  /*계산서 여부*/
									, A.FILE_TRGT_KEY
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, A.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(A.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
							FROM TB_SM02M01 A --발주마스터
				                INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
				                LEFT OUTER JOIN TB_BM02M01 AS C ON A.PCHS_CLNT_CD = C.CLNT_CD--거래처마스터    
								LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = A.SALES_CD
								LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
								LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT
				                LEFT OUTER JOIN (SELECT A.CO_CD
														, A.ORDRG_NO
														, A.SALES_CD
														, SUM(A.ORDRG_QTY) ORDRG_QTY
														, SUM(A.ORDRG_AMT) ORDRG_AMT
														, ( SELECT MIN(B.DSGN_NO) FROM TB_SM02D01 B WHERE A.SALES_CD=B.SALES_CD AND A.ORDRG_NO=B.ORDRG_NO) AS DSGN_NO
													FROM TB_SM02D01 A
						                         WHERE 1=1
						                         	GROUP BY A.CO_CD
						                                     , A.ORDRG_NO
						                                     , A.SALES_CD
				                                 ) AS D ON A.CO_CD = D.CO_CD AND A.SALES_CD = D.SALES_CD AND A.ORDRG_NO = D.ORDRG_NO --발주상세
								LEFT OUTER JOIN(
												SELECT ORDRG_NO
														, SUM(A.PCHS_AMT) AS PCHS_AMT
														, SUM(A.PCHS_VAT) AS PCHS_VAT
														, SUM(A.PCHS_QTY) AS PCHS_QTY
														, PCHS_NO
														, COUNT(A.PCHS_NO) PCHS_CNT 
														, SUM(DECODE(A.CMPLET_YN, 'Y', 1, 0)) AS CMPLET_SUM
														, A.PCHS_DT AS PCHS_DT
													FROM TB_SM12D01 A 
												WHERE 1=1
													AND ORDRG_NO LIKE 'BAL%'
													GROUP BY A.CO_CD
															, A.ORDRG_NO
															, A.PCHS_NO	
															, A.PCHS_DT														
												) E ON(A.ORDRG_NO=E.ORDRG_NO)	/* 매입 DETAIL */    
								LEFT OUTER JOIN (SELECT A.CO_CD
														, A.ORDRG_NO
														, A.SALES_CD
														, SUM(A.IN_DTL_AMT) IN_DTL_AMT
													FROM TB_SM03D01 A
						                         WHERE 1=1
						                         	GROUP BY A.CO_CD
						                                     , A.ORDRG_NO
						                                     , A.SALES_CD
				                                 ) AS F ON A.CO_CD = F.CO_CD AND A.SALES_CD = F.SALES_CD AND A.ORDRG_NO = F.ORDRG_NO --입고상세                                  
									WHERE 1=1  
									AND EXISTS (SELECT 1 FROM IPGO_BALJU WHERE A.ORDRG_NO = IPGO_BALJU.ORDRG_NO)
							UNION ALL		       
								SELECT E.CO_CD
									, E.COST_NO AS ORDRG_NO
									, NVL(E.SALES_CD, E.COST_NO) AS SALES_CD
									, E.PCHS_CLNT_CD				/* 구매처cd */
									,
									(
										SELECT D.CLNT_NM
											FROM TB_BM02M01 D
										WHERE E.PCHS_CLNT_CD=D.CLNT_CD
									) AS PCHS_CLNT_NM		/* 구매처명 */
									, E.PCHS_COST_DIV10 AS MATR_CD
									, E.COST_DT AS ORDRG_DT			
									, '' AS DSGN_NO							
									, 1 AS ORDRG_QTY				/*발주수량 */
									, E.COST_AMT AS ORDRG_AMT		/*발주 금액 */		
									, E.COST_AMT AS IN_DTL_AMT										
									, E.COST_AMT AS IN_DTL_AMT_GRID										
									, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */					
									, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/			 										
									, D.PCHS_AMT /*- TRUNC(E.COST_AMT * 10/110 ) */ AS PCHS_AMT		/* 매입금액  - 부가세 미포함으로설정  */
									, /* TRUNC(E.COST_AMT * 10/110 ) */ D.PCHS_VAT AS PCHS_VAT		/* 부가세 */
									, D.PCHS_QTY			/* 수량 */	
									, D.PCHS_QTY AS IS_CNT									
									, D.PCHS_DT
									, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
									, DECODE(D.CMPLET_YN, 'Y', 'Y', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
									, 'Y' IS_COST			/* 기타비용여부 */
									, '비용' IS_DIV			/* 구분 */
									, D.BILL_YN AS BILL_YN  /*계산서 여부*/
									, E.FILE_TRGT_KEY
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
								FROM TB_SM10M01 E		/* 구매비용 */		
									LEFT OUTER JOIN TB_SM12D01 D ON(D.CO_CD=E.CO_CD AND D.ORDRG_NO=E.COST_NO AND D.ORDRG_SEQ=1)	/* 매입 DETAIL */			
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT						
								WHERE 1=1	
								  AND EXISTS (SELECT 1 FROM IPGO_BALJU WHERE E.COST_NO = IPGO_BALJU.ORDRG_NO)						
							UNION ALL
								SELECT E.CO_CD
									, E.RET_NO AS ORDRG_NO
									, NVL(E.SALES_CD, E.RET_NO) AS SALES_CD
									, E.PCHS_CLNT_CD				/* 구매처cd */
									,
									(
										SELECT D.CLNT_NM
											FROM TB_BM02M01 D
										WHERE E.PCHS_CLNT_CD=D.CLNT_CD
									) AS PCHS_CLNT_NM		/* 구매처명 */
									, E.IO_DIV AS MATR_CD
									, E.RET_DT AS ORDRG_DT			
									, R.DSGN_NO AS DSGN_NO							
									, 1 AS ORDRG_QTY				/*발주수량 */
									, R.RET_DTL_AMT AS ORDRG_AMT		/*발주 금액 */	
									, R.RET_DTL_AMT AS IN_DTL_AMT											
									, -(R.RET_DTL_AMT) AS IN_DTL_AMT_GRID											
									, NVL(D.PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00000') AS PCHS_NO	/*매입확정번호 */					
									, D.PCHS_NO AS PCHS_NO_GRID	/*매입확정번호 그리드용*/			 										
									, -(D.PCHS_AMT) AS PCHS_AMT		/* 매입금액  */
									, -(D.PCHS_VAT) AS PCHS_VAT		/* 부가세 */
									, D.PCHS_QTY			/* 수량 */	
									, D.PCHS_QTY AS CNT									
									, D.PCHS_DT
									, D.CMPLET_YN AS CMPLET_YN	 		/* 확정여부 */
									, DECODE(D.CMPLET_YN, 'Y', 'Y', 'N') AS USER_CHK_V		/* DETAIL로 변경 */
									, 'R' IS_COST			/* 반품여부 */
									, '반품' IS_DIV			/* 구분 */
									, D.BILL_YN AS BILL_YN  /*계산서 여부*/
									, E.FILE_TRGT_KEY
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
								FROM TB_SM06M01 E		/* 반품 */	
									INNER JOIN (SELECT SUM(RET_DTL_AMT) AS RET_DTL_AMT, MIN(DSGN_NO) AS DSGN_NO, RET_NO, CO_CD FROM TB_SM06D01 GROUP BY RET_NO, CO_CD ) R 
									ON R.CO_CD = E.CO_CD AND R.RET_NO = E.RET_NO	
									LEFT OUTER JOIN TB_SM12D01 D ON(D.CO_CD=E.CO_CD AND D.ORDRG_NO=E.RET_NO AND D.ORDRG_SEQ=1)	/* 매입 DETAIL */		
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT			
								WHERE 1=1		
								  AND EXISTS (SELECT 1 FROM IPGO_BALJU WHERE E.RET_NO = IPGO_BALJU.ORDRG_NO)								
						  ) A		/* 발주+기타비용+반품 내역 */
						  		LEFT OUTER JOIN IPGO_BALJU ON IPGO_BALJU.CO_CD = A.CO_CD AND IPGO_BALJU.ORDRG_NO = A.ORDRG_NO
						  WHERE 1=1	
						<!-- 확정여부 -->
						<if test="cmpletYn != null and !cmpletYn.equals('')">
							AND NVL(A.CMPLET_YN, 'N') = #{cmpletYn}	/* 체크항목 CHKBOX 표시를 안하기 위해서 '' 처리후 USER_CHK_V 로 검색 */
						</if>		
						<!-- 매입구분 -->
						<if test="pchsGb != null and !pchsGb.equals('')">
							<if test='pchsGb == "BAL"'>
							AND A.IS_COST = 'N'
							</if>
							<if test='pchsGb == "COS"'>
							AND A.IS_COST = 'Y'
							</if>			
							<if test='pchsGb == "RET"'>
							AND A.IS_COST = 'R'
							</if>			
						</if>	
						<if test="prjctCdNm != null and !prjctCdNm.equals('')">
							AND UPPER(CLNT_PJT_NM) LIKE '%'|| UPPER(#{prjctCdNm}) || '%'   
						</if>	
				        <if test="clntPjt != null and !clntPjt.equals('')">
				        	AND CLNT_PJT IN ( ${clntPjt} )
				        </if>	
				        <if test="mngIdCd != null and !mngIdCd.equals('')">
				        	AND ORDRG_MNG_ID IN ( ${mngIdCd} )
				        </if>	
						  ORDER BY A.CO_CD, A.PCHS_CLNT_NM, A.ORDRG_NO,  A.PCHS_NO 
						) X		
			)							
			WHERE 1=1
				AND RN BETWEEN ${firstIndex} AND ${lastIndex}	
	</select>	
	
	<!-- 발주 DETAIL SELECT -->
	<select id="selectOrderDetailListNew" parameterType="Map" resultType="camelMap">
		SELECT X.*
			FROM
			(	
			SELECT D.CO_CD
				, D.ORDRG_NO
				, D.ORDRG_SEQ
				, D.SALES_CD
				, D.MATR_SEQ
				, D.UPPER_CD
				, D.LOWER_CD
				, D.DSGN_NO
				, D.MATR_CD
				, ( SELECT FN_CM05M01_CD_TO_NM(D.MATR_TEST_DIV) FROM DUAL ) MATR_TEST_DIV    
				, ORDRG_PRC			/* 발주단가 */
				, ORDRG_QTY			/* 발주수량 */
				, ORDRG_AMT			/* 발주금액  */
				, G.IN_DTL_AMT      /* 입고금액  */
				, G.IN_QTY          /* 입고수량  */
				, TO_CHAR(D.DUDT_DEQ_DT, 'YYYY-MM-DD') DUDT_DEQ_DT
				, TO_CHAR(D.DUDT_INTEND_DT, 'YYYY-MM-DD') DUDT_INTEND_DT
				, ORDRG_DTL_RMK
				, D.CREAT_ID
				, D.CREAT_PGM
				, D.CREAT_DTTM
				, D.UDT_ID
				, D.UDT_PGM
				, D.UDT_DTTM
				, D.IN_CMPLET_YN
		        , D.WH_CD AS MATR_WH_CD		/* 입고창고  */
		        , ( SELECT FN_CM05M01_CD_TO_NM(D.WH_CD) FROM DUAL ) AS MATR_WH_NM		/* 입고창고  */
		        , 
		        (
		        	SELECT NVL(SUM(ORDRG_QTY), 0) 
		        		FROM TB_SM02D01 CC
		        	WHERE 1=1 /* D.CO_CD = CC.CO_CD */ 
		        		AND D.ORDRG_NO != CC.ORDRG_NO
		        		AND D.SALES_CD = CC.SALES_CD 
		        		AND D.LOWER_CD = CC.LOWER_CD
		        		AND D.MATR_CD = CC.MATR_CD
		        ) AS PRE_BOM_QTY			/* 구매 BOM 기발주 수량 임시 */      
		        ,
		        (
		        	SELECT CC.BOM_QTY			/* 구매 BOM 수량 */
		        		FROM TB_SM01D01 CC 						        		
					WHERE 1=1
		        		AND D.SALES_CD = CC.SALES_CD AND D.MATR_SEQ = CC.MATR_SEQ
	        			AND D.UPPER_CD=CC.UPPER_CD  AND D.LOWER_CD=CC.LOWER_CD       		
		        ) BOM_QTY /* 구매 BOM 수량 */
		        , 'Y' AS USER_CHK_V		/* 수정시 CHK값 SET */
		        , E.MATR_NM		/* 자재명 */
		        , D.MATR_MAT		/* 소재 */
		        , D.MATR_MAKR_NM
		        , D.MATR_MNO
		        , D.MATR_SPEC
		        , D.MATR_SIZE
				, D.ORDRG_DIV10					/* 발주구분 */
				, ( SELECT FN_CM05M01_CD_TO_NM(D.ORDRG_DIV10) FROM DUAL ) AS ORDRG_DIV10_NM	/* 발주구분명 */			
				, D.ORDRG_DIV20					/* 용도구분 */
				, ( SELECT FN_CM05M01_CD_TO_NM(D.ORDRG_DIV20) FROM DUAL ) AS ORDRG_DIV20_NM	/* 용도구분명 */ 			
				/* , (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = E.PCHS_CLNT_CD) AS BOM_PCHS_CLNT_NM */		/* 협력사 */
				, E.PCHS_CLNT_NM AS BOM_PCHS_CLNT_NM					/* 거래처명 */
				, E.MNG_NM /* 담당자명 */
				, F.PCHS_CLNT_CD1
				, (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = F.PCHS_CLNT_CD1) AS PCHS_CLNT_NM1		/* 구매처1 */
				, F.PCHS_CLNT_PCT1
				, F.PCHS_CLNT_CD2
				, (SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = F.PCHS_CLNT_CD2) AS PCHS_CLNT_NM2		/* 구매처2 */
				, F.PCHS_CLNT_PCT2
				, F.PCHS_CLNT_CD3
				,(SELECT CLNT_NM FROM TB_BM02M01 WHERE CLNT_CD = F.PCHS_CLNT_CD3) AS PCHS_CLNT_NM3		/* 구매처2 */		
				, D.NEXT_PRCSN_NM					/* 후행업체 */	         
				, TO_CHAR(G.IN_DT, 'YYYY-MM-DD') IN_DT
			FROM TB_SM02D01 D			/* 발주디테일 */
			LEFT OUTER JOIN TB_SM01D01 E ON(/* D.CO_CD=E.CO_CD AND */ D.SALES_CD=E.SALES_CD 
											AND D.UPPER_CD=E.UPPER_CD 
											AND D.LOWER_CD=E.LOWER_CD
											AND D.MATR_SEQ=E.MATR_SEQ 
											AND D.MATR_CD=E.MATR_CD)		/*구매 BOM */
			LEFT OUTER JOIN TB_BM05M01 F ON ( E.MATR_CD = F.MATR_CD )	/* 자재마스터 */
			--입고처리 내역 합계
			LEFT OUTER JOIN (
							 SELECT CO_CD, ORDRG_NO, ORDRG_SEQ, SALES_CD, MATR_CD, SUM(IN_DTL_AMT) IN_DTL_AMT, SUM(IN_QTY) IN_QTY, MAX(IN_DT) IN_DT
			                   FROM TB_SM03D01 
			                  GROUP BY CO_CD, ORDRG_NO, ORDRG_SEQ, SALES_CD, MATR_CD
							) G ON  G.CO_CD = D.CO_CD 
							   AND G.ORDRG_NO = D.ORDRG_NO 
							   AND G.ORDRG_SEQ = D.ORDRG_SEQ 
							   AND G.SALES_CD = D.SALES_CD 
							   AND G.MATR_CD = D.MATR_CD
			WHERE 1=1
			<if test="coCd != null and !coCd.equals('')">
				AND D.CO_CD = #{coCd}   
			</if>		
			<if test="ordrgNo != null and !ordrgNo.equals('')">
				AND D.ORDRG_NO = #{ordrgNo}   
			</if>			
			<if test="salesCd != null and !salesCd.equals('')">
				AND D.SALES_CD = #{salesCd}   
			</if>
			) X
			ORDER BY SALES_CD, DSGN_NO, MATR_CD
	</select>
	
	<!--매입 DETAIL SELECT -->
	<select id="selectPchsDetailListNew" parameterType="Map" resultType="camelMap">
		SELECT D.CO_CD
		    ,  D.PCHS_NO
		    , D.PCHS_SEQ
		    , D.ORDRG_NO
		    , D.ORDRG_SEQ
		    , D.PCHS_AMT
		    , D.PCHS_VAT
		    , TO_CHAR(D.PCHS_DT, 'YYYY-MM-DD') PCHS_DT
		    , D.CREAT_ID
		    , TO_CHAR(D.CREAT_DTTM, 'YYYY-MM-DD') CREAT_DTTM
		    , A.SALES_CD 
		    , C.NAME AS CREAT_NM            	
		FROM TB_SM12D01 D			/* 매입디테일 */
		LEFT OUTER JOIN TB_SM02M01 A ON A.ORDRG_NO = D.ORDRG_NO
		LEFT OUTER JOIN TB_CM06M01 C ON C.EMP_NO = D.CREAT_ID
		WHERE 1=1
		  AND D.CO_CD = #{coCd}   
		  AND D.ORDRG_NO = #{ordrgNo}
		ORDER BY D.PCHS_SEQ ASC 					
	</select>

	<!-- 매입확정관리 detail 등록   -->
	<insert id="insertPurchaseBillDetailNew" parameterType="Map">       
		<selectKey keyProperty="pchsSeq" resultType="String" order="BEFORE">
			SELECT NVL(MAX(PCHS_SEQ)+1, 1) FROM TB_SM12D01 
				WHERE CO_CD = #{coCd}
				  AND ORDRG_NO = #{ordrgNo}			
				  AND PCHS_NO = #{maxPchsNo}
		</selectKey>
		INSERT INTO TB_SM12D01
		  (
			CO_CD
			, PCHS_NO
			, PCHS_SEQ
			, ORDRG_NO
			, ORDRG_SEQ
			, PCHS_AMT
			, PCHS_VAT
			, PCHS_QTY
			, PCHS_DT
			, CMPLET_YN 
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
		  )
		VALUES
		  (
			 #{coCd}
			, #{maxPchsNo}
			, #{pchsSeq}
			, #{ordrgNo}
			, #{pchsSeq}
			, #{pchsAmt}
			, #{pchsVat}
			, #{pchsQty}
			, #{pchsDt}
			, #{cmpletYn}	 
			, #{userId}
			, #{pgmId}
			, SYSDATE
	      )
	</insert>	
	
	<!-- 매입번호 max -->	
	<select id="selectMaxPchsNoNew" parameterType="Map" resultType="String">
		SELECT NVL(MAX_PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00001') AS MAX_IN_NO
			FROM
			(
			SELECT DISTINCT DECODE( INSTR(PCHS_NO, 'PC'||TO_CHAR(SYSDATE, 'YY')), 0, 'PC'||TO_CHAR(SYSDATE, 'YY')||'00001'
							, 'PC' || MAX( TO_CHAR(SYSDATE, 'YY')|| LPAD( SUBSTRING(PCHS_NO, -5)+1, 5, '0') ) OVER()
						  ) AS MAX_PCHS_NO
				FROM TB_SM12D01
			WHERE 1=1
			  AND PCHS_NO LIKE 'PC'||TO_CHAR(SYSDATE, 'YY')||'%'
			  AND CO_CD = #{coCd}   
			UNION ALL
			SELECT NULL AS MAX_PCHS_NO
				FROM DUAL		
			)		
			WHERE MAX_PCHS_NO IS NOT NULL OR ROWNUM = 1	
	</select>
	
	<!-- 매입확정관리 마스터  -->
	<insert id="insertPurchaseMaster" parameterType="Map">				
		INSERT INTO TB_SM12M01
	      (
			 CO_CD
			 , PCHS_NO
			 , CMPLET_YN
			 , CREAT_ID
			 , CREAT_PGM
			 , CREAT_DTTM
	      )
	    VALUES
	    (
			#{coCd}
			, #{maxPchsNo}
			, 'Y'
			, #{userId}
			, #{pgmId}
			, SYSDATE
	    )
	</insert>	
	
	<select id="selectPurchaseDetailCount" parameterType="Map" resultType="String">
		SELECT COUNT(*) AS CNT
		     FROM TB_SM12D01
			WHERE 1=1
			  AND CO_CD = #{coCd}   
			  AND ORDRG_NO = #{ordrgNo}   
	</select>

	<select id="select_prjct_code" parameterType="Map" resultType="camelMap">
	   /* select_prjct_code  */
			SELECT DISTINCT 
	        		  CLNT_PJT           AS CODE      --고객사PJT 
					, CLNT_PJT_NM        AS NAME
				FROM(
							SELECT DISTINCT 
									 A.CO_CD
									, A.ORDRG_DT											 AS ORDRG_DT       --발주일자		
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, A.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(A.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
								FROM TB_SM02M01 A --발주마스터
				                INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
								LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = A.SALES_CD
								LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
								LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT
							UNION ALL		       
								SELECT  DISTINCT 
									 E.CO_CD
									, E.COST_DT AS ORDRG_DT			
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM10M01 E		/* 구매비용 */		
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT						
								WHERE 1=1				
							UNION ALL
								SELECT  DISTINCT 
									 E.CO_CD
									, E.RET_DT AS ORDRG_DT	
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM06M01 E		/* 반품 */	
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT			
								WHERE 1=1										
						  ) A		/* 발주+기타비용+반품 내역 */
						  WHERE 1=1	
						<!-- 회사코드 -->         
						<if test="coCd != null and !coCd.equals('')">
							AND A.CO_CD = #{coCd}   
						</if>
						<!-- 확정일자 -->         
						<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
							<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
				            	AND A.ORDRG_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
							</if>   
						</if>	
						ORDER BY CLNT_PJT_NM
						
	</select>		

	
	<select id="select_mngId_code" parameterType="Map" resultType="camelMap">
			SELECT DISTINCT 
	        		  ORDRG_MNG_ID          AS CODE      --고객사PJT 
					, ORDRG_MNG_NM        	AS NAME
				FROM(
							SELECT DISTINCT 
									 A.CO_CD
									, A.ORDRG_DT											 AS ORDRG_DT       --발주일자		
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, A.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(A.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
								FROM TB_SM02M01 A --발주마스터
				                INNER 	 JOIN TB_SM02D01 B ON(A.ORDRG_NO=B.ORDRG_NO)		/* 발주디테일 */
								LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = A.SALES_CD
								LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
								LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT
							UNION ALL		       
								SELECT  DISTINCT 
									 E.CO_CD
									, E.COST_DT AS ORDRG_DT			
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM10M01 E		/* 구매비용 */		
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT						
								WHERE 1=1				
							UNION ALL
								SELECT  DISTINCT 
									 E.CO_CD
									, E.RET_DT AS ORDRG_DT	
									, SJM.CLNT_PJT
									, CMM.CODE_NM  AS CLNT_PJT_NM
									, E.CREAT_ID 											AS ORDRG_MNG_ID
									, (SELECT FN_CM06M01_ID_TO_NM(E.CREAT_ID) FROM DUAL) 	AS ORDRG_MNG_NM   /*생성자명 */	
									FROM TB_SM06M01 E		/* 반품 */	
									LEFT OUTER JOIN TB_CR02D02  SJD  ON SJD.SALES_CD  = E.SALES_CD
									LEFT OUTER JOIN TB_CR02M01  SJM  ON SJM.ORDRS_NO  = SJD.ORDRS_NO
									LEFT OUTER JOIN TB_CM05M01  CMM  ON CMM.CODE_ID  = SJM.CLNT_PJT			
								WHERE 1=1										
						  ) A		/* 발주+기타비용+반품 내역 */
						  WHERE 1=1	
						<!-- 회사코드 -->         
						<if test="coCd != null and !coCd.equals('')">
							AND A.CO_CD = #{coCd}   
						</if>
						<!-- 확정일자 -->         
						<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
							<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
				            	AND A.ORDRG_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
							</if>   
						</if>  
						ORDER BY ORDRG_MNG_NM

    </select>	
    
	<!-- 매입확정 대상리스트  구매비용 포함-->
	<select id="selectClntPurchaseInboundList" parameterType="Map" resultType="camelMap">   
			--입고내역-발주분          			
			WITH IPGO AS 
			(
				SELECT  
						  CO_CD
						, PCHS_CLNT_CD
						, PCHS_CLNT_NM
				 	    , SUM(IN_QTY) 		AS IN_QTY
				 	    , SUM(BAD_QTY) 		AS BAD_QTY
				 	    , SUM(IN_DTL_AMT) 	AS IN_DTL_AMT
				 	    , max(IN_DT) 		AS IN_DT
				 	    , MAX(STS) 			AS STS
				  FROM (
							SELECT 
								  IPGO.CO_CD
								, M.PCHS_CLNT_CD
								, C.CLNT_NM 			AS PCHS_CLNT_NM
						 	    , SUM(IPGO.IN_QTY) 		AS IN_QTY
						 	    , SUM(IPGO.BAD_QTY) 	AS BAD_QTY
						 	    , SUM(IPGO.IN_DTL_AMT) 	AS IN_DTL_AMT
						 	    , max(IPGO.IN_DT) 		AS IN_DT
				 	    		, '입고' 					AS STS
							FROM TB_SM03D01 IPGO
									LEFT OUTER JOIN TB_SM02M01 M ON(IPGO.ORDRG_NO = M.ORDRG_NO)		/* 발주마스터 */
									LEFT OUTER JOIN TB_BM02M01 AS C ON M.PCHS_CLNT_CD = C.CLNT_CD   --거래처마스터
							WHERE 1 = 1
						<!-- 회사코드 -->         
						<if test="coCd != null and !coCd.equals('')">
							 AND IPGO.CO_CD = #{coCd}   
						</if>
						<!-- 확정일자 -->         
						<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
							<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
				              AND IPGO.IN_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
							</if>   
						</if>
						<!-- 구매처 -->         
						<if test="pchsClntCd != null and !pchsClntCd.equals('')">
							AND M.PCHS_CLNT_CD = #{pchsClntCd}   
						</if>       
						<if test="pchsClntNm != null and !pchsClntNm.equals('')">
							AND C.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
						</if>
				
						<if test="salesCd != null and !salesCd.equals('')">
							AND IPGO.SALES_CD LIKE '%'|| #{salesCd} || '%'   
						</if>		
							GROUP BY IPGO.CO_CD, M.PCHS_CLNT_CD, C.CLNT_NM	
						UNION ALL --구매비용집계현황
							SELECT
							      E.CO_CD
								, E.PCHS_CLNT_CD
								, C.CLNT_NM 			AS PCHS_CLNT_NM
						 	    , '' AS IN_QTY
						 	    , '' AS BAD_QTY
						 	    , SUM(E.COST_AMT) 		AS COST_AMT
						 	    , max(E.COST_DT) 		AS COST_DT
				 	    		, '비용' 					AS STS
							FROM TB_SM10M01 E		/* 구매비용 */	
									LEFT OUTER JOIN TB_BM02M01 AS C ON E.PCHS_CLNT_CD = C.CLNT_CD   --거래처마스터		
							WHERE 1 = 1
						<!-- 회사코드 -->         
						<if test="coCd != null and !coCd.equals('')">
							 AND E.CO_CD = #{coCd}   
						</if>
						<!-- 확정일자 -->         
						<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
							<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
				              AND E.COST_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
							</if>   
						</if>
						<!-- 구매처 -->         
						<if test="pchsClntCd != null and !pchsClntCd.equals('')">
							AND E.PCHS_CLNT_CD = #{pchsClntCd}   
						</if>       
						<if test="pchsClntNm != null and !pchsClntNm.equals('')">
							AND C.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
						</if>
				
						<if test="salesCd != null and !salesCd.equals('')">
							AND E.SALES_CD LIKE '%'|| #{salesCd} || '%'   
						</if>		
							GROUP BY E.CO_CD, E.PCHS_CLNT_CD, C.CLNT_NM		
						UNION ALL	
							SELECT 
								  E.CO_CD
								, E.PCHS_CLNT_CD
								, C.CLNT_NM 			AS PCHS_CLNT_NM
						 	    , SUM(R.RET_QTY) 		AS RET_QTY
						 	    , 0 					AS BAD_QTY
						 	    , SUM(R.RET_DTL_AMT) 	AS RET_DTL_AMT
						 	    , MAX(E.RET_DT) 		AS RET_DT
				 	    		, '반품' 					AS STS
							FROM TB_SM06M01 E		/* 반품 */	
									LEFT OUTER JOIN TB_SM06D01 R ON R.CO_CD = E.CO_CD AND R.RET_NO = E.RET_NO	
									LEFT OUTER JOIN TB_BM02M01 AS C ON E.PCHS_CLNT_CD = C.CLNT_CD   --거래처마스터		
							WHERE 1 = 1
						<!-- 회사코드 -->         
						<if test="coCd != null and !coCd.equals('')">
							 AND E.CO_CD = #{coCd}   
						</if>
						<!-- 확정일자 -->         
						<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
							<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
				              AND E.RET_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
							</if>   
						</if>
						<!-- 구매처 -->         
						<if test="pchsClntCd != null and !pchsClntCd.equals('')">
							AND E.PCHS_CLNT_CD = #{pchsClntCd}   
						</if>       
						<if test="pchsClntNm != null and !pchsClntNm.equals('')">
							AND C.CLNT_NM LIKE '%'||#{pchsClntNm}||'%'   
						</if>
				
						<if test="salesCd != null and !salesCd.equals('')">
							AND E.SALES_CD LIKE '%'|| #{salesCd} || '%'   
						</if>
							GROUP BY E.CO_CD, E.PCHS_CLNT_CD, C.CLNT_NM
						) AS T	
				GROUP BY CO_CD, PCHS_CLNT_CD, PCHS_CLNT_NM
			)
			 /* 발주내역 */
			, PUR AS 
			(
				SELECT   A.CO_CD
				         , A.PCHS_CLNT_CD
				         , SUM(D.ORDRG_QTY) 		AS ORDRG_QTY
				         , SUM(D.ORDRG_AMT)  		AS ORDRG_AMT
				         , MAX(D.DUDT_DEQ_DT) 		AS DUDT_DEQ_DT
				         , MAX(D.DUDT_INTEND_DT) 	AS DUDT_INTEND_DT
				--       , MAX(A.DSGN_NO) 			AS DSGN_NO
				--       , SUM(IN_PRC) 				AS IN_PRC
				--       , SUM(IN_QTY) 				AS IN_QTY
				--       , SUM(BAD_QTY) 			AS BAD_QTY
				--       , SUM(IN_DTL_AMT) 			AS IN_DTL_AMT
				--       , A.*
				FROM TB_SM02M01 A 
							LEFT OUTER JOIN TB_SM02D01 D ON(A.ORDRG_NO = D.ORDRG_NO)		/* 발주상세 */
					WHERE 1=1
					  AND EXISTS (SELECT 1 FROM IPGO WHERE IPGO.PCHS_CLNT_CD = A.PCHS_CLNT_CD)
				 GROUP BY A.CO_CD, A.PCHS_CLNT_CD
			)
			--매입확정내역
			, COMP AS 
			(
				SELECT    D.CO_CD
				        , D.PCHS_CLNT_CD
						, SUM(D.PCHS_AMT) 		AS PCHS_AMT
						, SUM(D.PCHS_VAT) 		AS PCHS_VAT
						, SUM(D.PCHS_QTY) 		AS PCHS_QTY
						, COUNT(D.PCHS_NO) 		AS PCHS_CNT --확정횟수
						, MAX(D.PCHS_DT) 		AS PCHS_DT --최종매입확정일자
				 FROM (		
						SELECT 
								  D.CO_CD
								, D.PCHS_AMT
								, D.PCHS_VAT
								, D.PCHS_QTY
								, D.PCHS_NO
								, D.PCHS_DT
								, CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.PCHS_CLNT_CD 
									   WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN RM.PCHS_CLNT_CD ELSE C.PCHS_CLNT_CD END PCHS_CLNT_CD
								, CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD 
									   WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN R.SALES_CD  ELSE C.SALES_CD END AS SALES_CD
								, CASE WHEN substr(D.ORDRG_NO,0,3) = 'BAL' THEN M.SALES_CD 
									   WHEN substr(D.ORDRG_NO,0,3) = 'RET' THEN R.DSGN_NO  ELSE C.SALES_CD END AS DSGN_NO					
						FROM TB_SM12D01 D /* 매입 DETAIL */		
								LEFT OUTER JOIN TB_SM02M01 M ON(D.ORDRG_NO = M.ORDRG_NO)		/* 발주마스터 */
								LEFT OUTER JOIN TB_SM10M01 C ON(D.ORDRG_NO = C.COST_NO)		/* 비용마스터 */
								LEFT OUTER JOIN TB_SM06D01 R ON(D.ORDRG_NO = R.RET_NO)		/* 반품 상세 */
								LEFT OUTER JOIN TB_SM06M01 RM ON(RM.CO_CD = R.CO_CD AND RM.RET_NO = R.RET_NO)		/* 반품 상세 */
						WHERE 1=1
					<!-- 확정일자 -->         
					<if test="ordrgDtFrom != null and !ordrgDtFrom.equals('')">
						<if test="ordrgDtTo != null and !ordrgDtTo.equals('')">
			              AND D.PCHS_DT BETWEEN #{ordrgDtFrom} AND #{ordrgDtTo}
						</if>   
					</if>
					 ) D
				WHERE 1=1
				AND EXISTS (SELECT 1 FROM IPGO WHERE IPGO.PCHS_CLNT_CD = D.PCHS_CLNT_CD)
				GROUP BY D.CO_CD, D.PCHS_CLNT_CD
			 )
			 SELECT 
				 	  IPGO.CO_CD
				 	, IPGO.PCHS_CLNT_CD
				 	, IPGO.PCHS_CLNT_NM
				 	, SUM(PUR.ORDRG_QTY)  		AS ORDRG_QTY
				 	, SUM(PUR.ORDRG_AMT)  		AS ORDRG_AMT
				 	, TO_CHAR(MAX(PUR.DUDT_DEQ_DT) , 'YYYY-MM-DD')		AS DUDT_DEQ_DT
				 	, TO_CHAR(MAX(PUR.DUDT_INTEND_DT), 'YYYY-MM-DD') 	AS DUDT_INTEND_DT
				 	, SUM(IPGO.IN_QTY) 			AS IN_QTY
				 	, SUM(IPGO.BAD_QTY) 		AS BAD_QTY
				 	, SUM(IPGO.IN_DTL_AMT) 		AS IN_DTL_AMT
				 	, TO_CHAR(MAX(IPGO.IN_DT) , 'YYYY-MM-DD') 			AS IN_DT
				 	, SUM(COMP.PCHS_AMT) 		AS PCHS_AMT
				 	, SUM(COMP.PCHS_VAT) 		AS PCHS_VAT
				 	, SUM(COMP.PCHS_AMT) + SUM(COMP.PCHS_VAT) 		AS PCHS_TOT
				 	, SUM(COMP.PCHS_QTY) 		AS PCHS_QTY
				 	, MAX(COMP.PCHS_CNT)		AS PCHS_CNT
				 	, TO_CHAR(MAX(COMP.PCHS_DT), 'YYYY-MM-DD') 		AS PCHS_DT
				 	, NVL(SUM(IPGO.IN_DTL_AMT),0) - NVL(SUM(COMP.PCHS_AMT),0) 	AS PCHS_AMT_REM	--미확정금액
				 	, NVL(SUM(IPGO.IN_QTY),0) - NVL(SUM(COMP.PCHS_QTY),0) 		AS PCHS_QTY_REM	--미확정수량 (계산안됨 확정시 수량없음)
				 	, MAX(IPGO.STS)				AS STS
				-- 	IPGO.*
			 FROM IPGO 
			  			LEFT OUTER JOIN PUR ON IPGO.CO_CD = PUR.CO_CD AND IPGO.PCHS_CLNT_CD = PUR.PCHS_CLNT_CD
			 			LEFT OUTER JOIN COMP ON IPGO.CO_CD = COMP.CO_CD AND IPGO.PCHS_CLNT_CD = COMP.PCHS_CLNT_CD
			GROUP BY IPGO.CO_CD, IPGO.PCHS_CLNT_NM, IPGO.PCHS_CLNT_CD
    </select>	 
 </mapper>