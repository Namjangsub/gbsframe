<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.sm.sm15.mapper.SM15Mapper">
	
	
	<!-- 발주-입고 내역 DETAIL SELECT -->
	<select id="selectSM15MainList" parameterType="Map" resultType="camelMap">--입고내역-발주분
		WITH IPGO AS 
			(
			SELECT  
					  CO_CD
					, SALES_CD
					, REQ_NO
			 	    , SUM(IN_QTY) 		AS IN_QTY
			 	    , SUM(BAD_QTY) 		AS BAD_QTY
			 	    , SUM(IN_DTL_AMT) 	AS IN_DTL_AMT
					, TO_CHAR(MIN(IN_DT), 'YYYY-MM-DD') MIN_IN_DT
					, TO_CHAR(max(IN_DT), 'YYYY-MM-DD') IN_DT
			 	    , MAX(STS) 			AS STS
			 	    , SUM(ELEC_AMT) 	AS ELEC_AMT
			 	    , SUM(TRUN_AMT) 	AS TRUN_AMT
			  FROM (
						SELECT 
							  IPGO.CO_CD
							, M.REQ_NO
							, IPGO.SALES_CD
							, IPGO.ORDRG_NO
					 	    , SUM(IPGO.IN_QTY) 		AS IN_QTY
					 	    , SUM(IPGO.BAD_QTY) 	AS BAD_QTY
					 	    , SUM(IPGO.IN_DTL_AMT) 	AS IN_DTL_AMT
					 	    , MIN(IPGO.IN_DT) 		AS MIN_IN_DT
					 	    , max(IPGO.IN_DT) 		AS IN_DT
			 	    		, '입고' 					AS STS
			 	    		, SUM(decode(J.GOODS_DIV,'GOODSDIV03', IPGO.IN_DTL_AMT,0))  AS ELEC_AMT
			 	    		, SUM(decode(J.GOODS_DIV,'GOODSDIV07', IPGO.IN_DTL_AMT,0))  AS TRUN_AMT
						FROM TB_SM03D01 IPGO
								LEFT OUTER JOIN TB_SM02M01 M ON(IPGO.ORDRG_NO = M.ORDRG_NO)		/* 발주마스터 */
								LEFT OUTER JOIN TB_BM02M01 D ON M.PCHS_CLNT_CD = D.CLNT_CD
								LEFT OUTER JOIN TB_BM05M01 J ON IPGO.MATR_CD = J.MATR_CD		/* 자재마스터 */
						WHERE 1 = 1
					<!-- 회사코드 -->         
					<if test="coCd != null and !coCd.equals('')">
						AND IPGO.CO_CD = #{coCd}   
					</if>
					<if test="salesCd != null and !salesCd.equals('')">
						AND IPGO.SALES_CD LIKE '%'|| #{salesCd} || '%'   
					</if>
						GROUP BY IPGO.CO_CD, IPGO.SALES_CD, M.REQ_NO, IPGO.ORDRG_NO
					UNION ALL --구매비용집계현황
						SELECT
						      E.CO_CD
						    , 'REQ9999999'
						    , NVL(SALES_CD,'99999-9900000')
							, COST_NO
					 	    , 0 AS IN_QTY
					 	    , 0 AS BAD_QTY
					 	    , SUM(E.COST_AMT) 		AS COST_AMT
					 	    , MIN(E.COST_DT) 		AS MIN_COST_DT
					 	    , max(E.COST_DT) 		AS COST_DT
			 	    		, '비용' 					AS STS
			 	    		, SUM(decode(E.PCHS_COST_DIV10,'PCHSCOSTDIV1050', E.COST_AMT,0))  AS ELEC_AMT	--전기비용
			 	    		, SUM(decode(E.PCHS_COST_DIV10,'PCHSCOSTDIV1030', E.COST_AMT,0))  AS TRUN_AMT	--턴키비용
						FROM TB_SM10M01 E		/* 구매비용 */	
								LEFT OUTER JOIN TB_BM02M01 D ON E.PCHS_CLNT_CD = D.CLNT_CD
						WHERE 1 = 1
					<!-- 회사코드 -->         
					<if test="coCd != null and !coCd.equals('')">
						AND E.CO_CD = #{coCd}   
					</if>
					<if test="salesCd != null and !salesCd.equals('')">
						AND E.SALES_CD LIKE '%'|| #{salesCd} || '%'   
					</if>
						GROUP BY E.CO_CD, SALES_CD, COST_NO	
					UNION ALL	
						SELECT 
							  E.CO_CD
							, E.RET_NO
							, E.SALES_CD
							, E.RET_NO
					 	    , SUM(R.RET_QTY) 		AS RET_QTY
					 	    , 0 					AS BAD_QTY
					 	    , SUM(R.RET_DTL_AMT) 	AS RET_DTL_AMT
					 	    , MIN(E.RET_DT) 		AS MIN_RET_DT
					 	    , MAX(E.RET_DT) 		AS RET_DT
			 	    		, '반품' 					AS STS
			 	    		, SUM(decode(J.GOODS_DIV,'GOODSDIV03', R.RET_DTL_AMT,0))  AS ELEC_AMT
			 	    		, SUM(decode(J.GOODS_DIV,'GOODSDIV07', R.RET_DTL_AMT,0))  AS TRUN_AMT
						FROM TB_SM06M01 E		/* 반품 */	
								LEFT OUTER JOIN TB_SM06D01 R ON R.CO_CD = E.CO_CD AND R.RET_NO = E.RET_NO	
								LEFT OUTER JOIN TB_BM02M01 D ON E.PCHS_CLNT_CD = D.CLNT_CD
								LEFT OUTER JOIN TB_BM05M01 J ON R.MATR_CD = J.MATR_CD		/* 자재마스터 */
						WHERE 1 = 1
					<if test="coCd != null and !coCd.equals('')">
						AND E.CO_CD = #{coCd}   
					</if>
					<if test="salesCd != null and !salesCd.equals('')">
						AND E.SALES_CD LIKE '%'|| #{salesCd} || '%'   
					</if>
						GROUP BY E.CO_CD, E.SALES_CD, E.RET_NO
					) AS T	
			GROUP BY CO_CD, SALES_CD, REQ_NO
		)
		SELECT 
				  IPGO.*
				, Q.*
				, (SELECT FN_CM05M01_CD_TO_NM(Q.PART_CD) FROM DUAL ) AS PART_CD_NM	/* 발주분류명 */	
				, (SELECT FN_CM05M01_CD_TO_NM(Q.REQ_CD) FROM DUAL ) AS REQ_CD_NM	/* 발주요청구분명 */	
				, (SELECT FN_CM06M01_ID_TO_NM(Q.ORDRG_ID) FROM DUAL ) AS ORDRG_ID_NM	/* 발주발행자명 */	
				, decode(Q.PART_CD,'COBTP03',0,'COBTP04',0,'COBTP05',0,IPGO.IN_DTL_AMT)  	AS STD_AMT	--정상금액
				, decode(Q.PART_CD,'COBTP03',IPGO.IN_DTL_AMT,0)  							AS BAD_AMT --장애금액
				, decode(Q.PART_CD,'COBTP04',IPGO.IN_DTL_AMT,'COBTP05',IPGO.IN_DTL_AMT,0)  	AS AS_AMT --AS유무상금액
		FROM IPGO
				LEFT OUTER JOIN TB_QM01M01 Q ON IPGO.REQ_NO = Q.REQ_NO
		ORDER BY IPGO.SALES_CD, IPGO.REQ_NO
		 
	</select>
	
	<!-- 매입확정 리스트  구매비용 포함-->
	<select id="sm15selectPurchaseListNew" parameterType="Map" resultType="camelMap">
			  SELECT  
					  IPGO.CO_CD
					, IPGO.IN_NO
					, IPGO.IN_SEQ
					, IPGO.ORDRG_NO
					, IPGO.ORDRG_SEQ
					, IPGO.REQ_NO
					, IPGO.SALES_CD
					, IPGO.MATR_CD
					, IPGO.MATR_TEST_DIV
					, IPGO.IN_PRC
					, IPGO.IN_QTY
					, IPGO.BAD_QTY
					, IPGO.IN_DTL_AMT
					, IPGO.CURR_CD
					, IPGO.EXRATE
					, IPGO.IN_DTL_RMK
					, TO_CHAR(IPGO.INOUT_KEY)	AS INOUT_KEY
					, IPGO.CREAT_ID
					, IPGO.CREAT_PGM
 			        , TO_CHAR(IPGO.CREAT_DTTM, 'YYYY-MM-DD')	AS CREAT_DTTM
					, IPGO.IO_DIV
 			        , TO_CHAR(IPGO.IN_DT, 'YYYY-MM-DD')	AS IN_DT
 			        , C.CLNT_NM
 			        , D.DSGN_NO
					, J.MATR_NM
 			        , J.MATR_MAT
 			        , J.MATR_SIZE
 			        , J.MATR_SPEC	
 			        , Q.PART_CD
 			        , (SELECT FN_CM05M01_CD_TO_NM(Q.PART_CD) FROM DUAL ) AS PART_CD_NM		/* 발주분류명 */	
 			        , J.GOODS_DIV
 			        , (SELECT FN_CM05M01_CD_TO_NM(J.GOODS_DIV) FROM DUAL ) AS GOODS_DIV_NM	/* 자재품목구분명 */
			FROM TB_SM03D01 IPGO
					LEFT OUTER JOIN TB_SM02M01 M    ON(IPGO.ORDRG_NO = M.ORDRG_NO)		/* 발주마스터 */
					LEFT OUTER JOIN TB_SM02D01 D    ON(IPGO.ORDRG_NO = D.ORDRG_NO AND IPGO.ORDRG_SEQ = D.ORDRG_SEQ)		/* 발주상세 */
					LEFT OUTER JOIN TB_BM02M01 AS C ON M.PCHS_CLNT_CD = C.CLNT_CD   --거래처마스터
					LEFT OUTER JOIN TB_BM05M01 AS J ON IPGO.MATR_CD = J.MATR_CD   --자재마스터
					LEFT OUTER JOIN TB_QM01M01 Q    ON IPGO.REQ_NO = Q.REQ_NO
			WHERE 1 = 1
			<!-- 회사코드 -->         
			<if test="coCd != null and !coCd.equals('')">
				AND IPGO.CO_CD = #{coCd}   
			</if>     
			<choose>
				<when test = "salesCd.equals('99999-9900000')">
				AND IPGO.SALES_CD IS NULL   
				</when>
				<otherwise>
				AND IPGO.SALES_CD LIKE '%'|| #{salesCd} || '%'   
				</otherwise>
			</choose>
			<choose>
				<when test = "reqNo.equals('REQ9999999')">
				AND IPGO.REQ_NO IS NULL   
				</when>
				<otherwise>
				AND IPGO.REQ_NO LIKE '%'|| #{reqNo} || '%' 
				</otherwise>
			</choose>
		UNION ALL --구매비용집계현황
			SELECT
					  E.CO_CD
					, E.COST_NO
					, 0
					, E.ORDRS_NO
					, 0
					, E.REQ_NO
					, E.SALES_CD
					, ''
					, ''
					, E.COST_AMT	AS IN_PRC
					, 1				AS IN_QTY
					, 0
					, E.COST_AMT	AS IN_DTL_AMT
					, E.CURR_CD
					, E.EXRATE
					, E.COST_RMK
					, E.FILE_TRGT_KEY
					, E.CREAT_ID
					, E.CREAT_PGM
					, TO_CHAR(E.CREAT_DTTM, 'YYYY-MM-DD')	AS CREAT_DTTM
					, '' 			AS IO_DIV
					, TO_CHAR(E.COST_DT, 'YYYY-MM-DD')	AS IN_DT
 			        , C.CLNT_NM
 			        , '' 			AS DSGN_NO
					, '비용처리건' 		AS MATR_NM
 			        , ''			AS MATR_MAT
 			        , ''			AS MATR_SIZE
 			        , ''			AS MATR_SPEC	
 			        , Q.PART_CD
 			        , (SELECT FN_CM05M01_CD_TO_NM(Q.PART_CD) FROM DUAL ) AS PART_CD_NM		/* 발주분류명 */	
 			        , E.PCHS_COST_DIV10
 			        , (SELECT FN_CM05M01_CD_TO_NM(E.PCHS_COST_DIV10) FROM DUAL ) AS GOODS_DIV_NM	/* 자재품목구분명 */
			FROM TB_SM10M01 E		/* 구매비용 */	
					LEFT OUTER JOIN TB_BM02M01 C    ON E.PCHS_CLNT_CD = C.CLNT_CD
					LEFT OUTER JOIN TB_QM01M01 Q    ON E.REQ_NO = Q.REQ_NO
			WHERE 1 = 1	
			<!-- 회사코드 -->         
			<if test="coCd != null and !coCd.equals('')">
				AND E.CO_CD = #{coCd}   
			</if>     
			<choose>
				<when test = "salesCd.equals('99999-9900000')">
				AND E.SALES_CD IS NULL   
				</when>
				<otherwise>
				AND E.SALES_CD LIKE '%'|| #{salesCd} || '%'   
				</otherwise>
			</choose>
			<choose>
				<when test = "reqNo.equals('REQ9999999')">
				AND E.REQ_NO IS NULL   
				</when>
				<otherwise>
				AND E.REQ_NO LIKE '%'|| #{reqNo} || '%' 
				</otherwise>
			</choose>
		UNION ALL --반품현황
			SELECT 
					  E.CO_CD
					, E.RET_NO
					, R.RET_SEQ
					, I.ORDRG_NO
					, I.ORDRG_SEQ
					, I.REQ_NO
					, E.SALES_CD
					, R.MATR_CD
					, ''
					, R.RET_PRC
					, R.RET_QTY
					, 0
					, R.RET_DTL_AMT
					, R.CURR_CD
					, R.EXRATE
					, R.RET_DTL_RMK
					, to_CHAR(R.INOUT_KEY)	AS INOUT_KEY
					, R.CREAT_ID
					, R.CREAT_PGM
 			        , TO_CHAR(R.CREAT_DTTM, 'YYYY-MM-DD')	AS CREAT_DTTM
					, ''
 			        , TO_CHAR(E.RET_DT, 'YYYY-MM-DD')	AS RET_DT
 			        , C.CLNT_NM
 			        , R.DSGN_NO
					, J.MATR_NM
 			        , J.MATR_MAT
 			        , J.MATR_SIZE
 			        , J.MATR_SPEC	
 			        , Q.PART_CD
 			        , (SELECT FN_CM05M01_CD_TO_NM(Q.PART_CD) FROM DUAL ) AS PART_CD_NM		/* 발주분류명 */	
 			        , J.GOODS_DIV
 			        , (SELECT FN_CM05M01_CD_TO_NM(J.GOODS_DIV) FROM DUAL ) AS GOODS_DIV_NM	/* 자재품목구분명 */
			FROM TB_SM06M01 E		/* 반품 */	
					LEFT OUTER JOIN TB_SM06D01 R ON R.CO_CD = E.CO_CD AND R.RET_NO = E.RET_NO	
					LEFT OUTER JOIN TB_SM03D01 I ON I.IN_NO = R.IN_NO AND I.IN_SEQ = R.IN_SEQ	
					LEFT OUTER JOIN TB_QM01M01 Q ON I.REQ_NO = Q.REQ_NO
					LEFT OUTER JOIN TB_BM02M01 C ON E.PCHS_CLNT_CD = C.CLNT_CD
					LEFT OUTER JOIN TB_BM05M01 J ON R.MATR_CD = J.MATR_CD		/* 자재마스터 */
			WHERE 1 = 1
			<!-- 회사코드 -->         
			<if test="coCd != null and !coCd.equals('')">
				AND E.CO_CD = #{coCd}   
			</if>    
			<choose>
				<when test = "salesCd.equals('99999-9900000')">
				AND E.SALES_CD IS NULL   
				</when>
				<otherwise>
				AND E.SALES_CD LIKE '%'|| #{salesCd} || '%'   
				</otherwise>
			</choose>
			<choose>
				<when test = "reqNo.equals('REQ9999999')">
				AND Q.REQ_NO IS NULL   
				</when>
				<otherwise>
				AND Q.REQ_NO LIKE '%'|| #{reqNo} || '%' 
				</otherwise>
			</choose>
	</select>	
 
 </mapper>