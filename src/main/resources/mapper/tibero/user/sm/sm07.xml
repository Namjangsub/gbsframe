<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.sm.sm07.mapper.SM07Mapper">
		
	<!-- 모달창 리스트 -->
	<select id="selectOrderDetailList" parameterType="Map" resultType="camelMap">	
		SELECT Z.* FROM
		(
			SELECT
			
					 D.CO_CD
					, D.ORDRG_NO
					, D.ORDRG_SEQ
					, D.SALES_CD
					, D.MATR_SEQ
					, D.UPPER_CD
					, D.LOWER_CD
					, DSGN_NO
					, D.MATR_CD
					, FN_CM05M01_CD_TO_NM(D.MATR_TEST_DIV) MATR_TEST_DIV    
					, D.ORDRG_PRC			/* 발주단가		*/
					, D.ORDRG_QTY			/* 발주수량 */
					, D.ORDRG_AMT			/* 발주금액  */
					, TO_CHAR(D.DUDT_DEQ_DT, 'YYYY-MM-DD') DUDT_DEQ_DT
					, TO_CHAR(D.DUDT_INTEND_DT, 'YYYY-MM-DD') DUDT_INTEND_DT
					, D.ORDRG_DTL_RMK
					, D.CREAT_ID
					, D.CREAT_PGM
					, D.CREAT_DTTM
					, D.UDT_ID
					, D.UDT_PGM
					, D.UDT_DTTM
					, D.IN_CMPLET_YN
			        , D.WH_CD AS MATR_WH_CD		/* 입고창고  */
			        , FN_CM05M01_CD_TO_NM(D.WH_CD) AS MATR_WH_NM		/* 입고창고  */
			        , 
			        (
			        	SELECT NVL(SUM(ORDRG_QTY), 0) 
			        		FROM TB_SM02D01 CC
			        	WHERE D.CO_CD = CC.CO_CD 
			        		AND D.ORDRG_NO != CC.ORDRG_NO
			        		AND D.SALES_CD = CC.SALES_CD 
			        		AND D.LOWER_CD = CC.LOWER_CD
			        		AND D.MATR_CD = CC.MATR_CD
			        ) AS PRE_BOM_QTY			/* 구매 BOM 기발주 수량 임시 */      
			        ,
			        (
			        	SELECT CC.BOM_QTY			/* 구매 BOM 수량 */
			        		FROM TB_SM01D01 CC 						        		
						WHERE 1=1
			        		AND D.SALES_CD = CC.SALES_CD AND D.MATR_SEQ = CC.MATR_SEQ
			    			AND D.UPPER_CD=CC.UPPER_CD  AND D.LOWER_CD=CC.LOWER_CD       		
			        ) BOM_QTY /* 구매 BOM 수량 */
			        , 'Y' AS USER_CHK_V		/* 수정시 CHK값 SET */
			        , E.MATR_NM		/* 자재명 */
			        , E.MATR_MAT		/* 소재 */
			        , E.MATR_MAKR_NM
			        , E.MATR_MNO
			        , E.MATR_SPEC	
					, SUM(D.ORDRG_QTY) OVER(PARTITION BY D.CO_CD, D.ORDRG_NO, D.ORDRG_SEQ) ORDRG_QTY_SUM	/* 발주수량 */																
					, NVL(SUM(IN_QTY) OVER(PARTITION BY D.CO_CD, D.ORDRG_NO, D.ORDRG_SEQ), 0)  IN_QTY	/* 입고수량 */
					, 
					  SUM(D.ORDRG_QTY) OVER(PARTITION BY D.CO_CD, D.ORDRG_NO, D.ORDRG_SEQ) 
					  - NVL(SUM(IN_QTY) OVER(PARTITION BY D.CO_CD, D.ORDRG_NO, D.ORDRG_SEQ), 0) AS REAMIN_IN_QTY			/* 잔여수량 */	
				FROM TB_SM02D01 D
				LEFT OUTER JOIN TB_SM01D01 E ON(D.CO_CD=E.CO_CD AND D.SALES_CD=E.SALES_CD AND D.UPPER_CD=E.UPPER_CD AND D.LOWER_CD=E.LOWER_CD
													AND D.MATR_SEQ=E.MATR_SEQ AND D.MATR_CD=E.MATR_CD)		/*구매 BOM 자재 */	
				INNER JOIN TB_SM02M01 B ON(D.CO_CD=B.CO_CD AND D.ORDRG_NO=B.ORDRG_NO)
				LEFT OUTER JOIN
				(
				SELECT C.ORDRG_NO
						, C.ORDRG_SEQ
						, NVL(SUM(IN_QTY), 0) AS IN_QTY
					FROM TB_SM03D01 C
					INNER JOIN TB_SM03M01 D ON(D.IN_NO=C.IN_NO)
				GROUP BY C.ORDRG_NO, C.ORDRG_SEQ, C.IN_NO
				) C ON( D.ORDRG_NO=C.ORDRG_NO AND D.ORDRG_SEQ=C.ORDRG_SEQ)
		) Z		
		WHERE Z.REAMIN_IN_QTY !=0
		<if test="coCd != null and !coCd.equals('')">
			AND Z.CO_CD = #{coCd}   
		</if>
		<if test="ordrgNo != null and !ordrgNo.equals('')">
			AND Z.ORDRG_NO = #{ordrgNo}   
		</if>
		<!-- <if test="ordrgSeq != null and !ordrgSeq.equals('')">
			AND D.ORDRG_SEQ = #{ordrgSeq}   
		</if>
		<if test="salesCd != null and !salesCd.equals('')">
			AND D.SALES_CD = #{salesCd}   
		</if> -->
	</select>
		
	<!-- 발주관리 상세 수정 -->
	<update id="updateOrderDetail" parameterType="Map">
		UPDATE TB_SM02D01
			SET 
				 DUDT_INTEND_DT = #{dudtIntendDt}   --납기 예정일 	
				, UDT_ID = #{userId}
				, UDT_PGM = #{pgmId}
				, UDT_DTTM = SYSDATE						
				WHERE CO_CD = #{coCd} 
				 AND ORDRG_NO = #{ordrgNo} 
				 AND ORDRG_SEQ = #{ordrgSeq} 
	</update>
	
	
 </mapper>