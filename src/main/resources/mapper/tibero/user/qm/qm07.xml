<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.qm.qm07.mapper.QM07Mapper">

	<select id="selectQualityReqSCDSTSListCount" parameterType="Map" resultType="int">
		SELECT COUNT(*) 
		  FROM (
				SELECT T.CO_CD, T.ORDRG_ID
				FROM TB_QM01M01 T
				 	LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID
					LEFT OUTER JOIN TB_CR02D02 D1 ON T.SALES_CD = D1.SALES_CD
					LEFT OUTER JOIN TB_CR02M01 M1 ON D1.CO_CD = D1.CO_CD AND D1.ORDRS_NO = M1.ORDRS_NO
				 WHERE 1=1  
				    <choose>
				        <when test="partCd != null and !partCd.equals('')"> 
				          AND T.PART_CD = #{partCd}
				        </when>
				        <otherwise>
						  AND T.PART_CD  IN ('COBTP03', 'COBTP04', 'COBTP05', 'COBTP08', 'COBTP10', 'COBTP99')
				        </otherwise>
				    </choose>
					<if test="coCd !=null and !coCd.equals('')">
					  AND T.CO_CD = #{coCd}
					 </if>
					 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
			          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD')
			         </if>
			         <if test="ordrgId !=null and !ordrgId.equals('')">
			          AND (T.ORDRG_ID = #{ordrgId} OR T.REG_ID = #{ordrgId})
			         </if>
			         <if test="ordrgNm !=null and !ordrgNm.equals('')">
			          AND N2.NAME = #{ordrgNm}
			         </if>
			         <if test="salesCd !=null and !salesCd.equals('')">
			          AND T.SALES_CD  LIKE '%' || #{salesCd} || '%'
			         </if>
			         <if test="deptCd !=null and !deptCd.equals('')">
		        	  AND substr(N2.DEPT_ID,1,5) = #{deptCd}
			         </if>
			         <if test="prjctCd !=null and !prjctCd.equals('')">
		        	  AND M1.CLNT_PJT = #{prjctCd}
			         </if>
			         <if test="clntCd !=null and !clntCd.equals('')">
		        	  AND M1.ORDRS_CLNT_CD = #{clntCd}
			         </if>
		           AND T.PART_CD = 'COBTP01'
				GROUP BY T.CO_CD, T.ORDRG_ID
		)
	</select>
	
	<select id="selectQualityReqSCDSTSList" parameterType="Map" resultType="CamelMap">	
		WITH REQ AS (
				  SELECT T.*, N2.NAME
					FROM TB_QM01M01 T
					 	LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID
						LEFT OUTER JOIN TB_CR02D02 D1 ON T.SALES_CD = D1.SALES_CD
						LEFT OUTER JOIN TB_CR02M01 M1 ON D1.CO_CD = M1.CO_CD AND D1.ORDRS_NO = M1.ORDRS_NO
					 WHERE 1=1  
					 
				    <choose>
				        <when test="partCd != null and !partCd.equals('')"> 
				          AND T.PART_CD = #{partCd}
				        </when>
				        <otherwise>
						  AND T.PART_CD  IN ('COBTP03', 'COBTP04', 'COBTP05', 'COBTP08', 'COBTP10', 'COBTP99')
				        </otherwise>
				    </choose>
						 <if test="coCd !=null and !coCd.equals('')">
						  AND T.CO_CD = #{coCd}
						 </if>
						 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
				          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD')
				         </if>
				         <if test="ordrgId !=null and !ordrgId.equals('')">
				          AND (T.ORDRG_ID = #{ordrgId} OR T.REG_ID = #{ordrgId})
				         </if>
				         <if test="ordrgNm !=null and !ordrgNm.equals('')">
				          AND N2.NAME = #{ordrgNm}
				         </if>
				         <if test="salesCd !=null and !salesCd.equals('')">
				          AND T.SALES_CD  LIKE '%' || #{salesCd} || '%'
				         </if>
				         <if test="deptCd !=null and !deptCd.equals('')">
			        	  AND substr(N2.DEPT_ID,1,5) = #{deptCd}
				         </if>
				         <if test="prjctCd !=null and !prjctCd.equals('')">
			        	  AND M1.CLNT_PJT = #{prjctCd}
				         </if>
				         <if test="clntCd !=null and !clntCd.equals('')">
			        	  AND M1.ORDRS_CLNT_CD = #{clntCd}
				         </if>
				         <if test="partCd !=null and !partCd.equals('')">
			        	  AND T.PART_CD = #{partCd}
				         </if>
		)
		, MAE AS (
				SELECT 	  SM.REQ_NO
						, ROUND(SUM(MA.PCHS_AMT)/1000, 0)		AS PCHS_AMT_TOT
				  FROM TB_SM02M01 SM 
						LEFT OUTER JOIN TB_SM12D01 MA ON SM.ORDRG_NO = MA.ORDRG_NO
				WHERE 1 = 1
				  AND EXISTS (SELECT DISTINCT 1 FROM REQ WHERE REQ.REQ_NO = SM.REQ_NO)
				 GROUP BY SM.REQ_NO
		)
		, IPG AS (
				 SELECT SM.REQ_NO,ROUND(SUM(IP.IN_DTL_AMT)/1000,0)	AS IN_DTL_AMT_TOT
				 FROM   TB_SM02M01 SM 
						LEFT OUTER JOIN TB_SM03D01 IP ON  SM.ORDRG_NO = IP.ORDRG_NO
				WHERE 1 = 1
				  AND EXISTS (SELECT DISTINCT 1 FROM REQ WHERE REQ.REQ_NO = SM.REQ_NO)
				 GROUP BY SM.REQ_NO
		)
		, SUJU AS (	--SALES_CD별 수주가 집계 Temp
				SELECT CO_CD, ORDRS_NO, ORDRS_SEQ, SALES_CD,ROUND(ORDRS_PRC/1000,0) AS ORDRS_PRC
				FROM TB_CR02D02 C
				WHERE EXISTS (SELECT 1 FROM REQ WHERE REQ.SALES_CD = C.SALES_CD)
		)
		, SCTOT AS (	--발행자, SALES_CD 별 중간 집계 Temp
					SELECT
							 T.CO_CD, T.ORDRG_ID, count(T.REQ_NO) AS ERR_CNT, T.SALES_CD
			   	   			, MAX(N2.NAME) 		AS ORDRG_ID_NM
			   	   			, SUM(1)	AS TOT_CNT
			   	   			, SUM(DECODE(NVL(T.SCD_STS,'SCDSTS01'), 'SCDSTS01',1,0))	AS NORMAL_CNT
			   	   			, SUM(DECODE(NVL(T.SCD_STS,'SCDSTS01'), 'SCDSTS01',0,1))	AS AFT_ERR_CNT
			   	   			, SUM(COUNT(*)) OVER (ORDER BY T.CO_CD ) AS REQ_TOT
--			   	   			, SUM(SUM(DECODE(NVL(T.SCD_STS,'SCDSTS01'), 'SCDSTS01',1,0))) OVER (ORDER BY T.CO_CD ) AS NORMAL_TOT
--			   	   			, SUM(SUM(DECODE(NVL(T.SCD_STS,'SCDSTS01'), 'SCDSTS01',0,1))) OVER (ORDER BY T.CO_CD ) AS AFT_ERR_TOT
			   	   			, SUM(NVL(PCHS_AMT_TOT,0)) 	AS PCHS_AMT_TOT
			   	   			, SUM(IN_DTL_AMT_TOT) 	AS IN_DTL_AMT_TOT
			   	   			, MIN(REQ_ST) 			AS REQ_ST
			   	   			, SUM(SUM(NVL(PCHS_AMT_TOT,0))) OVER (ORDER BY T.CO_CD ) AS PCHS_AMT_TOT_ALL
			   	   			, SUM(SUM(IN_DTL_AMT_TOT)) OVER (ORDER BY T.CO_CD ) AS IN_DTL_AMT_TOT_ALL
			   	   			, SUM(DECODE(T.PART_CD,'COBTP02',NVL(PCHS_AMT_TOT,0),0))	AS SUM_AMT_02
			   	   			, SUM(DECODE(T.PART_CD,'COBTP03',NVL(PCHS_AMT_TOT,0),0))	AS SUM_AMT_03
			   	   			, SUM(DECODE(T.PART_CD,'COBTP05',NVL(PCHS_AMT_TOT,0),0))	AS SUM_AMT_05
			   	   			, SUM(DECODE(T.PART_CD,'COBTP09',NVL(PCHS_AMT_TOT,0),0))	AS SUM_AMT_09
			   	   			, SUM(DECODE(T.PART_CD,'COBTP99',NVL(PCHS_AMT_TOT,0),0))	AS SUM_AMT_99
					FROM REQ T
					 	LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID
					 	LEFT OUTER JOIN MAE           ON MAE.REQ_NO = T.REQ_NO
					 	LEFT OUTER JOIN IPG           ON IPG.REQ_NO = T.REQ_NO
					 WHERE 1=1  
					GROUP BY T.CO_CD, T.ORDRG_ID, T.SALES_CD
			)
			SELECT    ROWNUM AS RNUM
					, A.*
					, ROUND(PCHS_AMT_TOT /  PCHS_AMT_TOT_ALL * 100, 2) AS PCHS_AMT_PCT
					, decode(ORDRS_PRC,0,0, (ROUND(PCHS_AMT_TOT /  ORDRS_PRC * 100, 2))) AS ORDRS_PRC_PCT
			   FROM(
			   		SELECT T.CO_CD, T.ORDRG_ID
			   				, SUM(T.ERR_CNT) AS ERR_CNT
			   				, MAX(T.ORDRG_ID_NM) AS ORDRG_ID_NM
			   				, SUM(T.NORMAL_CNT) AS NORMAL_CNT
			   				, SUM(T.AFT_ERR_CNT) AS AFT_ERR_CNT
			   				, SUM(T.REQ_TOT) AS REQ_TOT
			   	   			, SUM(SUM(T.TOT_CNT)) OVER (ORDER BY T.CO_CD ) AS TOT_CNT
			   	   			, SUM(SUM(T.NORMAL_CNT)) OVER (ORDER BY T.CO_CD ) AS NORMAL_TOT
			   	   			, SUM(SUM(T.AFT_ERR_CNT)) OVER (ORDER BY T.CO_CD ) AS AFT_ERR_TOT
			   				, SUM(T.PCHS_AMT_TOT) AS PCHS_AMT_TOT
			   				, SUM(T.IN_DTL_AMT_TOT) AS IN_DTL_AMT_TOT
			   	   			, SUM(SUM(T.PCHS_AMT_TOT)) OVER (ORDER BY T.CO_CD ) AS PCHS_AMT_TOT_ALL
			   	   			, SUM(SUM(T.IN_DTL_AMT_TOT)) OVER (ORDER BY T.CO_CD ) AS IN_DTL_AMT_TOT_ALL
			   				, SUM(T.SUM_AMT_02) AS SUM_AMT_02
			   				, SUM(T.SUM_AMT_03) AS SUM_AMT_03
			   				, SUM(T.SUM_AMT_05) AS SUM_AMT_05
			   				, SUM(T.SUM_AMT_09) AS SUM_AMT_09
			   				, SUM(T.SUM_AMT_99) AS SUM_AMT_99
			   				, sum(SUJU.ORDRS_PRC) AS ORDRS_PRC
			   	   			, SUM(SUM(SUJU.ORDRS_PRC)) OVER (ORDER BY T.CO_CD ) AS ORDRS_PRC_TOT_ALL
			   		FROM SCTOT T
					 	LEFT OUTER JOIN SUJU           ON SUJU.SALES_CD = T.SALES_CD
					GROUP BY T.CO_CD, T.ORDRG_ID
					ORDER BY SUM(T.ERR_CNT) DESC, SUM(T.PCHS_AMT_TOT) DESC, sum(SUJU.ORDRS_PRC) DESC, MAX(T.ORDRG_ID_NM) 
				) A
		
	</select>
    
	<select id="selectQualityReqSCDSTSDept" parameterType="Map" resultType="CamelMap">	
	 SELECT A.*, D1.DEPT_NM 
	   FROM(
				SELECT
						 T.CO_CD, substr(N2.DEPT_ID,1,5) AS DEPT_ID
				FROM TB_QM01M01 T
				 LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID
				 WHERE 1=1  
					<if test="coCd !=null and !coCd.equals('')">
					  AND T.CO_CD = #{coCd}
					 </if>
					 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
			          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD')
			         </if>
			         <if test="ordrgId !=null and !ordrgId.equals('')">
			          AND (T.ORDRG_ID = #{ordrgId} OR T.REG_ID = #{ordrgId})
			         </if>
			         <if test="ordrgNm !=null and !ordrgNm.equals('')">
			          AND N2.NAME = #{ordrgNm}
			         </if>
			         <if test="salesCd !=null and !salesCd.equals('')">
			          AND T.SALES_CD  LIKE '%' || #{salesCd} || '%'
			         </if>
			         <if test="partCd !=null and !partCd.equals('')">
		        	  AND T.PART_CD = #{partCd}
			         </if>
				GROUP BY T.CO_CD, substr(N2.DEPT_ID,1,5)
		) A
			LEFT OUTER JOIN TB_CM04M01 D1 ON A.DEPT_ID = D1.DEPT_ID
			ORDER BY DEPT_NM
	</select>
    
	<select id="selectQualityReqSCDSTSClnt" parameterType="Map" resultType="CamelMap">
	 SELECT A.*
	   FROM(
				SELECT
						 T.CO_CD, M1.ORDRS_CLNT_CD, C1.CLNT_NM
				FROM TB_QM01M01 T
					LEFT OUTER JOIN TB_CR02D02 D1 ON T.SALES_CD = D1.SALES_CD
					LEFT OUTER JOIN TB_CR02M01 M1 ON D1.CO_CD = D1.CO_CD AND D1.ORDRS_NO = M1.ORDRS_NO
					LEFT OUTER JOIN TB_BM02M01 C1 ON M1.ORDRS_CLNT_CD = C1.CLNT_CD
				 WHERE 1=1  
					<if test="coCd !=null and !coCd.equals('')">
					  AND T.CO_CD = #{coCd}
					 </if>
					 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
			          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD')
			         </if>
			         <if test="ordrgId !=null and !ordrgId.equals('')">
			          AND (T.ORDRG_ID = #{ordrgId} OR T.REG_ID = #{ordrgId})
			         </if>
			         <if test="ordrgNm !=null and !ordrgNm.equals('')">
			          AND N2.NAME = #{ordrgNm}
			         </if>
			         <if test="salesCd !=null and !salesCd.equals('')">
			          AND T.SALES_CD  LIKE '%' || #{salesCd} || '%'
			         </if>
			         <if test="partCd !=null and !partCd.equals('')">
		        	  AND T.PART_CD = #{partCd}
			         </if>
				GROUP BY T.CO_CD, M1.ORDRS_CLNT_CD, C1.CLNT_NM
		) A
			ORDER BY CLNT_NM
	</select>
    
	<select id="selectQualityReqSCDSTSPrjct" parameterType="Map" resultType="CamelMap">
	 SELECT A.*
	   FROM(
				SELECT
						 T.CO_CD, M1.CLNT_PJT
						 , ( SELECT FN_CM05M01_CD_TO_NM(M1.CLNT_PJT) FROM DUAL ) AS CLNT_PJT_NM
				FROM TB_QM01M01 T
					LEFT OUTER JOIN TB_CR02D02 D1 ON T.SALES_CD = D1.SALES_CD
					LEFT OUTER JOIN TB_CR02M01 M1 ON D1.CO_CD = D1.CO_CD AND D1.ORDRS_NO = M1.ORDRS_NO
				 WHERE 1=1  
					<if test="coCd !=null and !coCd.equals('')">
					  AND T.CO_CD = #{coCd}
					 </if>
					 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
			          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD')
			         </if>
			         <if test="ordrgId !=null and !ordrgId.equals('')">
			          AND (T.ORDRG_ID = #{ordrgId} OR T.REG_ID = #{ordrgId})
			         </if>
			         <if test="ordrgNm !=null and !ordrgNm.equals('')">
			          AND N2.NAME = #{ordrgNm}
			         </if>
			         <if test="salesCd !=null and !salesCd.equals('')">
			          AND T.SALES_CD  LIKE '%' || #{salesCd} || '%'
			         </if>
			         <if test="partCd !=null and !partCd.equals('')">
		        	  AND T.PART_CD = #{partCd}
			         </if>
				GROUP BY T.CO_CD, M1.CLNT_PJT
		) A		
			ORDER BY CLNT_PJT_NM
	</select>
    
</mapper>