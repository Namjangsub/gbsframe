<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.qm.qm02.mapper.QM02Mapper">
	<!-- 그리드 조회 카운트-->
    <select id="select_grid_Count" parameterType="Map" resultType="int">
		SELECT count(*) 
		  FROM (
				SELECT ROWNUM AS RN
				, A.FILE_TRGT_KEY
				, A.RES_NO
				, A.CO_CD
				, A.ORDRG_ID
				, C.NAME AS ORDRG_NM
				, TO_CHAR(A.RES_DT, 'YYYY-MM-DD') AS RES_DT
				, A.RES_RMK
				, A.RES_DIV
				, A.WRITE_DT
				, A.STAT_YM
				, A.CREAT_ID
				, A.CREAT_PGM
				, A.CREAT_DTTM
				FROM  TB_QM02M01 A
				LEFT OUTER JOIN TB_CM06M01 C ON C.ID = A.ORDRG_ID  AND C.CO_CD =  A.CO_CD
				) B
		WHERE  1 = 1
		<if test="coCd != null and !coCd.equals('')">
		AND B.CO_CD = #{coCd}
		</if>
		<if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
		AND B.STAT_YM BETWEEN  #{strtDt} AND  #{endDt}
		</if>
		<if test="ordrgId != null and !ordrgId.equals('')">
		AND B.ORDRG_ID = #{ordrgId}
		</if>
		<if test="ordrgNm != null and !ordrgNm.equals('')">
		AND B.ORDRG_NM LIKE '%' || #{ordrgNm} || '%'
		</if>
    </select>

	<!-- 그리드 조회 -->
	<select id="selectMainGridList" parameterType="Map" resultType="camelMap">
		SELECT B.* 
		  FROM (
				SELECT ROWNUM AS RN
				, A.FILE_TRGT_KEY
				, A.RES_NO
				, A.CO_CD
				, A.ORDRG_ID
				, C.NAME AS ORDRG_NM
				, TO_CHAR(A.RES_DT, 'YYYY-MM-DD') AS RES_DT
				, A.RES_RMK
				, A.RES_DIV
				, A.WRITE_DT
				, A.STAT_YM
				, A.CREAT_ID
				, A.CREAT_PGM
				, A.CREAT_DTTM
				FROM  TB_QM02M01 A
				LEFT OUTER JOIN TB_CM06M01 C ON C.ID = A.ORDRG_ID  AND C.CO_CD =  A.CO_CD
				) B
		WHERE  1 = 1
		<if test="coCd != null and !coCd.equals('')">
		AND B.CO_CD = #{coCd}
		</if>
		<if test="strtDt != null and !strtDt.equals('') and endDt != null and !endDt.equals('')" >
		AND B.STAT_YM BETWEEN  #{strtDt} AND  #{endDt}
		</if>
		<if test="ordrgId != null and !ordrgId.equals('')">
		AND B.ORDRG_ID = #{ordrgId}
		</if>
		<if test="ordrgNm != null and !ordrgNm.equals('')">
		AND B.ORDRG_NM LIKE '%' || #{ordrgNm} || '%'
		</if>
		AND B.RN BETWEEN ${firstIndex} AND ${lastIndex}
	</select>
    
    <select id="select_stock_modal" parameterType="Map" resultType="camelMap">
		/*개인별 발주요청
  		--pivot 뿌릴 내용 : SELECT * FROM TB_CM05M01 WHERE CODE_KIND = 'COBTP' AND USE_YN = 'Y' 
		*/
WITH T_REQ AS
     ( 
      SELECT A.NAME               AS NAME
           , SUBSTR(A.DEPT_ID,1,5) AS UP_DEPT_ID --상위부서 
           , R.MID_CD              AS MID_CD--중분류
           , R.SUB_CD              AS SUB_CD--소분류
           , R.PART_CD             AS PART_CD--분류 
           , (SELECT FN_CM05M01_CD_TO_NM(R.PART_CD) FROM DUAL) AS PART_NM --분류명
        FROM TB_QM01M01 R
           , TB_CM06M01 A--사용자정보
       WHERE 1=1
         <if test="actiontype != null and actiontype.equals('C'.toString())">
         	AND R.STAT_YM IS NULL
         </if>
		 <if test="actiontype != null and !actiontype.equals('') and actiontype.equals('U'.toString())">
		    AND R.STAT_YM = #{statym}
		  </if>
        AND R.ORDRG_ID = #{userId} -- 접속한 사용자 ID
        AND R.CO_CD    = #{coCd}
        AND R.ORDRG_ID = A.ID
     )
   , WCODE AS
     ( 
       SELECT LEVEL - 1 AS LVL
            , T.CODE_KIND
            , T.CODE_DESC
            , T.CODE_ID
            , T.CODE_NM
            , T.SORT_NO
          FROM TB_CM05M01 T    
         WHERE USE_YN = 'Y'
           AND LEVEL = 2
         START WITH T.CODE_KIND =  (SELECT MIN(CODE_ID)
                                      FROM TB_CM05M01
                                     WHERE CODE_RPRC = (SELECT SUBSTR(DEPT_ID,1,5) FROM TB_CM06M01 WHERE ROWNUM = 1 AND ID = #{userId}) 
                                       AND CODE_KIND = 'COBGB')
         CONNECT BY PRIOR T.CODE_ID = T.CODE_KIND
       UNION ALL
       SELECT 1 AS LVL
            , T.CODE_KIND
            , T.CODE_DESC
            , T.CODE_ID
            , T.CODE_NM
            , T.SORT_NO
         FROM TB_CM05M01 T
        WHERE T.CODE_KIND = 'COBGB99' 
     )
		SELECT *
		  FROM (
		SELECT C.CODE_KIND --중분류코드
		     , C.CODE_DESC  --중분류명
		     , C.CODE_ID    --소분류코드
		     , C.CODE_NM    --소분류명
		     , R.NAME       --사원명
		     , R.PART_CD    --분류
		     , R.PART_NM    --분류명
		     , R.SUB_CD 
		     , C.CODE_KIND||C.SORT_NO||C.CODE_NM AS ORD_SEQ
		     , (select count(CODE_KIND) from WCODE a where C.CODE_KIND = a.CODE_KIND) as ROW_CNT
		  FROM T_REQ R
		      , WCODE C
		 WHERE 1=1
		   AND C.CODE_ID    = R.SUB_CD(+)
		   AND C.CODE_KIND  = R.MID_CD(+)
		       )
		    PIVOT ( COUNT(SUB_CD) FOR PART_NM IN (${test})  
		             )
		 ORDER BY ORD_SEQ
    </select>
    
    <select id="select_soojung_modal" parameterType="Map" resultType="camelMap">
		WITH PART_VE2 AS (
       SELECT ROWNUM  AS RNUM, B.CODE_ID, B.CODE_NM, B.CNT
         FROM ( 
			   SELECT M.CODE_ID
                    , M.CODE_NM
                    , (SELECT COUNT(*) FROM TB_QM01M01 WHERE PART_CD = M.CODE_ID AND DEPT_CD = #{cobgb} AND ORDRG_ID = #{userId} ) AS CNT
                 FROM TB_CM05M01 M
                WHERE 1=1 
                  AND M.CODE_KIND = 'COBTP'
                  AND M.USE_YN='Y'
                ORDER BY M.SORT_NO
   				)B
)
SELECT M.CODE_ID,
       M.CODE_NM,    
      M1.CODE_ID AS CODE_VALUE,
      M1.CODE_NM AS CODE_ERUM
     , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '', COUNT(T.SUB_CD)) AS ITEM_CNT
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 1 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}

    	) AS PART_NM1   
    , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '', COUNT(T.SUB_CD)) AS ITEM_CNT
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 2 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}
      ) AS PART_NM2     
    , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '', COUNT(T.SUB_CD)) AS ITEM_CNT 
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 3 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}
    ) AS PART_NM3     
   , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '', COUNT(T.SUB_CD)) AS ITEM_CNT
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 4 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}
    ) AS PART_NM4  
   , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '', COUNT(T.SUB_CD)) AS ITEM_CNT 
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 5 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}
    ) AS PART_NM5  
    , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '', COUNT(T.SUB_CD)) AS ITEM_CNT 
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 6 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}
    ) AS PART_NM6  
    , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '', COUNT(T.SUB_CD)) AS ITEM_CNT 
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 7 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}
    ) AS PART_NM7 
    , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '') AS ITEM_CNT 
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 8 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}
    ) AS PART_NM8 
    , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '', COUNT(T.SUB_CD)) AS ITEM_CNT 
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 9 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}
    ) AS PART_NM9  
    , ( SELECT DECODE(COUNT(T.SUB_CD), 0, '', COUNT(T.SUB_CD)) AS ITEM_CNT
	       FROM TB_QM01M01 T
          WHERE 1=1 
            AND T.SUB_CD = M1.CODE_ID
            AND T.PART_CD IN ( SELECT CODE_ID
								 FROM PART_VE2
								WHERE RNUM = 10 )
            AND T.ORDRG_ID = #{userId}
            AND T.STAT_YM = #{statym}
    ) AS PART_NM10                     
FROM TB_CM05M01 M
LEFT OUTER JOIN TB_CM05M01 M1 ON M1.CODE_KIND = M.CODE_ID 
                             AND M1.USE_YN='Y' 
WHERE 1=1
AND M.USE_YN='Y' 
AND M.CODE_KIND = #{cobgb}
ORDER BY M.SORT_NO ASC
    </select>
    
    <select id="select_cobtp_modal" parameterType="Map" resultType="camelMap">
		SELECT CODE_ID
			 , CODE_NM
			 , CODE_KIND
			 , CODE_DESC
			 , CODE_RPRC
			 , CODE_ETC
			 , SORT_NO
			 , USE_YN
			 , CREAT_ID
			 , CREAT_DTTM
			 , CREAT_PGM
			 , UDT_ID
			 , UDT_DTTM
			 , UDT_PGM
			 , DZ_CODE 
		  FROM TB_CM05M01 
		 WHERE CODE_KIND = 'COBTP' 
		   AND USE_YN = 'Y'
    </select>
    
    <select id="select_all_modal" parameterType="Map" resultType="camelMap">
		WITH DEPT_TEAM_ AS (
						   SELECT  ROWNUM AS RNUM, B.NAME,B.ID
						   FROM( 
						   SELECT A.NAME, A.DEPT_ID, A.LEVEL_CD, A.ID,
						             (SELECT COUNT(*) FROM TB_CM06M01  WHERE DEPT_ID LIKE 'GUN30%') AS CNT
						   FROM TB_CM06M01 A 
						   WHERE A.DEPT_ID LIKE #{deps} || '%'
						   ORDER BY A.DEPT_ID ASC, A.LEVEL_CD DESC
  								)B
 							)  
 		SELECT NAME, ID FROM DEPT_TEAM_
    </select>
    
    <select id="select_zupiter_modal1" parameterType="Map" resultType="camelMap">
	    WITH T_PARAM AS 
     (SELECT 'GUN'       AS P_CO_CD     
            , #{statyy}  AS P_STAT_YY   
            , #{userId}  AS P_ID
        FROM DUAL
     )
    , T_DEPT AS
     (SELECT A.NAME 
            , A.ID   
            , A.DEPT_ID
            , B.DEPT_NM
            , SUBSTR(A.DEPT_ID,1,5) AS UP_DEPT_ID
        FROM TB_CM06M01 A
            , TB_CM04M01 B
            , TB_CM07M01 C
            , T_PARAM    T
       WHERE 1=1
         AND A.DEPT_ID LIKE (SELECT  SUBSTR(DEPT_ID,1,5)||'%'
                                FROM TB_CM06M01
                               WHERE ID = T.P_ID 
                             )
         AND CO_CD      = T.P_CO_CD
         AND A.DEPT_ID  = B.DEPT_ID  
         AND A.LEVEL_CD = C.LEVEL_CD
     )
   , T_REQ AS 
     ( 
       SELECT D.UP_DEPT_ID
            , D.DEPT_NM
            , D.NAME
            , R.REQ_CD
            , R.REQ_DT
            , R.DEPT_CD 
            , R.MID_CD  
            , R.SUB_CD  
         FROM TB_QM01M01 R
            , T_DEPT     D
            , T_PARAM    T
        WHERE 1=1
         AND R.STAT_YY = P_STAT_YY
         AND R.STMM_YN = 'Y'
         AND R.CO_CD   = T.P_CO_CD
         AND R.ORDRG_ID = D.ID
     )
   , T_CAT AS
     (
       SELECT LCD.CODE_RPRC AS DEPT_CD
            , LCD.CODE_ID   AS LCD_ID
            , LCD.CODE_NM   AS LCD_NM
            , LCD.SORT_NO   AS L_SORT 
            , MCD.MCD_ID    AS MCD_ID
            , MCD.MCD_NM    AS MCD_NM
            , MCD.M_SORT    AS M_SORT
            , SCD.SCD_ID    AS SCD_ID
            , SCD.SCD_NM    AS SCD_NM
            , SCD.S_SORT    AS S_SORT
        FROM TB_CM05M01 LCD
            , ( SELECT M.CODE_KIND AS LCD_ID
                     , M.CODE_ID  AS MCD_ID
                     , M.CODE_NM   AS MCD_NM
                     , M.SORT_NO   AS M_SORT
                  FROM TB_CM05M01 M
                 WHERE LENGTH(M.CODE_ID) <![CDATA[<]]> 9 
                   AND M.USE_YN = 'Y'
                   AND M.CODE_KIND NOT IN ('COBGB', 'COBGBP') 
                   AND M.CODE_KIND LIKE 'COBGB%'
              ) MCD --중분류 
            , ( SELECT S.CODE_KIND AS MCD_ID
                     , S.CODE_ID  AS SCD_ID
                     , S.CODE_NM   AS SCD_NM
                     , S.SORT_NO   AS S_SORT
                  FROM TB_CM05M01 S
                 WHERE LENGTH(S.CODE_ID) = 9 
                   AND S.SORT_NO IS NOT NULL
                   AND S.USE_YN = 'Y'
                   AND S.CODE_KIND NOT IN ('COBGB', 'COBGBP') 
                   AND S.CODE_KIND LIKE 'COBGB%'
              ) SCD
            , ( SELECT DISTINCT UP_DEPT_ID AS DEPT_CD
                  FROM T_DEPT
              ) DPT
       WHERE LCD.CODE_RPRC = DPT.DEPT_CD
         AND LCD.USE_YN    = 'Y'
         AND LCD.CODE_KIND = 'COBGB' 
         AND LCD.CODE_ID   = MCD.LCD_ID
         AND MCD.MCD_ID    = SCD.MCD_ID
       ORDER BY L_SORT, M_SORT, S_SORT
     )
SELECT *
  FROM (
SELECT C.M_SORT||C.S_SORT 
      , C.MCD_NM
      , C.SCD_NM
      , R.NAME
      , R.SUB_CD
  FROM T_REQ R
      , T_CAT C
 WHERE 1=1
   AND C.SCD_ID  = R.SUB_CD(+)
   AND C.MCD_ID  = R.MID_CD(+)
   AND C.LCD_ID  = R.DEPT_CD(+)
   AND C.DEPT_CD = R.UP_DEPT_ID(+)
 ORDER BY C.M_SORT, C.S_SORT
       )
 PIVOT ( COUNT(SUB_CD) FOR NAME IN 
		         (${test})
		 )
 ORDER BY 1

    </select>
	
	 <select id="select_zupiter_modal" parameterType="Map" resultType="camelMap">
	    WITH T_DEPT AS 
     (SELECT A.NAME 
            , A.ID   
            , A.DEPT_ID
            , B.DEPT_NM
            , SUBSTR(A.DEPT_ID,1,5) AS UP_DEPT_ID --상위부서 
        FROM TB_CM06M01 A
            , TB_CM04M01 B
            , TB_CM07M01 C
       WHERE 1=1
         AND A.DEPT_ID LIKE (SELECT  SUBSTR(DEPT_ID,1,5)||'%'
                              FROM TB_CM06M01
                             WHERE ID = #{userId} -- 접속한 사용자 ID
                           )
         AND CO_CD      = #{coCd}
         AND A.DEPT_ID  = B.DEPT_ID  
         AND A.LEVEL_CD = C.LEVEL_CD
     )
    , T_REQ AS
     ( 
       SELECT D.UP_DEPT_ID
            , D.DEPT_NM
            , D.NAME
            , R.MID_CD  --중분류
            , R.SUB_CD  --소분류
         FROM TB_QM01M01 R
            , T_DEPT     D--접속자 부서정보 
        WHERE 1=1
         AND R.REQ_DT <![CDATA[>=]]> TO_DATE(#{strDate}, 'YYYYMMDD')
         AND R.REQ_DT <![CDATA[<=]]> TO_DATE(#{endDate}, 'YYYYMMDD')
         AND R.CO_CD   = #{coCd}
         AND R.ORDRG_ID = D.ID
     )
   , WCODE AS
     ( 
       SELECT LEVEL - 1 AS LVL
            , T.CODE_KIND
            , T.CODE_DESC
            , T.CODE_ID
            , T.CODE_NM
            , T.SORT_NO
          FROM TB_CM05M01 T    
         WHERE USE_YN = 'Y'
           AND LEVEL = 2 --대분류 상위부서 제외 
         START WITH T.CODE_KIND =  (SELECT MIN(CODE_ID)
                                      FROM TB_CM05M01
                                     WHERE CODE_RPRC = (SELECT MAX(UP_DEPT_ID) FROM T_DEPT)--사용자의 상위부서 
                                       AND CODE_KIND = 'COBGB')
         CONNECT BY PRIOR T.CODE_ID = T.CODE_KIND
       UNION ALL --기타코드는 모든 부서에 추가
       SELECT 1 AS LVL
            , T.CODE_KIND
            , T.CODE_DESC
            , T.CODE_ID
            , T.CODE_NM
            , T.SORT_NO
         FROM TB_CM05M01 T
        WHERE T.CODE_KIND = 'COBGB99' 
     )
SELECT *
  FROM (
SELECT C.CODE_KIND --중분류코드
     , C.CODE_DESC  --중분류명
     , C.CODE_ID    --소분류코드
     , C.CODE_NM    --소분류명
     , R.NAME       --사원명
     , R.SUB_CD     
     , C.CODE_KIND||C.SORT_NO||C.CODE_NM AS ORD_SEQ
     , (select count(CODE_KIND) from WCODE a where C.CODE_KIND = a.CODE_KIND) as ROW_CNT
  FROM T_REQ R
      , WCODE C
 WHERE 1=1
   AND C.CODE_ID    = R.SUB_CD(+)
   AND C.CODE_KIND  = R.MID_CD(+)
 ORDER BY C.CODE_KIND, C.SORT_NO, C.CODE_NM
       )
   PIVOT ( COUNT(SUB_CD) FOR NAME IN  (${test}) --해당부서 인원 읽어와서 넣어주기 
             )
 ORDER BY ORD_SEQ

    </select>
	
    <!-- 수정팝업 조회 -->
    <select id="select_qm02_Info" parameterType="Map" resultType="camelMap">
		SELECT ROWNUM AS RN
				, A.FILE_TRGT_KEY
				, A.RES_NO
				, A.CO_CD
				, A.ORDRG_ID
				, C.NAME AS ORDRG_NM
				, TO_CHAR(A.RES_DT, 'YYYY-MM-DD') AS RES_DT
				, A.RES_RMK
				, A.RES_DIV
				, A.WRITE_DT
				, A.STAT_YM
				, A.CREAT_ID
				, A.CREAT_PGM
				, A.CREAT_DTTM
				FROM  TB_QM02M01 A
				LEFT OUTER JOIN TB_CM06M01 C ON C.ID = A.ORDRG_ID  AND C.CO_CD =  A.CO_CD
		WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
		AND    ROWNUM = 1
    </select>
	
	<!--해당월에 데이터 있는지 확인 -->
	<select id="select_gochal_count" parameterType="Map" resultType="int">
		SELECT count(*)
		  FROM TB_QM02M01 
		  WHERE STAT_YM = #{statym}
		    AND ORDRG_ID = #{ordrgId}
		    AND RES_DIV = '개인'
	</select>
	
	<!--해당월에 결과 데이터 있는지 확인 -->
	<select id="select_result_count" parameterType="Map" resultType="int">
		SELECT count(*)
		  FROM TB_QM02M01 
		  WHERE STAT_YM = #{statym}
		    AND DEPT_CD = #{deptCd}
		    AND RES_DIV = '팀'
	</select>
	
	<!--delete 할때 팀장 고찰 데이터 체크 -->
	<select id="selec_delete_result_count" parameterType="Map" resultType="int">
		SELECT count(*)
		  FROM TB_QM02M01 
		  WHERE 1=1
		    AND STAT_YM = #{statym}
		    AND DEPT_CD = #{deptCd}
		    AND RES_DIV = '팀'
	</select>
	
	<!-- 파일키 MAX + 1 채번 -->
	<select id="select_qm02_SeqNext" parameterType="Map" resultType="int">
		SELECT NVL(MAX(TO_NUMBER(FILE_TRGT_KEY)),0) + 1
		FROM   TB_QM02M01
	</select>

	<!-- 수불키 채번 -->
	<select id="select_qm02_Ioseq" parameterType="Map" resultType="int">
		SELECT TB_BM30M01_SQ01.NEXTVAL
		FROM   DUAL
	</select>

	<!-- 관리번호 채번 -->
	<select id="select_qm02_Next_MNGM_NO" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT CASE WHEN MAX(RES_NO) IS NULL THEN 'RES'||SUBSTR(#{writeDt}, 3, 2)||'00001'
		                                    ELSE 'RES'||SUBSTR(#{writeDt}, 3, 2)||LPAD(TO_NUMBER(SUBSTR(MAX(RES_NO), -5)) + 1, 5, 0)
			   END AS MNGM_NO
		FROM   TB_QM02M01
		WHERE  CO_CD = #{coCd}
		AND    RES_DT LIKE SUBSTR(#{writeDt}, 0, 4)||'%'
    </select>
	
	<!-- update -->
    <update id="update_statyy_qm01" parameterType="map">
		UPDATE TB_QM01M01
		SET    STAT_YM  = #{statym}
			 , UDT_ID   = #{userId}
			 , UDT_PGM  = #{pgmId}
			 , UDT_DTTM = SYSDATE
		WHERE ORDRG_ID = #{userId}
		  AND STAT_YM IS NULL
    </update>
	
	<!-- insert -->
    <insert id="insert_qm02" parameterType="Map">
        INSERT INTO TB_QM02M01
		(
			  FILE_TRGT_KEY
			, RES_NO
			, CO_CD
			, ORDRG_ID
			, DEPT_CD
			, RES_DT
			, RES_RMK
			, RES_DIV
			, WRITE_DT
			, STAT_YM
			, ETC_FIELD1
			, ETC_FIELD2
			, ETC_FIELD3
			, CREAT_ID
			, CREAT_PGM
			, CREAT_DTTM
		)
		VALUES
		(
			  #{fileTrgtKey}
			, #{resNo}
			, #{coCd}
			, #{ordrgId}
			, #{deptCd}
			, #{writeDt}
			, #{resRmk}
			, #{resDiv}
			, #{writeDt}
			, #{statym}
			, #{etcField1, jdbcType=VARCHAR}
			, #{etcField2, jdbcType=VARCHAR}
			, #{etcField3, jdbcType=VARCHAR}
			, #{userId}
			, #{pgmId}
			, SYSDATE
		)
    </insert>
    
	<!-- update -->
    <update id="update_qm02" parameterType="map">
		UPDATE TB_QM02M01
		SET    RES_RMK  = #{resRmk}
			 , UDT_ID   = #{userId}
			 , UDT_PGM  = #{pgmId}
			 , UDT_DTTM = SYSDATE
		WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
    </update>
    
    <!-- delete -->    
    <delete id="delete_qm02" parameterType="Map">
		DELETE TB_QM02M01
		WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>
    

    <select id="select_userName" parameterType="Map" resultType="camelMap">
	  SELECT A.NAME     
	    FROM TB_CM06M01 A
		             INNER JOIN TB_CM04M01 B on A.DEPT_ID = B.DEPT_ID   
		             INNER JOIN TB_CM07M01 C on A.LEVEL_CD = C.LEVEL_CD
		       WHERE CO_CD = 'GUN'
		         AND A.DEPT_ID LIKE (SELECT  SUBSTR(DEPT_ID,1,5)||'%'
		                                FROM TB_CM06M01
		                               WHERE ID = #{userId}
		                             )
    </select>
    
    <!-- update -->
    <update id="update_qm02_p02" parameterType="map">
		UPDATE TB_QM02M01
		SET    RES_RMK  = #{resRmk}
			 , UDT_ID   = #{userId}
			 , UDT_PGM  = #{pgmId}
			 , UDT_DTTM = SYSDATE
		WHERE  FILE_TRGT_KEY = #{fileTrgtKey}
    </update>
    
    <!-- update -->
    <update id="update_delete_qm01" parameterType="map">
		UPDATE TB_QM01M01
		SET    STAT_YM  = ''
			 , UDT_ID   = #{userId}
			 , UDT_PGM  = #{pgmId}
			 , UDT_DTTM = SYSDATE
		WHERE ORDRG_ID = #{userId}
		  AND STAT_YM = #{statym}
    </update>
</mapper>