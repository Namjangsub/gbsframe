<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.qm.qm01.mapper.QM01Mapper">

	<select id="selectQualityReqCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)   
		FROM TB_QM01M01 T
		 LEFT OUTER JOIN TB_QM01P01 P ON P.REQ_NO = T.REQ_NO
		 LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD  
		 LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD =  SM.CO_CD  AND S.ORDRS_NO = SM.ORDRS_NO
		 LEFT OUTER JOIN TB_BM01M01 B ON S.PRDT_CD = B.PRDT_CD  
		 LEFT OUTER JOIN TB_CM05M01 C ON C.CODE_ID  = T.REQ_ST AND C.USE_YN='Y' AND C.CODE_KIND = 'REQST'       
		 LEFT OUTER JOIN TB_CM05M01 C1 ON C1.CODE_ID = T.BUST_CD AND C1.USE_YN='Y' AND C1.CODE_KIND = 'BUSTCD' 
		 LEFT OUTER JOIN TB_CM05M01 C2 ON C2.CODE_ID = T.INWK_CD AND C2.USE_YN='Y' AND C2.CODE_KIND = 'INWKCD'		
		 LEFT OUTER JOIN TB_CM05M01 C3 ON C3.CODE_ID = T.DEPT_CD AND C3.USE_YN='Y' AND C3.CODE_KIND = 'COBGB'
		 LEFT OUTER JOIN TB_CM05M01 C4 ON C4.CODE_ID = T.MID_CD AND C4.USE_YN='Y' 
		 LEFT OUTER JOIN TB_CM05M01 C5 ON C5.CODE_ID = T.SUB_CD AND C5.USE_YN='Y' 	
		 LEFT OUTER JOIN TB_CM05M01 C6 ON C6.CODE_ID = T.PART_CD AND C6.USE_YN='Y' AND C6.CODE_KIND = 'COBTP'	 
		 LEFT OUTER JOIN TB_CM06M01 N1 ON N1.ID = T.REG_ID  AND N1.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID  AND N2.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N3 ON N3.ID = T.CREAT_ID  AND N3.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_BM02M01 CT ON CT.CLNT_CD = T.EST_CLNT_CD AND CT.USE_YN = 'Y' 
		 WHERE 1=1 
		<if test="coCd !=null and !coCd.equals('')">
		  AND T.CO_CD = #{coCd}
		 </if>
		 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
         </if>
         <if test="ordrgId !=null and !ordrgId.equals('')">
          AND T.ORDRG_ID = #{ordrgId}
         </if>
         <if test="salesCd !=null and !salesCd.equals('')">
          AND T.SALES_CD  LIKE '%${salesCd}%'
         </if>
         <!-- <if test="prdtCd !=null and !prdtCd.equals('')">
     	  AND S.PRDT_CD = #{prdtCd}
         </if>-->
         <if test="prdtCd !=null and !prdtCd.equals('')">
          AND B.PRDT_GRP = #{prdtCd}
         </if>         	
         <if test="prdtNm !=null and !prdtNm.equals('')">
          AND P.PRDT_NM LIKE '%${prdtNm}%'
         </if>
         <if test="itemCd !=null and !itemCd.equals('')">
          AND S.ITEM_DIV = #{itemCd}
         </if>
         <if test="sharId !=null and !sharId.equals('')">
          AND (T.SHAR_ID1 = #{sharId}           
                OR T.SHAR_ID2 = #{sharId} 
                OR T.SHAR_ID3 = #{sharId} 
                OR T.SHAR_ID4 = #{sharId} 
                OR T.SHAR_ID5 = #{sharId} 
                OR T.SHAR_ID6 = #{sharId} 
                OR T.SHAR_ID7 = #{sharId} 
                OR T.SHAR_ID8 = #{sharId} 
                OR T.SHAR_ID9 = #{sharId} 
                OR T.SHAR_ID10 = #{sharId} ) 
         </if>
        <if test="clntPjt !=null and !clntPjt.equals('')">
          AND T.PROJ_NM LIKE '%${clntPjt}%' 
        </if>
        <if test="eqpNm !=null and !eqpNm.equals('')">
          AND S.EQP_NM  LIKE '%${eqpNm}%'  
        </if>
        <if test="clntCd !=null and !clntCd.equals('')">
          AND T.EST_CLNT_CD = #{clntCd}
        </if> 
        <if test="partCd !=null and !partCd.equals('')">
          AND T.PART_CD = #{partCd}
        </if>  
	</select>
	
	<select id="selectQualityReqList" parameterType="Map" resultType="CamelMap">	
	   SELECT *
	   FROM(
		SELECT
			ROWNUM AS RNUM, A.*
		FROM
		(
	   SELECT     T.FILE_TRGT_KEY AS FILE_TRGT_KEY, 
		          T.CO_CD AS CO_CD,  
		          T.REQ_NO AS REQ_NO,         
		          T.INWK_CD AS INWK_CD, 
		          T.BUST_CD AS BUST_CD, 
		          NVL(T.SALES_CD,' ') AS SALES_CD,
		          T.REQ_ST AS REQ_ST,
		          T.REQ_CD AS REQ_CD, 
		          T.REG_ID AS REQ_ID, 
		          T.ORDRG_ID AS ORDRG_ID, 
		          T.DEPT_CD AS DEPT_CD, 
		          T.MID_CD AS MID_CD,
		          T.SUB_CD AS SUB_CD,	
		          T.EST_CLNT_CD AS CLNT_CD,
		          P.CREAT_ID AS CREAT_ID,
		          T.PART_CD AS COBTB_CD, 
		          S.ITEM_DIV AS ITEM_DIV,
		          FN_CM05M01_CD_TO_NM(S.ITEM_DIV) AS ITEM_DIV_NM,
		          S.PRDT_CD AS PRDT_CD1,
		          B.PRDT_GRP AS PRDT_CD,	
		          TO_CHAR(T.ORDRG_DT, 'YYYY-MM-DD') AS ORDRG_DT,
		          T.RSLT_YN AS RSLT_YN,
		          DECODE(T.REQ_CD,'REQCD01','Y',' ') AS REQ_1YN,
		          DECODE(T.REQ_CD,'REQCD02','Y',' ') AS REQ_2YN, 
		          CASE WHEN (T.INWK_CD = 'INWK01' OR INWK_CD = 'INWK02') THEN 'Y' ELSE ' ' END AS INWK_YN,
		          NVL(C1.CODE_NM,' ') AS BUST_NM,
		          NVL(C2.CODE_NM,' ') AS INWK_NM,   
				  N1.NAME AS REG_NM,
				  N2.NAME AS ORDRG_NM,
			      C3.CODE_NM AS DEPT_NM,
				  C4.CODE_NM AS MID_NM,
				  C5.CODE_NM AS SUB_NM,
		          CT.CLNT_NM AS CLNT_NM, 
		          T.PROJ_NM AS CLNT_PJT, 
		          T.MATR_DRW_NO AS MATR_DRW_NO, 
		          NVL(S.EQP_NM,' ') AS EQP_NM, 		         
		          C6.CODE_NM AS PART_NM,            
		          C.CODE_NM AS CODE_NM, 
		          T.REQ_RMK AS REQ_RMK, 
		          P.CREAT_DTTM AS CREAT_DTTM,
		          N3.NAME AS CREAT_NM,    
		          NVL(P.RESLT_RST,' ')  AS RESLT_RST
		FROM TB_QM01M01 T
		 LEFT OUTER JOIN TB_QM01P01 P ON P.REQ_NO = T.REQ_NO
		 LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD  
		 LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD =  SM.CO_CD  AND S.ORDRS_NO = SM.ORDRS_NO
		 LEFT OUTER JOIN TB_BM01M01 B ON S.PRDT_CD = B.PRDT_CD  
		 LEFT OUTER JOIN TB_CM05M01 C ON C.CODE_ID  = T.REQ_ST AND C.USE_YN='Y' AND C.CODE_KIND = 'REQST'       
		 LEFT OUTER JOIN TB_CM05M01 C1 ON C1.CODE_ID = T.BUST_CD AND C1.USE_YN='Y' AND C1.CODE_KIND = 'BUSTCD' 
		 LEFT OUTER JOIN TB_CM05M01 C2 ON C2.CODE_ID = T.INWK_CD AND C2.USE_YN='Y' AND C2.CODE_KIND = 'INWKCD'		
		 LEFT OUTER JOIN TB_CM05M01 C3 ON C3.CODE_ID = T.DEPT_CD AND C3.USE_YN='Y' AND C3.CODE_KIND = 'COBGB'
		 LEFT OUTER JOIN TB_CM05M01 C4 ON C4.CODE_ID = T.MID_CD AND C4.USE_YN='Y' 
		 LEFT OUTER JOIN TB_CM05M01 C5 ON C5.CODE_ID = T.SUB_CD AND C5.USE_YN='Y' 	
		 LEFT OUTER JOIN TB_CM05M01 C6 ON C6.CODE_ID = T.PART_CD AND C6.USE_YN='Y' AND C6.CODE_KIND = 'COBTP'	 
		 LEFT OUTER JOIN TB_CM06M01 N1 ON N1.ID = T.REG_ID  AND N1.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID  AND N2.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N3 ON N3.ID = T.CREAT_ID  AND N3.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_BM02M01 CT ON CT.CLNT_CD = T.EST_CLNT_CD AND CT.USE_YN = 'Y' 
		 WHERE 1=1 
		<if test="coCd !=null and !coCd.equals('')">
		  AND T.CO_CD = #{coCd}
		 </if>
		 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
         </if>
         <if test="ordrgId !=null and !ordrgId.equals('')">
          AND T.ORDRG_ID = #{ordrgId}
         </if>
         <if test="salesCd !=null and !salesCd.equals('')">
          AND T.SALES_CD  LIKE '%${salesCd}%'
         </if>
         <!-- <if test="prdtCd !=null and !prdtCd.equals('')">
     	  AND S.PRDT_CD = #{prdtCd}
         </if>-->
         <if test="prdtCd !=null and !prdtCd.equals('')">
          AND B.PRDT_GRP = #{prdtCd}
         </if>         	
         <if test="prdtNm !=null and !prdtNm.equals('')">
          AND P.PRDT_NM LIKE '%${prdtNm}%'
         </if>
         <if test="itemCd !=null and !itemCd.equals('')">
          AND S.ITEM_DIV = #{itemCd}
         </if>
         <if test="sharId !=null and !sharId.equals('')">
          AND (T.SHAR_ID1 = #{sharId}           
                OR T.SHAR_ID2 = #{sharId} 
                OR T.SHAR_ID3 = #{sharId} 
                OR T.SHAR_ID4 = #{sharId} 
                OR T.SHAR_ID5 = #{sharId} 
                OR T.SHAR_ID6 = #{sharId} 
                OR T.SHAR_ID7 = #{sharId} 
                OR T.SHAR_ID8 = #{sharId} 
                OR T.SHAR_ID9 = #{sharId} 
                OR T.SHAR_ID10 = #{sharId} ) 
         </if>
        <if test="clntPjt !=null and !clntPjt.equals('')">
          AND T.PROJ_NM LIKE '%${clntPjt}%' 
        </if>
        <if test="eqpNm !=null and !eqpNm.equals('')">
          AND S.EQP_NM  LIKE '%${eqpNm}%'  
        </if>
        <if test="clntCd !=null and !clntCd.equals('')">
          AND T.EST_CLNT_CD = #{clntCd}
        </if> 
        <if test="partCd !=null and !partCd.equals('')">
          AND T.PART_CD = #{partCd}
        </if>  
          ORDER BY T.CO_CD, T.REQ_NO
		 ) AS a
		) A
	  WHERE  RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>
	
	<select id="selectQualityReqExList" parameterType="Map" resultType="camelMap"> 	 
	     SELECT     T.FILE_TRGT_KEY AS FILE_TRGT_KEY, 
		          T.CO_CD AS CO_CD,  
		          T.REQ_NO AS REQ_NO,         
		          T.INWK_CD AS INWK_CD, 
		          T.BUST_CD AS BUST_CD, 
		          NVL(T.SALES_CD,' ') AS SALES_CD,
		          T.REQ_ST AS REQ_ST,
		          T.REQ_CD AS REQ_CD, 
		          T.REG_ID AS REQ_ID, 
		          T.ORDRG_ID AS ORDRG_ID, 
		          T.DEPT_CD AS DEPT_CD, 
		          T.MID_CD AS MID_CD,
		          T.SUB_CD AS SUB_CD,	
		          T.EST_CLNT_CD AS CLNT_CD,
		          P.CREAT_ID AS CREAT_ID,
		          T.PART_CD AS COBTB_CD, 
		          S.ITEM_DIV AS ITEM_DIV,
		          FN_CM05M01_CD_TO_NM(S.ITEM_DIV) AS ITEM_DIV_NM,
		          S.PRDT_CD AS PRDT_CD1,
		          B.PRDT_GRP AS PRDT_CD,	
		          TO_CHAR(T.ORDRG_DT, 'YYYY-MM-DD') AS ORDRG_DT,
		          T.RSLT_YN AS RSLT_YN,
		          DECODE(T.REQ_CD,'REQCD01','Y',' ') AS REQ_1YN,
		          DECODE(T.REQ_CD,'REQCD02','Y',' ') AS REQ_2YN, 
		          CASE WHEN (T.INWK_CD = 'INWK01' OR INWK_CD = 'INWK02') THEN 'Y' ELSE ' ' END AS INWK_YN,
		          NVL(C1.CODE_NM,' ') AS BUST_NM,
		          NVL(C2.CODE_NM,' ') AS INWK_NM,   
				  N1.NAME AS REG_NM,
				  N2.NAME AS ORDRG_NM,
			      C3.CODE_NM AS DEPT_NM,
				  C4.CODE_NM AS MID_NM,
				  C5.CODE_NM AS SUB_NM,
		          CT.CLNT_NM AS CLNT_NM, 
		          T.PROJ_NM AS CLNT_PJT, 
		          T.MATR_DRW_NO AS MATR_DRW_NO, 
		          NVL(S.EQP_NM,' ') AS EQP_NM, 		         
		          C6.CODE_NM AS PART_NM,            
		          C.CODE_NM AS CODE_NM, 
		          T.REQ_RMK AS REQ_RMK, 
		          P.CREAT_DTTM AS CREAT_DTTM,
		          N3.NAME AS CREAT_NM,    
		          NVL(P.RESLT_RST,' ')  AS RESLT_RST
		FROM TB_QM01M01 T
		 LEFT OUTER JOIN TB_QM01P01 P ON P.REQ_NO = T.REQ_NO
		 LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD  ----수주상세(Sales Code)
		 LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD =  SM.CO_CD  AND S.ORDRS_NO = SM.ORDRS_NO
		 LEFT OUTER JOIN TB_BM01M01 B ON S.PRDT_CD = B.PRDT_CD  
		 LEFT OUTER JOIN TB_CM05M01 C ON C.CODE_ID  = T.REQ_ST AND C.USE_YN='Y' AND C.CODE_KIND = 'REQST'       
		 LEFT OUTER JOIN TB_CM05M01 C1 ON C1.CODE_ID = T.BUST_CD AND C1.USE_YN='Y' AND C1.CODE_KIND = 'BUSTCD' 
		 LEFT OUTER JOIN TB_CM05M01 C2 ON C2.CODE_ID = T.INWK_CD AND C2.USE_YN='Y' AND C2.CODE_KIND = 'INWKCD'		
		 LEFT OUTER JOIN TB_CM05M01 C3 ON C3.CODE_ID = T.DEPT_CD AND C3.USE_YN='Y' AND C3.CODE_KIND = 'COBGB'
		 LEFT OUTER JOIN TB_CM05M01 C4 ON C4.CODE_ID = T.MID_CD AND C4.USE_YN='Y' 
		 LEFT OUTER JOIN TB_CM05M01 C5 ON C5.CODE_ID = T.SUB_CD AND C5.USE_YN='Y' 	
		 LEFT OUTER JOIN TB_CM05M01 C6 ON C6.CODE_ID = T.PART_CD AND C6.USE_YN='Y' AND C6.CODE_KIND = 'COBTP'	 
		 LEFT OUTER JOIN TB_CM06M01 N1 ON N1.ID = T.REG_ID  AND N1.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID  AND N2.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N3 ON N3.ID = T.CREAT_ID  AND N3.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_BM02M01 CT ON CT.CLNT_CD = T.EST_CLNT_CD AND CT.USE_YN = 'Y' 
		 WHERE 1=1 
		<if test="coCd !=null and !coCd.equals('')">
		  AND T.CO_CD = #{coCd}
		 </if>
		 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
         </if>
         <if test="ordrgId !=null and !ordrgId.equals('')">
          AND T.ORDRG_ID = #{ordrgId}
         </if>
         <if test="salesCd !=null and !salesCd.equals('')">
          AND T.SALES_CD  LIKE '%${salesCd}%'
         </if>
         <!-- <if test="prdtCd !=null and !prdtCd.equals('')">
     	  AND S.PRDT_CD = #{prdtCd}
         </if>-->
         <if test="prdtCd !=null and !prdtCd.equals('')">
          AND B.PRDT_GRP = #{prdtCd}
         </if>         	
         <if test="prdtNm !=null and !prdtNm.equals('')">
          AND P.PRDT_NM LIKE '%${prdtNm}%'
         </if>
         <if test="itemCd !=null and !itemCd.equals('')">
          AND S.ITEM_DIV = #{itemCd}
         </if>
         <if test="sharId !=null and !sharId.equals('')">
          AND (T.SHAR_ID1 = #{sharId}           
                OR T.SHAR_ID2 = #{sharId} 
                OR T.SHAR_ID3 = #{sharId} 
                OR T.SHAR_ID4 = #{sharId} 
                OR T.SHAR_ID5 = #{sharId} 
                OR T.SHAR_ID6 = #{sharId} 
                OR T.SHAR_ID7 = #{sharId} 
                OR T.SHAR_ID8 = #{sharId} 
                OR T.SHAR_ID9 = #{sharId} 
                OR T.SHAR_ID10 = #{sharId} ) 
         </if>
        <if test="clntPjt !=null and !clntPjt.equals('')">
          AND T.PROJ_NM LIKE '%${clntPjt}%' 
        </if>
        <if test="eqpNm !=null and !eqpNm.equals('')">
          AND S.EQP_NM  LIKE '%${eqpNm}%'  
        </if>
        <if test="clntCd !=null and !clntCd.equals('')">
          AND T.EST_CLNT_CD = #{clntCd}
        </if> 
        <if test="partCd !=null and !partCd.equals('')">
          AND T.PART_CD = #{partCd}
        </if>  
          ORDER BY T.CO_CD, T.REQ_NO
  </select>
  
  <select id="selectQtyReqInfo" resultType="CamelMap">
   SELECT  T.CO_CD AS CO_CD 
          ,T.REQ_NO AS REQ_NO 
          ,TO_CHAR(T.ORDRG_DT, 'YYYY-MM-DD') AS ORDRG_DT 
          ,T.ORDRG_ID AS ORDRG_ID 
	      ,N2.NAME AS ORDRG_NM 
          ,T.REG_ID AS REG_ID 
          ,N1.NAME AS REG_NM 
          ,T.SALES_CD AS SALES_CD 
          ,T.MATR_DRW_NO AS MATR_DRW_NO 
          ,T.EST_CLNT_CD  AS CLNT_CD 
          ,CT.CLNT_NM AS CLNT_NM 
          ,T.CLNT_PJT AS CLNT_PJT 
          ,T.NEW_CD AS NEW_CD  
          ,T.REQ_CD AS REQ_CD
          ,TO_CHAR(T.REQ_DT, 'YYYY-MM-DD') AS REQ_DT 
          ,T.ORDRS_NO AS ORDRS_NO 
          ,T.PROJ_NM AS PROJ_NM 
          ,T.BUST_CD AS BUST_CD 
          ,T.BUST_NM AS BUST_NM 
          ,T.INWK_CD AS  INWK_CD 
          ,T.BUST_PE AS BUST_PE 
          ,T.PART_CD AS PART_CD 
          ,T.DEPT_CD AS DEPT_CD 
          ,T.DEPT_CD2 AS DEPT_CD2 
          ,T.MID_CD AS MID_CD
          ,T.SUB_CD AS SUB_CD
          ,T.FILE_TRGT_KEY
	FROM TB_QM01M01 T
	LEFT OUTER JOIN TB_CM06M01 N1 ON N1.ID = T.REG_ID  AND N1.CO_CD =  T.CO_CD
	LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID  AND N2.CO_CD =  T.CO_CD
	LEFT OUTER JOIN TB_BM02M01 CT ON CT.CLNT_CD = T.EST_CLNT_CD AND CT.USE_YN = 'Y' 
	WHERE FILE_TRGT_KEY = #{fileTrgtKey}
 </select>
	
	<select id="selectPchsCostList" parameterType="Map" resultType="CamelMap">
		SELECT
			*
		FROM(
			SELECT
				ROWNUM AS RNUM, A.*

			FROM
			(
		          SELECT
							T.FILE_TRGT_KEY,
							T.CO_CD,
							FN_CM05M01_CD_TO_NM(T.CO_CD) CO_NM,
							T.COST_NO,
							T.SALES_CD,
							T.PCHS_CLNT_CD,
							A.CLNT_NM PCHS_CLNT_NM,
							TO_CHAR(T.COST_DT, 'YYYY-MM-DD') AS COST_DT,
							T.PCHS_COST_DIV10,
							FN_CM05M01_CD_TO_NM(T.PCHS_COST_DIV10) PCHS_COST_DIV10_NM,
							T.PCHS_COST_DIV20,
							FN_CM05M01_CD_TO_NM(T.PCHS_COST_DIV20) PCHS_COST_DIV20_NM,
							T.CURR_CD,
							FN_CM05M01_CD_TO_NM(T.CURR_CD) CURR_NM,
							T.EXRATE,
							T.COST_AMT,
							T.MATR_CD,
							M.MATR_NM,
							T.COST_RMK,
							T.ETC_FIELD1,
							T.ETC_FIELD2,
							T.ETC_FIELD3,
							T.CREAT_ID,
							B.NAME CREAT_NM,
							T.CREAT_PGM,
							TO_CHAR(T.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM,
							T.UDT_ID,
							C.NAME UDT_NM,
							T.UDT_PGM,
							TO_CHAR(T.UDT_DTTM, 'YYYY-MM-DD') AS UDT_DTTM
				FROM TB_SM10M01 T
					             LEFT OUTER JOIN TB_BM02M01 A ON T.PCHS_CLNT_CD = A.CLNT_CD
					             LEFT OUTER JOIN TB_CM06M01 B ON T.CREAT_ID = B.ID
					             LEFT OUTER JOIN TB_CM06M01 C ON T.UDT_ID = C.ID
					             
					             LEFT OUTER JOIN TB_BM05M01 M ON T.MATR_CD = M.MATR_CD  --자재마스터
					             LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD  --수주상세(Sales Code)
					             LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD    = SM.CO_CD  --수주상세(Sales Code)
					            							  AND S.ORDRS_NO = SM.ORDRS_NO
					             LEFT OUTER JOIN TB_BM02M01 X ON SM.ORDRS_CLNT_CD = X.CLNT_CD --거래처마스터
					             LEFT OUTER JOIN TB_BM01M01 P ON S.PRDT_CD = P.PRDT_CD  --제품마스터

		         WHERE 1=1
              <if test="coCd !=null and !coCd.equals('')">
     	           AND T.CO_CD = #{coCd}
              </if>
			   <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
				   AND T.COST_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYYMMDD') AND TO_DATE( #{reqDtTo},'YYYYMMDD') +1
			  </if>
              <if test="vendCd !=null and !vendCd.equals('')">
     	           AND SM.ORDRS_CLNT_CD = #{vendCd}
              </if>			  			  
              <if test="vendNm !=null and !vendNm.equals('')">
     	           AND X.CLNT_NM LIKE '%${vendNm}%'
              </if>			  			  
              <if test="salesCd !=null and !salesCd.equals('')">
     	           AND T.SALES_CD LIKE '%${salesCd}%'
              </if>			  			  
              <if test="prdtCd !=null and !prdtCd.equals('')">
     	           AND S.PRDT_CD = #{prdtCd}
              </if>			  			  
              <if test="prdtNm !=null and !prdtNm.equals('')">
     	           AND P.PRDT_NM LIKE '%${prdtNm}%'
              </if>			  			  
              <if test="itemCd !=null and !itemCd.equals('')">
     	           AND S.ITEM_DIV = #{itemCd}
              </if>			  			  
              <if test="clntCd !=null and !clntCd.equals('')">
     	           AND T.PCHS_CLNT_CD = #{clntCd}
              </if>			  			  
              <if test="clntNm !=null and !clntNm.equals('')">
     	           AND A.CLNT_NM LIKE '%${clntNm}%'
              </if>			  			  
              <if test="pchsCostDiv10 !=null and !pchsCostDiv10.equals('')">
     	           AND T.PCHS_COST_DIV10 = #{pchsCostDiv10}
              </if>				  			  
              <if test="pchsCostDiv20 !=null and !pchsCostDiv20.equals('')">
     	           AND T.PCHS_COST_DIV20 = #{pchsCostDiv20}
              </if>				  			  
		         ORDER BY T.CO_CD, T.SALES_CD, T.COST_NO, A.CLNT_NM
				) AS a
			) A
		WHERE  RNUM BETWEEN #{firstIndex} AND #{lastIndex}

	</select>


  <select id="selectConfirmCount" parameterType="Map" resultType="int">
    SELECT COUNT(FILE_TRGT_KEY) CNT
      FROM TB_SM10M01
     WHERE FILE_TRGT_KEY = #{fileTrgtKey}
  </select>
  
<update id="updateQualityReq" parameterType="Map">
		UPDATE TB_QM01M01
		SET   MATR_DRW_NO = #{matrDrwNo}
		     ,ORDRS_NO = #{ordrsNo}
		     ,BUST_CD = #{bustCd}
		     ,BUST_NM = #{bustNm}
		     ,INWK_CD = #{inwkCd}
		     ,BUST_PE = #{bustPe}
		     ,PART_CD = #{partCd}
		     ,DEPT_CD = #{deptCd}
		     ,DEPT_CD2 = #{deptCd2} 
		     ,MID_CD = #{midCd}
		     ,SUB_CD = #{subCd}   
		     ,UDT_ID  = #{userId}
			 ,UDT_PGM = #{pgmId}
			 ,UDT_DTTM = SYSDATE
		WHERE FILE_TRGT_KEY = #{fileTrgtKey}
  </update>
  
  
  <select id="selectQualityReqSeqNext" parameterType="Map" resultType="int">
		SELECT TB_QM01M01_SQ01.NEXTVAL FROM DUAL
  </select>
  
  <select id="selectQualityReqCalNext" parameterType="Map" resultType="String">
 <!--   SELECT 'REQ' || TO_CHAR(SYSDATE,'YY') || '-' || LPAD(NVL(MAX(REQ_NO),0)+1,4,0) -->
   SELECT CASE WHEN MAX(REQ_NO) IS NULL THEN  'REQ' || TO_CHAR(SYSDATE,'YY') || '-' || '0001' 
               ELSE 'REQ' || TO_CHAR(SYSDATE,'YY') || '-' || LPAD(SUBSTR(NVL(MAX(REQ_NO),0),7,10)+1,4,0) END AS REQ_NO
   FROM   TB_QM01M01
   WHERE  CO_CD = 'GUN'     
  </select>
  
<insert id="insertQualityReq" parameterType="Map">
   INSERT INTO   TB_QM01M01     
	 (   FILE_TRGT_KEY,
	     REQ_NO,
	     ORDRS_NO,
	     CO_CD,
	     PROJ_NM,
	     ORDRG_DT,
	     ORDRG_ID,
	     REG_ID,
	     MATR_DRW_NO,
	     SALES_CD,
	     EST_CLNT_CD,
	     CLNT_PJT,
	     NEW_CD,
	     REQ_CD,
	     REQ_DT, 
	     BUST_CD,
	     BUST_NM,
	     INWK_CD,
	     BUST_PE,
	     PART_CD,
	     REQ_RMK,
	     DEPT_CD,
	     DEPT_CD2,
	     MID_CD,
	     SUB_CD,
	    <!--  STMM_YN,
	     STAT_YY,
	     STAT_MM,
	     REQ_ST,-->
	   <!--   SHAR_ID1,
	     SHAR_ID2,
	     SHAR_ID3,
	     SHAR_ID4,
	     SHAR_ID5,
	     SHAR_ID6,
	     SHAR_ID7,
	     SHAR_ID8,
	     SHAR_ID9,
	     SHAR_ID10,-->
	     CREAT_ID,       
		 CREAT_PGM,      
		 CREAT_DTTM 
	)VALUES(
	     #{fileTrgtKey},
	     #{reqNo},
	     #{ordrsNo},
	     #{coCd},
	     #{projNm},
	     to_date(#{ordrgDt}, 'YYYY-MM-DD'),
	     #{ordrgId},
	     #{regId},
	     #{matrDrwNo},
	     #{salesCd},
	     #{clntCd},
	     #{clntPjt},
	     #{newCd},
	     #{reqCd},
	     to_date(#{reqDt}, 'YYYY-MM-DD'),
	     #{bustCd},
	     #{bustNm},
	     #{inwkCd},
	     #{bustPe},
	     #{partCd},
	     #{reqRmk}, <!--null #{reqRmk, jdbcType=VARCHAR}-->
	     #{deptCd},
	     #{deptCd2},
	     #{midCd},
	     #{subCd},
	   <!--   #{stmmYn},
	     #{statYy},
	     #{statMm},
	     #{reqSt}, -->
	   <!--분리작업
	      #{sharId1},
	     #{sharId2},
	     #{sharId3},
	     #{sharId4},
	     #{sharId5},
	     #{sharId6},
	     #{sharId7},
	     #{sharId8},
	     #{sharId9},
	     #{sharId10},-->
	     #{userId},       
		 #{pgmId},      
		 SYSDATE 
	)
 </insert>
  
  <delete id="deleteQualityReq" parameterType="Map">
    DELETE TB_QM01M01 WHERE FILE_TRGT_KEY = #{fileTrgtKey}
  </delete>
  
</mapper>