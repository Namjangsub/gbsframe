<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dksys.biz.user.qm.qm01.mapper.QM01Mapper">

	<select id="selectQualityReqCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		FROM TB_QM01M01 T
		 LEFT OUTER JOIN TB_QM01P01 P ON P.CO_CD = T.CO_CD AND P.REQ_NO = T.REQ_NO
		 LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD
		 LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD =  SM.CO_CD  AND S.ORDRS_NO = SM.ORDRS_NO
		 LEFT OUTER JOIN TB_BM01M01 B ON S.PRDT_CD = B.PRDT_CD
		 LEFT OUTER JOIN TB_CM05M01 C ON C.CODE_ID  = T.REQ_ST AND C.CODE_KIND = 'REQST'
		 LEFT OUTER JOIN TB_CM05M01 C3 ON C3.CODE_ID = T.DEPT_CD AND C3.CODE_KIND = 'COBGB'
		 LEFT OUTER JOIN TB_CM05M01 C4 ON C4.CODE_ID = T.MID_CD
		 LEFT OUTER JOIN TB_CM05M01 C5 ON C5.CODE_ID = T.SUB_CD
		 LEFT OUTER JOIN TB_CM05M01 C6 ON C6.CODE_ID = T.PART_CD AND C6.CODE_KIND = 'COBTP'
		 LEFT OUTER JOIN TB_CM05M01 C7 ON C7.CODE_ID = B.PRDT_GRP
		 LEFT OUTER JOIN TB_CM06M01 N1 ON N1.ID = T.REG_ID -- AND N1.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID -- AND N2.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N3 ON N3.ID = T.CREAT_ID  --AND N3.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_BM02M01 CT ON CT.CLNT_CD = SM.ORDRS_CLNT_CD
		 LEFT OUTER JOIN TB_CM04M01 CM4 ON CM4.DEPT_ID = substr(N2.DEPT_ID,1,5)
		 LEFT OUTER JOIN TB_WB20M03 CC ON CC.TODO_FILE_TRGT_KEY = T.FILE_TRGT_KEY
										 AND CC.TODO_CO_CD = T.CO_CD
									     AND CC.TODO_NO    = T.REQ_NO
										 AND CC.TODO_DIV1_CODE_ID = 'TODODIV20'  --결재건
										 AND CC.SANCTN_SN = 1  --첫번째가 결재되어야 함(팀장)
										 AND CC.SANCTN_STTUS = 'Y'  --결재상태
		 WHERE 1=1
		<if test="coCd !=null and !coCd.equals('')">
		  AND T.CO_CD = #{coCd}
		 </if>
    <choose>
        <when test="reqNo != null and !reqNo.equals('')">
         AND (T.REQ_NO  LIKE '%'|| #{reqNo} || '%' OR T.ISS_NO LIKE  '%'|| #{reqNo} || '%')
        </when>
        <when test="salesCd != null and !salesCd.equals('')">
         AND T.SALES_CD  LIKE '%'|| #{salesCd} || '%'
        </when>
        <otherwise>
         AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
        </otherwise>
    </choose>
         <if test="ordrgId !=null and !ordrgId.equals('')">
          AND (T.ORDRG_ID = #{ordrgId} OR T.REG_ID = #{ordrgId})
         </if>
         <if test="ordrgNm !=null and !ordrgNm.equals('')">
          AND (N1.NAME LIKE '%' || #{ordrgNm} || '%' OR N2.NAME LIKE '%' || #{ordrgNm} || '%')
         </if>
        <if test="clntPjt !=null and !clntPjt.equals('')">
          AND SM.CLNT_PJT LIKE '%'|| #{clntPjt}|| '%'
        </if>
        <if test="eqpNm !=null and !eqpNm.equals('')">
          AND S.EQP_NM  LIKE '%'|| #{eqpNm}|| '%'
        </if>
        <if test="reqSt !=null and !reqSt.equals('')">
          AND T.REQ_ST = #{reqSt}
         </if>
        <if test="clntCd !=null and !clntCd.equals('')">
          AND SM.ORDRS_CLNT_CD = #{clntCd}
        </if>
        <if test="cobtbCd !=null and !cobtbCd.equals('')">
          AND T.PART_CD = #{cobtbCd}
        </if>
        <if test="rsltYn !=null and !rsltYn.equals('')">
          AND T.RSLT_YN = #{rsltYn}
        </if>
	  	<if test="clntNm !=null and !clntNm.equals('')">
	      AND CT.CLNT_NM LIKE '%' || #{clntNm} || '%'
	    </if>
        <if test="prdtDiv !=null and !prdtDiv.equals('')">
          AND B.PRDT_GRP = #{prdtDiv}
        </if>
	</select>

	<select id="selectQualityReqList" parameterType="Map" resultType="CamelMap">
	   SELECT *
	   FROM(
		SELECT
			ROWNUM AS RNUM, A.*,
			(SELECT FN_CM05M01_CD_TO_NM(A.BUST_CD01) FROM DUAL) AS BUST_NM01,
            (SELECT FN_CM05M01_CD_TO_NM(A.BUST_CD02) FROM DUAL) AS BUST_NM02,
	        (SELECT FN_CM05M01_CD_TO_NM(A.INWK_CD01) FROM DUAL) AS INWK_NM01,
            (SELECT FN_CM05M01_CD_TO_NM(A.INWK_CD02) FROM DUAL) AS INWK_NM02
		FROM
		(
	   SELECT     T.FILE_TRGT_KEY AS FILE_TRGT_KEY,
		          T.CO_CD AS CO_CD,
		          T.REQ_NO AS REQ_NO,
		          P.RSLT_NO AS RSLT_NO,
 				  CASE WHEN INSTR(T.BUST_CD, ',', 1, 1) = 0 THEN T.BUST_CD
                       ELSE SUBSTR(T.BUST_CD, 1, INSTR(T.BUST_CD, ',', 1, 1)-1)
                   END BUST_CD01,
	              CASE WHEN INSTR(T.BUST_CD, ',', 1, 2) = 0 THEN ''
	                   ELSE SUBSTR(T.BUST_CD, INSTR(T.BUST_CD, ',', 1, 1)+1, (INSTR(T.BUST_CD, ',', 1, 2)-1) - INSTR(T.BUST_CD, ',', 1, 1))
	               END BUST_CD02,
                  CASE WHEN INSTR(T.INWK_CD, ',', 1, 1) = 0 THEN T.INWK_CD
                       ELSE SUBSTR(T.INWK_CD, 1, INSTR(T.INWK_CD, ',', 1, 1)-1)
                   END INWK_CD01,
             	  CASE WHEN INSTR(T.INWK_CD, ',', 1, 2) = 0 THEN ''
                       ELSE SUBSTR(T.INWK_CD, INSTR(T.INWK_CD, ',', 1, 1)+1, (INSTR(T.INWK_CD, ',', 1, 2)-1) - INSTR(T.INWK_CD, ',', 1, 1))
                   END INWK_CD02,
		          NVL(T.SALES_CD,' ') AS SALES_CD,
		          T.REQ_ST AS REQ_ST,
		          T.REQ_CD AS REQ_CD,
		          T.REG_ID AS REQ_ID,
		          T.ORDRG_ID AS ORDRG_ID,
		          T.DEPT_CD AS DEPT_CD,
		          T.MID_CD AS MID_CD,
		          T.SUB_CD AS SUB_CD,
		          T.STAT_YM,
		          SM.ORDRS_CLNT_CD AS CLNT_CD,
		          P.CREAT_ID AS CREAT_ID,
		          T.PART_CD AS COBTB_CD,
		          S.ITEM_DIV AS ITEM_DIV,
		          FN_CM05M01_CD_TO_NM(S.ITEM_DIV) AS ITEM_DIV_NM,
		          S.PRDT_CD 	AS PRDT_CD1,
		          B.PRDT_GRP 	AS PRDT_DIV_CD,
		          C7.CODE_NM    AS PRDT_DIV_NM,
		          TO_CHAR(T.ORDRG_DT, 'YYYY-MM-DD') AS ORDRG_DT,
		          TO_CHAR(T.REQ_DT, 'YYYY-MM-DD') AS REQ_DT,
		          TO_CHAR(T.CUST_REQ_DT, 'YYYY-MM-DD') AS CUST_REQ_DT,	--고객요구일
		          --T.RSLT_YN AS RSLT_YN,
		          decode(P.RSLT_NO, '', 'N', 'Y')   AS RSLT_YN, --결과등록여부
		          DECODE(T.REQ_CD,'REQCD01','Y',' ') AS REQ_1YN,
		          DECODE(T.REQ_CD,'REQCD02','Y',' ') AS REQ_2YN,
				  N1.NAME AS REG_NM,
				  N2.NAME AS ORDRG_NM,
			      C3.CODE_NM AS DEPT_NM,
				  C4.CODE_NM AS MID_NM,
				  C5.CODE_NM AS SUB_NM,
		          NVL(CT.CLNT_NM, '.') AS CLNT_NM,
		          SM.CLNT_PJT AS CLNT_PJT_CD,
		          (SELECT FN_CM05M01_CD_TO_NM(SM.CLNT_PJT) FROM DUAL) AS CLNT_PJT,
		          T.SALES_CD AS MATR_DRW_NO,
		          NVL(S.EQP_NM,' ') AS EQP_NM,
		          C6.CODE_NM AS PART_NM,
		          C.CODE_NM AS CODE_NM,
		          T.REQ_RMK AS REQ_RMK,
		          TO_CHAR(P.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM,
		          N3.NAME AS CREAT_NM,
		          NVL(P.RESLT_RST,' ')  AS RESLT_RST,
		          NVL(P.SUB_CD, '') AS RESLT_SUB_CD,
		          NVL(T.SALE_CF_YN,'N') AS CHKDEPT1_YN,
		          NVL(T.DSGN_CF_YN,'N') AS CHKDEPT2_YN,
		          NVL(T.MATR_CF_YN,'N') AS CHKDEPT3_YN,
		          NVL(T.PROD_CF_YN,'N') AS CHKDEPT4_YN,
		          NVL(T.WOUT_CF_YN,'N') AS CHKDEPT5_YN,
				  NVL(CC.SANCTN_STTUS,'N') AS SANCTN_STTUS,
				  CM4.DEPT_NM 								AS DEPTN_NM2,
				  substr(N2.DEPT_ID,1,5) 					AS DEPT_ID,
				  T.SCD_STS									AS SCD_STS,
				  (SELECT FN_CM05M01_CD_TO_NM(T.SCD_STS) FROM DUAL) AS SCD_STS_NM,
				  T.ISS_NO,
				  P.ACT_MH,
		          TO_CHAR(T.ACT_COMP_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS REQ_DT,
				  T.ACT_COMP_DGN_FILE_NM,
				  NVL(P.SAME_TIME_RESULT,'N') 						AS SAME_TIME_RESULT  --결과동시처리여부
		FROM TB_QM01M01 T
		 LEFT OUTER JOIN TB_QM01P01 P ON P.CO_CD = T.CO_CD AND P.REQ_NO = T.REQ_NO
		 LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD
		 LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD =  SM.CO_CD  AND S.ORDRS_NO = SM.ORDRS_NO
		 LEFT OUTER JOIN TB_BM01M01 B ON S.PRDT_CD = B.PRDT_CD
		 LEFT OUTER JOIN TB_CM05M01 C ON C.CODE_ID  = T.REQ_ST AND C.CODE_KIND = 'REQST'
		 LEFT OUTER JOIN TB_CM05M01 C3 ON C3.CODE_ID = T.DEPT_CD AND C3.CODE_KIND = 'COBGB'
		 LEFT OUTER JOIN TB_CM05M01 C4 ON C4.CODE_ID = T.MID_CD
		 LEFT OUTER JOIN TB_CM05M01 C5 ON C5.CODE_ID = T.SUB_CD
		 LEFT OUTER JOIN TB_CM05M01 C6 ON C6.CODE_ID = T.PART_CD AND C6.CODE_KIND = 'COBTP'
		 LEFT OUTER JOIN TB_CM05M01 C7 ON C7.CODE_ID = B.PRDT_GRP
		 LEFT OUTER JOIN TB_CM06M01 N1 ON N1.ID = T.REG_ID -- AND N1.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID -- AND N2.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_CM06M01 N3 ON N3.ID = T.CREAT_ID  --AND N3.CO_CD =  T.CO_CD
		 LEFT OUTER JOIN TB_BM02M01 CT ON CT.CLNT_CD = SM.ORDRS_CLNT_CD
		 LEFT OUTER JOIN TB_CM04M01 CM4 ON CM4.DEPT_ID = substr(N2.DEPT_ID,1,5)
		 LEFT OUTER JOIN TB_WB20M03 CC ON CC.TODO_FILE_TRGT_KEY = T.FILE_TRGT_KEY
										 AND CC.TODO_CO_CD = T.CO_CD
									     AND CC.TODO_NO    = T.REQ_NO
										 AND CC.TODO_DIV1_CODE_ID = 'TODODIV20'  --결재건
										 AND CC.SANCTN_SN = 1  --첫번째가 결재되어야 함(팀장)
										 AND CC.SANCTN_STTUS = 'Y'  --결재상태
		 WHERE 1=1
		<if test="coCd !=null and !coCd.equals('')">
		  AND T.CO_CD = #{coCd}
		 </if>
    <choose>
        <when test="reqNo != null and !reqNo.equals('')">
         AND (T.REQ_NO  LIKE '%'|| #{reqNo} || '%' OR T.ISS_NO LIKE  '%'|| #{reqNo} || '%')
        </when>
        <when test="salesCd != null and !salesCd.equals('')">
         AND T.SALES_CD  LIKE '%'|| #{salesCd} || '%'
        </when>
        <otherwise>
         AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
        </otherwise>
    </choose>
         <if test="ordrgId !=null and !ordrgId.equals('')">
          AND (T.ORDRG_ID = #{ordrgId} OR T.REG_ID = #{ordrgId})
         </if>
         <if test="ordrgNm !=null and !ordrgNm.equals('')">
          AND (N1.NAME LIKE '%' || #{ordrgNm} || '%' OR N2.NAME LIKE '%' || #{ordrgNm} || '%')
         </if>
        <if test="clntPjt !=null and !clntPjt.equals('')">
          AND SM.CLNT_PJT LIKE '%'|| #{clntPjt}|| '%'
        </if>
        <if test="eqpNm !=null and !eqpNm.equals('')">
          AND S.EQP_NM  LIKE '%'|| #{eqpNm}|| '%'
        </if>
        <if test="reqSt !=null and !reqSt.equals('')">
          AND T.REQ_ST = #{reqSt}
         </if>
        <if test="clntCd !=null and !clntCd.equals('')">
          AND SM.ORDRS_CLNT_CD = #{clntCd}
        </if>
        <if test="cobtbCd !=null and !cobtbCd.equals('')">
          AND T.PART_CD = #{cobtbCd}
        </if>
        <if test="rsltYn !=null and !rsltYn.equals('')">
          AND T.RSLT_YN = #{rsltYn}
        </if>
	  	<if test="clntNm !=null and !clntNm.equals('')">
	      AND CT.CLNT_NM LIKE '%' || #{clntNm} || '%'
	    </if>
        <if test="prdtDiv !=null and !prdtDiv.equals('')">
          AND B.PRDT_GRP = #{prdtDiv}
        </if>
          <!--ORDER BY T.CO_CD, T.REQ_NO-->
            ORDER BY T.REQ_NO DESC
		 ) AS a
		) A
	  WHERE  RNUM BETWEEN #{firstIndex} AND #{lastIndex}

	</select>


	<select id="selectQtyReqInfo" resultType="CamelMap">
		SELECT A.*
			, FN_CM05M01_CD_TO_NM(A.BUST_CD01) AS BUST_NM01
			, FN_CM05M01_CD_TO_NM(A.BUST_CD02) AS BUST_NM02
			, FN_CM05M01_CD_TO_NM(A.INWK_CD01) AS INWK_CD01
			, FN_CM05M01_CD_TO_NM(A.INWK_CD02) AS INWK_CD02
		FROM (
				SELECT  T.CO_CD 							AS CO_CD
						,(SELECT X.CODE_NM FROM TB_CM05M01 X WHERE X.CODE_ID = T.CO_CD) AS CO_NM
						,T.REQ_NO 							AS REQ_NO
						,TO_CHAR(T.ORDRG_DT, 'YYYY-MM-DD') 	AS ORDRG_DT
						,T.ORDRG_ID 						AS ORDRG_ID		--발행자ID
						,N2.NAME 							AS ORDRG_NM		--발행자성면
						,SUBSTR(N2.DEPT_ID,0,5) 			AS DEPT_CD	--발행자부서코드
						,N3.DEPT_NM 						AS DEPT_NM
						,T.REG_ID 							AS REG_ID		--작성자ID
						,N1.NAME 							AS REG_NM		--작성자이름
						,SUBSTR(N1.DEPT_ID,0,5)				AS REG_DEPT_ID	--작성자부서코드
						,T.SALES_CD 						AS SALES_CD
						,T.SALES_CD 						AS MATR_DRW_NO
						,SM.ORDRS_CLNT_CD  					AS CLNT_CD
						,CT.CLNT_NM 						AS CLNT_NM
						,SM.CLNT_PJT 						AS CLNT_PJT
						, (SELECT FN_CM05M01_CD_TO_NM(SM.CLNT_PJT) FROM DUAL) AS CLNT_PJT_NM
						,T.REQ_CD AS REQ_CD
						, (SELECT FN_CM05M01_CD_TO_NM(T.REQ_CD) FROM DUAL) AS REQ_CD_NM
						,TO_CHAR(T.REQ_DT, 'YYYY-MM-DD') AS REQ_DT
						,TO_CHAR(T.CUST_REQ_DT, 'YYYY-MM-DD') AS CUST_REQ_DT	--고객요구일
						,S.ORDRS_NO AS ORDRS_NO
						,SM.CTRT_NM AS PROJ_NM
				        ,REGEXP_SUBSTR(T.BUST_CD, '[^,]+', 1, 1) AS BUST_CD01
				        ,REGEXP_SUBSTR(T.BUST_CD, '[^,]+', 1, 2) AS BUST_CD02
				        ,REGEXP_SUBSTR(T.BUST_CD, '[^,]+', 1, 3) AS BUST_CD03
				        ,REGEXP_SUBSTR(T.INWK_CD, '[^,]+', 1, 1) AS INWK_CD01
				        ,REGEXP_SUBSTR(T.INWK_CD, '[^,]+', 1, 2) AS INWK_CD02
--						, CASE WHEN INSTR(T.BUST_CD, ',', 1, 1) = 0 THEN T.BUST_CD
--							ELSE SUBSTR(T.BUST_CD, 1, INSTR(T.BUST_CD, ',', 1, 1)-1)
--							END BUST_CD01
--						, CASE WHEN INSTR(T.BUST_CD, ',', 1, 2) = 0 THEN ''
--							ELSE SUBSTR(T.BUST_CD, INSTR(T.BUST_CD, ',', 1, 1)+1, (INSTR(T.BUST_CD, ',', 1, 2)-1) - INSTR(T.BUST_CD, ',', 1, 1))
--							END BUST_CD02
--						, CASE WHEN INSTR(T.INWK_CD, ',', 1, 1) = 0 THEN T.INWK_CD
--							ELSE SUBSTR(T.INWK_CD, 1, INSTR(T.INWK_CD, ',', 1, 1)-1)
--							END INWK_CD01
--						, CASE WHEN INSTR(T.INWK_CD, ',', 1, 2) = 0 THEN ''
--							ELSE SUBSTR(T.INWK_CD, INSTR(T.INWK_CD, ',', 1, 1)+1, (INSTR(T.INWK_CD, ',', 1, 2)-1) - INSTR(T.INWK_CD, ',', 1, 1))
--							END INWK_CD02
						,T.BUST_NM AS BUST_NM
						,T.BUST_PE AS BUST_PE
						,T.PART_CD AS PART_CD
						, (SELECT FN_CM05M01_CD_TO_NM(T.PART_CD) FROM DUAL) AS PART_CD_NM
						, (SELECT FN_CM05M01_CD_TO_NM(T.DEPT_CD2) FROM DUAL) AS DEPT2_NM
						,T.MID_CD AS MID_CD
						, (SELECT FN_CM05M01_CD_TO_NM(T.MID_CD) FROM DUAL) AS MID_NM
						,T.SUB_CD AS SUB_CD
						, (SELECT FN_CM05M01_CD_TO_NM(T.SUB_CD) FROM DUAL) AS SUB_CD_NM
						,T.REQ_RMK AS REQ_RMK
						,T.FILE_TRGT_KEY
						, S.ORDRS_DTL_DIV20 AS ORDRS_DTL_DIV20
						, S.EQP_NM                                                                --2023.12.06 남장섭 추가
						, (SELECT FN_CM05M01_CD_TO_NM(S.ordrs_dtl_div20) FROM DUAL) AS NEW_CD
						, (
								SELECT CASE
										WHEN (COUNT(TODO_KEY)>0)
											THEN 'Y'
										ELSE 'N'
									END
									FROM TB_WB20M03 W20
								WHERE 1=1
									AND T.SALES_CD=W20.SALES_CD
									AND T.REQ_NO=W20.TODO_NO
							) AS TODO_YN
						, T.SCD_STS									AS SCD_STS
						, (SELECT FN_CM05M01_CD_TO_NM(T.SCD_STS) FROM DUAL) AS SCD_STS_NM
						, T.ISS_NO   										AS WORK_RPT_NO
						, WB.FILE_TRGT_KEY  								AS ISS_FILE_TRGT_KEY
						, TO_CHAR(T.ACT_COMP_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS ACT_COMP_DTTM
						, T.ACT_COMP_DGN_FILE_NM
                        , SM.ORDRS_DIV
                        , FN_CM05M01_CD_TO_NM(SM.ORDRS_DIV) AS ORDRS_DIV_NM --수주구분명
                        , T.MC_PART_CD
                        , T.IMPORTANT_CD
                        , T.IMPACT_CD
                        , WB.MC_PART_CD  	AS MC_PART_CD_ISS
                        , WB.IMPORTANT_CD 	AS IMPORTANT_CD_ISS
                        , WB.IMPACT_CD 		AS IMPACT_CD_ISS
                        , FN_CM05M01_CD_TO_NM(WB.MC_PART_CD ) 	AS MC_PART_CD_ISS_NM 	--문제기계분류
                        , FN_CM05M01_CD_TO_NM(WB.IMPORTANT_CD ) AS IMPORTANT_CD_ISS_NM 	--문제영향도
                        , FN_CM05M01_CD_TO_NM(WB.IMPACT_CD) 	AS IMPACT_CD_ISS_NM 	--문제중요도
                        , T.MC_PART_CD  	AS MC_PART_CD_REQ
                        , T.IMPORTANT_CD 	AS IMPORTANT_CD_REQ
                        , T.IMPACT_CD 		AS IMPACT_CD_REQ
                        , FN_CM05M01_CD_TO_NM(T.MC_PART_CD ) 	AS MC_PART_CD_REQ_NM 	--발주요청기계분류
                        , FN_CM05M01_CD_TO_NM(T.IMPORTANT_CD ) 	AS IMPORTANT_CD_REQ_NM 	--발주요청영향도
                        , FN_CM05M01_CD_TO_NM(T.IMPACT_CD) 		AS IMPACT_CD_REQ_NM 	--발주요청중요도
                        , QP.MC_PART_CD  	AS MC_PART_CD_RSLT
                        , QP.IMPORTANT_CD 	AS IMPORTANT_CD_RSLT
                        , QP.IMPACT_CD 		AS IMPACT_CD_RSLT
                        , FN_CM05M01_CD_TO_NM(QP.MC_PART_CD ) 	AS MC_PART_CD_RSLT_NM 	--발주요청기계분류
                        , FN_CM05M01_CD_TO_NM(QP.IMPORTANT_CD ) 	AS IMPORTANT_CD_RSLT_NM 	--발주요청영향도
                        , FN_CM05M01_CD_TO_NM(QP.IMPACT_CD) 		AS IMPACT_CD_RSLT_NM 	--발주요청중요도
                        , QP.RSLT_NO
                        , QP.MEAS_RST
                        , QP.RESLT_RST
                        , QP.ACT_MH
                        , NVL(QP.SAME_TIME_RESULT,'N')  AS SAME_TIME_RESULT	--발주요청서와 결과를 동시에 등록한 자료인면 수정 금지
						, WB.VEND_CD	AS VEND_CD 		-- 발생공급업체
						, BM.CLNT_NM 	AS VEND_CD_NM 	-- 발생공급업체
						, T.ETC_INPUT					--사유가 기타인경우 추가내용 입력
					FROM TB_QM01M01 T
							LEFT OUTER JOIN TB_CM06M01 N1 ON N1.ID = T.REG_ID
							LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID
							LEFT OUTER JOIN TB_CM04M01 N3 ON N3.DEPT_ID = SUBSTR(N2.DEPT_ID, 0, 5)
							LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD
							LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD = SM.CO_CD  AND S.ORDRS_NO = SM.ORDRS_NO
							LEFT OUTER JOIN TB_WB24M02 WB ON WB.ISS_NO = T.ISS_NO
							LEFT OUTER JOIN TB_BM02M01 CT ON CT.CLNT_CD = SM.ORDRS_CLNT_CD
							LEFT OUTER JOIN TB_BM02M01 BM ON BM.CLNT_CD = WB.VEND_CD
							LEFT OUTER JOIN TB_QM01P01 QP ON QP.REQ_NO = T.REQ_NO
					WHERE 1 = 1
			    <choose>
			        <when test="fileTrgtKey != null and !fileTrgtKey.equals('')">
			         AND  T.FILE_TRGT_KEY = #{fileTrgtKey}
			        </when>
			        <otherwise>
			         AND  T.REQ_NO = #{reqNo}
			        </otherwise>
			    </choose>
			) AS A
	</select>


	<select id="selectQtyReqRespInfo" resultType="CamelMap">
		SELECT A.RSLT_NO
			, A.REQ_NO
			, A.CO_CD
			, (SELECT X.CODE_NM FROM TB_CM05M01 X WHERE X.CODE_ID = A.CO_CD) AS RES_CO_NM
			, TO_CHAR(A.RSLT_DT, 'YYYY-MM-DD') AS RES_DT
			, SUBSTR(B.DEPT_ID, 0, 5) AS DEPT_ID
			, A.DEPT_CD2
			, A.MID_CD
			, A.SUB_CD
			, A.RES_REQ_ID AS RES_REG_ID
			, B.NAME AS RES_REG_NM
			, A.MEAS_RST
			, A.RESLT_RST
			, A.THGH_RST
			, A.RSLT_RMK
			, A.CREAT_ID
			, A.CREAT_PGM
			, A.CREAT_DTTM
			, (
							SELECT CASE
									WHEN (COUNT(TODO_KEY)>0)
										THEN 'Y'
									ELSE 'N'
								END
								FROM TB_WB20M03 W20
							WHERE 1=1
								AND A.RSLT_NO=W20.TODO_NO
						) AS TODO_YN
			, A.ACT_MH
            , A.MC_PART_CD
            , A.IMPORTANT_CD
            , A.IMPACT_CD
            , NVL(A.SAME_TIME_RESULT,'N') AS SAME_TIME_RESULT	--발주요청서와 결과를 동시에 등록한 자료인면 수정 금지
            , A.ETC_INPUT
		FROM TB_QM01P01 A
					LEFT OUTER JOIN TB_CM06M01 B ON A.RES_REQ_ID = B.ID
		WHERE A.RSLT_NO = #{rsltNo}
	</select>

	<select id="selectShareUserlst" parameterType="Map" resultType="camelMap">
		SELECT *
		FROM   (
				SELECT ROWNUM AS RNUM
				     , A.*
				FROM   (
						SELECT A.CO_CD AS WBS_PLANCO_CD
						     , FN_CM05M01_CD_TO_NM(A.CO_CD) WBS_PLANCO_CD_NM
							 , A.ID AS USR_NM
							 , A.EMP_NO AS EMP_NO
							 , A.NAME AS NAME
							 , A.TEL_NO AS TEL_NO
							 , A.EMAIL AS EMAIL
							 , B.DEPT_NM AS DT_NM
							 , D.LEVEL_NM AS JIK
							 , C.TODO_DIV1_CODE_ID AS TODO_DIV1_CODE_ID
							 , DECODE(C.TODO_DIV1_CODE_ID, 'TODODIV10', '공유', 'TODODIV20', '결재', '') AS GB
							 , TO_CHAR(C.TODO_CF_DT, 'YYYY-MM-DD') AS TODO_CF_DT
							 , TO_CHAR(C.CREAT_DTTM, 'YYYY-MM-DD') AS REQ_DATE
							 , C.TODO_CF_OPN
							 , C.SANCTN_STTUS
						FROM   TB_CM06M01 AS A
						       LEFT OUTER JOIN TB_CM07M01 AS D ON A.LEVEL_CD = D.LEVEL_CD
							   INNER JOIN TB_CM04M01 AS B  ON A.DEPT_ID = B.DEPT_ID
							   INNER JOIN TB_WB20M03 AS C  ON A.ID = C.TODO_ID
							                              AND C.TODO_FILE_TRGT_KEY = #{fileTrgtKey}
														  AND C.TODO_NO = #{reqNo}
						WHERE  1 = 1
						<!--기존 프로젝트, 과제, 평가 이슈 및 공유는 TODO_NO 조회만 사용하고 WBS 이슈 및 조치의 공유 및 결재는 FLAG : Y1, Y2 구분해서 사용-->
						<if test="flag.equals('Y1')">
						AND    C.TODO_DIV2_CODE_ID IN ('TODODIV1030','TODODIV2060')
						</if>
						<if test="flag.equals('Y2')">
						AND    C.TODO_DIV2_CODE_ID IN ('TODODIV1090','TODODIV2090')
						</if>
						ORDER BY C.TODO_DIV1_CODE_ID
					   ) AS A
				WHERE  1 = 1
			   ) AS A
		WHERE  1 = 1
	</select>

	<select id="selectSignResCount" parameterType="Map" resultType="int">
		SELECT
			COUNT(*)
		FROM
		(
           	SELECT   A.CO_CD AS CO_CD,
			         A.ID AS ID,
			         A.EMP_NO AS EMP_NO,
					 A.NAME AS USR_NM,
					 A.TEL_NO AS TEL_NO,
					 A.EMAIL AS E_MAIL,
					 B.DEPT_NM AS DT_NM,
					 C.TODO_NO AS RSLT_NO
				<!-- C.REQ_NO AS RES_REQ_NO-->
			FROM
				TB_CM06M01 A
					INNER JOIN TB_CM04M01 B  ON A.DEPT_ID = B.DEPT_ID
					INNER JOIN TB_WB20M03 C  ON A.ID = C.TODO_ID
										    AND C.TODO_NO = #{rsltNo}
										    AND C.TODO_DIV1_CODE_ID = 'TODODIV20'
										    AND C.TODO_DIV2_CODE_ID = 'TODODIV2020'
		 <!--  AND C.REQ_NO= #{reqNo}-->
		 ) A
	</select>

	<select id="selectSignResUserlst" parameterType="Map" resultType="camelMap">
		SELECT *
		FROM (
			SELECT
				ROWNUM AS RNUM, A.*
			FROM
			(
				SELECT   A.CO_CD AS CO_CD,
						A.ID AS WBS_SHARNG_USER_ID,
						A.EMP_NO AS EMP_NO,
						A.NAME AS USR_NM,
						A.TEL_NO AS TEL_NO,
						A.EMAIL AS E_MAIL,
						B.DEPT_NM AS DT_NM,
						C.TODO_NO AS RSLT_NO
				FROM
					TB_CM06M01 A
						INNER JOIN TB_CM04M01 B  ON A.DEPT_ID = B.DEPT_ID
						INNER JOIN TB_WB20M03 C  ON A.ID = C.TODO_ID
												AND C.TODO_NO = #{rsltNo}
												AND C.TODO_DIV1_CODE_ID = 'TODODIV20'
												AND C.TODO_DIV2_CODE_ID = 'TODODIV2020'
				) AS a
			) A
	</select>

	<select id="selectShareResUserlst" parameterType="Map" resultType="camelMap">
		SELECT *
		FROM (
			SELECT
				ROWNUM AS RNUM, A.*
			FROM
			(
				SELECT   A.CO_CD AS CO_CD,
						A.ID AS WBS_SHARNG_USER_ID,
						A.EMP_NO AS EMP_NO,
						A.NAME AS USR_NM,
						A.TEL_NO AS TEL_NO,
						A.EMAIL AS E_MAIL,
						B.DEPT_NM AS DT_NM,
						C.TODO_NO AS RSLT_NO
				FROM
					TB_CM06M01 A
						INNER JOIN TB_CM04M01 B  ON A.DEPT_ID = B.DEPT_ID
						INNER JOIN TB_WB20M03 C  ON A.ID = C.TODO_ID
												AND C.TODO_NO = #{rsltNo}
												AND C.TODO_DIV1_CODE_ID = 'TODODIV10'
												AND C.TODO_DIV2_CODE_ID = 'TODODIV1040'
				) AS a
			) A
	</select>

	<select id="selectShareUserCount" parameterType="Map" resultType="int">
		SELECT
			COUNT(*)
		FROM
		(
           SELECT   A.EMP_NO AS EMPNO,
					A.NAME AS USRNM,
					A.TEL_NO AS TELNO,
					A.EMAIL AS EMAIL,
					B.DEPT_NM AS DTNM
			FROM
				TB_CM06M01 A
					INNER JOIN TB_CM04M01 B  ON A.DEPT_ID = B.DEPT_ID
					INNER JOIN TB_WB20M03 C  ON A.ID = C.TODO_ID
										    AND C.TODO_NO = #{reqNo}
										    AND C.TODO_DIV1_CODE_ID = 'TODODIV10'
										    AND C.TODO_DIV2_CODE_ID = 'TODODIV1040'
		 ) A
	</select>

	<select id="selectSignUserCount" parameterType="Map" resultType="int">
		SELECT
			COUNT(*)
		FROM
		(
           	SELECT   A.CO_CD AS CO_CD,
			         A.ID AS ID,
			         A.EMP_NO AS EMP_NO,
					 A.NAME AS USR_NM,
					 A.TEL_NO AS TEL_NO,
					 A.EMAIL AS E_MAIL,
					 B.DEPT_NM AS DT_NM,
					 C.TODO_NO AS RSLT_NO
					 <!-- C.REQ_NO AS RES_REQ_NO-->
			FROM
				TB_CM06M01 A
				INNER JOIN TB_CM04M01 B on A.DEPT_ID = B.DEPT_ID
				INNER JOIN TB_WB20M03 C ON A.ID = C.TODO_ID
			    AND C.TODO_NO = #{rsltNo}
			    AND C.TODO_DIV1_CODE_ID = 'TODODIV20'
			    AND C.TODO_DIV2_CODE_ID = 'TODODIV2020'
		  <!-- AND C.REQ_NO= #{reqNo}-->
		 ) A
	</select>

	<select id="selectShareUserResCount" parameterType="Map" resultType="int">
		SELECT
			COUNT(*)
		FROM
		(
           	SELECT   A.CO_CD AS CO_CD,
			         A.ID AS ID,
			         A.EMP_NO AS EMP_NO,
					 A.NAME AS USR_NM,
					 A.TEL_NO AS TEL_NO,
					 A.EMAIL AS E_MAIL,
					 B.DEPT_NM AS DT_NM,
					 C.TODO_NO AS RSLT_NO
				<!-- C.REQ_NO AS RES_REQ_NO-->
			FROM
				TB_CM06M01 A
				INNER JOIN TB_CM04M01 B on A.DEPT_ID = B.DEPT_ID
				INNER JOIN TB_WB20M03 C on A.ID = C.TODO_ID
		    AND C.TODO_NO = #{rsltNo}
		    AND C.TODO_DIV1_CODE_ID = 'TODODIV10'
		    AND C.TODO_DIV2_CODE_ID = 'TODODIV1040'
		 <!--  AND C.REQ_NO= #{reqNo}-->
		 ) A
	</select>

	<select id="selectSignUserInfo" parameterType="Map" resultType="camelMap">
	  SELECT A.CO_CD AS CO_CD,
		          A.APP_ID AS ID,
		          B.EMP_NO AS EMP_NO,
		          B.NAME AS USR_NM,
		          B.TEL_NO AS TEL_NO,
		          B.EMAIL AS E_MAIL,
		          B.DEPT_ID AS DT_NM
		FROM TB_BM13M01 A
		LEFT OUTER JOIN TB_CM06M01 B ON A.APP_ID = B.ID AND A.USE_YN = 'Y'
		WHERE 1=1
		AND A.APP_DIV = 'APPDIV02' <!-- 결제선구분 : APPDIV02 발부및 출장요청 결제선 -->
		AND A.CO_CD = #{coCd}
		AND A.APP_ID =  #{userId}
	</select>

	<select id="selectConfirmCount" parameterType="Map" resultType="int">
		SELECT COUNT(FILE_TRGT_KEY) CNT
		FROM TB_SM10M01
		WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</select>

	<update id="updateQualityReq" parameterType="Map">
		UPDATE TB_QM01M01
		SET   REQ_CD = #{REQCD}  /*요청구분*/
			 ,ORDRG_DT = to_date(#{ordrgDt}, 'YYYY-MM-DD')  /*발행일자*/
			 ,REQ_DT = to_date(#{reqDt}, 'YYYY-MM-DD')  /*사내요구일자*/
			 ,CUST_REQ_DT = to_date(#{custReqDt}, 'YYYY-MM-DD')  /*고객요구일자*/
			 ,SALES_CD = #{salesCd}
			 ,BUST_CD = #{bustCd, jdbcType=VARCHAR} /*출장자*/
			 ,BUST_NM = #{bustNm, jdbcType=VARCHAR} /*출장자명*/
		     ,INWK_CD = #{inwkCd, jdbcType=VARCHAR} /*사내작업*/
		     ,BUST_PE = #{bustPe, jdbcType=VARCHAR} /*출장장소*/
		     ,PART_CD = #{COBTP} /*분류*/
		     ,MID_CD = #{midCd} /*중분류*/
		     ,SUB_CD = #{CODECOBGB} /*소분류*/
		     ,REQ_RMK = #{reqRmk, jdbcType=VARCHAR} /*비고*/
		     ,UDT_ID  = #{userId}
			 ,UDT_PGM = #{pgmId}
			 ,UDT_DTTM = SYSDATE
			 ,DEPT_CD  = #{deptCd}
			 ,DEPT_CD2 = #{deptCd2}
			 ,SCD_STS  = #{scdSts}
			 ,ACT_COMP_DTTM  			= to_timestamp(replace(#{actCompDttm, jdbcType=VARCHAR}, 'T', ' '), 'YYYY-MM-DD HH24:MI')
			 ,ACT_COMP_DGN_FILE_NM  	= #{actCompDgnFileNm, jdbcType=VARCHAR}
			 ,MC_PART_CD		= #{mcPartCd, jdbcType=VARCHAR}
			 ,IMPORTANT_CD		= #{importantCd, jdbcType=VARCHAR}
			 ,IMPACT_CD   		= #{impactCd, jdbcType=VARCHAR}
		WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</update>

	<update id="updateQualityResp" parameterType="Map">
		UPDATE TB_QM01P01
		SET RSLT_DT 	=  to_date(#{resDt}, 'YYYY-MM-DD'),
			DEPT_CD 	= #{resDeptCd, jdbcType=VARCHAR},
			DEPT_CD2	= #{copArr, jdbcType=VARCHAR},
			MID_CD 		= #{resMidCd, jdbcType=VARCHAR},
			SUB_CD 		= #{CODECOBGB},
			RES_REQ_ID 	= #{resRegId, jdbcType=VARCHAR},
			MEAS_RST 	= #{measRst, jdbcType=VARCHAR},
			RESLT_RST 	= #{resltRst, jdbcType=VARCHAR},
			THGH_RST 	= #{thghRst, jdbcType=VARCHAR},
			RSLT_RMK 	= #{rsltRmk, jdbcType=VARCHAR},
			UDT_ID 		= #{userId},
			UDT_PGM 	= #{pgmId},
			UDT_DTTM 	= SYSDATE,
			ACT_MH  	= #{actMh, jdbcType=VARCHAR},
		    MC_PART_CD	= #{mcPartCd, jdbcType=VARCHAR},
		    IMPORTANT_CD= #{importantCd, jdbcType=VARCHAR},
		    IMPACT_CD   = #{impactCd, jdbcType=VARCHAR},		    
		    SAME_TIME_RESULT = #{sameTimeResult, jdbcType=VARCHAR}
		WHERE RSLT_NO = #{rsltNo}
	</update>

	<update id="updateReqRsltChg" parameterType="Map">
		UPDATE TB_QM01M01
		SET RSLT_YN = 'Y' <!-- 실적등록 여부 갱신 -->
		WHERE REQ_NO = #{reqNo}
	</update>

	<select id="selectQualityReqSeqNext" parameterType="Map" resultType="int">
		SELECT TB_QM01M01_SQ01.NEXTVAL FROM DUAL
	</select>

	<select id="selectQualityReqCalNext" parameterType="Map" resultType="String">
		<!--   SELECT 'REQ' || TO_CHAR(SYSDATE,'YY') || '-' || LPAD(NVL(MAX(REQ_NO),0)+1,4,0) -->
		SELECT CASE WHEN MAX(REQ_NO) IS NULL THEN  'REQ' || TO_CHAR(SYSDATE,'YY') || '00001'
               ELSE 'REQ' || TO_CHAR(SYSDATE,'YY') || LPAD(SUBSTR(NVL(MAX(REQ_NO),0),7,10)+1,5,0) END AS REQ_NO
		FROM   TB_QM01M01
	</select>

	<insert id="insertQualityReq" parameterType="Map">
		INSERT INTO   TB_QM01M01
		(   FILE_TRGT_KEY,
			REQ_NO,
			CO_CD,
			ORDRG_DT,
			ORDRG_ID,
			REG_ID,
			SALES_CD,
			REQ_CD,
			REQ_DT,
			CUST_REQ_DT,
			BUST_CD,
			BUST_NM,
			INWK_CD,
			BUST_PE,
			PART_CD,
			REQ_RMK,
			MID_CD,
			SUB_CD,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			DEPT_CD,
			DEPT_CD2,
			SCD_STS,
			ISS_NO,
			ACT_COMP_DTTM,
			ACT_COMP_DGN_FILE_NM,
		    MC_PART_CD,
		    IMPORTANT_CD,
		    IMPACT_CD
		)VALUES(
			#{fileTrgtKey},
			#{reqNo},
			#{coCd},
			to_date(#{ordrgDt}, 'YYYY-MM-DD'),
			#{ordrgId},
			#{regId},
			#{salesCd},
			#{REQCD},
			to_date(#{reqDt}, 'YYYY-MM-DD'),
			to_date(#{custReqDt}, 'YYYY-MM-DD'),
			#{bustCd, jdbcType=VARCHAR},
			#{bustNm, jdbcType=VARCHAR},
			#{inwkCd, jdbcType=VARCHAR},
			#{bustPe, jdbcType=VARCHAR},
			#{COBTP},
			#{reqRmk, jdbcType=VARCHAR}, <!--null #{reqRmk, jdbcType=VARCHAR}-->
			#{midCd},
			#{CODECOBGB},
			#{userId},
			#{pgmId},
			SYSDATE,
			#{deptCd},
			#{deptCd2},
			#{scdSts},
			#{issNo, jdbcType=VARCHAR},
			to_timestamp(replace(#{actCompDttm, jdbcType=VARCHAR}, 'T', ' '), 'YYYY-MM-DD HH24:MI'),
			#{actCompDgnFileNm, jdbcType=VARCHAR},
		    #{mcPartCd, jdbcType=VARCHAR},
		    #{importantCd, jdbcType=VARCHAR},
		    #{impactCd, jdbcType=VARCHAR}
		)
	</insert>

	<select id="selectApprovalChk" parameterType="Map" resultType="String">
		SELECT MAX(SANCTN_STTUS) AS SANCTN_STTUS
		  FROM TB_WB20M03
		 WHERE 1=1
		   AND TODO_NO = #{reqNo}
		   AND TODO_DIV1_CODE_ID = 'TODODIV20'
	</select>

	<delete id="deleteQualityReq" parameterType="Map">
		DELETE TB_QM01M01 WHERE FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>

	<delete id="deleteQualityResp" parameterType="Map">
		DELETE TB_QM01P01 WHERE RSLT_NO = #{rsltNo}
	</delete>

	<insert id="insertQualityResp" parameterType="Map">
		INSERT INTO   TB_QM01P01
		(   RSLT_NO,
			REQ_NO,
			CO_CD,
			RSLT_DT,
			DEPT_CD,
			DEPT_CD2,
			MID_CD,
			SUB_CD,
			RES_REQ_ID,
			MEAS_RST,
			RESLT_RST,
			THGH_RST,
			RSLT_RMK,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			ACT_MH,
		    MC_PART_CD,
		    IMPORTANT_CD,
		    IMPACT_CD,
		    SAME_TIME_RESULT
		)VALUES(
			#{rsltNo},
			#{reqNo},
			#{coCd},
			to_date(#{resDt}, 'YYYY-MM-DD'),
			#{resDeptCd, jdbcType=VARCHAR},
			#{copArr, jdbcType=VARCHAR},
			#{resMidCd, jdbcType=VARCHAR},
			#{CODECOBGB},
			#{resRegId, jdbcType=VARCHAR},
			#{measRst, jdbcType=VARCHAR},
			#{resltRst, jdbcType=VARCHAR},
			#{thghRst, jdbcType=VARCHAR},
			#{rsltRmk, jdbcType=VARCHAR},
			#{resRegId},
			#{pgmId},
			SYSDATE,
			#{actMh, jdbcType=VARCHAR},
		    #{mcPartCd, jdbcType=VARCHAR},
		    #{importantCd, jdbcType=VARCHAR},
		    #{impactCd, jdbcType=VARCHAR},
			#{sameTimeResult, jdbcType=VARCHAR}
		)
	</insert>

	<select id="selectApprovalList" parameterType="Map" resultType="camelMap">
    	SELECT X.CO_CD, X.APP_ID, X.APP_SEQ, Y.EMP_NO,
         		 Y.NAME, Y.TEL_NO, Y.EMAIL
          FROM (
			      SELECT CO_CD, APP_ID, APP_SEQ
			        FROM TB_BM13M01
			       WHERE CO_CD 		= #{coCd}
			         AND APP_DIV 	= 'APPDIV02'
			         AND ID 		= #{userId} 
			    ) X
		    		INNER JOIN TB_CM06M01 Y  ON X.CO_CD  = Y.CO_CD
		    								AND X.APP_ID = Y.ID
        ORDER BY X.APP_SEQ ASC
	</select>

	<select id="deleteWbsSharngListChk" parameterType="Map" resultType="camelMap">
        SELECT *  
          FROM TB_WB20M03
         WHERE SALES_CD  = #{salesCd}
           AND TODO_NO  = #{reqNo}
          <if test="histNo != null and !histNo.equals('')" >
          AND ETC_FIELD2  = #{histNo}
          </if>
	</select>

	<delete id="deleteWbsSharngList" parameterType="Map">
        DELETE 
          FROM TB_WB20M03
         WHERE SALES_CD  = #{salesCd}
           AND TODO_NO  = #{reqNo}
	</delete>

	<select id="deleteWbsApprovalListChk" parameterType="Map" resultType="camelMap">
       SELECT *  
         FROM TB_WB20M03
        WHERE SALES_CD  = #{salesCd}
          AND TODO_NO  = #{reqNo}
          AND TODO_ID != #{userId}
          AND SANCTN_STTUS = 'Y'
	</select>

	<delete id="deleteWbsApprovalList" parameterType="Map">
		DELETE 
		  FROM TB_WB20M03
		 WHERE SALES_CD  = #{salesCd}
		   AND TODO_NO  = #{reqNo}
	</delete>

	<insert id="insertWbsSharngList" parameterType="Map">
		<selectKey keyProperty="toDoKey" resultType="Int" order="BEFORE">
			SELECT NVL(MAX(TODO_KEY), 0) + 1 FROM TB_WB20M03
		</selectKey>
		INSERT INTO TB_WB20M03
		(
			TODO_KEY,
			SANCTN_SN,
			CO_CD,
			TODO_DIV1_CODE_ID,
			TODO_DIV2_CODE_ID,
			TODO_ID,
			SALES_CD,
			PG_PATH,
			TODO_FILE_TRGT_KEY,
			TODO_CO_CD,
			TODO_NO,
			CREAT_ID,
			CREAT_PGM,
			CREAT_DTTM,
			PG_PARAM,
			TODO_TITL,
			ETC_FIELD2,
			ETC_FIELD3,
			TODO_CODE_ID
		)
		VALUES
		(
			#{toDoKey},
			#{sanCtnSn},
			#{coCd},
			#{todoDiv1CodeId},
			#{todoDiv2CodeId},
			#{usrNm},
			#{salesCd, jdbcType=VARCHAR},
			#{pgPath},
			#{fileTrgtKey},
			#{todoCoCd},
			#{reqNo},
			#{userId},
			#{pgmId},
			 ( SELECT nvl(max(CREAT_DTTM), SYSDATE)  AS LAST_DTTM
				 FROM TB_WB20M03 T
			    WHERE T.TODO_FILE_TRGT_KEY = #{fileTrgtKey}
				  AND T.TODO_NO            = #{reqNo}
				  AND T.CREAT_PGM          = #{pgmId, jdbcType=VARCHAR}
             	  <if test="histNo != null and !histNo.equals('')" >
				  AND T.ETC_FIELD2         = #{histNo, jdbcType=VARCHAR}
             	  </if>
			 ),
			#{pgParam},
			(SELECT #{todoTitle, jdbcType=VARCHAR}||' ' ||FN_CR02_KAKAO_TITLE_NM(#{reqNo}, #{histNo, jdbcType=VARCHAR}) FROM DUAL),
			#{histNo, jdbcType=VARCHAR},
			'N',
			'insertWbsSharngList'
		)
	</insert>

	<update id="updateWb24SharngList1" parameterType="Map">
		UPDATE TB_WB20M03
		SET    ETC_FIELD3 = 'DEL'
		WHERE  SALES_CD = #{salesCd}
		AND    TODO_NO = #{reqNo}
		AND    TODO_DIV2_CODE_ID = 'TODODIV1030'
	</update>

	<update id="insertWb24SharngList" parameterType="Map">
		MERGE INTO TB_WB20M03 AS T
		USING DUAL AS D
		ON (
				T.TODO_DIV2_CODE_ID  = #{todoDiv2CodeId}
			AND T.TODO_ID            = #{usrNm}
			AND T.TODO_FILE_TRGT_KEY = #{fileTrgtKey}
			AND T.TODO_NO            = #{reqNo}
			)
		WHEN MATCHED THEN
			UPDATE
			SET T.ETC_FIELD3 = 'KAKAO'
		WHEN NOT MATCHED THEN
			INSERT
			( T.TODO_KEY
			, T.SANCTN_SN
			, T.CO_CD
			, T.TODO_DIV1_CODE_ID
			, T.TODO_DIV2_CODE_ID
			, T.TODO_ID
			, T.SALES_CD
			, T.PG_PATH
			, T.TODO_FILE_TRGT_KEY
			, T.TODO_CO_CD
			, T.TODO_NO
			, T.PG_PARAM
			, T.TODO_TITL
			, T.ETC_FIELD3
			, T.CREAT_ID
			, T.CREAT_PGM
			, T.CREAT_DTTM
			, T.TODO_CODE_ID )
			VALUES
			( ( SELECT NVL(MAX(TODO_KEY), 0) + 1 FROM TB_WB20M03 )
			, #{sanCtnSn, jdbcType=VARCHAR}
			, #{coCd, jdbcType=VARCHAR}
			, #{todoDiv1CodeId, jdbcType=VARCHAR}
			, #{todoDiv2CodeId, jdbcType=VARCHAR}
			, #{usrNm, jdbcType=VARCHAR}
			, #{salesCd, jdbcType=VARCHAR}
			, #{pgPath, jdbcType=VARCHAR}
			, #{fileTrgtKey, jdbcType=VARCHAR}
			, #{todoCoCd, jdbcType=VARCHAR}
			, #{reqNo, jdbcType=VARCHAR}
			, #{pgParam, jdbcType=VARCHAR}
			, #{todoTitle, jdbcType=VARCHAR}
			, 'N'
			, #{userId, jdbcType=VARCHAR}
			, #{pgmId, jdbcType=VARCHAR}
			, ( SELECT nvl(max(CREAT_DTTM), SYSDATE)  AS LAST_DTTM
				  FROM TB_WB20M03 T
				 WHERE T.TODO_FILE_TRGT_KEY = #{fileTrgtKey}
				   AND T.TODO_NO            = #{reqNo}
				   AND T.CREAT_PGM          = #{pgmId, jdbcType=VARCHAR}
             	  <if test="histNo != null and !histNo.equals('')" >
				  AND T.ETC_FIELD2         = #{histNo, jdbcType=VARCHAR}
             	  </if>
              )
			, 'insertWb24SharngList')
    </update>
    
<!-- insertWb24SharngList 와 기능 중복됨 남장섭, 24,11,06-->
<!-- 	<select id="insertWb24SharngList1" statementType="CALLABLE" parameterType="map"> -->
<!-- 		{call SP_WB20M03_MERGE_IU( -->
<!-- 	        #{coCd          , mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{sanCtnSn      , mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{todoDiv1CodeId, mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{todoDiv2CodeId, mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{usrNm         , mode=IN, jdbcType=VARCHAR}, -->
<!-- 	        #{salesCd       , mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{pgPath        , mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{fileTrgtKey   , mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{todoCoCd      , mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{reqNo         , mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{pgParam       , mode=IN, jdbcType=VARCHAR}, -->
<!-- 			#{todoTitle     , mode=IN, jdbcType=VARCHAR}, -->
<!-- 	        #{userId        , mode=IN, jdbcType=VARCHAR}, -->
<!-- 	        #{pgmId         , mode=IN, jdbcType=VARCHAR}, -->
<!-- 	        #{errMsg        , mode=OUT, jdbcType=VARCHAR} -->
<!-- 	    )} -->
<!--     </select> -->

	<delete id="deleteWb24SharngList1" parameterType="Map">
		DELETE
		FROM  TB_WB20M03
		WHERE SALES_CD  = #{salesCd}
		AND   TODO_NO  = #{reqNo}
		AND   TODO_DIV2_CODE_ID = 'TODODIV1030'
		AND   TODO_FILE_TRGT_KEY = #{issFileTrgtKey}
		AND   TRIM(ETC_FIELD3) = 'DEL'
	</delete>

	<update id="updateWb24ApprovalList1" parameterType="Map">
		UPDATE TB_WB20M03
		SET    ETC_FIELD3 = 'DEL'
		WHERE  SALES_CD = #{salesCd}
		AND    TODO_NO = #{reqNo}
		AND    TODO_DIV2_CODE_ID = 'TODODIV2060'
	</update>

	<delete id="deleteWb24ApprovalList1" parameterType="Map">
		DELETE
		FROM  TB_WB20M03
		WHERE SALES_CD  = #{salesCd}
		AND   TODO_NO  = #{reqNo}
		AND   TODO_DIV2_CODE_ID = 'TODODIV2060'
		AND   TODO_FILE_TRGT_KEY = #{issFileTrgtKey}
		AND   TRIM(ETC_FIELD3) = 'DEL'
	</delete>

	<update id="updateWb24SharngList2" parameterType="Map">
		UPDATE TB_WB20M03
		SET    ETC_FIELD3 = 'DEL'
		WHERE  SALES_CD = #{salesCd}
		AND    TODO_NO = #{reqNo}
		AND    TODO_DIV2_CODE_ID = 'TODODIV1090'
	</update>

	<delete id="deleteWb24SharngList2" parameterType="Map">
		DELETE
		FROM  TB_WB20M03
		WHERE SALES_CD  = #{salesCd}
		AND   TODO_NO  = #{reqNo}
		AND   TODO_DIV2_CODE_ID = 'TODODIV1090'
		AND   TODO_FILE_TRGT_KEY = #{issFileTrgtKey}
		AND   TRIM(ETC_FIELD3) = 'DEL'
	</delete>

	<update id="updateWb24ApprovalList2" parameterType="Map">
		UPDATE TB_WB20M03
		SET    ETC_FIELD3 = 'DEL'
		WHERE  SALES_CD = #{salesCd}
		AND    TODO_NO = #{reqNo}
		AND    TODO_DIV2_CODE_ID = 'TODODIV2090'
	</update>

	<delete id="deleteWb24ApprovalList2" parameterType="Map">
		DELETE
		FROM  TB_WB20M03
		WHERE SALES_CD  = #{salesCd}
		AND   TODO_NO  = #{reqNo}
		AND   TODO_DIV2_CODE_ID = 'TODODIV2090'
		AND   TODO_FILE_TRGT_KEY = #{issFileTrgtKey}
		AND   TRIM(ETC_FIELD3) = 'DEL'
	</delete>

<!-- 요청자와 결재자가 동일한경우에 처리하기 위함 (ex.팀장이 생성할경우 본인작성건 본인이 결재해야함) -->
	<insert id="insertWbsApprovalList" parameterType="Map">
        <selectKey keyProperty="toDoKey" resultType="Int" order="BEFORE">
            SELECT NVL(MAX(TODO_KEY), 0) + 1 AS TODO_KEY FROM TB_WB20M03
        </selectKey>
    <choose>
        <when test="userId == usrNm">
        --생성자와 결재자가 동일하면 결재완료로 등록하기
	        INSERT INTO TB_WB20M03
	        (
	            TODO_KEY,
	            SANCTN_SN,
	            CO_CD,
	            TODO_DIV1_CODE_ID,
	            TODO_DIV2_CODE_ID,
	            TODO_ID,
	            SALES_CD,
	            PG_PATH,
	            TODO_FILE_TRGT_KEY,
	            TODO_CO_CD,
	            TODO_NO,
	            CREAT_ID,
	            CREAT_PGM,
	            CREAT_DTTM,
	            PG_PARAM,
	            TODO_TITL,
	            ETC_FIELD2,
				ETC_FIELD3,
				TODO_CODE_ID,
				TODO_CF_DT, 
				TODO_CF_OPN, 
				SANCTN_STTUS
	        )
	        VALUES
	        (
	            #{toDoKey},
	            #{sanCtnSn},
	            #{coCd},
	            #{todoDiv1CodeId},
	            #{todoDiv2CodeId},
	            #{usrNm},
	            #{salesCd, jdbcType=VARCHAR},
	            #{pgPath},
	            #{fileTrgtKey},
	            #{todoCoCd},
	            #{reqNo},
	            #{userId},
	            #{pgmId},
				  ( SELECT nvl(max(CREAT_DTTM), SYSDATE)  AS LAST_DTTM
					  FROM TB_WB20M03 T
					 WHERE T.TODO_FILE_TRGT_KEY = #{fileTrgtKey}
					   AND T.TODO_NO            = #{reqNo}
					   AND T.CREAT_PGM          = #{pgmId, jdbcType=VARCHAR}
	             	  <if test="histNo != null and !histNo.equals('')" >
					  AND T.ETC_FIELD2         = #{histNo, jdbcType=VARCHAR}
	             	  </if>
	              ),
	            #{pgParam},
	            #{todoTitle, jdbcType=VARCHAR},
	            #{histNo, jdbcType=VARCHAR},
				'N',
				'insertWbsApprovalLi-',
				SYSDATE,
				'',
				'Y'
	        )
        </when>
        <otherwise>
	        INSERT INTO TB_WB20M03
	        (
	            TODO_KEY,
	            SANCTN_SN,
	            CO_CD,
	            TODO_DIV1_CODE_ID,
	            TODO_DIV2_CODE_ID,
	            TODO_ID,
	            SALES_CD,
	            PG_PATH,
	            TODO_FILE_TRGT_KEY,
	            TODO_CO_CD,
	            TODO_NO,
	            CREAT_ID,
	            CREAT_PGM,
	            CREAT_DTTM,
	            PG_PARAM,
	            TODO_TITL,
	            ETC_FIELD2,
				ETC_FIELD3,
				TODO_CODE_ID
	        )
	        VALUES
	        (
	            #{toDoKey},
	            #{sanCtnSn},
	            #{coCd},
	            #{todoDiv1CodeId},
	            #{todoDiv2CodeId},
	            #{usrNm},
	            #{salesCd, jdbcType=VARCHAR},
	            #{pgPath},
	            #{fileTrgtKey},
	            #{todoCoCd},
	            #{reqNo},
	            #{userId},
	            #{pgmId},
				  ( SELECT nvl(max(CREAT_DTTM), SYSDATE)  AS LAST_DTTM
					  FROM TB_WB20M03 T
					 WHERE T.TODO_FILE_TRGT_KEY = #{fileTrgtKey}
					   AND T.TODO_NO            = #{reqNo}
					   AND T.CREAT_PGM          = #{pgmId, jdbcType=VARCHAR}
	             	  <if test="histNo != null and !histNo.equals('')" >
					  AND T.ETC_FIELD2         = #{histNo, jdbcType=VARCHAR}
	             	  </if>
	              ),
	            #{pgParam},
	            #{todoTitle, jdbcType=VARCHAR},
	            #{histNo, jdbcType=VARCHAR},
				'N',
				'insertWbsApprovalLi-'
	        )
        </otherwise>
    </choose>
	</insert>
	

	<select id="selectCodeMaxCount" parameterType="Map" resultType="int">
		SELECT MAX(CNT)
		FROM
				(
					SELECT SUM(CNT) AS CNT
						, CODE1
					FROM
							(
								SELECT M.CODE_ID AS CODE_ID
									, (
											SELECT COUNT(*) FROM TB_CM05M01 S
											WHERE S.CODE_KIND =  M.CODE_ID
											AND LENGTH(S.CODE_ID) = 9
										) AS CNT
									, SUBSTR(M.CODE_ID,0, 6) AS CODE1
								FROM TB_CM05M01 M
								WHERE M.CODE_KIND LIKE 'COBGB%'
								AND LENGTH(M.CODE_ID) = 7
							)

					GROUP BY CODE1
				) A
	</select>

	<select id="selectMainCodeList" resultType="CamelMap">
		SELECT ROWNUM AS RNUM, B.*
        FROM (
          SELECT
                     A.CODE_KIND
                     ,A.MID_CD
                     ,A.MID_NM
                     ,CASE WHEN A.SUB_CNT > 1 AND SUBSTR(A.SUB_CD,-1) > 1 THEN ' ' ELSE A.MID_NM END AS MID_NM2
                     ,A.SUB_CD
                     ,A.SUB_NM
                     ,A.SUB_CNT
	      FROM
	      ( SELECT M.CODE_KIND AS CODE_KIND,
	               M.CODE_ID AS MID_CD,
			       M.CODE_NM AS MID_NM,
			       S.CODE_ID AS SUB_CD,
			       S.CODE_NM AS SUB_NM,
			       M.CNT AS SUB_CNT
			FROM TB_CM05M01 S,
			(SELECT M.CODE_ID,
				    M.CODE_NM,
				    M.CODE_KIND
				    ,(SELECT COUNT(*) FROM TB_CM05M01 S WHERE S.CODE_KIND =  M.CODE_ID) AS CNT
			 FROM TB_CM05M01 M
			 WHERE 1=1
			       AND M.USE_YN = 'Y'
			      <if test="codeKind != null and !codeKind.equals('')">
					AND M.CODE_KIND = #{codeKind}
				  </if>
			)M
			WHERE 1=1
			<!-- <if test="codeKind != null and !codeKind.equals('')"> -->
			<!-- AND S.CODE_KIND LIKE '${codeKind}%' -->
			<!-- </if> -->
			AND M.CODE_ID = S.CODE_KIND
			AND S.USE_YN = 'Y'
			ORDER BY M.CODE_ID,S.CODE_ID )A
			) B
	</select>

	<select id="selectShareUserInfo" parameterType="Map" resultType="camelMap">
	    SELECT  A.CO_CD AS CO_CD,
	    		C.CODE_NM AS CO_NM,
				A.ID AS ID,
		        A.EMP_NO AS EMP_NO,
				A.NAME AS USR_NM,
				A.TEL_NO AS TEL_NO,
				A.EMAIL AS EMAIL,
				B.DEPT_NM AS DT_NM
			FROM
				TB_CM06M01 A
				INNER JOIN TB_CM04M01 B on A.DEPT_ID = B.DEPT_ID
				INNER JOIN TB_CM05M01 C ON A.CO_CD = C.CODE_ID
				AND	A.USE_YN = 'Y'
			    AND A.CO_CD = #{coCd}
			    AND A.ID =  #{userId}
	</select>

	<select id="selectPurchaseListPopCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)
	   	  FROM (
		SELECT
			ROWNUM AS RNUM, A.*,
			(SELECT FN_CM05M01_CD_TO_NM(A.BUST_CD01) FROM DUAL) AS BUST_NM01,
            (SELECT FN_CM05M01_CD_TO_NM(A.BUST_CD02) FROM DUAL) AS BUST_NM02,
	        (SELECT FN_CM05M01_CD_TO_NM(A.INWK_CD01) FROM DUAL) AS INWK_NM01,
            (SELECT FN_CM05M01_CD_TO_NM(A.INWK_CD02) FROM DUAL) AS INWK_NM02
		FROM
		(
			   SELECT     T.FILE_TRGT_KEY AS FILE_TRGT_KEY,
				          T.CO_CD AS CO_CD,
				          T.REQ_NO AS REQ_NO,
				          P.RSLT_NO AS RSLT_NO,
		 				  CASE WHEN INSTR(T.BUST_CD, ',', 1, 1) = 0 THEN T.BUST_CD
		                       ELSE SUBSTR(T.BUST_CD, 1, INSTR(T.BUST_CD, ',', 1, 1)-1)
		                   END BUST_CD01,
			              CASE WHEN INSTR(T.BUST_CD, ',', 1, 2) = 0 THEN ''
			                   ELSE SUBSTR(T.BUST_CD, INSTR(T.BUST_CD, ',', 1, 1)+1, (INSTR(T.BUST_CD, ',', 1, 2)-1) - INSTR(T.BUST_CD, ',', 1, 1))
			               END BUST_CD02,
		                  CASE WHEN INSTR(T.INWK_CD, ',', 1, 1) = 0 THEN T.INWK_CD
		                       ELSE SUBSTR(T.INWK_CD, 1, INSTR(T.INWK_CD, ',', 1, 1)-1)
		                   END INWK_CD01,
		             	  CASE WHEN INSTR(T.INWK_CD, ',', 1, 2) = 0 THEN ''
		                       ELSE SUBSTR(T.INWK_CD, INSTR(T.INWK_CD, ',', 1, 1)+1, (INSTR(T.INWK_CD, ',', 1, 2)-1) - INSTR(T.INWK_CD, ',', 1, 1))
		                   END INWK_CD02,
				          NVL(T.SALES_CD,' ') AS SALES_CD,
				          T.REQ_ST AS REQ_ST,
				          T.REQ_CD AS REQ_CD,
				          (SELECT FN_CM05M01_CD_TO_NM(T.REQ_CD) FROM DUAL) AS REQ_NM,
				          T.REG_ID AS REQ_ID,
				          T.ORDRG_ID AS ORDRG_ID,
				          T.DEPT_CD AS DEPT_CD,
				          T.MID_CD AS MID_CD,
				          T.SUB_CD AS SUB_CD,
				          T.STAT_YM,
				          SM.ORDRS_CLNT_CD AS CLNT_CD,
				          P.CREAT_ID AS CREAT_ID,
				          T.PART_CD AS COBTB_CD,
				          S.ITEM_DIV AS ITEM_DIV,
				          FN_CM05M01_CD_TO_NM(S.ITEM_DIV) AS ITEM_DIV_NM,
				          S.PRDT_CD AS PRDT_CD,
		         		  B.PRDT_NM AS PRDT_NM,
		          		  B.PRDT_GRP AS PRDT_CD1,
				          TO_CHAR(T.ORDRG_DT, 'YYYY-MM-DD') AS ORDRG_DT,
				          T.RSLT_YN AS RSLT_YN,
				          DECODE(T.REQ_CD,'REQCD01','Y',' ') AS REQ_1YN,
				          DECODE(T.REQ_CD,'REQCD02','Y',' ') AS REQ_2YN,
						  N1.NAME AS REG_NM,
						  N2.NAME AS ORDRG_NM,
					      C3.CODE_NM AS DEPT_NM,
						  C4.CODE_NM AS MID_NM,
						  C5.CODE_NM AS SUB_NM,
				          CT.CLNT_NM AS CLNT_NM,
				          SM.CLNT_PJT AS CLNT_PJT_CD,
		          		  C7.CODE_NM AS CLNT_PJT,    --고객사 프로젝트코드명
				          T.SALES_CD AS MATR_DRW_NO,
				          NVL(S.EQP_NM,' ') AS EQP_NM,
				          C6.CODE_NM AS PART_NM,
				          C.CODE_NM AS CODE_NM,
				          T.REQ_RMK AS REQ_RMK,
				          TO_CHAR(P.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM,
				          N3.NAME AS CREAT_NM,
				          NVL(P.RESLT_RST,' ')  AS RESLT_RST,
				          NVL(P.SUB_CD, '') AS RESLT_SUB_CD
				FROM TB_QM01M01 T
				 LEFT OUTER JOIN TB_QM01P01 P ON P.REQ_NO = T.REQ_NO
				 LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD
				 LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD =  SM.CO_CD  AND S.ORDRS_NO = SM.ORDRS_NO
				 LEFT OUTER JOIN TB_BM01M01 B ON S.PRDT_CD = B.PRDT_CD
				 LEFT OUTER JOIN TB_CM05M01 C ON C.CODE_ID  = T.REQ_ST AND C.USE_YN='Y' AND C.CODE_KIND = 'REQST'
				 LEFT OUTER JOIN TB_CM05M01 C3 ON C3.CODE_ID = T.DEPT_CD AND C3.USE_YN='Y' AND C3.CODE_KIND = 'COBGB'
				 LEFT OUTER JOIN TB_CM05M01 C4 ON C4.CODE_ID = T.MID_CD AND C4.USE_YN='Y'
				 LEFT OUTER JOIN TB_CM05M01 C5 ON C5.CODE_ID = T.SUB_CD AND C5.USE_YN='Y'
				 LEFT OUTER JOIN TB_CM05M01 C6 ON C6.CODE_ID = T.PART_CD AND C6.USE_YN='Y' AND C6.CODE_KIND = 'COBTP'
			 	 LEFT OUTER JOIN TB_CM05M01 C7 ON C7.CODE_ID = SM.CLNT_PJT AND C7.USE_YN='Y'
				 LEFT OUTER JOIN TB_CM06M01 N1 ON N1.ID = T.REG_ID  AND N1.CO_CD =  T.CO_CD
				 LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID  AND N2.CO_CD =  T.CO_CD
				 LEFT OUTER JOIN TB_CM06M01 N3 ON N3.ID = T.CREAT_ID  AND N3.CO_CD =  T.CO_CD
				 LEFT OUTER JOIN TB_BM02M01 CT ON CT.CLNT_CD = SM.ORDRS_CLNT_CD AND CT.USE_YN = 'Y'
				 WHERE 1=1
				<if test="coCd !=null and !coCd.equals('')">
				  AND T.CO_CD = #{coCd}
				 </if>
				 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
		          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
		         </if>
		         <if test="reqSt !=null and !reqSt.equals('')">
		          AND T.REQ_ST = #{reqSt}
		         </if>
		         <if test="reqCd !=null and !reqCd.equals('')">
		          AND T.REQ_CD = #{reqCd}
		         </if>
			  	<if test="searchValue != null and !searchValue.equals('') and searchName != null and !searchName.equals('')">
		            AND ${searchName} LIKE '%'||UPPER(#{searchValue})||'%'
		        </if>
		            ORDER BY T.REQ_NO DESC
				 ) AS a
				) A
	</select>

	<select id="selectPurchaseListPop" parameterType="Map" resultType="CamelMap">
	   SELECT *
	   FROM(
		SELECT
			ROWNUM AS RNUM, A.*,
			(SELECT FN_CM05M01_CD_TO_NM(A.BUST_CD01) FROM DUAL) AS BUST_NM01,
            (SELECT FN_CM05M01_CD_TO_NM(A.BUST_CD02) FROM DUAL) AS BUST_NM02,
	        (SELECT FN_CM05M01_CD_TO_NM(A.INWK_CD01) FROM DUAL) AS INWK_NM01,
            (SELECT FN_CM05M01_CD_TO_NM(A.INWK_CD02) FROM DUAL) AS INWK_NM02
		FROM
		(
	   SELECT     T.FILE_TRGT_KEY AS FILE_TRGT_KEY,
		          T.CO_CD AS CO_CD,
		          (SELECT FN_CM05M01_CD_TO_NM(T.CO_CD) FROM DUAL) AS CO_CD_NM,
		          T.REQ_NO AS REQ_NO,
		          P.RSLT_NO AS RSLT_NO,
 				  CASE WHEN INSTR(T.BUST_CD, ',', 1, 1) = 0 THEN T.BUST_CD
                       ELSE SUBSTR(T.BUST_CD, 1, INSTR(T.BUST_CD, ',', 1, 1)-1)
                   END BUST_CD01,
	              CASE WHEN INSTR(T.BUST_CD, ',', 1, 2) = 0 THEN ''
	                   ELSE SUBSTR(T.BUST_CD, INSTR(T.BUST_CD, ',', 1, 1)+1, (INSTR(T.BUST_CD, ',', 1, 2)-1) - INSTR(T.BUST_CD, ',', 1, 1))
	               END BUST_CD02,
                  CASE WHEN INSTR(T.INWK_CD, ',', 1, 1) = 0 THEN T.INWK_CD
                       ELSE SUBSTR(T.INWK_CD, 1, INSTR(T.INWK_CD, ',', 1, 1)-1)
                   END INWK_CD01,
             	  CASE WHEN INSTR(T.INWK_CD, ',', 1, 2) = 0 THEN ''
                       ELSE SUBSTR(T.INWK_CD, INSTR(T.INWK_CD, ',', 1, 1)+1, (INSTR(T.INWK_CD, ',', 1, 2)-1) - INSTR(T.INWK_CD, ',', 1, 1))
                   END INWK_CD02,
		          NVL(T.SALES_CD,' ') AS SALES_CD,
		          T.REQ_ST AS REQ_ST,
		          T.REQ_CD AS REQ_CD,
		          (SELECT FN_CM05M01_CD_TO_NM(T.REQ_CD) FROM DUAL) AS REQ_NM,
		          T.REG_ID AS REQ_ID,
		          T.ORDRG_ID AS ORDRG_ID,
		          T.DEPT_CD AS DEPT_CD,
		          T.MID_CD AS MID_CD,
		          T.SUB_CD AS SUB_CD,
		          T.STAT_YM,
		          SM.ORDRS_CLNT_CD AS CLNT_CD,
		          P.CREAT_ID AS CREAT_ID,
		          T.PART_CD AS COBTB_CD,
		          S.ITEM_DIV AS ITEM_DIV,
		          FN_CM05M01_CD_TO_NM(S.ITEM_DIV) AS ITEM_DIV_NM,
		          S.PRDT_CD AS PRDT_CD,
		          B.PRDT_NM AS PRDT_NM,
		          B.PRDT_GRP AS PRDT_CD1,
		          TO_CHAR(T.ORDRG_DT, 'YYYY-MM-DD') AS ORDRG_DT,
		          T.RSLT_YN AS RSLT_YN,
		          DECODE(T.REQ_CD,'REQCD01','Y',' ') AS REQ_1YN,
		          DECODE(T.REQ_CD,'REQCD02','Y',' ') AS REQ_2YN,
				  N1.NAME AS REG_NM,
				  N2.NAME AS ORDRG_NM,
			      C3.CODE_NM AS DEPT_NM,
				  C4.CODE_NM AS MID_NM,
				  C5.CODE_NM AS SUB_NM,
		          SM.CTRT_NM AS CTRT_NM,
				  SM.ORDRS_CLNT_CD AS CLNT_CD,
		          CT.CLNT_NM AS CLNT_NM,
		          SM.CLNT_PJT AS CLNT_PJT_CD,
		          C7.CODE_NM AS CLNT_PJT,    --고객사 프로젝트코드명
		          T.SALES_CD AS MATR_DRW_NO,
		          NVL(S.EQP_NM,' ') AS EQP_NM,
		          C6.CODE_NM AS PART_NM,
		          C.CODE_NM AS CODE_NM,
		          T.REQ_RMK AS REQ_RMK,
		          TO_CHAR(P.CREAT_DTTM, 'YYYY-MM-DD') AS CREAT_DTTM,
		          N3.NAME AS CREAT_NM,
		          NVL(P.RESLT_RST,' ')  AS RESLT_RST,
		          NVL(P.SUB_CD, '') AS RESLT_SUB_CD,
		          S.ORDRS_NO,
				  T.SCD_STS									AS SCD_STS,
				  (SELECT FN_CM05M01_CD_TO_NM(T.SCD_STS) FROM DUAL) AS SCD_STS_NM,
				  TO_CHAR(T.ACT_COMP_DTTM, 'YYYY-MM-DD HH24:MI:SS') AS ACT_COMP_DTTM,
				  T.ACT_COMP_DGN_FILE_NM
		FROM TB_QM01M01 T
			 LEFT OUTER JOIN TB_QM01P01 P ON P.REQ_NO = T.REQ_NO
			 LEFT OUTER JOIN TB_CR02D02 S ON T.SALES_CD = S.SALES_CD
			 LEFT OUTER JOIN TB_CR02M01 SM ON S.CO_CD =  SM.CO_CD  AND S.ORDRS_NO = SM.ORDRS_NO
			 LEFT OUTER JOIN TB_BM01M01 B ON S.PRDT_CD = B.PRDT_CD
			 LEFT OUTER JOIN TB_CM05M01 C ON C.CODE_ID  = T.REQ_ST AND C.USE_YN='Y' AND C.CODE_KIND = 'REQST'
			 LEFT OUTER JOIN TB_CM05M01 C3 ON C3.CODE_ID = T.DEPT_CD AND C3.USE_YN='Y' AND C3.CODE_KIND = 'COBGB'
			 LEFT OUTER JOIN TB_CM05M01 C4 ON C4.CODE_ID = T.MID_CD AND C4.USE_YN='Y'
			 LEFT OUTER JOIN TB_CM05M01 C5 ON C5.CODE_ID = T.SUB_CD AND C5.USE_YN='Y'
			 LEFT OUTER JOIN TB_CM05M01 C6 ON C6.CODE_ID = T.PART_CD AND C6.USE_YN='Y' AND C6.CODE_KIND = 'COBTP'
			 LEFT OUTER JOIN TB_CM05M01 C7 ON C7.CODE_ID = SM.CLNT_PJT AND C7.USE_YN='Y'
			 LEFT OUTER JOIN TB_CM06M01 N1 ON N1.ID = T.REG_ID  --AND N1.CO_CD =  T.CO_CD
			 LEFT OUTER JOIN TB_CM06M01 N2 ON N2.ID = T.ORDRG_ID  --AND N2.CO_CD =  T.CO_CD
			 LEFT OUTER JOIN TB_CM06M01 N3 ON N3.ID = T.CREAT_ID  --AND N3.CO_CD =  T.CO_CD
			 LEFT OUTER JOIN TB_BM02M01 CT ON CT.CLNT_CD = SM.ORDRS_CLNT_CD AND CT.USE_YN = 'Y'
		 WHERE 1=1
		<if test="coCd !=null and !coCd.equals('')">
		  AND T.CO_CD = #{coCd}
		 </if>
		 <if test="reqDtFrom != null and !reqDtFrom.equals('') and  reqDtTo != null and !reqDtTo.equals('')" >
          AND T.ORDRG_DT BETWEEN TO_DATE( #{reqDtFrom},'YYYY-MM-DD') AND TO_DATE( #{reqDtTo},'YYYY-MM-DD') +1
         </if>
         <if test="reqSt !=null and !reqSt.equals('')">
          AND T.REQ_ST = #{reqSt}
         </if>
         <if test="reqCd !=null and !reqCd.equals('')">
		  AND T.REQ_CD = #{reqCd}
		 </if>
	  	<if test="searchValue != null and !searchValue.equals('') and searchName != null and !searchName.equals('')">
            AND ${searchName} LIKE '%'||UPPER(#{searchValue})||'%'
        </if>

            ORDER BY T.REQ_NO DESC
		 ) AS a
		) A
		WHERE  RNUM BETWEEN #{firstIndex} AND #{lastIndex}
	</select>

	<select id="selectBaljooSttusChk" parameterType="Map" resultType="String">
	   SELECT TODO_NO
	     FROM TB_WB20M03
	    WHERE 1=1
	      AND TODO_FILE_TRGT_KEY = #{todoFileTrgtKey}
	      AND TODO_KEY = #{todoKey}
  	</select>

	<select id="selectApprovalAll" parameterType="Map" resultType="camelMap">
		SELECT A.REQ_NO,
				A.REQ_ST,
				B.RSLT_NO,
				COUNT(CASE WHEN C.SANCTN_STTUS = 'Y' THEN 1 END) AS REQ_SANCTN_STTUS,
				COUNT(C.SANCTN_STTUS) AS REQ_SANCTN_STTUS_SUM,
				(SELECT COUNT(CASE WHEN D.SANCTN_STTUS = 'Y' THEN 1 END) AS SANCTN_STTUS
					FROM TB_WB20M03 D
				WHERE D.TODO_NO = B.RSLT_NO
					AND D.TODO_DIV1_CODE_ID = 'TODODIV20') AS RSLT_SANCTN_STTUS,
				(SELECT COUNT(D.SANCTN_STTUS) AS SANCTN_STTUS
					FROM TB_WB20M03 D
				WHERE D.TODO_NO = B.RSLT_NO
					AND D.TODO_DIV1_CODE_ID = 'TODODIV20') AS RSLT_SANCTN_STTUS_SUM
			FROM TB_QM01M01 A
			LEFT OUTER JOIN TB_QM01P01 B ON B.REQ_NO = A.REQ_NO
			LEFT OUTER JOIN TB_WB20M03 C ON C.TODO_NO = A.REQ_NO
		WHERE C.TODO_DIV1_CODE_ID = 'TODODIV20'
		<if test="reqNo != null and !reqNo.equals('')">
			AND A.REQ_NO = #{reqNo}
		</if>
		<if test="rsltNo != null and !rsltNo.equals('')">
			AND B.RSLT_NO = #{rsltNo}
		</if>
		GROUP BY A.REQ_NO, A.REQ_ST, B.RSLT_NO
		ORDER BY A.REQ_NO DESC
	</select>

	<select id="selectReqStCurrentStatus" parameterType="Map" resultType="String">
		SELECT REQ_ST
		  FROM TB_QM01M01 T
		 WHERE REQ_NO = #{reqNo}
	</select>

	<update id="updateReqSt" parameterType="Map">
	    UPDATE TB_QM01M01
		SET REQ_ST = 'REQST02',
			UDT_ID = #{userId},
			UDT_PGM = #{pgmId},
			UDT_DTTM = SYSDATE
		WHERE REQ_NO = #{reqNo}
	</update>

	<update id="updateReqStRslt" parameterType="Map">
	    UPDATE TB_QM01M01
		SET REQ_ST = 'REQST03',
			UDT_ID = #{userId},
			UDT_PGM = #{pgmId},
			UDT_DTTM = SYSDATE
		WHERE REQ_NO = #{reqNo}
	</update>

	<update id="updateReqStChk" parameterType="Map">
	/* updateReqStChk 발주요청서 상태값 바꾸기 */
	/*    UPDATE TB_QM01M01
		SET REQ_ST = F_QM01RESULT_CHECK(#{coCd}, #{salesCd}, #{todoNo}),
			UDT_ID = #{userId},
			UDT_PGM = #{pgmId},
			UDT_DTTM = SYSDATE
		WHERE REQ_NO = (
						 SELECT REQ_NO
						   FROM (
									SELECT REQ_NO FROM TB_QM01M01 WHERE REQ_NO = #{todoNo}
									UNION ALL
									SELECT REQ_NO FROM TB_QM01P01 WHERE RSLT_NO = #{todoNo}
								)
							GROUP BY REQ_NO
		)*/
	</update>

	<update id="updateCheckDept" parameterType="Map">
		UPDATE TB_QM01M01
		SET WOUT_CF_YN = #{woutCfYn}
			,WOUT_CF_ID = #{userId}
			,WOUT_CF_DT = SYSDATE
		<if test="chkDept1 != null and !chkDept1.equals('')">
			,SALE_CF_YN = #{saleCfYn}
			,SALE_CF_ID = #{userId}
			,SALE_CF_DT = SYSDATE
		</if>
		<if test="chkDept2 != null and !chkDept2.equals('')">
			,DSGN_CF_YN = #{dsgnCfYn}
			,DSGN_CF_ID = #{userId}
			,DSGN_CF_DT = SYSDATE
		</if>
		<if test="chkDept3 != null and !chkDept3.equals('')">
			,MATR_CF_YN = #{matrCfYn}
			,MATR_CF_ID = #{userId}
			,MATR_CF_DT = SYSDATE
		</if>
		<if test="chkDept4 != null and !chkDept4.equals('')">
			,PROD_CF_YN = #{prodCfYn}
			,PROD_CF_ID = #{userId}
			,PROD_CF_DT = SYSDATE
		</if>
		WHERE REQ_NO = #{reqNo}
	</update>

	<select id="deleteWbsSharngListChk1" parameterType="Map" resultType="camelMap">
               SELECT *  FROM TB_WB20M03
                   WHERE SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{reqNo}
                         AND TODO_DIV2_CODE_ID IN ('TODODIV1030','TODODIV2060')
	</select>

	<select id="deleteWbsApprovalListChk1" parameterType="Map" resultType="camelMap">
               SELECT *  FROM TB_WB20M03
                   WHERE SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{reqNo}
                         AND TODO_DIV2_CODE_ID IN ('TODODIV1090','TODODIV2090')
	</select>

	<delete id="deleteWbsSharngList1" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{reqNo}
                         AND TODO_DIV2_CODE_ID = 'TODODIV1030'
	</delete>

	<delete id="deleteWbsSharngList2" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{reqNo}
                         AND TODO_DIV2_CODE_ID = 'TODODIV1090'
	</delete>

	<delete id="deleteWbsApprovalList1" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{reqNo}
                         AND TODO_DIV2_CODE_ID = 'TODODIV2060'
	</delete>

	<delete id="deleteWbsApprovalList2" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{reqNo}
                         AND TODO_DIV2_CODE_ID = 'TODODIV2090'
	</delete>

	<delete id="deleteSJApprovalList1" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE SALES_CD  = #{salesCd}
                         AND TODO_NO  = #{reqNo}
                         AND TODO_DIV2_CODE_ID = 'TODODIV1110'
	</delete>


	<select id="deleteWorkReportSharngList" parameterType="Map" resultType="camelMap">
		DELETE
		FROM  TB_WB20M03
		WHERE TODO_FILE_TRGT_KEY = #{reqNo}
		AND   TODO_NO  = #{reqNo}
		AND    (TODO_DIV2_CODE_ID = 'TODODIV1140' OR TODO_DIV2_CODE_ID = 'TODODIV2140')
	</select>
	
	<delete id="deleteApprovalList" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE TODO_FILE_TRGT_KEY = #{fileTrgtKey}
	</delete>

	
	<delete id="deleteApprovalListTodoNo" parameterType="Map">
               DELETE FROM TB_WB20M03
                   WHERE TODO_FILE_TRGT_KEY = #{fileTrgtKey}
                     AND TODO_NO            = #{reqNo}
	</delete>
	
	<select id="nonOrderStatusList" parameterType="Map" resultType="CamelMap">
	/* 미발주현황 	nonOrderStatusList */
		   SELECT  A.SALES_CD	 					--salesCode
					,D.ORDRS_NO
					,M.ORDRS_CLNT_CD 				--고객사
					,M.CLNT_PJT 					--고객사PJT
					,(SELECT FN_CM05M01_CD_TO_NM(M.CLNT_PJT) FROM DUAL) AS CLNT_PJT_NM
					,NVL(T3.BOM_CNT,0) AS  BOM_CNT	--구매BOM건수
					,NVL(T4.MATR_CNT,0) AS MATR_CNT	--구매BOM자재건수
					,NVL(T2.ORDER_CNT,0) AS  ORDER_CNT	--구매발주건수
					,TO_CHAR(A.ORDRG_DT, 'YYYY-MM-DD') AS ORDRG_DT
					,TO_CHAR(A.REQ_DT, 'YYYY-MM-DD') AS REQ_DT
					,B.CLNT_NM						--고객사
					,D.EQP_NM						--설비명
					,(SELECT FN_CM05M01_CD_TO_NM(A.REQ_ST) FROM DUAL) AS REQ_ST_NM  --상태
					,(SELECT FN_CM06M01_ID_TO_NM(ORDRG_ID) FROM DUAL) AS ORDRG_ID_NM  --발행자명
					,A.*
			  FROM TB_QM01M01 A
			        LEFT OUTER JOIN TB_CR02D02 D  ON  A.SALES_CD  = D.SALES_CD
			        LEFT OUTER JOIN TB_CR02M01 M  ON  D.CO_CD  = M.CO_CD   AND D.ORDRS_NO  = M.ORDRS_NO
			        LEFT OUTER JOIN (
			         					SELECT SALES_CD
			                                     , COUNT(*) AS ORDER_CNT
			                                FROM   TB_SM02D01
			                                GROUP BY SALES_CD
			                               ) AS T2  ON A.SALES_CD = T2.SALES_CD
			        LEFT OUTER JOIN (
			         					SELECT CO_CD
			                                     , ORDRS_NO
			                                     , SALES_CD
			                                     , COUNT(*) AS BOM_CNT
			                                FROM   TB_SM01M01
			                                GROUP BY CO_CD, ORDRS_NO, SALES_CD
			                               ) AS T3  ON A.CO_CD    = T3.CO_CD
			                                       AND D.ORDRS_NO = T3.ORDRS_NO
			                                       AND A.SALES_CD = T3.SALES_CD
					LEFT OUTER JOIN (
										SELECT CO_CD
			                                     , ORDRS_NO
			                                     , SALES_CD
			                                     , COUNT(*) AS MATR_CNT
										  FROM TB_SM01D01
										 GROUP BY CO_CD, ORDRS_NO, SALES_CD
										) T4 ON T4.CO_CD = A.CO_CD
										    AND T4.ORDRS_NO = D.ORDRS_NO
										    AND T4.SALES_CD = A.SALES_CD
					LEFT OUTER JOIN TB_BM02M01 B ON M.ORDRS_CLNT_CD = B.CLNT_CD
			 WHERE REQ_CD IN  ('REQCD01', 'REQCD03')
			   AND NVL(MATR_CF_YN,'N') = 'N'  <![CDATA[
			   AND (BOM_CNT > ORDER_CNT OR MATR_CNT < BOM_CNT OR ORDER_CNT < MATR_CNT)  ]]>
			   AND NOT EXISTS (SELECT 1 FROM TB_PM03D01 P WHERE P.SALES_CD = A.SALES_CD) 
			 ORDER BY A.REQ_DT,  A.ORDRG_DT DESC, M.CLNT_PJT
	</select>


	<update id="updateWbsIssueReqNo" parameterType="Map">
		UPDATE TB_WB24M02
		   SET REQ_NO = #{reqNo},
				UDT_ID = #{userId},
				UDT_PGM = #{pgmId},
				UDT_DTTM = SYSDATE
		 WHERE ISS_NO = #{issNo}
	</update>

	<update id="clearWbsIssueReqNo" parameterType="Map">
		UPDATE TB_WB24M02
		   SET REQ_NO = ''
		 WHERE ISS_NO = #{issNo}
	</update>

</mapper>